{
	"id": "badb437cc9dc3791cda5ceec3eb78b50",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.5.16",
	"solcLongVersion": "0.5.16+commit.9c3226ce",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/TenkStablePair.sol": {
				"content": "pragma solidity =0.5.16;\r\n\r\nimport '../interfaces/I10kStablePair.sol';\r\nimport '../libraries/Math.sol';\r\nimport '../interfaces/IERC20.sol';\r\nimport '../interfaces/I10kStableFactory.sol';\r\nimport '../interfaces/I10kStableCallee.sol';\r\nimport './TenkERC20.sol';\r\n\r\ncontract TenkStablePair is I10kStablePair, TenkERC20 {\r\n  using SafeMath  for uint;\r\n\r\n  uint public constant MINIMUM_LIQUIDITY = 10 ** 3;\r\n  bytes4 private constant SELECTOR = bytes4(keccak256(bytes('transfer(address,uint256)')));\r\n\r\n  address public factory;\r\n  address public token0;\r\n  address public token1;\r\n\r\n  bool public initialized;\r\n\r\n  uint public constant FEE_DENOMINATOR = 100000;\r\n  uint public constant MAX_FEE_PERCENT = 2000; // = 2%\r\n\r\n  uint112 private reserve0;           // uses single storage slot, accessible via getReserves\r\n  uint112 private reserve1;           // uses single storage slot, accessible via getReserves\r\n  uint16 public token0FeePercent = 300; // default = 0.3%  // uses single storage slot, accessible via getReserves\r\n  uint16 public token1FeePercent = 300; // default = 0.3%  // uses single storage slot, accessible via getReserves\r\n\r\n  uint public precisionMultiplier0;\r\n  uint public precisionMultiplier1;\r\n\r\n  uint public kLast; // reserve0 * reserve1, as of immediately after the most recent liquidity event\r\n\r\n  bool public stableSwap; // if set to true, defines pair type as stable\r\n  bool public pairTypeImmutable; // if set to true, stableSwap states cannot be updated anymore\r\n\r\n  uint private unlocked = 1;\r\n  modifier lock() {\r\n    require(unlocked == 1, '10k: LOCKED');\r\n    unlocked = 0;\r\n    _;\r\n    unlocked = 1;\r\n  }\r\n\r\n  function getReserves() public view returns (uint112 _reserve0, uint112 _reserve1, uint16 _token0FeePercent, uint16 _token1FeePercent) {\r\n    _reserve0 = reserve0;\r\n    _reserve1 = reserve1;\r\n    _token0FeePercent = token0FeePercent;\r\n    _token1FeePercent = token1FeePercent;\r\n  }\r\n\r\n  function _safeTransfer(address token, address to, uint value) private {\r\n    (bool success, bytes memory data) = token.call(abi.encodeWithSelector(SELECTOR, to, value));\r\n    require(success && (data.length == 0 || abi.decode(data, (bool))), '10k: TRANSFER_FAILED');\r\n  }\r\n\r\n  event DrainWrongToken(address indexed token, address to);\r\n  event FeePercentUpdated(uint16 token0FeePercent, uint16 token1FeePercent);\r\n  event SetStableSwap(bool prevStableSwap, bool stableSwap);\r\n  event SetPairTypeImmutable();\r\n  event Mint(address indexed sender, uint amount0, uint amount1);\r\n  event Burn(address indexed sender, uint amount0, uint amount1, address indexed to);\r\n  event Swap(\r\n    address indexed sender,\r\n    uint amount0In,\r\n    uint amount1In,\r\n    uint amount0Out,\r\n    uint amount1Out,\r\n    address indexed to\r\n  );\r\n  event Sync(uint112 reserve0, uint112 reserve1);\r\n  event Skim();\r\n\r\n  constructor() public {\r\n    factory = msg.sender;\r\n  }\r\n\r\n  // called once by the factory at time of deployment\r\n  function initialize(address _token0, address _token1) external {\r\n    require(msg.sender == factory && !initialized, '10k: FORBIDDEN');\r\n    // sufficient check\r\n    token0 = _token0;\r\n    token1 = _token1;\r\n\r\n    precisionMultiplier0 = 10 ** uint(IERC20(_token0).decimals());\r\n    precisionMultiplier1 = 10 ** uint(IERC20(_token1).decimals());\r\n\r\n    initialized = true;\r\n  }\r\n\r\n  /**\r\n  * @dev Updates the swap fees percent\r\n  *\r\n  * Can only be called by the factory's feeAmountOwner\r\n  */\r\n  function setFeePercent(uint16 newToken0FeePercent, uint16 newToken1FeePercent) external lock {\r\n    require(msg.sender == I10kStableFactory(factory).feePercentOwner(), \"10k: only factory's feeAmountOwner\");\r\n    require(newToken0FeePercent <= MAX_FEE_PERCENT && newToken1FeePercent <= MAX_FEE_PERCENT, \"10k: feePercent mustn't exceed the maximum\");\r\n    require(newToken0FeePercent > 0 && newToken1FeePercent > 0, \"10k: feePercent mustn't exceed the minimum\");\r\n    token0FeePercent = newToken0FeePercent;\r\n    token1FeePercent = newToken1FeePercent;\r\n    emit FeePercentUpdated(newToken0FeePercent, newToken1FeePercent);\r\n  }\r\n\r\n  function setStableSwap(bool stable, uint112 expectedReserve0, uint112 expectedReserve1) external lock {\r\n    require(msg.sender == I10kStableFactory(factory).setStableOwner(), \"10k: only factory's setStableOwner\");\r\n    require(!pairTypeImmutable, \"10k: immutable\");\r\n\r\n    require(stable != stableSwap, \"10k: no update\");\r\n    require(expectedReserve0 == reserve0 && expectedReserve1 == reserve1, \"10k: failed\");\r\n\r\n    bool feeOn = _mintFee(reserve0, reserve1);\r\n\r\n    emit SetStableSwap(stableSwap, stable);\r\n    stableSwap = stable;\r\n    kLast = (stable && feeOn) ? _k(uint(reserve0), uint(reserve1)) : 0;\r\n  }\r\n\r\n  function setPairTypeImmutable() external lock {\r\n    require(msg.sender == I10kStableFactory(factory).owner(), \"10k: only factory's owner\");\r\n    require(!pairTypeImmutable, \"10k: already immutable\");\r\n\r\n    pairTypeImmutable = true;\r\n    emit SetPairTypeImmutable();\r\n  }\r\n\r\n  // update reserves\r\n  function _update(uint balance0, uint balance1) private {\r\n    require(balance0 <= uint112(- 1) && balance1 <= uint112(- 1), '10k: OVERFLOW');\r\n\r\n    reserve0 = uint112(balance0);\r\n    reserve1 = uint112(balance1);\r\n    emit Sync(uint112(balance0), uint112(balance1));\r\n  }\r\n\r\n  // if fee is on, mint liquidity equivalent to \"factory.ownerFeeShare()\" of the growth in sqrt(k)\r\n  // only for uni configuration\r\n  function _mintFee(uint112 _reserve0, uint112 _reserve1) private returns (bool feeOn) {\r\n    if(stableSwap) return false;\r\n\r\n    (uint ownerFeeShare, address feeTo) = I10kStableFactory(factory).feeInfo();\r\n    feeOn = feeTo != address(0);\r\n    uint _kLast = kLast;\r\n    // gas savings\r\n    if (feeOn) {\r\n      if (_kLast != 0) {\r\n        uint rootK = Math.sqrt(_k(uint(_reserve0), uint(_reserve1)));\r\n        uint rootKLast = Math.sqrt(_kLast);\r\n        if (rootK > rootKLast) {\r\n          uint d = (FEE_DENOMINATOR.mul(100) / ownerFeeShare).sub(100);\r\n          uint numerator = totalSupply.mul(rootK.sub(rootKLast)).mul(100);\r\n          uint denominator = rootK.mul(d).add(rootKLast.mul(100));\r\n          uint liquidity = numerator / denominator;\r\n          if (liquidity > 0) _mint(feeTo, liquidity);\r\n        }\r\n      }\r\n    } else if (_kLast != 0) {\r\n      kLast = 0;\r\n    }\r\n  }\r\n\r\n  // this low-level function should be called from a contract which performs important safety checks\r\n  function mint(address to) external lock returns (uint liquidity) {\r\n    (uint112 _reserve0, uint112 _reserve1,,) = getReserves();\r\n    // gas savings\r\n    uint balance0 = IERC20(token0).balanceOf(address(this));\r\n    uint balance1 = IERC20(token1).balanceOf(address(this));\r\n    uint amount0 = balance0.sub(_reserve0);\r\n    uint amount1 = balance1.sub(_reserve1);\r\n\r\n    bool feeOn = _mintFee(_reserve0, _reserve1);\r\n    uint _totalSupply = totalSupply;\r\n    // gas savings, must be defined here since totalSupply can update in _mintFee\r\n    if (_totalSupply == 0) {\r\n      liquidity = Math.sqrt(amount0.mul(amount1)).sub(MINIMUM_LIQUIDITY);\r\n      _mint(address(0), MINIMUM_LIQUIDITY);\r\n      // permanently lock the first MINIMUM_LIQUIDITY tokens\r\n    } else {\r\n      liquidity = Math.min(amount0.mul(_totalSupply) / _reserve0, amount1.mul(_totalSupply) / _reserve1);\r\n    }\r\n    require(liquidity > 0, '10k: INSUFFICIENT_LIQUIDITY_MINTED');\r\n    _mint(to, liquidity);\r\n\r\n    _update(balance0, balance1);\r\n    if (feeOn) kLast = _k(uint(reserve0), uint(reserve1));\r\n    // reserve0 and reserve1 are up-to-date\r\n    emit Mint(msg.sender, amount0, amount1);\r\n  }\r\n\r\n  // this low-level function should be called from a contract which performs important safety checks\r\n  function burn(address to) external lock returns (uint amount0, uint amount1) {\r\n    (uint112 _reserve0, uint112 _reserve1,,) = getReserves(); // gas savings\r\n    address _token0 = token0; // gas savings\r\n    address _token1 = token1; // gas savings\r\n    uint balance0 = IERC20(_token0).balanceOf(address(this));\r\n    uint balance1 = IERC20(_token1).balanceOf(address(this));\r\n    uint liquidity = balanceOf[address(this)];\r\n\r\n    bool feeOn = _mintFee(_reserve0, _reserve1);\r\n    uint _totalSupply = totalSupply; // gas savings, must be defined here since totalSupply can update in _mintFee\r\n    amount0 = liquidity.mul(balance0) / _totalSupply; // using balances ensures pro-rata distribution\r\n    amount1 = liquidity.mul(balance1) / _totalSupply; // using balances ensures pro-rata distribution\r\n    require(amount0 > 0 && amount1 > 0, '10k: INSUFFICIENT_LIQUIDITY_BURNED');\r\n    _burn(address(this), liquidity);\r\n    _safeTransfer(_token0, to, amount0);\r\n    _safeTransfer(_token1, to, amount1);\r\n    balance0 = IERC20(_token0).balanceOf(address(this));\r\n    balance1 = IERC20(_token1).balanceOf(address(this));\r\n\r\n    _update(balance0, balance1);\r\n    if (feeOn) kLast = _k(uint(reserve0), uint(reserve1)); // reserve0 and reserve1 are up-to-date\r\n    emit Burn(msg.sender, amount0, amount1, to);\r\n  }\r\n\r\n  struct TokensData {\r\n    address token0;\r\n    address token1;\r\n    uint amount0Out;\r\n    uint amount1Out;\r\n    uint balance0;\r\n    uint balance1;\r\n    uint remainingFee0;\r\n    uint remainingFee1;\r\n  }\r\n\r\n  // this low-level function should be called from a contract which performs important safety checks\r\n  function swap(uint amount0Out, uint amount1Out, address to, bytes calldata data) external {\r\n    TokensData memory tokensData = TokensData({\r\n      token0: token0,\r\n      token1: token1,\r\n      amount0Out: amount0Out,\r\n      amount1Out: amount1Out,\r\n      balance0: 0,\r\n      balance1: 0,\r\n      remainingFee0: 0,\r\n      remainingFee1: 0\r\n    });\r\n    _swap(tokensData, to, data, address(0));\r\n  }\r\n\r\n  // this low-level function should be called from a contract which performs important safety checks\r\n  function swap(uint amount0Out, uint amount1Out, address to, bytes calldata data, address referrer) external {\r\n    TokensData memory tokensData = TokensData({\r\n      token0: token0,\r\n      token1: token1,\r\n      amount0Out: amount0Out,\r\n      amount1Out: amount1Out,\r\n      balance0: 0,\r\n      balance1: 0,\r\n      remainingFee0: 0,\r\n      remainingFee1: 0\r\n    });\r\n    _swap(tokensData, to, data, referrer);\r\n  }\r\n\r\n\r\n  function _swap(TokensData memory tokensData, address to, bytes memory data, address referrer) internal lock {\r\n    require(tokensData.amount0Out > 0 || tokensData.amount1Out > 0, '10k: INSUFFICIENT_OUTPUT_AMOUNT');\r\n\r\n    (uint112 _reserve0, uint112 _reserve1, uint16 _token0FeePercent, uint16 _token1FeePercent) = getReserves();\r\n    require(tokensData.amount0Out < _reserve0 && tokensData.amount1Out < _reserve1, '10k: INSUFFICIENT_LIQUIDITY');\r\n\r\n\r\n    {\r\n      require(to != tokensData.token0 && to != tokensData.token1, '10k: INVALID_TO');\r\n      // optimistically transfer tokens\r\n      if (tokensData.amount0Out > 0) _safeTransfer(tokensData.token0, to, tokensData.amount0Out);\r\n      // optimistically transfer tokens\r\n      if (tokensData.amount1Out > 0) _safeTransfer(tokensData.token1, to, tokensData.amount1Out);\r\n      if (data.length > 0) I10kStableCallee(to).uniswapV2Call(msg.sender, tokensData.amount0Out, tokensData.amount1Out, data);\r\n      tokensData.balance0 = IERC20(tokensData.token0).balanceOf(address(this));\r\n      tokensData.balance1 = IERC20(tokensData.token1).balanceOf(address(this));\r\n    }\r\n\r\n    uint amount0In = tokensData.balance0 > _reserve0 - tokensData.amount0Out ? tokensData.balance0 - (_reserve0 - tokensData.amount0Out) : 0;\r\n    uint amount1In = tokensData.balance1 > _reserve1 - tokensData.amount1Out ? tokensData.balance1 - (_reserve1 - tokensData.amount1Out) : 0;\r\n    require(amount0In > 0 || amount1In > 0, '10k: INSUFFICIENT_INPUT_AMOUNT');\r\n\r\n    tokensData.remainingFee0 = amount0In.mul(_token0FeePercent) / FEE_DENOMINATOR;\r\n    tokensData.remainingFee1 = amount1In.mul(_token1FeePercent) / FEE_DENOMINATOR;\r\n\r\n    {// scope for referer/stable fees management\r\n      uint fee = 0;\r\n\r\n      uint referrerInputFeeShare = referrer != address(0) ? I10kStableFactory(factory).referrersFeeShare(referrer) : 0;\r\n      if (referrerInputFeeShare > 0) {\r\n        if (amount0In > 0) {\r\n          fee = amount0In.mul(referrerInputFeeShare).mul(_token0FeePercent) / (FEE_DENOMINATOR ** 2);\r\n          tokensData.remainingFee0 = tokensData.remainingFee0.sub(fee);\r\n          _safeTransfer(tokensData.token0, referrer, fee);\r\n        }\r\n        if (amount1In > 0) {\r\n          fee = amount1In.mul(referrerInputFeeShare).mul(_token1FeePercent) / (FEE_DENOMINATOR ** 2);\r\n          tokensData.remainingFee1 = tokensData.remainingFee1.sub(fee);\r\n          _safeTransfer(tokensData.token1, referrer, fee);\r\n        }\r\n      }\r\n\r\n      if(stableSwap){\r\n        (uint ownerFeeShare, address feeTo) = I10kStableFactory(factory).feeInfo();\r\n        if(feeTo != address(0)) {\r\n          ownerFeeShare = FEE_DENOMINATOR.sub(referrerInputFeeShare).mul(ownerFeeShare);\r\n          if (amount0In > 0) {\r\n            fee = amount0In.mul(ownerFeeShare).mul(_token0FeePercent) / (FEE_DENOMINATOR ** 3);\r\n            tokensData.remainingFee0 = tokensData.remainingFee0.sub(fee);\r\n            _safeTransfer(tokensData.token0, feeTo, fee);\r\n          }\r\n          if (amount1In > 0) {\r\n            fee = amount1In.mul(ownerFeeShare).mul(_token1FeePercent) / (FEE_DENOMINATOR ** 3);\r\n            tokensData.remainingFee1 = tokensData.remainingFee1.sub(fee);\r\n            _safeTransfer(tokensData.token1, feeTo, fee);\r\n          }\r\n        }\r\n      }\r\n      // readjust tokens balance\r\n      if (amount0In > 0) tokensData.balance0 = IERC20(tokensData.token0).balanceOf(address(this));\r\n      if (amount1In > 0) tokensData.balance1 = IERC20(tokensData.token1).balanceOf(address(this));\r\n    }\r\n    {// scope for reserve{0,1}Adjusted, avoids stack too deep errors\r\n      uint balance0Adjusted = tokensData.balance0.sub(tokensData.remainingFee0);\r\n      uint balance1Adjusted = tokensData.balance1.sub(tokensData.remainingFee1);\r\n      require(_k(balance0Adjusted, balance1Adjusted) >= _k(uint(_reserve0), uint(_reserve1)), '10k: K');\r\n    }\r\n    _update(tokensData.balance0, tokensData.balance1);\r\n    emit Swap(msg.sender, amount0In, amount1In, tokensData.amount0Out, tokensData.amount1Out, to);\r\n  }\r\n\r\n  function _k(uint balance0, uint balance1) internal view returns (uint) {\r\n    if (stableSwap) {\r\n      uint _x = balance0.mul(1e18) / precisionMultiplier0;\r\n      uint _y = balance1.mul(1e18) / precisionMultiplier1;\r\n      uint _a = (_x.mul(_y)) / 1e18;\r\n      uint _b = (_x.mul(_x) / 1e18).add(_y.mul(_y) / 1e18);\r\n      return  _a.mul(_b) / 1e18; // x3y+y3x >= k\r\n    }\r\n    return balance0.mul(balance1);\r\n  }\r\n\r\n  function _get_y(uint x0, uint xy, uint y) internal pure returns (uint) {\r\n    for (uint i = 0; i < 255; i++) {\r\n      uint y_prev = y;\r\n      uint k = _f(x0, y);\r\n      if (k < xy) {\r\n        uint dy = (xy - k) * 1e18 / _d(x0, y);\r\n        y = y + dy;\r\n      } else {\r\n        uint dy = (k - xy) * 1e18 / _d(x0, y);\r\n        y = y - dy;\r\n      }\r\n      if (y > y_prev) {\r\n        if (y - y_prev <= 1) {\r\n          return y;\r\n        }\r\n      } else {\r\n        if (y_prev - y <= 1) {\r\n          return y;\r\n        }\r\n      }\r\n    }\r\n    return y;\r\n  }\r\n\r\n  function _f(uint x0, uint y) internal pure returns (uint) {\r\n    return x0 * (y * y / 1e18 * y / 1e18) / 1e18 + (x0 * x0 / 1e18 * x0 / 1e18) * y / 1e18;\r\n  }\r\n\r\n  function _d(uint x0, uint y) internal pure returns (uint) {\r\n    return 3 * x0 * (y * y / 1e18) / 1e18 + (x0 * x0 / 1e18 * x0 / 1e18);\r\n  }\r\n\r\n  function getAmountOut(uint amountIn, address tokenIn) external view returns (uint) {\r\n    uint16 feePercent = tokenIn == token0 ? token0FeePercent : token1FeePercent;\r\n    return _getAmountOut(amountIn, tokenIn, uint(reserve0), uint(reserve1), feePercent);\r\n  }\r\n\r\n  function _getAmountOut(uint amountIn, address tokenIn, uint _reserve0, uint _reserve1, uint feePercent) internal view returns (uint) {\r\n    if (stableSwap) {\r\n      amountIn = amountIn.sub(amountIn.mul(feePercent) / FEE_DENOMINATOR); // remove fee from amount received\r\n      uint xy = _k(_reserve0, _reserve1);\r\n      _reserve0 = _reserve0 * 1e18 / precisionMultiplier0;\r\n      _reserve1 = _reserve1 * 1e18 / precisionMultiplier1;\r\n\r\n      (uint reserveA, uint reserveB) = tokenIn == token0 ? (_reserve0, _reserve1) : (_reserve1, _reserve0);\r\n      amountIn = tokenIn == token0 ? amountIn * 1e18 / precisionMultiplier0 : amountIn * 1e18 / precisionMultiplier1;\r\n      uint y = reserveB - _get_y(amountIn + reserveA, xy, reserveB);\r\n      return y * (tokenIn == token0 ? precisionMultiplier1 : precisionMultiplier0) / 1e18;\r\n\r\n    } else {\r\n      (uint reserveA, uint reserveB) = tokenIn == token0 ? (_reserve0, _reserve1) : (_reserve1, _reserve0);\r\n      amountIn = amountIn.mul(FEE_DENOMINATOR.sub(feePercent));\r\n      return (amountIn.mul(reserveB)) / (reserveA.mul(FEE_DENOMINATOR).add(amountIn));\r\n    }\r\n  }\r\n\r\n  // force balances to match reserves\r\n  function skim(address to) external lock {\r\n    address _token0 = token0;\r\n    // gas savings\r\n    address _token1 = token1;\r\n    // gas savings\r\n    _safeTransfer(_token0, to, IERC20(_token0).balanceOf(address(this)).sub(reserve0));\r\n    _safeTransfer(_token1, to, IERC20(_token1).balanceOf(address(this)).sub(reserve1));\r\n    emit Skim();\r\n  }\r\n\r\n  // force reserves to match balances\r\n  function sync() external lock {\r\n    uint token0Balance = IERC20(token0).balanceOf(address(this));\r\n    uint token1Balance = IERC20(token1).balanceOf(address(this));\r\n    require(token0Balance != 0 && token1Balance != 0, \"10k: liquidity ratio not initialized\");\r\n    _update(token0Balance, token1Balance);\r\n  }\r\n\r\n  /**\r\n  * @dev Allow to recover token sent here by mistake\r\n  *\r\n  * Can only be called by factory's owner\r\n  */\r\n  function drainWrongToken(address token, address to) external lock {\r\n    require(msg.sender == I10kStableFactory(factory).owner(), \"10k: only factory's owner\");\r\n    require(token != token0 && token != token1, \"10k: invalid token\");\r\n    _safeTransfer(token, to, IERC20(token).balanceOf(address(this)));\r\n    emit DrainWrongToken(token, to);\r\n  }\r\n}\r\n"
			},
			"contracts/TenkERC20.sol": {
				"content": "pragma solidity =0.5.16;\r\n\r\nimport '../interfaces/I10kERC20.sol';\r\nimport '../libraries/SafeMath.sol';\r\n\r\ncontract TenkERC20 is I10kERC20 {\r\n    using SafeMath for uint;\r\n\r\n    string public constant name = 'Camelot LP';\r\n    string public constant symbol = 'CMLT-LP';\r\n    uint8 public constant decimals = 18;\r\n    uint  public totalSupply;\r\n    mapping(address => uint) public balanceOf;\r\n    mapping(address => mapping(address => uint)) public allowance;\r\n\r\n    bytes32 public DOMAIN_SEPARATOR;\r\n    // keccak256(\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\");\r\n    bytes32 public constant PERMIT_TYPEHASH = 0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9;\r\n    mapping(address => uint) public nonces;\r\n\r\n    event Approval(address indexed owner, address indexed spender, uint value);\r\n    event Transfer(address indexed from, address indexed to, uint value);\r\n\r\n    constructor() public {\r\n        uint chainId;\r\n        assembly {\r\n            chainId := chainid\r\n        }\r\n        DOMAIN_SEPARATOR = keccak256(\r\n            abi.encode(\r\n                keccak256('EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)'),\r\n                keccak256(bytes(name)),\r\n                keccak256(bytes('1')),\r\n                chainId,\r\n                address(this)\r\n            )\r\n        );\r\n    }\r\n\r\n    function _mint(address to, uint value) internal {\r\n        totalSupply = totalSupply.add(value);\r\n        balanceOf[to] = balanceOf[to].add(value);\r\n        emit Transfer(address(0), to, value);\r\n    }\r\n\r\n    function _burn(address from, uint value) internal {\r\n        balanceOf[from] = balanceOf[from].sub(value);\r\n        totalSupply = totalSupply.sub(value);\r\n        emit Transfer(from, address(0), value);\r\n    }\r\n\r\n    function _approve(address owner, address spender, uint value) private {\r\n        allowance[owner][spender] = value;\r\n        emit Approval(owner, spender, value);\r\n    }\r\n\r\n    function _transfer(address from, address to, uint value) private {\r\n        balanceOf[from] = balanceOf[from].sub(value);\r\n        balanceOf[to] = balanceOf[to].add(value);\r\n        emit Transfer(from, to, value);\r\n    }\r\n\r\n    function approve(address spender, uint value) external returns (bool) {\r\n        _approve(msg.sender, spender, value);\r\n        return true;\r\n    }\r\n\r\n    function transfer(address to, uint value) external returns (bool) {\r\n        _transfer(msg.sender, to, value);\r\n        return true;\r\n    }\r\n\r\n    function transferFrom(address from, address to, uint value) external returns (bool) {\r\n        if (allowance[from][msg.sender] != uint(-1)) {\r\n            uint remaining = allowance[from][msg.sender].sub(value);\r\n            allowance[from][msg.sender] = remaining;\r\n            emit Approval(from, msg.sender, remaining);\r\n        }\r\n        _transfer(from, to, value);\r\n        return true;\r\n    }\r\n\r\n    function permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external {\r\n        require(deadline >= block.timestamp, 'UniswapV2: EXPIRED');\r\n        bytes32 digest = keccak256(\r\n            abi.encodePacked(\r\n                '\\x19\\x01',\r\n                DOMAIN_SEPARATOR,\r\n                keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, value, nonces[owner]++, deadline))\r\n            )\r\n        );\r\n        address recoveredAddress = ecrecover(digest, v, r, s);\r\n        require(recoveredAddress != address(0) && recoveredAddress == owner, 'UniswapV2: INVALID_SIGNATURE');\r\n        _approve(owner, spender, value);\r\n    }\r\n}\r\n"
			},
			"interfaces/I10kStableCallee.sol": {
				"content": "pragma solidity >=0.5.0;\r\n\r\ninterface I10kStableCallee {\r\n    function uniswapV2Call(address sender, uint amount0, uint amount1, bytes calldata data) external;\r\n}"
			},
			"interfaces/I10kStableFactory.sol": {
				"content": "pragma solidity >=0.5.0;\r\n\r\ninterface I10kStableFactory {\r\n    event PairCreated(address indexed token0, address indexed token1, address pair, uint256);\r\n\r\n    function owner() external view returns (address);\r\n    function feePercentOwner() external view returns (address);\r\n    function setStableOwner() external view returns (address);\r\n    function feeTo() external view returns (address);\r\n\r\n    function ownerFeeShare() external view returns (uint256);\r\n    function referrersFeeShare(address) external view returns (uint256);\r\n\r\n    function getPair(address tokenA, address tokenB) external view returns (address pair);\r\n    function allPairs(uint256) external view returns (address pair);\r\n    function allPairsLength() external view returns (uint256);\r\n\r\n    function createPair(address tokenA, address tokenB) external returns (address pair);\r\n\r\n    function setFeeTo(address) external;\r\n    function feeInfo() external view returns (uint _ownerFeeShare, address _feeTo);\r\n}"
			},
			"interfaces/IERC20.sol": {
				"content": "pragma solidity >=0.5.0;\r\n\r\ninterface IERC20 {\r\n    event Approval(address indexed owner, address indexed spender, uint value);\r\n    event Transfer(address indexed from, address indexed to, uint value);\r\n\r\n    function name() external view returns (string memory);\r\n    function symbol() external view returns (string memory);\r\n    function decimals() external view returns (uint8);\r\n    function totalSupply() external view returns (uint);\r\n    function balanceOf(address owner) external view returns (uint);\r\n    function allowance(address owner, address spender) external view returns (uint);\r\n\r\n    function approve(address spender, uint value) external returns (bool);\r\n    function transfer(address to, uint value) external returns (bool);\r\n    function transferFrom(address from, address to, uint value) external returns (bool);\r\n}"
			},
			"libraries/Math.sol": {
				"content": "pragma solidity =0.5.16;\r\n\r\n// a library for performing various math operations\r\n\r\nlibrary Math {\r\n    function min(uint x, uint y) internal pure returns (uint z) {\r\n        z = x < y ? x : y;\r\n    }\r\n\r\n    // babylonian method (https://en.wikipedia.org/wiki/Methods_of_computing_square_roots#Babylonian_method)\r\n    function sqrt(uint y) internal pure returns (uint z) {\r\n        if (y > 3) {\r\n            z = y;\r\n            uint x = y / 2 + 1;\r\n            while (x < z) {\r\n                z = x;\r\n                x = (y / x + x) / 2;\r\n            }\r\n        } else if (y != 0) {\r\n            z = 1;\r\n        }\r\n    }\r\n}"
			},
			"interfaces/I10kStablePair.sol": {
				"content": "pragma solidity >=0.5.0;\r\n\r\ninterface I10kStablePair {\r\n    event Approval(address indexed owner, address indexed spender, uint value);\r\n    event Transfer(address indexed from, address indexed to, uint value);\r\n\r\n    function name() external pure returns (string memory);\r\n    function symbol() external pure returns (string memory);\r\n    function decimals() external pure returns (uint8);\r\n    function totalSupply() external view returns (uint);\r\n    function balanceOf(address owner) external view returns (uint);\r\n    function allowance(address owner, address spender) external view returns (uint);\r\n\r\n    function approve(address spender, uint value) external returns (bool);\r\n    function transfer(address to, uint value) external returns (bool);\r\n    function transferFrom(address from, address to, uint value) external returns (bool);\r\n\r\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\r\n    function PERMIT_TYPEHASH() external pure returns (bytes32);\r\n    function nonces(address owner) external view returns (uint);\r\n\r\n    function permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external;\r\n\r\n    event Mint(address indexed sender, uint amount0, uint amount1);\r\n    event Burn(address indexed sender, uint amount0, uint amount1, address indexed to);\r\n    event Swap(\r\n        address indexed sender,\r\n        uint amount0In,\r\n        uint amount1In,\r\n        uint amount0Out,\r\n        uint amount1Out,\r\n        address indexed to\r\n    );\r\n    event Sync(uint112 reserve0, uint112 reserve1);\r\n\r\n    function MINIMUM_LIQUIDITY() external pure returns (uint);\r\n    function factory() external view returns (address);\r\n    function token0() external view returns (address);\r\n    function token1() external view returns (address);\r\n    function getReserves() external view returns (uint112 reserve0, uint112 reserve1, uint16 token0feePercent, uint16 token1FeePercent);\r\n    function getAmountOut(uint amountIn, address tokenIn) external view returns (uint);\r\n    function kLast() external view returns (uint);\r\n\r\n    function setFeePercent(uint16 token0FeePercent, uint16 token1FeePercent) external;\r\n    function mint(address to) external returns (uint liquidity);\r\n    function burn(address to) external returns (uint amount0, uint amount1);\r\n    function swap(uint amount0Out, uint amount1Out, address to, bytes calldata data) external;\r\n    function swap(uint amount0Out, uint amount1Out, address to, bytes calldata data, address referrer) external;\r\n    function skim(address to) external;\r\n    function sync() external;\r\n\r\n    function initialize(address, address) external;\r\n}"
			},
			"libraries/SafeMath.sol": {
				"content": "pragma solidity =0.5.16;\r\n\r\n// a library for performing overflow-safe math, courtesy of DappHub (https://github.com/dapphub/ds-math)\r\n\r\nlibrary SafeMath {\r\n    function add(uint x, uint y) internal pure returns (uint z) {\r\n        require((z = x + y) >= x, 'ds-math-add-overflow');\r\n    }\r\n\r\n    function sub(uint x, uint y) internal pure returns (uint z) {\r\n        require((z = x - y) <= x, 'ds-math-sub-underflow');\r\n    }\r\n\r\n    function mul(uint x, uint y) internal pure returns (uint z) {\r\n        require(y == 0 || (z = x * y) / y == x, 'ds-math-mul-overflow');\r\n    }\r\n}"
			},
			"interfaces/I10kERC20.sol": {
				"content": "pragma solidity >=0.5.0;\r\n\r\ninterface I10kERC20 {\r\n    event Approval(address indexed owner, address indexed spender, uint value);\r\n    event Transfer(address indexed from, address indexed to, uint value);\r\n\r\n    function name() external pure returns (string memory);\r\n    function symbol() external pure returns (string memory);\r\n    function decimals() external pure returns (uint8);\r\n    function totalSupply() external view returns (uint);\r\n    function balanceOf(address owner) external view returns (uint);\r\n    function allowance(address owner, address spender) external view returns (uint);\r\n\r\n    function approve(address spender, uint value) external returns (bool);\r\n    function transfer(address to, uint value) external returns (bool);\r\n    function transferFrom(address from, address to, uint value) external returns (bool);\r\n\r\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\r\n    function PERMIT_TYPEHASH() external pure returns (bytes32);\r\n    function nonces(address owner) external view returns (uint);\r\n\r\n    function permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external;\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"contracts/TenkERC20.sol": {
				"TenkERC20": {
					"abi": [
						{
							"inputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "PERMIT_TYPEHASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"contracts/TenkERC20.sol\":106:3611  contract TenkERC20 is I10kERC20 {\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/TenkERC20.sol\":928:1386  constructor() public {\r... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"contracts/TenkERC20.sol\":928:1386  constructor() public {\r... */\n  pop\n    /* \"contracts/TenkERC20.sol\":960:972  uint chainId */\n  0x00\n    /* \"contracts/TenkERC20.sol\":1018:1025  chainid */\n  chainid\n    /* \"contracts/TenkERC20.sol\":1007:1025  chainId := chainid */\n  swap1\n  pop\n    /* \"contracts/TenkERC20.sol\":1118:1213  keccak256('EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)') */\n  mload(0x40)\n  dup1\n  dup1\n  data_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f\n  0x52\n  swap2\n  codecopy\n  0x52\n  add\n  swap1\n  pop\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  keccak256\n    /* \"contracts/TenkERC20.sol\":1248:1252  name */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0a\n  dup2\n  mstore\n  0x20\n  add\n  0x43616d656c6f74204c5000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"contracts/TenkERC20.sol\":1232:1254  keccak256(bytes(name)) */\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  keccak256\n    /* \"contracts/TenkERC20.sol\":1283:1293  bytes('1') */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x01\n  dup2\n  mstore\n  0x20\n  add\n  0x3100000000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"contracts/TenkERC20.sol\":1273:1294  keccak256(bytes('1')) */\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  keccak256\n    /* \"contracts/TenkERC20.sol\":1313:1320  chainId */\n  dup4\n    /* \"contracts/TenkERC20.sol\":1347:1351  this */\n  address\n    /* \"contracts/TenkERC20.sol\":1089:1367  abi.encode(\r... */\n  add(0x20, mload(0x40))\n  dup1\n  dup7\n  dup2\n  mstore\n  0x20\n  add\n  dup6\n  dup2\n  mstore\n  0x20\n  add\n  dup5\n  dup2\n  mstore\n  0x20\n  add\n  dup4\n  dup2\n  mstore\n  0x20\n  add\n  dup3\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap6\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  mload(0x40)\n    /* \"--CODEGEN--\":49:53   */\n  0x20\n    /* \"--CODEGEN--\":39:46   */\n  dup2\n    /* \"--CODEGEN--\":30:37   */\n  dup4\n    /* \"--CODEGEN--\":26:47   */\n  sub\n    /* \"--CODEGEN--\":22:54   */\n  sub\n    /* \"--CODEGEN--\":13:20   */\n  dup2\n    /* \"--CODEGEN--\":6:55   */\n  mstore\n    /* \"contracts/TenkERC20.sol\":1089:1367  abi.encode(\r... */\n  swap1\n  0x40\n  mstore\n    /* \"contracts/TenkERC20.sol\":1065:1378  keccak256(\r... */\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  keccak256\n    /* \"contracts/TenkERC20.sol\":1046:1062  DOMAIN_SEPARATOR */\n  0x03\n    /* \"contracts/TenkERC20.sol\":1046:1378  DOMAIN_SEPARATOR = keccak256(\r... */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/TenkERC20.sol\":928:1386  constructor() public {\r... */\n  pop\n    /* \"contracts/TenkERC20.sol\":106:3611  contract TenkERC20 is I10kERC20 {\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\ndata_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f 454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429\n\nsub_0: assembly {\n        /* \"contracts/TenkERC20.sol\":106:3611  contract TenkERC20 is I10kERC20 {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_1:\n        /* \"contracts/TenkERC20.sol\":106:3611  contract TenkERC20 is I10kERC20 {\r... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x3644e515\n      gt\n      tag_16\n      jumpi\n      dup1\n      0x95d89b41\n      gt\n      tag_17\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xd505accf\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_15\n      jumpi\n      jump(tag_2)\n    tag_17:\n      dup1\n      0x3644e515\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x7ecebe00\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_16:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x30adf81f\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/TenkERC20.sol\":177:219  string public constant name = 'Camelot LP' */\n    tag_3:\n      tag_18\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_20:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_22\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_20)\n    tag_22:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"contracts/TenkERC20.sol\":177:219  string public constant name = 'Camelot LP' */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_23\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_23:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/TenkERC20.sol\":2225:2372  function approve(address spender, uint value) external returns (bool) {\r... */\n    tag_4:\n      tag_24\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_25\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_25:\n        /* \"contracts/TenkERC20.sol\":2225:2372  function approve(address spender, uint value) external returns (bool) {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_26\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/TenkERC20.sol\":316:340  uint  public totalSupply */\n    tag_5:\n      tag_27\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/TenkERC20.sol\":2527:2926  function transferFrom(address from, address to, uint value) external returns (bool) {\r... */\n    tag_6:\n      tag_29\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x60\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_30\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_30:\n        /* \"contracts/TenkERC20.sol\":2527:2926  function transferFrom(address from, address to, uint value) external returns (bool) {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_31\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/TenkERC20.sol\":608:716  bytes32 public constant PERMIT_TYPEHASH = 0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9 */\n    tag_7:\n      tag_32\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/TenkERC20.sol\":274:309  uint8 public constant decimals = 18 */\n    tag_8:\n      tag_34\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      dup3\n      0xff\n      and\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/TenkERC20.sol\":465:496  bytes32 public DOMAIN_SEPARATOR */\n    tag_9:\n      tag_36\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/TenkERC20.sol\":347:388  mapping(address => uint) public balanceOf */\n    tag_10:\n      tag_38\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_39\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_39:\n        /* \"contracts/TenkERC20.sol\":347:388  mapping(address => uint) public balanceOf */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_40\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/TenkERC20.sol\":723:761  mapping(address => uint) public nonces */\n    tag_11:\n      tag_41\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_42\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_42:\n        /* \"contracts/TenkERC20.sol\":723:761  mapping(address => uint) public nonces */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_43\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/TenkERC20.sol\":226:267  string public constant symbol = 'CMLT-LP' */\n    tag_12:\n      tag_44\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_46:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_48\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_46)\n    tag_48:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"contracts/TenkERC20.sol\":226:267  string public constant symbol = 'CMLT-LP' */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_49\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_49:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/TenkERC20.sol\":2380:2519  function transfer(address to, uint value) external returns (bool) {\r... */\n    tag_13:\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_51\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_51:\n        /* \"contracts/TenkERC20.sol\":2380:2519  function transfer(address to, uint value) external returns (bool) {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_52\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/TenkERC20.sol\":2934:3608  function permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external {\r... */\n    tag_14:\n      tag_53\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:16   */\n      0xe0\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:17   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_54\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_54:\n        /* \"contracts/TenkERC20.sol\":2934:3608  function permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_55\n      jump\t// in\n    tag_53:\n      stop\n        /* \"contracts/TenkERC20.sol\":395:456  mapping(address => mapping(address => uint)) public allowance */\n    tag_15:\n      tag_56\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_57\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_57:\n        /* \"contracts/TenkERC20.sol\":395:456  mapping(address => mapping(address => uint)) public allowance */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_58\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/TenkERC20.sol\":177:219  string public constant name = 'Camelot LP' */\n    tag_19:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x0a\n      dup2\n      mstore\n      0x20\n      add\n      0x43616d656c6f74204c5000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/TenkERC20.sol\":2225:2372  function approve(address spender, uint value) external returns (bool) {\r... */\n    tag_26:\n        /* \"contracts/TenkERC20.sol\":2289:2293  bool */\n      0x00\n        /* \"contracts/TenkERC20.sol\":2306:2342  _approve(msg.sender, spender, value) */\n      tag_60\n        /* \"contracts/TenkERC20.sol\":2315:2325  msg.sender */\n      caller\n        /* \"contracts/TenkERC20.sol\":2327:2334  spender */\n      dup5\n        /* \"contracts/TenkERC20.sol\":2336:2341  value */\n      dup5\n        /* \"contracts/TenkERC20.sol\":2306:2314  _approve */\n      tag_61\n        /* \"contracts/TenkERC20.sol\":2306:2342  _approve(msg.sender, spender, value) */\n      jump\t// in\n    tag_60:\n        /* \"contracts/TenkERC20.sol\":2360:2364  true */\n      0x01\n        /* \"contracts/TenkERC20.sol\":2353:2364  return true */\n      swap1\n      pop\n        /* \"contracts/TenkERC20.sol\":2225:2372  function approve(address spender, uint value) external returns (bool) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/TenkERC20.sol\":316:340  uint  public totalSupply */\n    tag_28:\n      sload(0x00)\n      dup2\n      jump\t// out\n        /* \"contracts/TenkERC20.sol\":2527:2926  function transferFrom(address from, address to, uint value) external returns (bool) {\r... */\n    tag_31:\n        /* \"contracts/TenkERC20.sol\":2605:2609  bool */\n      0x00\n        /* \"contracts/TenkERC20.sol\":2662:2664  -1 */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"contracts/TenkERC20.sol\":2626:2635  allowance */\n      0x02\n        /* \"contracts/TenkERC20.sol\":2626:2641  allowance[from] */\n      0x00\n        /* \"contracts/TenkERC20.sol\":2636:2640  from */\n      dup7\n        /* \"contracts/TenkERC20.sol\":2626:2641  allowance[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/TenkERC20.sol\":2626:2653  allowance[from][msg.sender] */\n      0x00\n        /* \"contracts/TenkERC20.sol\":2642:2652  msg.sender */\n      caller\n        /* \"contracts/TenkERC20.sol\":2626:2653  allowance[from][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/TenkERC20.sol\":2626:2665  allowance[from][msg.sender] != uint(-1) */\n      eq\n        /* \"contracts/TenkERC20.sol\":2622:2860  if (allowance[from][msg.sender] != uint(-1)) {\r... */\n      tag_63\n      jumpi\n        /* \"contracts/TenkERC20.sol\":2682:2696  uint remaining */\n      0x00\n        /* \"contracts/TenkERC20.sol\":2699:2737  allowance[from][msg.sender].sub(value) */\n      tag_64\n        /* \"contracts/TenkERC20.sol\":2731:2736  value */\n      dup4\n        /* \"contracts/TenkERC20.sol\":2699:2708  allowance */\n      0x02\n        /* \"contracts/TenkERC20.sol\":2699:2714  allowance[from] */\n      0x00\n        /* \"contracts/TenkERC20.sol\":2709:2713  from */\n      dup9\n        /* \"contracts/TenkERC20.sol\":2699:2714  allowance[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/TenkERC20.sol\":2699:2726  allowance[from][msg.sender] */\n      0x00\n        /* \"contracts/TenkERC20.sol\":2715:2725  msg.sender */\n      caller\n        /* \"contracts/TenkERC20.sol\":2699:2726  allowance[from][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/TenkERC20.sol\":2699:2730  allowance[from][msg.sender].sub */\n      tag_65\n      swap1\n        /* \"contracts/TenkERC20.sol\":2699:2737  allowance[from][msg.sender].sub(value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_64:\n        /* \"contracts/TenkERC20.sol\":2682:2737  uint remaining = allowance[from][msg.sender].sub(value) */\n      swap1\n      pop\n        /* \"contracts/TenkERC20.sol\":2782:2791  remaining */\n      dup1\n        /* \"contracts/TenkERC20.sol\":2752:2761  allowance */\n      0x02\n        /* \"contracts/TenkERC20.sol\":2752:2767  allowance[from] */\n      0x00\n        /* \"contracts/TenkERC20.sol\":2762:2766  from */\n      dup8\n        /* \"contracts/TenkERC20.sol\":2752:2767  allowance[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/TenkERC20.sol\":2752:2779  allowance[from][msg.sender] */\n      0x00\n        /* \"contracts/TenkERC20.sol\":2768:2778  msg.sender */\n      caller\n        /* \"contracts/TenkERC20.sol\":2752:2779  allowance[from][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/TenkERC20.sol\":2752:2791  allowance[from][msg.sender] = remaining */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/TenkERC20.sol\":2826:2836  msg.sender */\n      caller\n        /* \"contracts/TenkERC20.sol\":2811:2848  Approval(from, msg.sender, remaining) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TenkERC20.sol\":2820:2824  from */\n      dup6\n        /* \"contracts/TenkERC20.sol\":2811:2848  Approval(from, msg.sender, remaining) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"contracts/TenkERC20.sol\":2838:2847  remaining */\n      dup4\n        /* \"contracts/TenkERC20.sol\":2811:2848  Approval(from, msg.sender, remaining) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/TenkERC20.sol\":2622:2860  if (allowance[from][msg.sender] != uint(-1)) {\r... */\n      pop\n    tag_63:\n        /* \"contracts/TenkERC20.sol\":2870:2896  _transfer(from, to, value) */\n      tag_66\n        /* \"contracts/TenkERC20.sol\":2880:2884  from */\n      dup5\n        /* \"contracts/TenkERC20.sol\":2886:2888  to */\n      dup5\n        /* \"contracts/TenkERC20.sol\":2890:2895  value */\n      dup5\n        /* \"contracts/TenkERC20.sol\":2870:2879  _transfer */\n      tag_67\n        /* \"contracts/TenkERC20.sol\":2870:2896  _transfer(from, to, value) */\n      jump\t// in\n    tag_66:\n        /* \"contracts/TenkERC20.sol\":2914:2918  true */\n      0x01\n        /* \"contracts/TenkERC20.sol\":2907:2918  return true */\n      swap1\n      pop\n        /* \"contracts/TenkERC20.sol\":2527:2926  function transferFrom(address from, address to, uint value) external returns (bool) {\r... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/TenkERC20.sol\":608:716  bytes32 public constant PERMIT_TYPEHASH = 0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9 */\n    tag_33:\n        /* \"contracts/TenkERC20.sol\":650:716  0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9 */\n      0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9\n        /* \"contracts/TenkERC20.sol\":608:716  bytes32 public constant PERMIT_TYPEHASH = 0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9 */\n      0x00\n      shl\n      dup2\n      jump\t// out\n        /* \"contracts/TenkERC20.sol\":274:309  uint8 public constant decimals = 18 */\n    tag_35:\n        /* \"contracts/TenkERC20.sol\":307:309  18 */\n      0x12\n        /* \"contracts/TenkERC20.sol\":274:309  uint8 public constant decimals = 18 */\n      dup2\n      jump\t// out\n        /* \"contracts/TenkERC20.sol\":465:496  bytes32 public DOMAIN_SEPARATOR */\n    tag_37:\n      sload(0x03)\n      dup2\n      jump\t// out\n        /* \"contracts/TenkERC20.sol\":347:388  mapping(address => uint) public balanceOf */\n    tag_40:\n      mstore(0x20, 0x01)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/TenkERC20.sol\":723:761  mapping(address => uint) public nonces */\n    tag_43:\n      mstore(0x20, 0x04)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/TenkERC20.sol\":226:267  string public constant symbol = 'CMLT-LP' */\n    tag_45:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x07\n      dup2\n      mstore\n      0x20\n      add\n      0x434d4c542d4c5000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/TenkERC20.sol\":2380:2519  function transfer(address to, uint value) external returns (bool) {\r... */\n    tag_52:\n        /* \"contracts/TenkERC20.sol\":2440:2444  bool */\n      0x00\n        /* \"contracts/TenkERC20.sol\":2457:2489  _transfer(msg.sender, to, value) */\n      tag_69\n        /* \"contracts/TenkERC20.sol\":2467:2477  msg.sender */\n      caller\n        /* \"contracts/TenkERC20.sol\":2479:2481  to */\n      dup5\n        /* \"contracts/TenkERC20.sol\":2483:2488  value */\n      dup5\n        /* \"contracts/TenkERC20.sol\":2457:2466  _transfer */\n      tag_67\n        /* \"contracts/TenkERC20.sol\":2457:2489  _transfer(msg.sender, to, value) */\n      jump\t// in\n    tag_69:\n        /* \"contracts/TenkERC20.sol\":2507:2511  true */\n      0x01\n        /* \"contracts/TenkERC20.sol\":2500:2511  return true */\n      swap1\n      pop\n        /* \"contracts/TenkERC20.sol\":2380:2519  function transfer(address to, uint value) external returns (bool) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/TenkERC20.sol\":2934:3608  function permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external {\r... */\n    tag_55:\n        /* \"contracts/TenkERC20.sol\":3080:3095  block.timestamp */\n      timestamp\n        /* \"contracts/TenkERC20.sol\":3068:3076  deadline */\n      dup5\n        /* \"contracts/TenkERC20.sol\":3068:3095  deadline >= block.timestamp */\n      lt\n      iszero\n        /* \"contracts/TenkERC20.sol\":3060:3118  require(deadline >= block.timestamp, 'UniswapV2: EXPIRED') */\n      tag_71\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x12\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x556e697377617056323a20455850495245440000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_71:\n        /* \"contracts/TenkERC20.sol\":3129:3143  bytes32 digest */\n      0x00\n        /* \"contracts/TenkERC20.sol\":3234:3250  DOMAIN_SEPARATOR */\n      sload(0x03)\n        /* \"contracts/TenkERC20.sol\":650:716  0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9 */\n      0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9\n        /* \"contracts/TenkERC20.sol\":3290:3305  PERMIT_TYPEHASH */\n      0x00\n      shl\n        /* \"contracts/TenkERC20.sol\":3307:3312  owner */\n      dup10\n        /* \"contracts/TenkERC20.sol\":3314:3321  spender */\n      dup10\n        /* \"contracts/TenkERC20.sol\":3323:3328  value */\n      dup10\n        /* \"contracts/TenkERC20.sol\":3330:3336  nonces */\n      0x04\n        /* \"contracts/TenkERC20.sol\":3330:3343  nonces[owner] */\n      0x00\n        /* \"contracts/TenkERC20.sol\":3337:3342  owner */\n      dup15\n        /* \"contracts/TenkERC20.sol\":3330:3343  nonces[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/TenkERC20.sol\":3330:3345  nonces[owner]++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      0x01\n      add\n      swap2\n      swap1\n      pop\n      sstore\n        /* \"contracts/TenkERC20.sol\":3347:3355  deadline */\n      dup11\n        /* \"contracts/TenkERC20.sol\":3279:3356  abi.encode(PERMIT_TYPEHASH, owner, spender, value, nonces[owner]++, deadline) */\n      add(0x20, mload(0x40))\n      dup1\n      dup8\n      dup2\n      mstore\n      0x20\n      add\n      dup7\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup6\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup5\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n        /* \"--CODEGEN--\":49:53   */\n      0x20\n        /* \"--CODEGEN--\":39:46   */\n      dup2\n        /* \"--CODEGEN--\":30:37   */\n      dup4\n        /* \"--CODEGEN--\":26:47   */\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      sub\n        /* \"--CODEGEN--\":13:20   */\n      dup2\n        /* \"--CODEGEN--\":6:55   */\n      mstore\n        /* \"contracts/TenkERC20.sol\":3279:3356  abi.encode(PERMIT_TYPEHASH, owner, spender, value, nonces[owner]++, deadline) */\n      swap1\n      0x40\n      mstore\n        /* \"contracts/TenkERC20.sol\":3269:3357  keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, value, nonces[owner]++, deadline)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"contracts/TenkERC20.sol\":3170:3372  abi.encodePacked(\r... */\n      add(0x20, mload(0x40))\n      dup1\n      dup1\n      0x1901000000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x02\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n        /* \"--CODEGEN--\":49:53   */\n      0x20\n        /* \"--CODEGEN--\":39:46   */\n      dup2\n        /* \"--CODEGEN--\":30:37   */\n      dup4\n        /* \"--CODEGEN--\":26:47   */\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      sub\n        /* \"--CODEGEN--\":13:20   */\n      dup2\n        /* \"--CODEGEN--\":6:55   */\n      mstore\n        /* \"contracts/TenkERC20.sol\":3170:3372  abi.encodePacked(\r... */\n      swap1\n      0x40\n      mstore\n        /* \"contracts/TenkERC20.sol\":3146:3383  keccak256(\r... */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"contracts/TenkERC20.sol\":3129:3383  bytes32 digest = keccak256(\r... */\n      swap1\n      pop\n        /* \"contracts/TenkERC20.sol\":3394:3418  address recoveredAddress */\n      0x00\n        /* \"contracts/TenkERC20.sol\":3421:3447  ecrecover(digest, v, r, s) */\n      0x01\n        /* \"contracts/TenkERC20.sol\":3431:3437  digest */\n      dup3\n        /* \"contracts/TenkERC20.sol\":3439:3440  v */\n      dup7\n        /* \"contracts/TenkERC20.sol\":3442:3443  r */\n      dup7\n        /* \"contracts/TenkERC20.sol\":3445:3446  s */\n      dup7\n        /* \"contracts/TenkERC20.sol\":3421:3447  ecrecover(digest, v, r, s) */\n      mload(0x40)\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x40\n      mstore\n      mload(0x40)\n      dup1\n      dup6\n      dup2\n      mstore\n      0x20\n      add\n      dup5\n      0xff\n      and\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      0x20\n      mload(0x40)\n      0x20\n      dup2\n      sub\n      swap1\n      dup1\n      dup5\n      sub\n      swap1\n      dup6\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_72\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_72:\n        /* \"contracts/TenkERC20.sol\":3421:3447  ecrecover(digest, v, r, s) */\n      pop\n      pop\n      pop\n      mload(sub(mload(0x40), 0x20))\n        /* \"contracts/TenkERC20.sol\":3394:3447  address recoveredAddress = ecrecover(digest, v, r, s) */\n      swap1\n      pop\n        /* \"contracts/TenkERC20.sol\":3494:3495  0 */\n      0x00\n        /* \"contracts/TenkERC20.sol\":3466:3496  recoveredAddress != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TenkERC20.sol\":3466:3482  recoveredAddress */\n      dup2\n        /* \"contracts/TenkERC20.sol\":3466:3496  recoveredAddress != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/TenkERC20.sol\":3466:3525  recoveredAddress != address(0) && recoveredAddress == owner */\n      dup1\n      iszero\n      tag_73\n      jumpi\n      pop\n        /* \"contracts/TenkERC20.sol\":3520:3525  owner */\n      dup9\n        /* \"contracts/TenkERC20.sol\":3500:3525  recoveredAddress == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TenkERC20.sol\":3500:3516  recoveredAddress */\n      dup2\n        /* \"contracts/TenkERC20.sol\":3500:3525  recoveredAddress == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/TenkERC20.sol\":3466:3525  recoveredAddress != address(0) && recoveredAddress == owner */\n    tag_73:\n        /* \"contracts/TenkERC20.sol\":3458:3558  require(recoveredAddress != address(0) && recoveredAddress == owner, 'UniswapV2: INVALID_SIGNATURE') */\n      tag_74\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1c\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x556e697377617056323a20494e56414c49445f5349474e415455524500000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_74:\n        /* \"contracts/TenkERC20.sol\":3569:3600  _approve(owner, spender, value) */\n      tag_75\n        /* \"contracts/TenkERC20.sol\":3578:3583  owner */\n      dup10\n        /* \"contracts/TenkERC20.sol\":3585:3592  spender */\n      dup10\n        /* \"contracts/TenkERC20.sol\":3594:3599  value */\n      dup10\n        /* \"contracts/TenkERC20.sol\":3569:3577  _approve */\n      tag_61\n        /* \"contracts/TenkERC20.sol\":3569:3600  _approve(owner, spender, value) */\n      jump\t// in\n    tag_75:\n        /* \"contracts/TenkERC20.sol\":2934:3608  function permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external {\r... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/TenkERC20.sol\":395:456  mapping(address => mapping(address => uint)) public allowance */\n    tag_58:\n      mstore(0x20, 0x02)\n      dup2\n      0x00\n      mstore\n      mstore(0x20, keccak256(0x00, 0x40))\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap2\n      pop\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/TenkERC20.sol\":1820:1989  function _approve(address owner, address spender, uint value) private {\r... */\n    tag_61:\n        /* \"contracts/TenkERC20.sol\":1929:1934  value */\n      dup1\n        /* \"contracts/TenkERC20.sol\":1901:1910  allowance */\n      0x02\n        /* \"contracts/TenkERC20.sol\":1901:1917  allowance[owner] */\n      0x00\n        /* \"contracts/TenkERC20.sol\":1911:1916  owner */\n      dup6\n        /* \"contracts/TenkERC20.sol\":1901:1917  allowance[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/TenkERC20.sol\":1901:1926  allowance[owner][spender] */\n      0x00\n        /* \"contracts/TenkERC20.sol\":1918:1925  spender */\n      dup5\n        /* \"contracts/TenkERC20.sol\":1901:1926  allowance[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/TenkERC20.sol\":1901:1934  allowance[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/TenkERC20.sol\":1966:1973  spender */\n      dup2\n        /* \"contracts/TenkERC20.sol\":1950:1981  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TenkERC20.sol\":1959:1964  owner */\n      dup4\n        /* \"contracts/TenkERC20.sol\":1950:1981  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"contracts/TenkERC20.sol\":1975:1980  value */\n      dup4\n        /* \"contracts/TenkERC20.sol\":1950:1981  Approval(owner, spender, value) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/TenkERC20.sol\":1820:1989  function _approve(address owner, address spender, uint value) private {\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"libraries/SafeMath.sol\":296:425  function sub(uint x, uint y) internal pure returns (uint z) {\r... */\n    tag_65:\n        /* \"libraries/SafeMath.sol\":348:354  uint z */\n      0x00\n        /* \"libraries/SafeMath.sol\":390:391  x */\n      dup3\n        /* \"libraries/SafeMath.sol\":384:385  y */\n      dup3\n        /* \"libraries/SafeMath.sol\":380:381  x */\n      dup5\n        /* \"libraries/SafeMath.sol\":380:385  x - y */\n      sub\n        /* \"libraries/SafeMath.sol\":376:385  z = x - y */\n      swap2\n      pop\n      dup2\n        /* \"libraries/SafeMath.sol\":375:391  (z = x - y) <= x */\n      gt\n      iszero\n        /* \"libraries/SafeMath.sol\":367:417  require((z = x - y) <= x, 'ds-math-sub-underflow') */\n      tag_78\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x15\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x64732d6d6174682d7375622d756e646572666c6f770000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_78:\n        /* \"libraries/SafeMath.sol\":296:425  function sub(uint x, uint y) internal pure returns (uint z) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/TenkERC20.sol\":1997:2217  function _transfer(address from, address to, uint value) private {\r... */\n    tag_67:\n        /* \"contracts/TenkERC20.sol\":2091:2117  balanceOf[from].sub(value) */\n      tag_80\n        /* \"contracts/TenkERC20.sol\":2111:2116  value */\n      dup2\n        /* \"contracts/TenkERC20.sol\":2091:2100  balanceOf */\n      0x01\n        /* \"contracts/TenkERC20.sol\":2091:2106  balanceOf[from] */\n      0x00\n        /* \"contracts/TenkERC20.sol\":2101:2105  from */\n      dup7\n        /* \"contracts/TenkERC20.sol\":2091:2106  balanceOf[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/TenkERC20.sol\":2091:2110  balanceOf[from].sub */\n      tag_65\n      swap1\n        /* \"contracts/TenkERC20.sol\":2091:2117  balanceOf[from].sub(value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_80:\n        /* \"contracts/TenkERC20.sol\":2073:2082  balanceOf */\n      0x01\n        /* \"contracts/TenkERC20.sol\":2073:2088  balanceOf[from] */\n      0x00\n        /* \"contracts/TenkERC20.sol\":2083:2087  from */\n      dup6\n        /* \"contracts/TenkERC20.sol\":2073:2088  balanceOf[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/TenkERC20.sol\":2073:2117  balanceOf[from] = balanceOf[from].sub(value) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/TenkERC20.sol\":2144:2168  balanceOf[to].add(value) */\n      tag_81\n        /* \"contracts/TenkERC20.sol\":2162:2167  value */\n      dup2\n        /* \"contracts/TenkERC20.sol\":2144:2153  balanceOf */\n      0x01\n        /* \"contracts/TenkERC20.sol\":2144:2157  balanceOf[to] */\n      0x00\n        /* \"contracts/TenkERC20.sol\":2154:2156  to */\n      dup6\n        /* \"contracts/TenkERC20.sol\":2144:2157  balanceOf[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/TenkERC20.sol\":2144:2161  balanceOf[to].add */\n      tag_82\n      swap1\n        /* \"contracts/TenkERC20.sol\":2144:2168  balanceOf[to].add(value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_81:\n        /* \"contracts/TenkERC20.sol\":2128:2137  balanceOf */\n      0x01\n        /* \"contracts/TenkERC20.sol\":2128:2141  balanceOf[to] */\n      0x00\n        /* \"contracts/TenkERC20.sol\":2138:2140  to */\n      dup5\n        /* \"contracts/TenkERC20.sol\":2128:2141  balanceOf[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/TenkERC20.sol\":2128:2168  balanceOf[to] = balanceOf[to].add(value) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/TenkERC20.sol\":2199:2201  to */\n      dup2\n        /* \"contracts/TenkERC20.sol\":2184:2209  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TenkERC20.sol\":2193:2197  from */\n      dup4\n        /* \"contracts/TenkERC20.sol\":2184:2209  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/TenkERC20.sol\":2203:2208  value */\n      dup4\n        /* \"contracts/TenkERC20.sol\":2184:2209  Transfer(from, to, value) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/TenkERC20.sol\":1997:2217  function _transfer(address from, address to, uint value) private {\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"libraries/SafeMath.sol\":160:288  function add(uint x, uint y) internal pure returns (uint z) {\r... */\n    tag_82:\n        /* \"libraries/SafeMath.sol\":212:218  uint z */\n      0x00\n        /* \"libraries/SafeMath.sol\":254:255  x */\n      dup3\n        /* \"libraries/SafeMath.sol\":248:249  y */\n      dup3\n        /* \"libraries/SafeMath.sol\":244:245  x */\n      dup5\n        /* \"libraries/SafeMath.sol\":244:249  x + y */\n      add\n        /* \"libraries/SafeMath.sol\":240:249  z = x + y */\n      swap2\n      pop\n      dup2\n        /* \"libraries/SafeMath.sol\":239:255  (z = x + y) >= x */\n      lt\n      iszero\n        /* \"libraries/SafeMath.sol\":231:280  require((z = x + y) >= x, 'ds-math-add-overflow') */\n      tag_84\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x14\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x64732d6d6174682d6164642d6f766572666c6f77000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_84:\n        /* \"libraries/SafeMath.sol\":160:288  function add(uint x, uint y) internal pure returns (uint z) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa265627a7a72315820e19b94ece5bc13829fab94477bf72ddafd7f897c568c47d1389c39d6abb1e4e964736f6c63430005100032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600046905060405180806110fb60529139605201905060405180910390206040518060400160405280600a81526020017f43616d656c6f74204c5000000000000000000000000000000000000000000000815250805190602001206040518060400160405280600181526020017f3100000000000000000000000000000000000000000000000000000000000000815250805190602001208330604051602001808681526020018581526020018481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001955050505050506040516020818303038152906040528051906020012060038190555050610fcc8061012f6000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80633644e5151161008c57806395d89b411161006657806395d89b4114610371578063a9059cbb146103f4578063d505accf1461045a578063dd62ed3e146104f3576100cf565b80633644e515146102a357806370a08231146102c15780637ecebe0014610319576100cf565b806306fdde03146100d4578063095ea7b31461015757806318160ddd146101bd57806323b872dd146101db57806330adf81f14610261578063313ce5671461027f575b600080fd5b6100dc61056b565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561011c578082015181840152602081019050610101565b50505050905090810190601f1680156101495780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101a36004803603604081101561016d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506105a4565b604051808215151515815260200191505060405180910390f35b6101c56105bb565b6040518082815260200191505060405180910390f35b610247600480360360608110156101f157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506105c1565b604051808215151515815260200191505060405180910390f35b6102696107f7565b6040518082815260200191505060405180910390f35b61028761081e565b604051808260ff1660ff16815260200191505060405180910390f35b6102ab610823565b6040518082815260200191505060405180910390f35b610303600480360360208110156102d757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610829565b6040518082815260200191505060405180910390f35b61035b6004803603602081101561032f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610841565b6040518082815260200191505060405180910390f35b610379610859565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156103b957808201518184015260208101905061039e565b50505050905090810190601f1680156103e65780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6104406004803603604081101561040a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610892565b604051808215151515815260200191505060405180910390f35b6104f1600480360360e081101561047057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190929190803560ff16906020019092919080359060200190929190803590602001909291905050506108a9565b005b6105556004803603604081101561050957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610bed565b6040518082815260200191505060405180910390f35b6040518060400160405280600a81526020017f43616d656c6f74204c500000000000000000000000000000000000000000000081525081565b60006105b1338484610c12565b6001905092915050565b60005481565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054146107e15760006106f783600260008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610cfd90919063ffffffff16565b905080600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505b6107ec848484610d80565b600190509392505050565b7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c960001b81565b601281565b60035481565b60016020528060005260406000206000915090505481565b60046020528060005260406000206000915090505481565b6040518060400160405280600781526020017f434d4c542d4c500000000000000000000000000000000000000000000000000081525081565b600061089f338484610d80565b6001905092915050565b4284101561091f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f556e697377617056323a2045585049524544000000000000000000000000000081525060200191505060405180910390fd5b60006003547f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c960001b898989600460008e73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815480929190600101919050558a604051602001808781526020018673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200184815260200183815260200182815260200196505050505050506040516020818303038152906040528051906020012060405160200180807f190100000000000000000000000000000000000000000000000000000000000081525060020183815260200182815260200192505050604051602081830303815290604052805190602001209050600060018286868660405160008152602001604052604051808581526020018460ff1660ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa158015610af1573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614158015610b6557508873ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b610bd7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f556e697377617056323a20494e56414c49445f5349474e41545552450000000081525060200191505060405180910390fd5b610be2898989610c12565b505050505050505050565b6002602052816000526040600020602052806000526040600020600091509150505481565b80600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b6000828284039150811115610d7a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f64732d6d6174682d7375622d756e646572666c6f77000000000000000000000081525060200191505060405180910390fd5b92915050565b610dd281600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610cfd90919063ffffffff16565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610e6781600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610f1490919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b6000828284019150811015610f91576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f64732d6d6174682d6164642d6f766572666c6f7700000000000000000000000081525060200191505060405180910390fd5b9291505056fea265627a7a72315820e19b94ece5bc13829fab94477bf72ddafd7f897c568c47d1389c39d6abb1e4e964736f6c63430005100032454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 CHAINID SWAP1 POP PUSH1 0x40 MLOAD DUP1 DUP1 PUSH2 0x10FB PUSH1 0x52 SWAP2 CODECOPY PUSH1 0x52 ADD SWAP1 POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x43616D656C6F74204C5000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3100000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP4 ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP6 POP POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x3 DUP2 SWAP1 SSTORE POP POP PUSH2 0xFCC DUP1 PUSH2 0x12F PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3644E515 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x371 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x3F4 JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x45A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x4F3 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x3644E515 EQ PUSH2 0x2A3 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2C1 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x319 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x157 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1BD JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1DB JUMPI DUP1 PUSH4 0x30ADF81F EQ PUSH2 0x261 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x27F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDC PUSH2 0x56B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x11C JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x101 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x149 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x16D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x5A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C5 PUSH2 0x5BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x247 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x1F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x5C1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x269 PUSH2 0x7F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x287 PUSH2 0x81E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2AB PUSH2 0x823 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x303 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x829 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x35B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x32F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x841 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x379 PUSH2 0x859 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3B9 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x39E JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x3E6 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x440 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x40A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x892 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4F1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xE0 DUP2 LT ISZERO PUSH2 0x470 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH1 0xFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x8A9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x555 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x509 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xBED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x43616D656C6F74204C5000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5B1 CALLER DUP5 DUP5 PUSH2 0xC12 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ PUSH2 0x7E1 JUMPI PUSH1 0x0 PUSH2 0x6F7 DUP4 PUSH1 0x2 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xCFD SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x2 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMPDEST PUSH2 0x7EC DUP5 DUP5 DUP5 PUSH2 0xD80 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 PUSH1 0x0 SHL DUP2 JUMP JUMPDEST PUSH1 0x12 DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x434D4C542D4C5000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x89F CALLER DUP5 DUP5 PUSH2 0xD80 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST TIMESTAMP DUP5 LT ISZERO PUSH2 0x91F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x556E697377617056323A20455850495245440000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 PUSH1 0x0 SHL DUP10 DUP10 DUP10 PUSH1 0x4 PUSH1 0x0 DUP15 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE DUP11 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP7 POP POP POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP1 PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x2 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP3 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xAF1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0xB65 JUMPI POP DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0xBD7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1C DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x556E697377617056323A20494E56414C49445F5349474E415455524500000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xBE2 DUP10 DUP10 DUP10 PUSH2 0xC12 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 DUP5 SUB SWAP2 POP DUP2 GT ISZERO PUSH2 0xD7A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x15 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x64732D6D6174682D7375622D756E646572666C6F770000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xDD2 DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xCFD SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xE67 DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xF14 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 DUP5 ADD SWAP2 POP DUP2 LT ISZERO PUSH2 0xF91 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x14 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x64732D6D6174682D6164642D6F766572666C6F77000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0xE1 SWAP12 SWAP5 0xEC 0xE5 0xBC SGT DUP3 SWAP16 0xAB SWAP5 SELFBALANCE PUSH28 0xF72DDAFD7F897C568C47D1389C39D6ABB1E4E964736F6C6343000510 STOP ORIGIN GASLIMIT 0x49 POP CALLDATACOPY BALANCE ORIGIN DIFFICULTY PUSH16 0x6D61696E28737472696E67206E616D65 0x2C PUSH20 0x7472696E672076657273696F6E2C75696E743235 CALLDATASIZE KECCAK256 PUSH4 0x6861696E 0x49 PUSH5 0x2C61646472 PUSH6 0x737320766572 PUSH10 0x6679696E67436F6E7472 PUSH2 0x6374 0x29 ",
							"sourceMap": "106:3505:0:-;;;928:458;8:9:-1;5:2;;;30:1;27;20:12;5:2;928:458:0;960:12;1018:7;1007:18;;1118:95;;;;;;;;;;;;;;;;;;;1248:4;;;;;;;;;;;;;;;;;1232:22;;;;;;1283:10;;;;;;;;;;;;;;;;;1273:21;;;;;;1313:7;1347:4;1089:278;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1089:278:0;;;1065:313;;;;;;1046:16;:332;;;;928:458;106:3505;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100cf5760003560e01c80633644e5151161008c57806395d89b411161006657806395d89b4114610371578063a9059cbb146103f4578063d505accf1461045a578063dd62ed3e146104f3576100cf565b80633644e515146102a357806370a08231146102c15780637ecebe0014610319576100cf565b806306fdde03146100d4578063095ea7b31461015757806318160ddd146101bd57806323b872dd146101db57806330adf81f14610261578063313ce5671461027f575b600080fd5b6100dc61056b565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561011c578082015181840152602081019050610101565b50505050905090810190601f1680156101495780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101a36004803603604081101561016d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506105a4565b604051808215151515815260200191505060405180910390f35b6101c56105bb565b6040518082815260200191505060405180910390f35b610247600480360360608110156101f157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506105c1565b604051808215151515815260200191505060405180910390f35b6102696107f7565b6040518082815260200191505060405180910390f35b61028761081e565b604051808260ff1660ff16815260200191505060405180910390f35b6102ab610823565b6040518082815260200191505060405180910390f35b610303600480360360208110156102d757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610829565b6040518082815260200191505060405180910390f35b61035b6004803603602081101561032f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610841565b6040518082815260200191505060405180910390f35b610379610859565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156103b957808201518184015260208101905061039e565b50505050905090810190601f1680156103e65780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6104406004803603604081101561040a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610892565b604051808215151515815260200191505060405180910390f35b6104f1600480360360e081101561047057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190929190803560ff16906020019092919080359060200190929190803590602001909291905050506108a9565b005b6105556004803603604081101561050957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610bed565b6040518082815260200191505060405180910390f35b6040518060400160405280600a81526020017f43616d656c6f74204c500000000000000000000000000000000000000000000081525081565b60006105b1338484610c12565b6001905092915050565b60005481565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054146107e15760006106f783600260008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610cfd90919063ffffffff16565b905080600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505b6107ec848484610d80565b600190509392505050565b7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c960001b81565b601281565b60035481565b60016020528060005260406000206000915090505481565b60046020528060005260406000206000915090505481565b6040518060400160405280600781526020017f434d4c542d4c500000000000000000000000000000000000000000000000000081525081565b600061089f338484610d80565b6001905092915050565b4284101561091f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f556e697377617056323a2045585049524544000000000000000000000000000081525060200191505060405180910390fd5b60006003547f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c960001b898989600460008e73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815480929190600101919050558a604051602001808781526020018673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200184815260200183815260200182815260200196505050505050506040516020818303038152906040528051906020012060405160200180807f190100000000000000000000000000000000000000000000000000000000000081525060020183815260200182815260200192505050604051602081830303815290604052805190602001209050600060018286868660405160008152602001604052604051808581526020018460ff1660ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa158015610af1573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614158015610b6557508873ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b610bd7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f556e697377617056323a20494e56414c49445f5349474e41545552450000000081525060200191505060405180910390fd5b610be2898989610c12565b505050505050505050565b6002602052816000526040600020602052806000526040600020600091509150505481565b80600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b6000828284039150811115610d7a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f64732d6d6174682d7375622d756e646572666c6f77000000000000000000000081525060200191505060405180910390fd5b92915050565b610dd281600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610cfd90919063ffffffff16565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610e6781600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610f1490919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b6000828284019150811015610f91576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f64732d6d6174682d6164642d6f766572666c6f7700000000000000000000000081525060200191505060405180910390fd5b9291505056fea265627a7a72315820e19b94ece5bc13829fab94477bf72ddafd7f897c568c47d1389c39d6abb1e4e964736f6c63430005100032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3644E515 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x371 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x3F4 JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x45A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x4F3 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x3644E515 EQ PUSH2 0x2A3 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2C1 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x319 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x157 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1BD JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1DB JUMPI DUP1 PUSH4 0x30ADF81F EQ PUSH2 0x261 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x27F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDC PUSH2 0x56B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x11C JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x101 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x149 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x16D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x5A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C5 PUSH2 0x5BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x247 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x1F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x5C1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x269 PUSH2 0x7F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x287 PUSH2 0x81E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2AB PUSH2 0x823 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x303 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x829 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x35B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x32F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x841 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x379 PUSH2 0x859 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3B9 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x39E JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x3E6 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x440 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x40A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x892 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4F1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xE0 DUP2 LT ISZERO PUSH2 0x470 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH1 0xFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x8A9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x555 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x509 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xBED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x43616D656C6F74204C5000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5B1 CALLER DUP5 DUP5 PUSH2 0xC12 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ PUSH2 0x7E1 JUMPI PUSH1 0x0 PUSH2 0x6F7 DUP4 PUSH1 0x2 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xCFD SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x2 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMPDEST PUSH2 0x7EC DUP5 DUP5 DUP5 PUSH2 0xD80 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 PUSH1 0x0 SHL DUP2 JUMP JUMPDEST PUSH1 0x12 DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x434D4C542D4C5000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x89F CALLER DUP5 DUP5 PUSH2 0xD80 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST TIMESTAMP DUP5 LT ISZERO PUSH2 0x91F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x556E697377617056323A20455850495245440000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 PUSH1 0x0 SHL DUP10 DUP10 DUP10 PUSH1 0x4 PUSH1 0x0 DUP15 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE DUP11 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP7 POP POP POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP1 PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x2 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP3 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xAF1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0xB65 JUMPI POP DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0xBD7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1C DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x556E697377617056323A20494E56414C49445F5349474E415455524500000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xBE2 DUP10 DUP10 DUP10 PUSH2 0xC12 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 DUP5 SUB SWAP2 POP DUP2 GT ISZERO PUSH2 0xD7A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x15 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x64732D6D6174682D7375622D756E646572666C6F770000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xDD2 DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xCFD SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xE67 DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xF14 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 DUP5 ADD SWAP2 POP DUP2 LT ISZERO PUSH2 0xF91 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x14 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x64732D6D6174682D6164642D6F766572666C6F77000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0xE1 SWAP12 SWAP5 0xEC 0xE5 0xBC SGT DUP3 SWAP16 0xAB SWAP5 SELFBALANCE PUSH28 0xF72DDAFD7F897C568C47D1389C39D6ABB1E4E964736F6C6343000510 STOP ORIGIN ",
							"sourceMap": "106:3505:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;106:3505:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;177:42;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;177:42:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2225:147;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2225:147:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;316:24;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2527:399;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2527:399:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;608:108;;;:::i;:::-;;;;;;;;;;;;;;;;;;;274:35;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;465:31;;;:::i;:::-;;;;;;;;;;;;;;;;;;;347:41;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;347:41:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;723:38;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;723:38:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;226:41;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;226:41:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2380:139;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2380:139:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2934:674;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;2934:674:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;395:61;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;395:61:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;177:42;;;;;;;;;;;;;;;;;;;:::o;2225:147::-;2289:4;2306:36;2315:10;2327:7;2336:5;2306:8;:36::i;:::-;2360:4;2353:11;;2225:147;;;;:::o;316:24::-;;;;:::o;2527:399::-;2605:4;2662:2;2626:9;:15;2636:4;2626:15;;;;;;;;;;;;;;;:27;2642:10;2626:27;;;;;;;;;;;;;;;;:39;2622:238;;2682:14;2699:38;2731:5;2699:9;:15;2709:4;2699:15;;;;;;;;;;;;;;;:27;2715:10;2699:27;;;;;;;;;;;;;;;;:31;;:38;;;;:::i;:::-;2682:55;;2782:9;2752;:15;2762:4;2752:15;;;;;;;;;;;;;;;:27;2768:10;2752:27;;;;;;;;;;;;;;;:39;;;;2826:10;2811:37;;2820:4;2811:37;;;2838:9;2811:37;;;;;;;;;;;;;;;;;;2622:238;;2870:26;2880:4;2886:2;2890:5;2870:9;:26::i;:::-;2914:4;2907:11;;2527:399;;;;;:::o;608:108::-;650:66;608:108;;;:::o;274:35::-;307:2;274:35;:::o;465:31::-;;;;:::o;347:41::-;;;;;;;;;;;;;;;;;:::o;723:38::-;;;;;;;;;;;;;;;;;:::o;226:41::-;;;;;;;;;;;;;;;;;;;:::o;2380:139::-;2440:4;2457:32;2467:10;2479:2;2483:5;2457:9;:32::i;:::-;2507:4;2500:11;;2380:139;;;;:::o;2934:674::-;3080:15;3068:8;:27;;3060:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3129:14;3234:16;;650:66;3290:15;;3307:5;3314:7;3323:5;3330:6;:13;3337:5;3330:13;;;;;;;;;;;;;;;;:15;;;;;;;;;;;;3347:8;3279:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;3279:77:0;;;3269:88;;;;;;3170:202;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;3170:202:0;;;3146:237;;;;;;3129:254;;3394:24;3421:26;3431:6;3439:1;3442;3445;3421:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3421:26:0;;;;;;;;3394:53;;3494:1;3466:30;;:16;:30;;;;:59;;;;;3520:5;3500:25;;:16;:25;;;3466:59;3458:100;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3569:31;3578:5;3585:7;3594:5;3569:8;:31::i;:::-;2934:674;;;;;;;;;:::o;395:61::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1820:169::-;1929:5;1901:9;:16;1911:5;1901:16;;;;;;;;;;;;;;;:25;1918:7;1901:25;;;;;;;;;;;;;;;:33;;;;1966:7;1950:31;;1959:5;1950:31;;;1975:5;1950:31;;;;;;;;;;;;;;;;;;1820:169;;;:::o;296:129:8:-;348:6;390:1;384;380;:5;376:9;;;375:16;;367:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;296:129;;;;:::o;1997:220:0:-;2091:26;2111:5;2091:9;:15;2101:4;2091:15;;;;;;;;;;;;;;;;:19;;:26;;;;:::i;:::-;2073:9;:15;2083:4;2073:15;;;;;;;;;;;;;;;:44;;;;2144:24;2162:5;2144:9;:13;2154:2;2144:13;;;;;;;;;;;;;;;;:17;;:24;;;;:::i;:::-;2128:9;:13;2138:2;2128:13;;;;;;;;;;;;;;;:40;;;;2199:2;2184:25;;2193:4;2184:25;;;2203:5;2184:25;;;;;;;;;;;;;;;;;;1997:220;;;:::o;160:128:8:-;212:6;254:1;248;244;:5;240:9;;;239:16;;231:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;160:128;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "808800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DOMAIN_SEPARATOR()": "1028",
								"PERMIT_TYPEHASH()": "300",
								"allowance(address,address)": "1355",
								"approve(address,uint256)": "22431",
								"balanceOf(address)": "1214",
								"decimals()": "328",
								"name()": "infinite",
								"nonces(address)": "1236",
								"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "1050",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_approve(address,address,uint256)": "infinite",
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 106,
									"end": 3611,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 106,
									"end": 3611,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 106,
									"end": 3611,
									"name": "MSTORE"
								},
								{
									"begin": 928,
									"end": 1386,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 928,
									"end": 1386,
									"name": "POP"
								},
								{
									"begin": 960,
									"end": 972,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1018,
									"end": 1025,
									"name": "CHAINID"
								},
								{
									"begin": 1007,
									"end": 1025,
									"name": "SWAP1"
								},
								{
									"begin": 1007,
									"end": 1025,
									"name": "POP"
								},
								{
									"begin": 1118,
									"end": 1213,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1118,
									"end": 1213,
									"name": "MLOAD"
								},
								{
									"begin": 1118,
									"end": 1213,
									"name": "DUP1"
								},
								{
									"begin": 1118,
									"end": 1213,
									"name": "DUP1"
								},
								{
									"begin": 1118,
									"end": 1213,
									"name": "PUSH data",
									"value": "8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F"
								},
								{
									"begin": 1118,
									"end": 1213,
									"name": "PUSH",
									"value": "52"
								},
								{
									"begin": 1118,
									"end": 1213,
									"name": "SWAP2"
								},
								{
									"begin": 1118,
									"end": 1213,
									"name": "CODECOPY"
								},
								{
									"begin": 1118,
									"end": 1213,
									"name": "PUSH",
									"value": "52"
								},
								{
									"begin": 1118,
									"end": 1213,
									"name": "ADD"
								},
								{
									"begin": 1118,
									"end": 1213,
									"name": "SWAP1"
								},
								{
									"begin": 1118,
									"end": 1213,
									"name": "POP"
								},
								{
									"begin": 1118,
									"end": 1213,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1118,
									"end": 1213,
									"name": "MLOAD"
								},
								{
									"begin": 1118,
									"end": 1213,
									"name": "DUP1"
								},
								{
									"begin": 1118,
									"end": 1213,
									"name": "SWAP2"
								},
								{
									"begin": 1118,
									"end": 1213,
									"name": "SUB"
								},
								{
									"begin": 1118,
									"end": 1213,
									"name": "SWAP1"
								},
								{
									"begin": 1118,
									"end": 1213,
									"name": "KECCAK256"
								},
								{
									"begin": 1248,
									"end": 1252,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1248,
									"end": 1252,
									"name": "MLOAD"
								},
								{
									"begin": 1248,
									"end": 1252,
									"name": "DUP1"
								},
								{
									"begin": 1248,
									"end": 1252,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1248,
									"end": 1252,
									"name": "ADD"
								},
								{
									"begin": 1248,
									"end": 1252,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1248,
									"end": 1252,
									"name": "MSTORE"
								},
								{
									"begin": 1248,
									"end": 1252,
									"name": "DUP1"
								},
								{
									"begin": 1248,
									"end": 1252,
									"name": "PUSH",
									"value": "A"
								},
								{
									"begin": 1248,
									"end": 1252,
									"name": "DUP2"
								},
								{
									"begin": 1248,
									"end": 1252,
									"name": "MSTORE"
								},
								{
									"begin": 1248,
									"end": 1252,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1248,
									"end": 1252,
									"name": "ADD"
								},
								{
									"begin": 1248,
									"end": 1252,
									"name": "PUSH",
									"value": "43616D656C6F74204C5000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1248,
									"end": 1252,
									"name": "DUP2"
								},
								{
									"begin": 1248,
									"end": 1252,
									"name": "MSTORE"
								},
								{
									"begin": 1248,
									"end": 1252,
									"name": "POP"
								},
								{
									"begin": 1232,
									"end": 1254,
									"name": "DUP1"
								},
								{
									"begin": 1232,
									"end": 1254,
									"name": "MLOAD"
								},
								{
									"begin": 1232,
									"end": 1254,
									"name": "SWAP1"
								},
								{
									"begin": 1232,
									"end": 1254,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1232,
									"end": 1254,
									"name": "ADD"
								},
								{
									"begin": 1232,
									"end": 1254,
									"name": "KECCAK256"
								},
								{
									"begin": 1283,
									"end": 1293,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1283,
									"end": 1293,
									"name": "MLOAD"
								},
								{
									"begin": 1283,
									"end": 1293,
									"name": "DUP1"
								},
								{
									"begin": 1283,
									"end": 1293,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1283,
									"end": 1293,
									"name": "ADD"
								},
								{
									"begin": 1283,
									"end": 1293,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1283,
									"end": 1293,
									"name": "MSTORE"
								},
								{
									"begin": 1283,
									"end": 1293,
									"name": "DUP1"
								},
								{
									"begin": 1283,
									"end": 1293,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 1283,
									"end": 1293,
									"name": "DUP2"
								},
								{
									"begin": 1283,
									"end": 1293,
									"name": "MSTORE"
								},
								{
									"begin": 1283,
									"end": 1293,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1283,
									"end": 1293,
									"name": "ADD"
								},
								{
									"begin": 1283,
									"end": 1293,
									"name": "PUSH",
									"value": "3100000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1283,
									"end": 1293,
									"name": "DUP2"
								},
								{
									"begin": 1283,
									"end": 1293,
									"name": "MSTORE"
								},
								{
									"begin": 1283,
									"end": 1293,
									"name": "POP"
								},
								{
									"begin": 1273,
									"end": 1294,
									"name": "DUP1"
								},
								{
									"begin": 1273,
									"end": 1294,
									"name": "MLOAD"
								},
								{
									"begin": 1273,
									"end": 1294,
									"name": "SWAP1"
								},
								{
									"begin": 1273,
									"end": 1294,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1273,
									"end": 1294,
									"name": "ADD"
								},
								{
									"begin": 1273,
									"end": 1294,
									"name": "KECCAK256"
								},
								{
									"begin": 1313,
									"end": 1320,
									"name": "DUP4"
								},
								{
									"begin": 1347,
									"end": 1351,
									"name": "ADDRESS"
								},
								{
									"begin": 1089,
									"end": 1367,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1089,
									"end": 1367,
									"name": "MLOAD"
								},
								{
									"begin": 1089,
									"end": 1367,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1089,
									"end": 1367,
									"name": "ADD"
								},
								{
									"begin": 1089,
									"end": 1367,
									"name": "DUP1"
								},
								{
									"begin": 1089,
									"end": 1367,
									"name": "DUP7"
								},
								{
									"begin": 1089,
									"end": 1367,
									"name": "DUP2"
								},
								{
									"begin": 1089,
									"end": 1367,
									"name": "MSTORE"
								},
								{
									"begin": 1089,
									"end": 1367,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1089,
									"end": 1367,
									"name": "ADD"
								},
								{
									"begin": 1089,
									"end": 1367,
									"name": "DUP6"
								},
								{
									"begin": 1089,
									"end": 1367,
									"name": "DUP2"
								},
								{
									"begin": 1089,
									"end": 1367,
									"name": "MSTORE"
								},
								{
									"begin": 1089,
									"end": 1367,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1089,
									"end": 1367,
									"name": "ADD"
								},
								{
									"begin": 1089,
									"end": 1367,
									"name": "DUP5"
								},
								{
									"begin": 1089,
									"end": 1367,
									"name": "DUP2"
								},
								{
									"begin": 1089,
									"end": 1367,
									"name": "MSTORE"
								},
								{
									"begin": 1089,
									"end": 1367,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1089,
									"end": 1367,
									"name": "ADD"
								},
								{
									"begin": 1089,
									"end": 1367,
									"name": "DUP4"
								},
								{
									"begin": 1089,
									"end": 1367,
									"name": "DUP2"
								},
								{
									"begin": 1089,
									"end": 1367,
									"name": "MSTORE"
								},
								{
									"begin": 1089,
									"end": 1367,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1089,
									"end": 1367,
									"name": "ADD"
								},
								{
									"begin": 1089,
									"end": 1367,
									"name": "DUP3"
								},
								{
									"begin": 1089,
									"end": 1367,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1089,
									"end": 1367,
									"name": "AND"
								},
								{
									"begin": 1089,
									"end": 1367,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1089,
									"end": 1367,
									"name": "AND"
								},
								{
									"begin": 1089,
									"end": 1367,
									"name": "DUP2"
								},
								{
									"begin": 1089,
									"end": 1367,
									"name": "MSTORE"
								},
								{
									"begin": 1089,
									"end": 1367,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1089,
									"end": 1367,
									"name": "ADD"
								},
								{
									"begin": 1089,
									"end": 1367,
									"name": "SWAP6"
								},
								{
									"begin": 1089,
									"end": 1367,
									"name": "POP"
								},
								{
									"begin": 1089,
									"end": 1367,
									"name": "POP"
								},
								{
									"begin": 1089,
									"end": 1367,
									"name": "POP"
								},
								{
									"begin": 1089,
									"end": 1367,
									"name": "POP"
								},
								{
									"begin": 1089,
									"end": 1367,
									"name": "POP"
								},
								{
									"begin": 1089,
									"end": 1367,
									"name": "POP"
								},
								{
									"begin": 1089,
									"end": 1367,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1089,
									"end": 1367,
									"name": "MLOAD"
								},
								{
									"begin": 49,
									"end": 53,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 39,
									"end": 46,
									"name": "DUP2"
								},
								{
									"begin": 30,
									"end": 37,
									"name": "DUP4"
								},
								{
									"begin": 26,
									"end": 47,
									"name": "SUB"
								},
								{
									"begin": 22,
									"end": 54,
									"name": "SUB"
								},
								{
									"begin": 13,
									"end": 20,
									"name": "DUP2"
								},
								{
									"begin": 6,
									"end": 55,
									"name": "MSTORE"
								},
								{
									"begin": 1089,
									"end": 1367,
									"name": "SWAP1"
								},
								{
									"begin": 1089,
									"end": 1367,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1089,
									"end": 1367,
									"name": "MSTORE"
								},
								{
									"begin": 1065,
									"end": 1378,
									"name": "DUP1"
								},
								{
									"begin": 1065,
									"end": 1378,
									"name": "MLOAD"
								},
								{
									"begin": 1065,
									"end": 1378,
									"name": "SWAP1"
								},
								{
									"begin": 1065,
									"end": 1378,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1065,
									"end": 1378,
									"name": "ADD"
								},
								{
									"begin": 1065,
									"end": 1378,
									"name": "KECCAK256"
								},
								{
									"begin": 1046,
									"end": 1062,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 1046,
									"end": 1378,
									"name": "DUP2"
								},
								{
									"begin": 1046,
									"end": 1378,
									"name": "SWAP1"
								},
								{
									"begin": 1046,
									"end": 1378,
									"name": "SSTORE"
								},
								{
									"begin": 1046,
									"end": 1378,
									"name": "POP"
								},
								{
									"begin": 928,
									"end": 1386,
									"name": "POP"
								},
								{
									"begin": 106,
									"end": 3611,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 106,
									"end": 3611,
									"name": "DUP1"
								},
								{
									"begin": 106,
									"end": 3611,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 106,
									"end": 3611,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 106,
									"end": 3611,
									"name": "CODECOPY"
								},
								{
									"begin": 106,
									"end": 3611,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 106,
									"end": 3611,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a72315820e19b94ece5bc13829fab94477bf72ddafd7f897c568c47d1389c39d6abb1e4e964736f6c63430005100032",
									".code": [
										{
											"begin": 106,
											"end": 3611,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 106,
											"end": 3611,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 106,
											"end": 3611,
											"name": "MSTORE"
										},
										{
											"begin": 106,
											"end": 3611,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 106,
											"end": 3611,
											"name": "POP"
										},
										{
											"begin": 106,
											"end": 3611,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 106,
											"end": 3611,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 106,
											"end": 3611,
											"name": "LT"
										},
										{
											"begin": 106,
											"end": 3611,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 106,
											"end": 3611,
											"name": "JUMPI"
										},
										{
											"begin": 106,
											"end": 3611,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 106,
											"end": 3611,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 106,
											"end": 3611,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 106,
											"end": 3611,
											"name": "SHR"
										},
										{
											"begin": 106,
											"end": 3611,
											"name": "DUP1"
										},
										{
											"begin": 106,
											"end": 3611,
											"name": "PUSH",
											"value": "3644E515"
										},
										{
											"begin": 106,
											"end": 3611,
											"name": "GT"
										},
										{
											"begin": 106,
											"end": 3611,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 106,
											"end": 3611,
											"name": "JUMPI"
										},
										{
											"begin": 106,
											"end": 3611,
											"name": "DUP1"
										},
										{
											"begin": 106,
											"end": 3611,
											"name": "PUSH",
											"value": "95D89B41"
										},
										{
											"begin": 106,
											"end": 3611,
											"name": "GT"
										},
										{
											"begin": 106,
											"end": 3611,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 106,
											"end": 3611,
											"name": "JUMPI"
										},
										{
											"begin": 106,
											"end": 3611,
											"name": "DUP1"
										},
										{
											"begin": 106,
											"end": 3611,
											"name": "PUSH",
											"value": "95D89B41"
										},
										{
											"begin": 106,
											"end": 3611,
											"name": "EQ"
										},
										{
											"begin": 106,
											"end": 3611,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 106,
											"end": 3611,
											"name": "JUMPI"
										},
										{
											"begin": 106,
											"end": 3611,
											"name": "DUP1"
										},
										{
											"begin": 106,
											"end": 3611,
											"name": "PUSH",
											"value": "A9059CBB"
										},
										{
											"begin": 106,
											"end": 3611,
											"name": "EQ"
										},
										{
											"begin": 106,
											"end": 3611,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 106,
											"end": 3611,
											"name": "JUMPI"
										},
										{
											"begin": 106,
											"end": 3611,
											"name": "DUP1"
										},
										{
											"begin": 106,
											"end": 3611,
											"name": "PUSH",
											"value": "D505ACCF"
										},
										{
											"begin": 106,
											"end": 3611,
											"name": "EQ"
										},
										{
											"begin": 106,
											"end": 3611,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 106,
											"end": 3611,
											"name": "JUMPI"
										},
										{
											"begin": 106,
											"end": 3611,
											"name": "DUP1"
										},
										{
											"begin": 106,
											"end": 3611,
											"name": "PUSH",
											"value": "DD62ED3E"
										},
										{
											"begin": 106,
											"end": 3611,
											"name": "EQ"
										},
										{
											"begin": 106,
											"end": 3611,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 106,
											"end": 3611,
											"name": "JUMPI"
										},
										{
											"begin": 106,
											"end": 3611,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 106,
											"end": 3611,
											"name": "JUMP"
										},
										{
											"begin": 106,
											"end": 3611,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 106,
											"end": 3611,
											"name": "JUMPDEST"
										},
										{
											"begin": 106,
											"end": 3611,
											"name": "DUP1"
										},
										{
											"begin": 106,
											"end": 3611,
											"name": "PUSH",
											"value": "3644E515"
										},
										{
											"begin": 106,
											"end": 3611,
											"name": "EQ"
										},
										{
											"begin": 106,
											"end": 3611,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 106,
											"end": 3611,
											"name": "JUMPI"
										},
										{
											"begin": 106,
											"end": 3611,
											"name": "DUP1"
										},
										{
											"begin": 106,
											"end": 3611,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 106,
											"end": 3611,
											"name": "EQ"
										},
										{
											"begin": 106,
											"end": 3611,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 106,
											"end": 3611,
											"name": "JUMPI"
										},
										{
											"begin": 106,
											"end": 3611,
											"name": "DUP1"
										},
										{
											"begin": 106,
											"end": 3611,
											"name": "PUSH",
											"value": "7ECEBE00"
										},
										{
											"begin": 106,
											"end": 3611,
											"name": "EQ"
										},
										{
											"begin": 106,
											"end": 3611,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 106,
											"end": 3611,
											"name": "JUMPI"
										},
										{
											"begin": 106,
											"end": 3611,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 106,
											"end": 3611,
											"name": "JUMP"
										},
										{
											"begin": 106,
											"end": 3611,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 106,
											"end": 3611,
											"name": "JUMPDEST"
										},
										{
											"begin": 106,
											"end": 3611,
											"name": "DUP1"
										},
										{
											"begin": 106,
											"end": 3611,
											"name": "PUSH",
											"value": "6FDDE03"
										},
										{
											"begin": 106,
											"end": 3611,
											"name": "EQ"
										},
										{
											"begin": 106,
											"end": 3611,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 106,
											"end": 3611,
											"name": "JUMPI"
										},
										{
											"begin": 106,
											"end": 3611,
											"name": "DUP1"
										},
										{
											"begin": 106,
											"end": 3611,
											"name": "PUSH",
											"value": "95EA7B3"
										},
										{
											"begin": 106,
											"end": 3611,
											"name": "EQ"
										},
										{
											"begin": 106,
											"end": 3611,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 106,
											"end": 3611,
											"name": "JUMPI"
										},
										{
											"begin": 106,
											"end": 3611,
											"name": "DUP1"
										},
										{
											"begin": 106,
											"end": 3611,
											"name": "PUSH",
											"value": "18160DDD"
										},
										{
											"begin": 106,
											"end": 3611,
											"name": "EQ"
										},
										{
											"begin": 106,
											"end": 3611,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 106,
											"end": 3611,
											"name": "JUMPI"
										},
										{
											"begin": 106,
											"end": 3611,
											"name": "DUP1"
										},
										{
											"begin": 106,
											"end": 3611,
											"name": "PUSH",
											"value": "23B872DD"
										},
										{
											"begin": 106,
											"end": 3611,
											"name": "EQ"
										},
										{
											"begin": 106,
											"end": 3611,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 106,
											"end": 3611,
											"name": "JUMPI"
										},
										{
											"begin": 106,
											"end": 3611,
											"name": "DUP1"
										},
										{
											"begin": 106,
											"end": 3611,
											"name": "PUSH",
											"value": "30ADF81F"
										},
										{
											"begin": 106,
											"end": 3611,
											"name": "EQ"
										},
										{
											"begin": 106,
											"end": 3611,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 106,
											"end": 3611,
											"name": "JUMPI"
										},
										{
											"begin": 106,
											"end": 3611,
											"name": "DUP1"
										},
										{
											"begin": 106,
											"end": 3611,
											"name": "PUSH",
											"value": "313CE567"
										},
										{
											"begin": 106,
											"end": 3611,
											"name": "EQ"
										},
										{
											"begin": 106,
											"end": 3611,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 106,
											"end": 3611,
											"name": "JUMPI"
										},
										{
											"begin": 106,
											"end": 3611,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 106,
											"end": 3611,
											"name": "JUMPDEST"
										},
										{
											"begin": 106,
											"end": 3611,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 106,
											"end": 3611,
											"name": "DUP1"
										},
										{
											"begin": 106,
											"end": 3611,
											"name": "REVERT"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "JUMPDEST"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "JUMPDEST"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "MLOAD"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "DUP1"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "DUP1"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "ADD"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "DUP3"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "DUP2"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "SUB"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "DUP3"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "MSTORE"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "DUP4"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "DUP2"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "DUP2"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "MLOAD"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "DUP2"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "MSTORE"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "ADD"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "SWAP2"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "POP"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "DUP1"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "MLOAD"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "SWAP1"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "ADD"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "SWAP1"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "DUP1"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "DUP4"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "POP"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "POP"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "POP"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "SWAP1"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "POP"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "SWAP1"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "DUP2"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "ADD"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "SWAP1"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "AND"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "DUP1"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "ISZERO"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "JUMPI"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "DUP1"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "DUP3"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "SUB"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "DUP1"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "MLOAD"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "DUP4"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "SUB"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "EXP"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "SUB"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "NOT"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "AND"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "DUP2"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "MSTORE"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "ADD"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "SWAP2"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "POP"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "JUMPDEST"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "POP"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "SWAP3"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "POP"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "POP"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "POP"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "MLOAD"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "DUP1"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "SWAP2"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "SUB"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "SWAP1"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "RETURN"
										},
										{
											"begin": 2225,
											"end": 2372,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 2225,
											"end": 2372,
											"name": "JUMPDEST"
										},
										{
											"begin": 2225,
											"end": 2372,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 2225,
											"end": 2372,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2225,
											"end": 2372,
											"name": "DUP1"
										},
										{
											"begin": 2225,
											"end": 2372,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2225,
											"end": 2372,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 2225,
											"end": 2372,
											"name": "DUP2"
										},
										{
											"begin": 2225,
											"end": 2372,
											"name": "ADD"
										},
										{
											"begin": 2225,
											"end": 2372,
											"name": "SWAP1"
										},
										{
											"begin": 2225,
											"end": 2372,
											"name": "DUP1"
										},
										{
											"begin": 2225,
											"end": 2372,
											"name": "DUP1"
										},
										{
											"begin": 2225,
											"end": 2372,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2225,
											"end": 2372,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2225,
											"end": 2372,
											"name": "AND"
										},
										{
											"begin": 2225,
											"end": 2372,
											"name": "SWAP1"
										},
										{
											"begin": 2225,
											"end": 2372,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2225,
											"end": 2372,
											"name": "ADD"
										},
										{
											"begin": 2225,
											"end": 2372,
											"name": "SWAP1"
										},
										{
											"begin": 2225,
											"end": 2372,
											"name": "SWAP3"
										},
										{
											"begin": 2225,
											"end": 2372,
											"name": "SWAP2"
										},
										{
											"begin": 2225,
											"end": 2372,
											"name": "SWAP1"
										},
										{
											"begin": 2225,
											"end": 2372,
											"name": "DUP1"
										},
										{
											"begin": 2225,
											"end": 2372,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2225,
											"end": 2372,
											"name": "SWAP1"
										},
										{
											"begin": 2225,
											"end": 2372,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2225,
											"end": 2372,
											"name": "ADD"
										},
										{
											"begin": 2225,
											"end": 2372,
											"name": "SWAP1"
										},
										{
											"begin": 2225,
											"end": 2372,
											"name": "SWAP3"
										},
										{
											"begin": 2225,
											"end": 2372,
											"name": "SWAP2"
										},
										{
											"begin": 2225,
											"end": 2372,
											"name": "SWAP1"
										},
										{
											"begin": 2225,
											"end": 2372,
											"name": "POP"
										},
										{
											"begin": 2225,
											"end": 2372,
											"name": "POP"
										},
										{
											"begin": 2225,
											"end": 2372,
											"name": "POP"
										},
										{
											"begin": 2225,
											"end": 2372,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 2225,
											"end": 2372,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2225,
											"end": 2372,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 2225,
											"end": 2372,
											"name": "JUMPDEST"
										},
										{
											"begin": 2225,
											"end": 2372,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2225,
											"end": 2372,
											"name": "MLOAD"
										},
										{
											"begin": 2225,
											"end": 2372,
											"name": "DUP1"
										},
										{
											"begin": 2225,
											"end": 2372,
											"name": "DUP3"
										},
										{
											"begin": 2225,
											"end": 2372,
											"name": "ISZERO"
										},
										{
											"begin": 2225,
											"end": 2372,
											"name": "ISZERO"
										},
										{
											"begin": 2225,
											"end": 2372,
											"name": "ISZERO"
										},
										{
											"begin": 2225,
											"end": 2372,
											"name": "ISZERO"
										},
										{
											"begin": 2225,
											"end": 2372,
											"name": "DUP2"
										},
										{
											"begin": 2225,
											"end": 2372,
											"name": "MSTORE"
										},
										{
											"begin": 2225,
											"end": 2372,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2225,
											"end": 2372,
											"name": "ADD"
										},
										{
											"begin": 2225,
											"end": 2372,
											"name": "SWAP2"
										},
										{
											"begin": 2225,
											"end": 2372,
											"name": "POP"
										},
										{
											"begin": 2225,
											"end": 2372,
											"name": "POP"
										},
										{
											"begin": 2225,
											"end": 2372,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2225,
											"end": 2372,
											"name": "MLOAD"
										},
										{
											"begin": 2225,
											"end": 2372,
											"name": "DUP1"
										},
										{
											"begin": 2225,
											"end": 2372,
											"name": "SWAP2"
										},
										{
											"begin": 2225,
											"end": 2372,
											"name": "SUB"
										},
										{
											"begin": 2225,
											"end": 2372,
											"name": "SWAP1"
										},
										{
											"begin": 2225,
											"end": 2372,
											"name": "RETURN"
										},
										{
											"begin": 316,
											"end": 340,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 316,
											"end": 340,
											"name": "JUMPDEST"
										},
										{
											"begin": 316,
											"end": 340,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 316,
											"end": 340,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 316,
											"end": 340,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 316,
											"end": 340,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 316,
											"end": 340,
											"name": "JUMPDEST"
										},
										{
											"begin": 316,
											"end": 340,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 316,
											"end": 340,
											"name": "MLOAD"
										},
										{
											"begin": 316,
											"end": 340,
											"name": "DUP1"
										},
										{
											"begin": 316,
											"end": 340,
											"name": "DUP3"
										},
										{
											"begin": 316,
											"end": 340,
											"name": "DUP2"
										},
										{
											"begin": 316,
											"end": 340,
											"name": "MSTORE"
										},
										{
											"begin": 316,
											"end": 340,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 316,
											"end": 340,
											"name": "ADD"
										},
										{
											"begin": 316,
											"end": 340,
											"name": "SWAP2"
										},
										{
											"begin": 316,
											"end": 340,
											"name": "POP"
										},
										{
											"begin": 316,
											"end": 340,
											"name": "POP"
										},
										{
											"begin": 316,
											"end": 340,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 316,
											"end": 340,
											"name": "MLOAD"
										},
										{
											"begin": 316,
											"end": 340,
											"name": "DUP1"
										},
										{
											"begin": 316,
											"end": 340,
											"name": "SWAP2"
										},
										{
											"begin": 316,
											"end": 340,
											"name": "SUB"
										},
										{
											"begin": 316,
											"end": 340,
											"name": "SWAP1"
										},
										{
											"begin": 316,
											"end": 340,
											"name": "RETURN"
										},
										{
											"begin": 2527,
											"end": 2926,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 2527,
											"end": 2926,
											"name": "JUMPDEST"
										},
										{
											"begin": 2527,
											"end": 2926,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 2527,
											"end": 2926,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2527,
											"end": 2926,
											"name": "DUP1"
										},
										{
											"begin": 2527,
											"end": 2926,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2527,
											"end": 2926,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 2527,
											"end": 2926,
											"name": "DUP2"
										},
										{
											"begin": 2527,
											"end": 2926,
											"name": "ADD"
										},
										{
											"begin": 2527,
											"end": 2926,
											"name": "SWAP1"
										},
										{
											"begin": 2527,
											"end": 2926,
											"name": "DUP1"
										},
										{
											"begin": 2527,
											"end": 2926,
											"name": "DUP1"
										},
										{
											"begin": 2527,
											"end": 2926,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2527,
											"end": 2926,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2527,
											"end": 2926,
											"name": "AND"
										},
										{
											"begin": 2527,
											"end": 2926,
											"name": "SWAP1"
										},
										{
											"begin": 2527,
											"end": 2926,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2527,
											"end": 2926,
											"name": "ADD"
										},
										{
											"begin": 2527,
											"end": 2926,
											"name": "SWAP1"
										},
										{
											"begin": 2527,
											"end": 2926,
											"name": "SWAP3"
										},
										{
											"begin": 2527,
											"end": 2926,
											"name": "SWAP2"
										},
										{
											"begin": 2527,
											"end": 2926,
											"name": "SWAP1"
										},
										{
											"begin": 2527,
											"end": 2926,
											"name": "DUP1"
										},
										{
											"begin": 2527,
											"end": 2926,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2527,
											"end": 2926,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2527,
											"end": 2926,
											"name": "AND"
										},
										{
											"begin": 2527,
											"end": 2926,
											"name": "SWAP1"
										},
										{
											"begin": 2527,
											"end": 2926,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2527,
											"end": 2926,
											"name": "ADD"
										},
										{
											"begin": 2527,
											"end": 2926,
											"name": "SWAP1"
										},
										{
											"begin": 2527,
											"end": 2926,
											"name": "SWAP3"
										},
										{
											"begin": 2527,
											"end": 2926,
											"name": "SWAP2"
										},
										{
											"begin": 2527,
											"end": 2926,
											"name": "SWAP1"
										},
										{
											"begin": 2527,
											"end": 2926,
											"name": "DUP1"
										},
										{
											"begin": 2527,
											"end": 2926,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2527,
											"end": 2926,
											"name": "SWAP1"
										},
										{
											"begin": 2527,
											"end": 2926,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2527,
											"end": 2926,
											"name": "ADD"
										},
										{
											"begin": 2527,
											"end": 2926,
											"name": "SWAP1"
										},
										{
											"begin": 2527,
											"end": 2926,
											"name": "SWAP3"
										},
										{
											"begin": 2527,
											"end": 2926,
											"name": "SWAP2"
										},
										{
											"begin": 2527,
											"end": 2926,
											"name": "SWAP1"
										},
										{
											"begin": 2527,
											"end": 2926,
											"name": "POP"
										},
										{
											"begin": 2527,
											"end": 2926,
											"name": "POP"
										},
										{
											"begin": 2527,
											"end": 2926,
											"name": "POP"
										},
										{
											"begin": 2527,
											"end": 2926,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 2527,
											"end": 2926,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2527,
											"end": 2926,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 2527,
											"end": 2926,
											"name": "JUMPDEST"
										},
										{
											"begin": 2527,
											"end": 2926,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2527,
											"end": 2926,
											"name": "MLOAD"
										},
										{
											"begin": 2527,
											"end": 2926,
											"name": "DUP1"
										},
										{
											"begin": 2527,
											"end": 2926,
											"name": "DUP3"
										},
										{
											"begin": 2527,
											"end": 2926,
											"name": "ISZERO"
										},
										{
											"begin": 2527,
											"end": 2926,
											"name": "ISZERO"
										},
										{
											"begin": 2527,
											"end": 2926,
											"name": "ISZERO"
										},
										{
											"begin": 2527,
											"end": 2926,
											"name": "ISZERO"
										},
										{
											"begin": 2527,
											"end": 2926,
											"name": "DUP2"
										},
										{
											"begin": 2527,
											"end": 2926,
											"name": "MSTORE"
										},
										{
											"begin": 2527,
											"end": 2926,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2527,
											"end": 2926,
											"name": "ADD"
										},
										{
											"begin": 2527,
											"end": 2926,
											"name": "SWAP2"
										},
										{
											"begin": 2527,
											"end": 2926,
											"name": "POP"
										},
										{
											"begin": 2527,
											"end": 2926,
											"name": "POP"
										},
										{
											"begin": 2527,
											"end": 2926,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2527,
											"end": 2926,
											"name": "MLOAD"
										},
										{
											"begin": 2527,
											"end": 2926,
											"name": "DUP1"
										},
										{
											"begin": 2527,
											"end": 2926,
											"name": "SWAP2"
										},
										{
											"begin": 2527,
											"end": 2926,
											"name": "SUB"
										},
										{
											"begin": 2527,
											"end": 2926,
											"name": "SWAP1"
										},
										{
											"begin": 2527,
											"end": 2926,
											"name": "RETURN"
										},
										{
											"begin": 608,
											"end": 716,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 608,
											"end": 716,
											"name": "JUMPDEST"
										},
										{
											"begin": 608,
											"end": 716,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 608,
											"end": 716,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 608,
											"end": 716,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 608,
											"end": 716,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 608,
											"end": 716,
											"name": "JUMPDEST"
										},
										{
											"begin": 608,
											"end": 716,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 608,
											"end": 716,
											"name": "MLOAD"
										},
										{
											"begin": 608,
											"end": 716,
											"name": "DUP1"
										},
										{
											"begin": 608,
											"end": 716,
											"name": "DUP3"
										},
										{
											"begin": 608,
											"end": 716,
											"name": "DUP2"
										},
										{
											"begin": 608,
											"end": 716,
											"name": "MSTORE"
										},
										{
											"begin": 608,
											"end": 716,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 608,
											"end": 716,
											"name": "ADD"
										},
										{
											"begin": 608,
											"end": 716,
											"name": "SWAP2"
										},
										{
											"begin": 608,
											"end": 716,
											"name": "POP"
										},
										{
											"begin": 608,
											"end": 716,
											"name": "POP"
										},
										{
											"begin": 608,
											"end": 716,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 608,
											"end": 716,
											"name": "MLOAD"
										},
										{
											"begin": 608,
											"end": 716,
											"name": "DUP1"
										},
										{
											"begin": 608,
											"end": 716,
											"name": "SWAP2"
										},
										{
											"begin": 608,
											"end": 716,
											"name": "SUB"
										},
										{
											"begin": 608,
											"end": 716,
											"name": "SWAP1"
										},
										{
											"begin": 608,
											"end": 716,
											"name": "RETURN"
										},
										{
											"begin": 274,
											"end": 309,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 274,
											"end": 309,
											"name": "JUMPDEST"
										},
										{
											"begin": 274,
											"end": 309,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 274,
											"end": 309,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 274,
											"end": 309,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 274,
											"end": 309,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 274,
											"end": 309,
											"name": "JUMPDEST"
										},
										{
											"begin": 274,
											"end": 309,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 274,
											"end": 309,
											"name": "MLOAD"
										},
										{
											"begin": 274,
											"end": 309,
											"name": "DUP1"
										},
										{
											"begin": 274,
											"end": 309,
											"name": "DUP3"
										},
										{
											"begin": 274,
											"end": 309,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 274,
											"end": 309,
											"name": "AND"
										},
										{
											"begin": 274,
											"end": 309,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 274,
											"end": 309,
											"name": "AND"
										},
										{
											"begin": 274,
											"end": 309,
											"name": "DUP2"
										},
										{
											"begin": 274,
											"end": 309,
											"name": "MSTORE"
										},
										{
											"begin": 274,
											"end": 309,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 274,
											"end": 309,
											"name": "ADD"
										},
										{
											"begin": 274,
											"end": 309,
											"name": "SWAP2"
										},
										{
											"begin": 274,
											"end": 309,
											"name": "POP"
										},
										{
											"begin": 274,
											"end": 309,
											"name": "POP"
										},
										{
											"begin": 274,
											"end": 309,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 274,
											"end": 309,
											"name": "MLOAD"
										},
										{
											"begin": 274,
											"end": 309,
											"name": "DUP1"
										},
										{
											"begin": 274,
											"end": 309,
											"name": "SWAP2"
										},
										{
											"begin": 274,
											"end": 309,
											"name": "SUB"
										},
										{
											"begin": 274,
											"end": 309,
											"name": "SWAP1"
										},
										{
											"begin": 274,
											"end": 309,
											"name": "RETURN"
										},
										{
											"begin": 465,
											"end": 496,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 465,
											"end": 496,
											"name": "JUMPDEST"
										},
										{
											"begin": 465,
											"end": 496,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 465,
											"end": 496,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 465,
											"end": 496,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 465,
											"end": 496,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 465,
											"end": 496,
											"name": "JUMPDEST"
										},
										{
											"begin": 465,
											"end": 496,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 465,
											"end": 496,
											"name": "MLOAD"
										},
										{
											"begin": 465,
											"end": 496,
											"name": "DUP1"
										},
										{
											"begin": 465,
											"end": 496,
											"name": "DUP3"
										},
										{
											"begin": 465,
											"end": 496,
											"name": "DUP2"
										},
										{
											"begin": 465,
											"end": 496,
											"name": "MSTORE"
										},
										{
											"begin": 465,
											"end": 496,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 465,
											"end": 496,
											"name": "ADD"
										},
										{
											"begin": 465,
											"end": 496,
											"name": "SWAP2"
										},
										{
											"begin": 465,
											"end": 496,
											"name": "POP"
										},
										{
											"begin": 465,
											"end": 496,
											"name": "POP"
										},
										{
											"begin": 465,
											"end": 496,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 465,
											"end": 496,
											"name": "MLOAD"
										},
										{
											"begin": 465,
											"end": 496,
											"name": "DUP1"
										},
										{
											"begin": 465,
											"end": 496,
											"name": "SWAP2"
										},
										{
											"begin": 465,
											"end": 496,
											"name": "SUB"
										},
										{
											"begin": 465,
											"end": 496,
											"name": "SWAP1"
										},
										{
											"begin": 465,
											"end": 496,
											"name": "RETURN"
										},
										{
											"begin": 347,
											"end": 388,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 347,
											"end": 388,
											"name": "JUMPDEST"
										},
										{
											"begin": 347,
											"end": 388,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 347,
											"end": 388,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 347,
											"end": 388,
											"name": "DUP1"
										},
										{
											"begin": 347,
											"end": 388,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 347,
											"end": 388,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 347,
											"end": 388,
											"name": "DUP2"
										},
										{
											"begin": 347,
											"end": 388,
											"name": "ADD"
										},
										{
											"begin": 347,
											"end": 388,
											"name": "SWAP1"
										},
										{
											"begin": 347,
											"end": 388,
											"name": "DUP1"
										},
										{
											"begin": 347,
											"end": 388,
											"name": "DUP1"
										},
										{
											"begin": 347,
											"end": 388,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 347,
											"end": 388,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 347,
											"end": 388,
											"name": "AND"
										},
										{
											"begin": 347,
											"end": 388,
											"name": "SWAP1"
										},
										{
											"begin": 347,
											"end": 388,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 347,
											"end": 388,
											"name": "ADD"
										},
										{
											"begin": 347,
											"end": 388,
											"name": "SWAP1"
										},
										{
											"begin": 347,
											"end": 388,
											"name": "SWAP3"
										},
										{
											"begin": 347,
											"end": 388,
											"name": "SWAP2"
										},
										{
											"begin": 347,
											"end": 388,
											"name": "SWAP1"
										},
										{
											"begin": 347,
											"end": 388,
											"name": "POP"
										},
										{
											"begin": 347,
											"end": 388,
											"name": "POP"
										},
										{
											"begin": 347,
											"end": 388,
											"name": "POP"
										},
										{
											"begin": 347,
											"end": 388,
											"name": "PUSH [tag]",
											"value": "40"
										},
										{
											"begin": 347,
											"end": 388,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 347,
											"end": 388,
											"name": "tag",
											"value": "38"
										},
										{
											"begin": 347,
											"end": 388,
											"name": "JUMPDEST"
										},
										{
											"begin": 347,
											"end": 388,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 347,
											"end": 388,
											"name": "MLOAD"
										},
										{
											"begin": 347,
											"end": 388,
											"name": "DUP1"
										},
										{
											"begin": 347,
											"end": 388,
											"name": "DUP3"
										},
										{
											"begin": 347,
											"end": 388,
											"name": "DUP2"
										},
										{
											"begin": 347,
											"end": 388,
											"name": "MSTORE"
										},
										{
											"begin": 347,
											"end": 388,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 347,
											"end": 388,
											"name": "ADD"
										},
										{
											"begin": 347,
											"end": 388,
											"name": "SWAP2"
										},
										{
											"begin": 347,
											"end": 388,
											"name": "POP"
										},
										{
											"begin": 347,
											"end": 388,
											"name": "POP"
										},
										{
											"begin": 347,
											"end": 388,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 347,
											"end": 388,
											"name": "MLOAD"
										},
										{
											"begin": 347,
											"end": 388,
											"name": "DUP1"
										},
										{
											"begin": 347,
											"end": 388,
											"name": "SWAP2"
										},
										{
											"begin": 347,
											"end": 388,
											"name": "SUB"
										},
										{
											"begin": 347,
											"end": 388,
											"name": "SWAP1"
										},
										{
											"begin": 347,
											"end": 388,
											"name": "RETURN"
										},
										{
											"begin": 723,
											"end": 761,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 723,
											"end": 761,
											"name": "JUMPDEST"
										},
										{
											"begin": 723,
											"end": 761,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 723,
											"end": 761,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 723,
											"end": 761,
											"name": "DUP1"
										},
										{
											"begin": 723,
											"end": 761,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 723,
											"end": 761,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "42"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 723,
											"end": 761,
											"name": "DUP2"
										},
										{
											"begin": 723,
											"end": 761,
											"name": "ADD"
										},
										{
											"begin": 723,
											"end": 761,
											"name": "SWAP1"
										},
										{
											"begin": 723,
											"end": 761,
											"name": "DUP1"
										},
										{
											"begin": 723,
											"end": 761,
											"name": "DUP1"
										},
										{
											"begin": 723,
											"end": 761,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 723,
											"end": 761,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 723,
											"end": 761,
											"name": "AND"
										},
										{
											"begin": 723,
											"end": 761,
											"name": "SWAP1"
										},
										{
											"begin": 723,
											"end": 761,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 723,
											"end": 761,
											"name": "ADD"
										},
										{
											"begin": 723,
											"end": 761,
											"name": "SWAP1"
										},
										{
											"begin": 723,
											"end": 761,
											"name": "SWAP3"
										},
										{
											"begin": 723,
											"end": 761,
											"name": "SWAP2"
										},
										{
											"begin": 723,
											"end": 761,
											"name": "SWAP1"
										},
										{
											"begin": 723,
											"end": 761,
											"name": "POP"
										},
										{
											"begin": 723,
											"end": 761,
											"name": "POP"
										},
										{
											"begin": 723,
											"end": 761,
											"name": "POP"
										},
										{
											"begin": 723,
											"end": 761,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 723,
											"end": 761,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 723,
											"end": 761,
											"name": "tag",
											"value": "41"
										},
										{
											"begin": 723,
											"end": 761,
											"name": "JUMPDEST"
										},
										{
											"begin": 723,
											"end": 761,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 723,
											"end": 761,
											"name": "MLOAD"
										},
										{
											"begin": 723,
											"end": 761,
											"name": "DUP1"
										},
										{
											"begin": 723,
											"end": 761,
											"name": "DUP3"
										},
										{
											"begin": 723,
											"end": 761,
											"name": "DUP2"
										},
										{
											"begin": 723,
											"end": 761,
											"name": "MSTORE"
										},
										{
											"begin": 723,
											"end": 761,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 723,
											"end": 761,
											"name": "ADD"
										},
										{
											"begin": 723,
											"end": 761,
											"name": "SWAP2"
										},
										{
											"begin": 723,
											"end": 761,
											"name": "POP"
										},
										{
											"begin": 723,
											"end": 761,
											"name": "POP"
										},
										{
											"begin": 723,
											"end": 761,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 723,
											"end": 761,
											"name": "MLOAD"
										},
										{
											"begin": 723,
											"end": 761,
											"name": "DUP1"
										},
										{
											"begin": 723,
											"end": 761,
											"name": "SWAP2"
										},
										{
											"begin": 723,
											"end": 761,
											"name": "SUB"
										},
										{
											"begin": 723,
											"end": 761,
											"name": "SWAP1"
										},
										{
											"begin": 723,
											"end": 761,
											"name": "RETURN"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "JUMPDEST"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "PUSH [tag]",
											"value": "44"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "PUSH [tag]",
											"value": "45"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "tag",
											"value": "44"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "JUMPDEST"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "MLOAD"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "DUP1"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "DUP1"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "ADD"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "DUP3"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "DUP2"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "SUB"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "DUP3"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "MSTORE"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "DUP4"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "DUP2"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "DUP2"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "MLOAD"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "DUP2"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "MSTORE"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "ADD"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "SWAP2"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "POP"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "DUP1"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "MLOAD"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "SWAP1"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "ADD"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "SWAP1"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "DUP1"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "DUP4"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "46"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "46"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "48"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "POP"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "POP"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "POP"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "SWAP1"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "POP"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "SWAP1"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "DUP2"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "ADD"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "SWAP1"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "AND"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "DUP1"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "ISZERO"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "PUSH [tag]",
											"value": "49"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "JUMPI"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "DUP1"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "DUP3"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "SUB"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "DUP1"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "MLOAD"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "DUP4"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "SUB"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "EXP"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "SUB"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "NOT"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "AND"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "DUP2"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "MSTORE"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "ADD"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "SWAP2"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "POP"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "tag",
											"value": "49"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "JUMPDEST"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "POP"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "SWAP3"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "POP"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "POP"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "POP"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "MLOAD"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "DUP1"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "SWAP2"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "SUB"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "SWAP1"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "RETURN"
										},
										{
											"begin": 2380,
											"end": 2519,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 2380,
											"end": 2519,
											"name": "JUMPDEST"
										},
										{
											"begin": 2380,
											"end": 2519,
											"name": "PUSH [tag]",
											"value": "50"
										},
										{
											"begin": 2380,
											"end": 2519,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2380,
											"end": 2519,
											"name": "DUP1"
										},
										{
											"begin": 2380,
											"end": 2519,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2380,
											"end": 2519,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "51"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 2380,
											"end": 2519,
											"name": "DUP2"
										},
										{
											"begin": 2380,
											"end": 2519,
											"name": "ADD"
										},
										{
											"begin": 2380,
											"end": 2519,
											"name": "SWAP1"
										},
										{
											"begin": 2380,
											"end": 2519,
											"name": "DUP1"
										},
										{
											"begin": 2380,
											"end": 2519,
											"name": "DUP1"
										},
										{
											"begin": 2380,
											"end": 2519,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2380,
											"end": 2519,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2380,
											"end": 2519,
											"name": "AND"
										},
										{
											"begin": 2380,
											"end": 2519,
											"name": "SWAP1"
										},
										{
											"begin": 2380,
											"end": 2519,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2380,
											"end": 2519,
											"name": "ADD"
										},
										{
											"begin": 2380,
											"end": 2519,
											"name": "SWAP1"
										},
										{
											"begin": 2380,
											"end": 2519,
											"name": "SWAP3"
										},
										{
											"begin": 2380,
											"end": 2519,
											"name": "SWAP2"
										},
										{
											"begin": 2380,
											"end": 2519,
											"name": "SWAP1"
										},
										{
											"begin": 2380,
											"end": 2519,
											"name": "DUP1"
										},
										{
											"begin": 2380,
											"end": 2519,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2380,
											"end": 2519,
											"name": "SWAP1"
										},
										{
											"begin": 2380,
											"end": 2519,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2380,
											"end": 2519,
											"name": "ADD"
										},
										{
											"begin": 2380,
											"end": 2519,
											"name": "SWAP1"
										},
										{
											"begin": 2380,
											"end": 2519,
											"name": "SWAP3"
										},
										{
											"begin": 2380,
											"end": 2519,
											"name": "SWAP2"
										},
										{
											"begin": 2380,
											"end": 2519,
											"name": "SWAP1"
										},
										{
											"begin": 2380,
											"end": 2519,
											"name": "POP"
										},
										{
											"begin": 2380,
											"end": 2519,
											"name": "POP"
										},
										{
											"begin": 2380,
											"end": 2519,
											"name": "POP"
										},
										{
											"begin": 2380,
											"end": 2519,
											"name": "PUSH [tag]",
											"value": "52"
										},
										{
											"begin": 2380,
											"end": 2519,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2380,
											"end": 2519,
											"name": "tag",
											"value": "50"
										},
										{
											"begin": 2380,
											"end": 2519,
											"name": "JUMPDEST"
										},
										{
											"begin": 2380,
											"end": 2519,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2380,
											"end": 2519,
											"name": "MLOAD"
										},
										{
											"begin": 2380,
											"end": 2519,
											"name": "DUP1"
										},
										{
											"begin": 2380,
											"end": 2519,
											"name": "DUP3"
										},
										{
											"begin": 2380,
											"end": 2519,
											"name": "ISZERO"
										},
										{
											"begin": 2380,
											"end": 2519,
											"name": "ISZERO"
										},
										{
											"begin": 2380,
											"end": 2519,
											"name": "ISZERO"
										},
										{
											"begin": 2380,
											"end": 2519,
											"name": "ISZERO"
										},
										{
											"begin": 2380,
											"end": 2519,
											"name": "DUP2"
										},
										{
											"begin": 2380,
											"end": 2519,
											"name": "MSTORE"
										},
										{
											"begin": 2380,
											"end": 2519,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2380,
											"end": 2519,
											"name": "ADD"
										},
										{
											"begin": 2380,
											"end": 2519,
											"name": "SWAP2"
										},
										{
											"begin": 2380,
											"end": 2519,
											"name": "POP"
										},
										{
											"begin": 2380,
											"end": 2519,
											"name": "POP"
										},
										{
											"begin": 2380,
											"end": 2519,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2380,
											"end": 2519,
											"name": "MLOAD"
										},
										{
											"begin": 2380,
											"end": 2519,
											"name": "DUP1"
										},
										{
											"begin": 2380,
											"end": 2519,
											"name": "SWAP2"
										},
										{
											"begin": 2380,
											"end": 2519,
											"name": "SUB"
										},
										{
											"begin": 2380,
											"end": 2519,
											"name": "SWAP1"
										},
										{
											"begin": 2380,
											"end": 2519,
											"name": "RETURN"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "JUMPDEST"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "PUSH [tag]",
											"value": "53"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "DUP1"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 16,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 17,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "54"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "DUP2"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "ADD"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "SWAP1"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "DUP1"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "DUP1"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "AND"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "SWAP1"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "ADD"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "SWAP1"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "SWAP3"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "SWAP2"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "SWAP1"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "DUP1"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "AND"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "SWAP1"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "ADD"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "SWAP1"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "SWAP3"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "SWAP2"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "SWAP1"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "DUP1"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "SWAP1"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "ADD"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "SWAP1"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "SWAP3"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "SWAP2"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "SWAP1"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "DUP1"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "SWAP1"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "ADD"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "SWAP1"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "SWAP3"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "SWAP2"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "SWAP1"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "DUP1"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "AND"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "SWAP1"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "ADD"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "SWAP1"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "SWAP3"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "SWAP2"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "SWAP1"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "DUP1"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "SWAP1"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "ADD"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "SWAP1"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "SWAP3"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "SWAP2"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "SWAP1"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "DUP1"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "SWAP1"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "ADD"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "SWAP1"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "SWAP3"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "SWAP2"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "SWAP1"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "POP"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "POP"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "POP"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "PUSH [tag]",
											"value": "55"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "tag",
											"value": "53"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "JUMPDEST"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "STOP"
										},
										{
											"begin": 395,
											"end": 456,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 395,
											"end": 456,
											"name": "JUMPDEST"
										},
										{
											"begin": 395,
											"end": 456,
											"name": "PUSH [tag]",
											"value": "56"
										},
										{
											"begin": 395,
											"end": 456,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 395,
											"end": 456,
											"name": "DUP1"
										},
										{
											"begin": 395,
											"end": 456,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 395,
											"end": 456,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "57"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "57"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 395,
											"end": 456,
											"name": "DUP2"
										},
										{
											"begin": 395,
											"end": 456,
											"name": "ADD"
										},
										{
											"begin": 395,
											"end": 456,
											"name": "SWAP1"
										},
										{
											"begin": 395,
											"end": 456,
											"name": "DUP1"
										},
										{
											"begin": 395,
											"end": 456,
											"name": "DUP1"
										},
										{
											"begin": 395,
											"end": 456,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 395,
											"end": 456,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 395,
											"end": 456,
											"name": "AND"
										},
										{
											"begin": 395,
											"end": 456,
											"name": "SWAP1"
										},
										{
											"begin": 395,
											"end": 456,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 395,
											"end": 456,
											"name": "ADD"
										},
										{
											"begin": 395,
											"end": 456,
											"name": "SWAP1"
										},
										{
											"begin": 395,
											"end": 456,
											"name": "SWAP3"
										},
										{
											"begin": 395,
											"end": 456,
											"name": "SWAP2"
										},
										{
											"begin": 395,
											"end": 456,
											"name": "SWAP1"
										},
										{
											"begin": 395,
											"end": 456,
											"name": "DUP1"
										},
										{
											"begin": 395,
											"end": 456,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 395,
											"end": 456,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 395,
											"end": 456,
											"name": "AND"
										},
										{
											"begin": 395,
											"end": 456,
											"name": "SWAP1"
										},
										{
											"begin": 395,
											"end": 456,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 395,
											"end": 456,
											"name": "ADD"
										},
										{
											"begin": 395,
											"end": 456,
											"name": "SWAP1"
										},
										{
											"begin": 395,
											"end": 456,
											"name": "SWAP3"
										},
										{
											"begin": 395,
											"end": 456,
											"name": "SWAP2"
										},
										{
											"begin": 395,
											"end": 456,
											"name": "SWAP1"
										},
										{
											"begin": 395,
											"end": 456,
											"name": "POP"
										},
										{
											"begin": 395,
											"end": 456,
											"name": "POP"
										},
										{
											"begin": 395,
											"end": 456,
											"name": "POP"
										},
										{
											"begin": 395,
											"end": 456,
											"name": "PUSH [tag]",
											"value": "58"
										},
										{
											"begin": 395,
											"end": 456,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 395,
											"end": 456,
											"name": "tag",
											"value": "56"
										},
										{
											"begin": 395,
											"end": 456,
											"name": "JUMPDEST"
										},
										{
											"begin": 395,
											"end": 456,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 395,
											"end": 456,
											"name": "MLOAD"
										},
										{
											"begin": 395,
											"end": 456,
											"name": "DUP1"
										},
										{
											"begin": 395,
											"end": 456,
											"name": "DUP3"
										},
										{
											"begin": 395,
											"end": 456,
											"name": "DUP2"
										},
										{
											"begin": 395,
											"end": 456,
											"name": "MSTORE"
										},
										{
											"begin": 395,
											"end": 456,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 395,
											"end": 456,
											"name": "ADD"
										},
										{
											"begin": 395,
											"end": 456,
											"name": "SWAP2"
										},
										{
											"begin": 395,
											"end": 456,
											"name": "POP"
										},
										{
											"begin": 395,
											"end": 456,
											"name": "POP"
										},
										{
											"begin": 395,
											"end": 456,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 395,
											"end": 456,
											"name": "MLOAD"
										},
										{
											"begin": 395,
											"end": 456,
											"name": "DUP1"
										},
										{
											"begin": 395,
											"end": 456,
											"name": "SWAP2"
										},
										{
											"begin": 395,
											"end": 456,
											"name": "SUB"
										},
										{
											"begin": 395,
											"end": 456,
											"name": "SWAP1"
										},
										{
											"begin": 395,
											"end": 456,
											"name": "RETURN"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "JUMPDEST"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "MLOAD"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "DUP1"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "ADD"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "MSTORE"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "DUP1"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "DUP2"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "MSTORE"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "ADD"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "PUSH",
											"value": "43616D656C6F74204C5000000000000000000000000000000000000000000000"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "DUP2"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "MSTORE"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "POP"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "DUP2"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2225,
											"end": 2372,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 2225,
											"end": 2372,
											"name": "JUMPDEST"
										},
										{
											"begin": 2289,
											"end": 2293,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2306,
											"end": 2342,
											"name": "PUSH [tag]",
											"value": "60"
										},
										{
											"begin": 2315,
											"end": 2325,
											"name": "CALLER"
										},
										{
											"begin": 2327,
											"end": 2334,
											"name": "DUP5"
										},
										{
											"begin": 2336,
											"end": 2341,
											"name": "DUP5"
										},
										{
											"begin": 2306,
											"end": 2314,
											"name": "PUSH [tag]",
											"value": "61"
										},
										{
											"begin": 2306,
											"end": 2342,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2306,
											"end": 2342,
											"name": "tag",
											"value": "60"
										},
										{
											"begin": 2306,
											"end": 2342,
											"name": "JUMPDEST"
										},
										{
											"begin": 2360,
											"end": 2364,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2353,
											"end": 2364,
											"name": "SWAP1"
										},
										{
											"begin": 2353,
											"end": 2364,
											"name": "POP"
										},
										{
											"begin": 2225,
											"end": 2372,
											"name": "SWAP3"
										},
										{
											"begin": 2225,
											"end": 2372,
											"name": "SWAP2"
										},
										{
											"begin": 2225,
											"end": 2372,
											"name": "POP"
										},
										{
											"begin": 2225,
											"end": 2372,
											"name": "POP"
										},
										{
											"begin": 2225,
											"end": 2372,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 316,
											"end": 340,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 316,
											"end": 340,
											"name": "JUMPDEST"
										},
										{
											"begin": 316,
											"end": 340,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 316,
											"end": 340,
											"name": "SLOAD"
										},
										{
											"begin": 316,
											"end": 340,
											"name": "DUP2"
										},
										{
											"begin": 316,
											"end": 340,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2527,
											"end": 2926,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 2527,
											"end": 2926,
											"name": "JUMPDEST"
										},
										{
											"begin": 2605,
											"end": 2609,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2662,
											"end": 2664,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2626,
											"end": 2635,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2626,
											"end": 2641,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2636,
											"end": 2640,
											"name": "DUP7"
										},
										{
											"begin": 2626,
											"end": 2641,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2626,
											"end": 2641,
											"name": "AND"
										},
										{
											"begin": 2626,
											"end": 2641,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2626,
											"end": 2641,
											"name": "AND"
										},
										{
											"begin": 2626,
											"end": 2641,
											"name": "DUP2"
										},
										{
											"begin": 2626,
											"end": 2641,
											"name": "MSTORE"
										},
										{
											"begin": 2626,
											"end": 2641,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2626,
											"end": 2641,
											"name": "ADD"
										},
										{
											"begin": 2626,
											"end": 2641,
											"name": "SWAP1"
										},
										{
											"begin": 2626,
											"end": 2641,
											"name": "DUP2"
										},
										{
											"begin": 2626,
											"end": 2641,
											"name": "MSTORE"
										},
										{
											"begin": 2626,
											"end": 2641,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2626,
											"end": 2641,
											"name": "ADD"
										},
										{
											"begin": 2626,
											"end": 2641,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2626,
											"end": 2641,
											"name": "KECCAK256"
										},
										{
											"begin": 2626,
											"end": 2653,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2642,
											"end": 2652,
											"name": "CALLER"
										},
										{
											"begin": 2626,
											"end": 2653,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2626,
											"end": 2653,
											"name": "AND"
										},
										{
											"begin": 2626,
											"end": 2653,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2626,
											"end": 2653,
											"name": "AND"
										},
										{
											"begin": 2626,
											"end": 2653,
											"name": "DUP2"
										},
										{
											"begin": 2626,
											"end": 2653,
											"name": "MSTORE"
										},
										{
											"begin": 2626,
											"end": 2653,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2626,
											"end": 2653,
											"name": "ADD"
										},
										{
											"begin": 2626,
											"end": 2653,
											"name": "SWAP1"
										},
										{
											"begin": 2626,
											"end": 2653,
											"name": "DUP2"
										},
										{
											"begin": 2626,
											"end": 2653,
											"name": "MSTORE"
										},
										{
											"begin": 2626,
											"end": 2653,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2626,
											"end": 2653,
											"name": "ADD"
										},
										{
											"begin": 2626,
											"end": 2653,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2626,
											"end": 2653,
											"name": "KECCAK256"
										},
										{
											"begin": 2626,
											"end": 2653,
											"name": "SLOAD"
										},
										{
											"begin": 2626,
											"end": 2665,
											"name": "EQ"
										},
										{
											"begin": 2622,
											"end": 2860,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 2622,
											"end": 2860,
											"name": "JUMPI"
										},
										{
											"begin": 2682,
											"end": 2696,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2699,
											"end": 2737,
											"name": "PUSH [tag]",
											"value": "64"
										},
										{
											"begin": 2731,
											"end": 2736,
											"name": "DUP4"
										},
										{
											"begin": 2699,
											"end": 2708,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2699,
											"end": 2714,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2709,
											"end": 2713,
											"name": "DUP9"
										},
										{
											"begin": 2699,
											"end": 2714,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2699,
											"end": 2714,
											"name": "AND"
										},
										{
											"begin": 2699,
											"end": 2714,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2699,
											"end": 2714,
											"name": "AND"
										},
										{
											"begin": 2699,
											"end": 2714,
											"name": "DUP2"
										},
										{
											"begin": 2699,
											"end": 2714,
											"name": "MSTORE"
										},
										{
											"begin": 2699,
											"end": 2714,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2699,
											"end": 2714,
											"name": "ADD"
										},
										{
											"begin": 2699,
											"end": 2714,
											"name": "SWAP1"
										},
										{
											"begin": 2699,
											"end": 2714,
											"name": "DUP2"
										},
										{
											"begin": 2699,
											"end": 2714,
											"name": "MSTORE"
										},
										{
											"begin": 2699,
											"end": 2714,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2699,
											"end": 2714,
											"name": "ADD"
										},
										{
											"begin": 2699,
											"end": 2714,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2699,
											"end": 2714,
											"name": "KECCAK256"
										},
										{
											"begin": 2699,
											"end": 2726,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2715,
											"end": 2725,
											"name": "CALLER"
										},
										{
											"begin": 2699,
											"end": 2726,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2699,
											"end": 2726,
											"name": "AND"
										},
										{
											"begin": 2699,
											"end": 2726,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2699,
											"end": 2726,
											"name": "AND"
										},
										{
											"begin": 2699,
											"end": 2726,
											"name": "DUP2"
										},
										{
											"begin": 2699,
											"end": 2726,
											"name": "MSTORE"
										},
										{
											"begin": 2699,
											"end": 2726,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2699,
											"end": 2726,
											"name": "ADD"
										},
										{
											"begin": 2699,
											"end": 2726,
											"name": "SWAP1"
										},
										{
											"begin": 2699,
											"end": 2726,
											"name": "DUP2"
										},
										{
											"begin": 2699,
											"end": 2726,
											"name": "MSTORE"
										},
										{
											"begin": 2699,
											"end": 2726,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2699,
											"end": 2726,
											"name": "ADD"
										},
										{
											"begin": 2699,
											"end": 2726,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2699,
											"end": 2726,
											"name": "KECCAK256"
										},
										{
											"begin": 2699,
											"end": 2726,
											"name": "SLOAD"
										},
										{
											"begin": 2699,
											"end": 2730,
											"name": "PUSH [tag]",
											"value": "65"
										},
										{
											"begin": 2699,
											"end": 2730,
											"name": "SWAP1"
										},
										{
											"begin": 2699,
											"end": 2737,
											"name": "SWAP2"
										},
										{
											"begin": 2699,
											"end": 2737,
											"name": "SWAP1"
										},
										{
											"begin": 2699,
											"end": 2737,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 2699,
											"end": 2737,
											"name": "AND"
										},
										{
											"begin": 2699,
											"end": 2737,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2699,
											"end": 2737,
											"name": "tag",
											"value": "64"
										},
										{
											"begin": 2699,
											"end": 2737,
											"name": "JUMPDEST"
										},
										{
											"begin": 2682,
											"end": 2737,
											"name": "SWAP1"
										},
										{
											"begin": 2682,
											"end": 2737,
											"name": "POP"
										},
										{
											"begin": 2782,
											"end": 2791,
											"name": "DUP1"
										},
										{
											"begin": 2752,
											"end": 2761,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2752,
											"end": 2767,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2762,
											"end": 2766,
											"name": "DUP8"
										},
										{
											"begin": 2752,
											"end": 2767,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2752,
											"end": 2767,
											"name": "AND"
										},
										{
											"begin": 2752,
											"end": 2767,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2752,
											"end": 2767,
											"name": "AND"
										},
										{
											"begin": 2752,
											"end": 2767,
											"name": "DUP2"
										},
										{
											"begin": 2752,
											"end": 2767,
											"name": "MSTORE"
										},
										{
											"begin": 2752,
											"end": 2767,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2752,
											"end": 2767,
											"name": "ADD"
										},
										{
											"begin": 2752,
											"end": 2767,
											"name": "SWAP1"
										},
										{
											"begin": 2752,
											"end": 2767,
											"name": "DUP2"
										},
										{
											"begin": 2752,
											"end": 2767,
											"name": "MSTORE"
										},
										{
											"begin": 2752,
											"end": 2767,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2752,
											"end": 2767,
											"name": "ADD"
										},
										{
											"begin": 2752,
											"end": 2767,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2752,
											"end": 2767,
											"name": "KECCAK256"
										},
										{
											"begin": 2752,
											"end": 2779,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2768,
											"end": 2778,
											"name": "CALLER"
										},
										{
											"begin": 2752,
											"end": 2779,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2752,
											"end": 2779,
											"name": "AND"
										},
										{
											"begin": 2752,
											"end": 2779,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2752,
											"end": 2779,
											"name": "AND"
										},
										{
											"begin": 2752,
											"end": 2779,
											"name": "DUP2"
										},
										{
											"begin": 2752,
											"end": 2779,
											"name": "MSTORE"
										},
										{
											"begin": 2752,
											"end": 2779,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2752,
											"end": 2779,
											"name": "ADD"
										},
										{
											"begin": 2752,
											"end": 2779,
											"name": "SWAP1"
										},
										{
											"begin": 2752,
											"end": 2779,
											"name": "DUP2"
										},
										{
											"begin": 2752,
											"end": 2779,
											"name": "MSTORE"
										},
										{
											"begin": 2752,
											"end": 2779,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2752,
											"end": 2779,
											"name": "ADD"
										},
										{
											"begin": 2752,
											"end": 2779,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2752,
											"end": 2779,
											"name": "KECCAK256"
										},
										{
											"begin": 2752,
											"end": 2791,
											"name": "DUP2"
										},
										{
											"begin": 2752,
											"end": 2791,
											"name": "SWAP1"
										},
										{
											"begin": 2752,
											"end": 2791,
											"name": "SSTORE"
										},
										{
											"begin": 2752,
											"end": 2791,
											"name": "POP"
										},
										{
											"begin": 2826,
											"end": 2836,
											"name": "CALLER"
										},
										{
											"begin": 2811,
											"end": 2848,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2811,
											"end": 2848,
											"name": "AND"
										},
										{
											"begin": 2820,
											"end": 2824,
											"name": "DUP6"
										},
										{
											"begin": 2811,
											"end": 2848,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2811,
											"end": 2848,
											"name": "AND"
										},
										{
											"begin": 2811,
											"end": 2848,
											"name": "PUSH",
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 2838,
											"end": 2847,
											"name": "DUP4"
										},
										{
											"begin": 2811,
											"end": 2848,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2811,
											"end": 2848,
											"name": "MLOAD"
										},
										{
											"begin": 2811,
											"end": 2848,
											"name": "DUP1"
										},
										{
											"begin": 2811,
											"end": 2848,
											"name": "DUP3"
										},
										{
											"begin": 2811,
											"end": 2848,
											"name": "DUP2"
										},
										{
											"begin": 2811,
											"end": 2848,
											"name": "MSTORE"
										},
										{
											"begin": 2811,
											"end": 2848,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2811,
											"end": 2848,
											"name": "ADD"
										},
										{
											"begin": 2811,
											"end": 2848,
											"name": "SWAP2"
										},
										{
											"begin": 2811,
											"end": 2848,
											"name": "POP"
										},
										{
											"begin": 2811,
											"end": 2848,
											"name": "POP"
										},
										{
											"begin": 2811,
											"end": 2848,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2811,
											"end": 2848,
											"name": "MLOAD"
										},
										{
											"begin": 2811,
											"end": 2848,
											"name": "DUP1"
										},
										{
											"begin": 2811,
											"end": 2848,
											"name": "SWAP2"
										},
										{
											"begin": 2811,
											"end": 2848,
											"name": "SUB"
										},
										{
											"begin": 2811,
											"end": 2848,
											"name": "SWAP1"
										},
										{
											"begin": 2811,
											"end": 2848,
											"name": "LOG3"
										},
										{
											"begin": 2622,
											"end": 2860,
											"name": "POP"
										},
										{
											"begin": 2622,
											"end": 2860,
											"name": "tag",
											"value": "63"
										},
										{
											"begin": 2622,
											"end": 2860,
											"name": "JUMPDEST"
										},
										{
											"begin": 2870,
											"end": 2896,
											"name": "PUSH [tag]",
											"value": "66"
										},
										{
											"begin": 2880,
											"end": 2884,
											"name": "DUP5"
										},
										{
											"begin": 2886,
											"end": 2888,
											"name": "DUP5"
										},
										{
											"begin": 2890,
											"end": 2895,
											"name": "DUP5"
										},
										{
											"begin": 2870,
											"end": 2879,
											"name": "PUSH [tag]",
											"value": "67"
										},
										{
											"begin": 2870,
											"end": 2896,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2870,
											"end": 2896,
											"name": "tag",
											"value": "66"
										},
										{
											"begin": 2870,
											"end": 2896,
											"name": "JUMPDEST"
										},
										{
											"begin": 2914,
											"end": 2918,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2907,
											"end": 2918,
											"name": "SWAP1"
										},
										{
											"begin": 2907,
											"end": 2918,
											"name": "POP"
										},
										{
											"begin": 2527,
											"end": 2926,
											"name": "SWAP4"
										},
										{
											"begin": 2527,
											"end": 2926,
											"name": "SWAP3"
										},
										{
											"begin": 2527,
											"end": 2926,
											"name": "POP"
										},
										{
											"begin": 2527,
											"end": 2926,
											"name": "POP"
										},
										{
											"begin": 2527,
											"end": 2926,
											"name": "POP"
										},
										{
											"begin": 2527,
											"end": 2926,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 608,
											"end": 716,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 608,
											"end": 716,
											"name": "JUMPDEST"
										},
										{
											"begin": 650,
											"end": 716,
											"name": "PUSH",
											"value": "6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9"
										},
										{
											"begin": 608,
											"end": 716,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 608,
											"end": 716,
											"name": "SHL"
										},
										{
											"begin": 608,
											"end": 716,
											"name": "DUP2"
										},
										{
											"begin": 608,
											"end": 716,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 274,
											"end": 309,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 274,
											"end": 309,
											"name": "JUMPDEST"
										},
										{
											"begin": 307,
											"end": 309,
											"name": "PUSH",
											"value": "12"
										},
										{
											"begin": 274,
											"end": 309,
											"name": "DUP2"
										},
										{
											"begin": 274,
											"end": 309,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 465,
											"end": 496,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 465,
											"end": 496,
											"name": "JUMPDEST"
										},
										{
											"begin": 465,
											"end": 496,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 465,
											"end": 496,
											"name": "SLOAD"
										},
										{
											"begin": 465,
											"end": 496,
											"name": "DUP2"
										},
										{
											"begin": 465,
											"end": 496,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 347,
											"end": 388,
											"name": "tag",
											"value": "40"
										},
										{
											"begin": 347,
											"end": 388,
											"name": "JUMPDEST"
										},
										{
											"begin": 347,
											"end": 388,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 347,
											"end": 388,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 347,
											"end": 388,
											"name": "MSTORE"
										},
										{
											"begin": 347,
											"end": 388,
											"name": "DUP1"
										},
										{
											"begin": 347,
											"end": 388,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 347,
											"end": 388,
											"name": "MSTORE"
										},
										{
											"begin": 347,
											"end": 388,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 347,
											"end": 388,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 347,
											"end": 388,
											"name": "KECCAK256"
										},
										{
											"begin": 347,
											"end": 388,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 347,
											"end": 388,
											"name": "SWAP2"
										},
										{
											"begin": 347,
											"end": 388,
											"name": "POP"
										},
										{
											"begin": 347,
											"end": 388,
											"name": "SWAP1"
										},
										{
											"begin": 347,
											"end": 388,
											"name": "POP"
										},
										{
											"begin": 347,
											"end": 388,
											"name": "SLOAD"
										},
										{
											"begin": 347,
											"end": 388,
											"name": "DUP2"
										},
										{
											"begin": 347,
											"end": 388,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 723,
											"end": 761,
											"name": "tag",
											"value": "43"
										},
										{
											"begin": 723,
											"end": 761,
											"name": "JUMPDEST"
										},
										{
											"begin": 723,
											"end": 761,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 723,
											"end": 761,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 723,
											"end": 761,
											"name": "MSTORE"
										},
										{
											"begin": 723,
											"end": 761,
											"name": "DUP1"
										},
										{
											"begin": 723,
											"end": 761,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 723,
											"end": 761,
											"name": "MSTORE"
										},
										{
											"begin": 723,
											"end": 761,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 723,
											"end": 761,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 723,
											"end": 761,
											"name": "KECCAK256"
										},
										{
											"begin": 723,
											"end": 761,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 723,
											"end": 761,
											"name": "SWAP2"
										},
										{
											"begin": 723,
											"end": 761,
											"name": "POP"
										},
										{
											"begin": 723,
											"end": 761,
											"name": "SWAP1"
										},
										{
											"begin": 723,
											"end": 761,
											"name": "POP"
										},
										{
											"begin": 723,
											"end": 761,
											"name": "SLOAD"
										},
										{
											"begin": 723,
											"end": 761,
											"name": "DUP2"
										},
										{
											"begin": 723,
											"end": 761,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "tag",
											"value": "45"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "JUMPDEST"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "MLOAD"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "DUP1"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "ADD"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "MSTORE"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "DUP1"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "DUP2"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "MSTORE"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "ADD"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "PUSH",
											"value": "434D4C542D4C5000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "DUP2"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "MSTORE"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "POP"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "DUP2"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2380,
											"end": 2519,
											"name": "tag",
											"value": "52"
										},
										{
											"begin": 2380,
											"end": 2519,
											"name": "JUMPDEST"
										},
										{
											"begin": 2440,
											"end": 2444,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2457,
											"end": 2489,
											"name": "PUSH [tag]",
											"value": "69"
										},
										{
											"begin": 2467,
											"end": 2477,
											"name": "CALLER"
										},
										{
											"begin": 2479,
											"end": 2481,
											"name": "DUP5"
										},
										{
											"begin": 2483,
											"end": 2488,
											"name": "DUP5"
										},
										{
											"begin": 2457,
											"end": 2466,
											"name": "PUSH [tag]",
											"value": "67"
										},
										{
											"begin": 2457,
											"end": 2489,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2457,
											"end": 2489,
											"name": "tag",
											"value": "69"
										},
										{
											"begin": 2457,
											"end": 2489,
											"name": "JUMPDEST"
										},
										{
											"begin": 2507,
											"end": 2511,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2500,
											"end": 2511,
											"name": "SWAP1"
										},
										{
											"begin": 2500,
											"end": 2511,
											"name": "POP"
										},
										{
											"begin": 2380,
											"end": 2519,
											"name": "SWAP3"
										},
										{
											"begin": 2380,
											"end": 2519,
											"name": "SWAP2"
										},
										{
											"begin": 2380,
											"end": 2519,
											"name": "POP"
										},
										{
											"begin": 2380,
											"end": 2519,
											"name": "POP"
										},
										{
											"begin": 2380,
											"end": 2519,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "tag",
											"value": "55"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "JUMPDEST"
										},
										{
											"begin": 3080,
											"end": 3095,
											"name": "TIMESTAMP"
										},
										{
											"begin": 3068,
											"end": 3076,
											"name": "DUP5"
										},
										{
											"begin": 3068,
											"end": 3095,
											"name": "LT"
										},
										{
											"begin": 3068,
											"end": 3095,
											"name": "ISZERO"
										},
										{
											"begin": 3060,
											"end": 3118,
											"name": "PUSH [tag]",
											"value": "71"
										},
										{
											"begin": 3060,
											"end": 3118,
											"name": "JUMPI"
										},
										{
											"begin": 3060,
											"end": 3118,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3060,
											"end": 3118,
											"name": "MLOAD"
										},
										{
											"begin": 3060,
											"end": 3118,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3060,
											"end": 3118,
											"name": "DUP2"
										},
										{
											"begin": 3060,
											"end": 3118,
											"name": "MSTORE"
										},
										{
											"begin": 3060,
											"end": 3118,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3060,
											"end": 3118,
											"name": "ADD"
										},
										{
											"begin": 3060,
											"end": 3118,
											"name": "DUP1"
										},
										{
											"begin": 3060,
											"end": 3118,
											"name": "DUP1"
										},
										{
											"begin": 3060,
											"end": 3118,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3060,
											"end": 3118,
											"name": "ADD"
										},
										{
											"begin": 3060,
											"end": 3118,
											"name": "DUP3"
										},
										{
											"begin": 3060,
											"end": 3118,
											"name": "DUP2"
										},
										{
											"begin": 3060,
											"end": 3118,
											"name": "SUB"
										},
										{
											"begin": 3060,
											"end": 3118,
											"name": "DUP3"
										},
										{
											"begin": 3060,
											"end": 3118,
											"name": "MSTORE"
										},
										{
											"begin": 3060,
											"end": 3118,
											"name": "PUSH",
											"value": "12"
										},
										{
											"begin": 3060,
											"end": 3118,
											"name": "DUP2"
										},
										{
											"begin": 3060,
											"end": 3118,
											"name": "MSTORE"
										},
										{
											"begin": 3060,
											"end": 3118,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3060,
											"end": 3118,
											"name": "ADD"
										},
										{
											"begin": 3060,
											"end": 3118,
											"name": "DUP1"
										},
										{
											"begin": 3060,
											"end": 3118,
											"name": "PUSH",
											"value": "556E697377617056323A20455850495245440000000000000000000000000000"
										},
										{
											"begin": 3060,
											"end": 3118,
											"name": "DUP2"
										},
										{
											"begin": 3060,
											"end": 3118,
											"name": "MSTORE"
										},
										{
											"begin": 3060,
											"end": 3118,
											"name": "POP"
										},
										{
											"begin": 3060,
											"end": 3118,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3060,
											"end": 3118,
											"name": "ADD"
										},
										{
											"begin": 3060,
											"end": 3118,
											"name": "SWAP2"
										},
										{
											"begin": 3060,
											"end": 3118,
											"name": "POP"
										},
										{
											"begin": 3060,
											"end": 3118,
											"name": "POP"
										},
										{
											"begin": 3060,
											"end": 3118,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3060,
											"end": 3118,
											"name": "MLOAD"
										},
										{
											"begin": 3060,
											"end": 3118,
											"name": "DUP1"
										},
										{
											"begin": 3060,
											"end": 3118,
											"name": "SWAP2"
										},
										{
											"begin": 3060,
											"end": 3118,
											"name": "SUB"
										},
										{
											"begin": 3060,
											"end": 3118,
											"name": "SWAP1"
										},
										{
											"begin": 3060,
											"end": 3118,
											"name": "REVERT"
										},
										{
											"begin": 3060,
											"end": 3118,
											"name": "tag",
											"value": "71"
										},
										{
											"begin": 3060,
											"end": 3118,
											"name": "JUMPDEST"
										},
										{
											"begin": 3129,
											"end": 3143,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3234,
											"end": 3250,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 3234,
											"end": 3250,
											"name": "SLOAD"
										},
										{
											"begin": 650,
											"end": 716,
											"name": "PUSH",
											"value": "6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9"
										},
										{
											"begin": 3290,
											"end": 3305,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3290,
											"end": 3305,
											"name": "SHL"
										},
										{
											"begin": 3307,
											"end": 3312,
											"name": "DUP10"
										},
										{
											"begin": 3314,
											"end": 3321,
											"name": "DUP10"
										},
										{
											"begin": 3323,
											"end": 3328,
											"name": "DUP10"
										},
										{
											"begin": 3330,
											"end": 3336,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3330,
											"end": 3343,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3337,
											"end": 3342,
											"name": "DUP15"
										},
										{
											"begin": 3330,
											"end": 3343,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3330,
											"end": 3343,
											"name": "AND"
										},
										{
											"begin": 3330,
											"end": 3343,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3330,
											"end": 3343,
											"name": "AND"
										},
										{
											"begin": 3330,
											"end": 3343,
											"name": "DUP2"
										},
										{
											"begin": 3330,
											"end": 3343,
											"name": "MSTORE"
										},
										{
											"begin": 3330,
											"end": 3343,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3330,
											"end": 3343,
											"name": "ADD"
										},
										{
											"begin": 3330,
											"end": 3343,
											"name": "SWAP1"
										},
										{
											"begin": 3330,
											"end": 3343,
											"name": "DUP2"
										},
										{
											"begin": 3330,
											"end": 3343,
											"name": "MSTORE"
										},
										{
											"begin": 3330,
											"end": 3343,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3330,
											"end": 3343,
											"name": "ADD"
										},
										{
											"begin": 3330,
											"end": 3343,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3330,
											"end": 3343,
											"name": "KECCAK256"
										},
										{
											"begin": 3330,
											"end": 3343,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3330,
											"end": 3345,
											"name": "DUP2"
										},
										{
											"begin": 3330,
											"end": 3345,
											"name": "SLOAD"
										},
										{
											"begin": 3330,
											"end": 3345,
											"name": "DUP1"
										},
										{
											"begin": 3330,
											"end": 3345,
											"name": "SWAP3"
										},
										{
											"begin": 3330,
											"end": 3345,
											"name": "SWAP2"
										},
										{
											"begin": 3330,
											"end": 3345,
											"name": "SWAP1"
										},
										{
											"begin": 3330,
											"end": 3345,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3330,
											"end": 3345,
											"name": "ADD"
										},
										{
											"begin": 3330,
											"end": 3345,
											"name": "SWAP2"
										},
										{
											"begin": 3330,
											"end": 3345,
											"name": "SWAP1"
										},
										{
											"begin": 3330,
											"end": 3345,
											"name": "POP"
										},
										{
											"begin": 3330,
											"end": 3345,
											"name": "SSTORE"
										},
										{
											"begin": 3347,
											"end": 3355,
											"name": "DUP11"
										},
										{
											"begin": 3279,
											"end": 3356,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3279,
											"end": 3356,
											"name": "MLOAD"
										},
										{
											"begin": 3279,
											"end": 3356,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3279,
											"end": 3356,
											"name": "ADD"
										},
										{
											"begin": 3279,
											"end": 3356,
											"name": "DUP1"
										},
										{
											"begin": 3279,
											"end": 3356,
											"name": "DUP8"
										},
										{
											"begin": 3279,
											"end": 3356,
											"name": "DUP2"
										},
										{
											"begin": 3279,
											"end": 3356,
											"name": "MSTORE"
										},
										{
											"begin": 3279,
											"end": 3356,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3279,
											"end": 3356,
											"name": "ADD"
										},
										{
											"begin": 3279,
											"end": 3356,
											"name": "DUP7"
										},
										{
											"begin": 3279,
											"end": 3356,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3279,
											"end": 3356,
											"name": "AND"
										},
										{
											"begin": 3279,
											"end": 3356,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3279,
											"end": 3356,
											"name": "AND"
										},
										{
											"begin": 3279,
											"end": 3356,
											"name": "DUP2"
										},
										{
											"begin": 3279,
											"end": 3356,
											"name": "MSTORE"
										},
										{
											"begin": 3279,
											"end": 3356,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3279,
											"end": 3356,
											"name": "ADD"
										},
										{
											"begin": 3279,
											"end": 3356,
											"name": "DUP6"
										},
										{
											"begin": 3279,
											"end": 3356,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3279,
											"end": 3356,
											"name": "AND"
										},
										{
											"begin": 3279,
											"end": 3356,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3279,
											"end": 3356,
											"name": "AND"
										},
										{
											"begin": 3279,
											"end": 3356,
											"name": "DUP2"
										},
										{
											"begin": 3279,
											"end": 3356,
											"name": "MSTORE"
										},
										{
											"begin": 3279,
											"end": 3356,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3279,
											"end": 3356,
											"name": "ADD"
										},
										{
											"begin": 3279,
											"end": 3356,
											"name": "DUP5"
										},
										{
											"begin": 3279,
											"end": 3356,
											"name": "DUP2"
										},
										{
											"begin": 3279,
											"end": 3356,
											"name": "MSTORE"
										},
										{
											"begin": 3279,
											"end": 3356,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3279,
											"end": 3356,
											"name": "ADD"
										},
										{
											"begin": 3279,
											"end": 3356,
											"name": "DUP4"
										},
										{
											"begin": 3279,
											"end": 3356,
											"name": "DUP2"
										},
										{
											"begin": 3279,
											"end": 3356,
											"name": "MSTORE"
										},
										{
											"begin": 3279,
											"end": 3356,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3279,
											"end": 3356,
											"name": "ADD"
										},
										{
											"begin": 3279,
											"end": 3356,
											"name": "DUP3"
										},
										{
											"begin": 3279,
											"end": 3356,
											"name": "DUP2"
										},
										{
											"begin": 3279,
											"end": 3356,
											"name": "MSTORE"
										},
										{
											"begin": 3279,
											"end": 3356,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3279,
											"end": 3356,
											"name": "ADD"
										},
										{
											"begin": 3279,
											"end": 3356,
											"name": "SWAP7"
										},
										{
											"begin": 3279,
											"end": 3356,
											"name": "POP"
										},
										{
											"begin": 3279,
											"end": 3356,
											"name": "POP"
										},
										{
											"begin": 3279,
											"end": 3356,
											"name": "POP"
										},
										{
											"begin": 3279,
											"end": 3356,
											"name": "POP"
										},
										{
											"begin": 3279,
											"end": 3356,
											"name": "POP"
										},
										{
											"begin": 3279,
											"end": 3356,
											"name": "POP"
										},
										{
											"begin": 3279,
											"end": 3356,
											"name": "POP"
										},
										{
											"begin": 3279,
											"end": 3356,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3279,
											"end": 3356,
											"name": "MLOAD"
										},
										{
											"begin": 49,
											"end": 53,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 39,
											"end": 46,
											"name": "DUP2"
										},
										{
											"begin": 30,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 20,
											"name": "DUP2"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 3279,
											"end": 3356,
											"name": "SWAP1"
										},
										{
											"begin": 3279,
											"end": 3356,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3279,
											"end": 3356,
											"name": "MSTORE"
										},
										{
											"begin": 3269,
											"end": 3357,
											"name": "DUP1"
										},
										{
											"begin": 3269,
											"end": 3357,
											"name": "MLOAD"
										},
										{
											"begin": 3269,
											"end": 3357,
											"name": "SWAP1"
										},
										{
											"begin": 3269,
											"end": 3357,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3269,
											"end": 3357,
											"name": "ADD"
										},
										{
											"begin": 3269,
											"end": 3357,
											"name": "KECCAK256"
										},
										{
											"begin": 3170,
											"end": 3372,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3170,
											"end": 3372,
											"name": "MLOAD"
										},
										{
											"begin": 3170,
											"end": 3372,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3170,
											"end": 3372,
											"name": "ADD"
										},
										{
											"begin": 3170,
											"end": 3372,
											"name": "DUP1"
										},
										{
											"begin": 3170,
											"end": 3372,
											"name": "DUP1"
										},
										{
											"begin": 3170,
											"end": 3372,
											"name": "PUSH",
											"value": "1901000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3170,
											"end": 3372,
											"name": "DUP2"
										},
										{
											"begin": 3170,
											"end": 3372,
											"name": "MSTORE"
										},
										{
											"begin": 3170,
											"end": 3372,
											"name": "POP"
										},
										{
											"begin": 3170,
											"end": 3372,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 3170,
											"end": 3372,
											"name": "ADD"
										},
										{
											"begin": 3170,
											"end": 3372,
											"name": "DUP4"
										},
										{
											"begin": 3170,
											"end": 3372,
											"name": "DUP2"
										},
										{
											"begin": 3170,
											"end": 3372,
											"name": "MSTORE"
										},
										{
											"begin": 3170,
											"end": 3372,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3170,
											"end": 3372,
											"name": "ADD"
										},
										{
											"begin": 3170,
											"end": 3372,
											"name": "DUP3"
										},
										{
											"begin": 3170,
											"end": 3372,
											"name": "DUP2"
										},
										{
											"begin": 3170,
											"end": 3372,
											"name": "MSTORE"
										},
										{
											"begin": 3170,
											"end": 3372,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3170,
											"end": 3372,
											"name": "ADD"
										},
										{
											"begin": 3170,
											"end": 3372,
											"name": "SWAP3"
										},
										{
											"begin": 3170,
											"end": 3372,
											"name": "POP"
										},
										{
											"begin": 3170,
											"end": 3372,
											"name": "POP"
										},
										{
											"begin": 3170,
											"end": 3372,
											"name": "POP"
										},
										{
											"begin": 3170,
											"end": 3372,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3170,
											"end": 3372,
											"name": "MLOAD"
										},
										{
											"begin": 49,
											"end": 53,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 39,
											"end": 46,
											"name": "DUP2"
										},
										{
											"begin": 30,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 20,
											"name": "DUP2"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 3170,
											"end": 3372,
											"name": "SWAP1"
										},
										{
											"begin": 3170,
											"end": 3372,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3170,
											"end": 3372,
											"name": "MSTORE"
										},
										{
											"begin": 3146,
											"end": 3383,
											"name": "DUP1"
										},
										{
											"begin": 3146,
											"end": 3383,
											"name": "MLOAD"
										},
										{
											"begin": 3146,
											"end": 3383,
											"name": "SWAP1"
										},
										{
											"begin": 3146,
											"end": 3383,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3146,
											"end": 3383,
											"name": "ADD"
										},
										{
											"begin": 3146,
											"end": 3383,
											"name": "KECCAK256"
										},
										{
											"begin": 3129,
											"end": 3383,
											"name": "SWAP1"
										},
										{
											"begin": 3129,
											"end": 3383,
											"name": "POP"
										},
										{
											"begin": 3394,
											"end": 3418,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3421,
											"end": 3447,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3431,
											"end": 3437,
											"name": "DUP3"
										},
										{
											"begin": 3439,
											"end": 3440,
											"name": "DUP7"
										},
										{
											"begin": 3442,
											"end": 3443,
											"name": "DUP7"
										},
										{
											"begin": 3445,
											"end": 3446,
											"name": "DUP7"
										},
										{
											"begin": 3421,
											"end": 3447,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3421,
											"end": 3447,
											"name": "MLOAD"
										},
										{
											"begin": 3421,
											"end": 3447,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3421,
											"end": 3447,
											"name": "DUP2"
										},
										{
											"begin": 3421,
											"end": 3447,
											"name": "MSTORE"
										},
										{
											"begin": 3421,
											"end": 3447,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3421,
											"end": 3447,
											"name": "ADD"
										},
										{
											"begin": 3421,
											"end": 3447,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3421,
											"end": 3447,
											"name": "MSTORE"
										},
										{
											"begin": 3421,
											"end": 3447,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3421,
											"end": 3447,
											"name": "MLOAD"
										},
										{
											"begin": 3421,
											"end": 3447,
											"name": "DUP1"
										},
										{
											"begin": 3421,
											"end": 3447,
											"name": "DUP6"
										},
										{
											"begin": 3421,
											"end": 3447,
											"name": "DUP2"
										},
										{
											"begin": 3421,
											"end": 3447,
											"name": "MSTORE"
										},
										{
											"begin": 3421,
											"end": 3447,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3421,
											"end": 3447,
											"name": "ADD"
										},
										{
											"begin": 3421,
											"end": 3447,
											"name": "DUP5"
										},
										{
											"begin": 3421,
											"end": 3447,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 3421,
											"end": 3447,
											"name": "AND"
										},
										{
											"begin": 3421,
											"end": 3447,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 3421,
											"end": 3447,
											"name": "AND"
										},
										{
											"begin": 3421,
											"end": 3447,
											"name": "DUP2"
										},
										{
											"begin": 3421,
											"end": 3447,
											"name": "MSTORE"
										},
										{
											"begin": 3421,
											"end": 3447,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3421,
											"end": 3447,
											"name": "ADD"
										},
										{
											"begin": 3421,
											"end": 3447,
											"name": "DUP4"
										},
										{
											"begin": 3421,
											"end": 3447,
											"name": "DUP2"
										},
										{
											"begin": 3421,
											"end": 3447,
											"name": "MSTORE"
										},
										{
											"begin": 3421,
											"end": 3447,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3421,
											"end": 3447,
											"name": "ADD"
										},
										{
											"begin": 3421,
											"end": 3447,
											"name": "DUP3"
										},
										{
											"begin": 3421,
											"end": 3447,
											"name": "DUP2"
										},
										{
											"begin": 3421,
											"end": 3447,
											"name": "MSTORE"
										},
										{
											"begin": 3421,
											"end": 3447,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3421,
											"end": 3447,
											"name": "ADD"
										},
										{
											"begin": 3421,
											"end": 3447,
											"name": "SWAP5"
										},
										{
											"begin": 3421,
											"end": 3447,
											"name": "POP"
										},
										{
											"begin": 3421,
											"end": 3447,
											"name": "POP"
										},
										{
											"begin": 3421,
											"end": 3447,
											"name": "POP"
										},
										{
											"begin": 3421,
											"end": 3447,
											"name": "POP"
										},
										{
											"begin": 3421,
											"end": 3447,
											"name": "POP"
										},
										{
											"begin": 3421,
											"end": 3447,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3421,
											"end": 3447,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3421,
											"end": 3447,
											"name": "MLOAD"
										},
										{
											"begin": 3421,
											"end": 3447,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3421,
											"end": 3447,
											"name": "DUP2"
										},
										{
											"begin": 3421,
											"end": 3447,
											"name": "SUB"
										},
										{
											"begin": 3421,
											"end": 3447,
											"name": "SWAP1"
										},
										{
											"begin": 3421,
											"end": 3447,
											"name": "DUP1"
										},
										{
											"begin": 3421,
											"end": 3447,
											"name": "DUP5"
										},
										{
											"begin": 3421,
											"end": 3447,
											"name": "SUB"
										},
										{
											"begin": 3421,
											"end": 3447,
											"name": "SWAP1"
										},
										{
											"begin": 3421,
											"end": 3447,
											"name": "DUP6"
										},
										{
											"begin": 3421,
											"end": 3447,
											"name": "GAS"
										},
										{
											"begin": 3421,
											"end": 3447,
											"name": "STATICCALL"
										},
										{
											"begin": 3421,
											"end": 3447,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "72"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "72"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 3421,
											"end": 3447,
											"name": "POP"
										},
										{
											"begin": 3421,
											"end": 3447,
											"name": "POP"
										},
										{
											"begin": 3421,
											"end": 3447,
											"name": "POP"
										},
										{
											"begin": 3421,
											"end": 3447,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3421,
											"end": 3447,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3421,
											"end": 3447,
											"name": "MLOAD"
										},
										{
											"begin": 3421,
											"end": 3447,
											"name": "SUB"
										},
										{
											"begin": 3421,
											"end": 3447,
											"name": "MLOAD"
										},
										{
											"begin": 3394,
											"end": 3447,
											"name": "SWAP1"
										},
										{
											"begin": 3394,
											"end": 3447,
											"name": "POP"
										},
										{
											"begin": 3494,
											"end": 3495,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3466,
											"end": 3496,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3466,
											"end": 3496,
											"name": "AND"
										},
										{
											"begin": 3466,
											"end": 3482,
											"name": "DUP2"
										},
										{
											"begin": 3466,
											"end": 3496,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3466,
											"end": 3496,
											"name": "AND"
										},
										{
											"begin": 3466,
											"end": 3496,
											"name": "EQ"
										},
										{
											"begin": 3466,
											"end": 3496,
											"name": "ISZERO"
										},
										{
											"begin": 3466,
											"end": 3525,
											"name": "DUP1"
										},
										{
											"begin": 3466,
											"end": 3525,
											"name": "ISZERO"
										},
										{
											"begin": 3466,
											"end": 3525,
											"name": "PUSH [tag]",
											"value": "73"
										},
										{
											"begin": 3466,
											"end": 3525,
											"name": "JUMPI"
										},
										{
											"begin": 3466,
											"end": 3525,
											"name": "POP"
										},
										{
											"begin": 3520,
											"end": 3525,
											"name": "DUP9"
										},
										{
											"begin": 3500,
											"end": 3525,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3500,
											"end": 3525,
											"name": "AND"
										},
										{
											"begin": 3500,
											"end": 3516,
											"name": "DUP2"
										},
										{
											"begin": 3500,
											"end": 3525,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3500,
											"end": 3525,
											"name": "AND"
										},
										{
											"begin": 3500,
											"end": 3525,
											"name": "EQ"
										},
										{
											"begin": 3466,
											"end": 3525,
											"name": "tag",
											"value": "73"
										},
										{
											"begin": 3466,
											"end": 3525,
											"name": "JUMPDEST"
										},
										{
											"begin": 3458,
											"end": 3558,
											"name": "PUSH [tag]",
											"value": "74"
										},
										{
											"begin": 3458,
											"end": 3558,
											"name": "JUMPI"
										},
										{
											"begin": 3458,
											"end": 3558,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3458,
											"end": 3558,
											"name": "MLOAD"
										},
										{
											"begin": 3458,
											"end": 3558,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3458,
											"end": 3558,
											"name": "DUP2"
										},
										{
											"begin": 3458,
											"end": 3558,
											"name": "MSTORE"
										},
										{
											"begin": 3458,
											"end": 3558,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3458,
											"end": 3558,
											"name": "ADD"
										},
										{
											"begin": 3458,
											"end": 3558,
											"name": "DUP1"
										},
										{
											"begin": 3458,
											"end": 3558,
											"name": "DUP1"
										},
										{
											"begin": 3458,
											"end": 3558,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3458,
											"end": 3558,
											"name": "ADD"
										},
										{
											"begin": 3458,
											"end": 3558,
											"name": "DUP3"
										},
										{
											"begin": 3458,
											"end": 3558,
											"name": "DUP2"
										},
										{
											"begin": 3458,
											"end": 3558,
											"name": "SUB"
										},
										{
											"begin": 3458,
											"end": 3558,
											"name": "DUP3"
										},
										{
											"begin": 3458,
											"end": 3558,
											"name": "MSTORE"
										},
										{
											"begin": 3458,
											"end": 3558,
											"name": "PUSH",
											"value": "1C"
										},
										{
											"begin": 3458,
											"end": 3558,
											"name": "DUP2"
										},
										{
											"begin": 3458,
											"end": 3558,
											"name": "MSTORE"
										},
										{
											"begin": 3458,
											"end": 3558,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3458,
											"end": 3558,
											"name": "ADD"
										},
										{
											"begin": 3458,
											"end": 3558,
											"name": "DUP1"
										},
										{
											"begin": 3458,
											"end": 3558,
											"name": "PUSH",
											"value": "556E697377617056323A20494E56414C49445F5349474E415455524500000000"
										},
										{
											"begin": 3458,
											"end": 3558,
											"name": "DUP2"
										},
										{
											"begin": 3458,
											"end": 3558,
											"name": "MSTORE"
										},
										{
											"begin": 3458,
											"end": 3558,
											"name": "POP"
										},
										{
											"begin": 3458,
											"end": 3558,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3458,
											"end": 3558,
											"name": "ADD"
										},
										{
											"begin": 3458,
											"end": 3558,
											"name": "SWAP2"
										},
										{
											"begin": 3458,
											"end": 3558,
											"name": "POP"
										},
										{
											"begin": 3458,
											"end": 3558,
											"name": "POP"
										},
										{
											"begin": 3458,
											"end": 3558,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3458,
											"end": 3558,
											"name": "MLOAD"
										},
										{
											"begin": 3458,
											"end": 3558,
											"name": "DUP1"
										},
										{
											"begin": 3458,
											"end": 3558,
											"name": "SWAP2"
										},
										{
											"begin": 3458,
											"end": 3558,
											"name": "SUB"
										},
										{
											"begin": 3458,
											"end": 3558,
											"name": "SWAP1"
										},
										{
											"begin": 3458,
											"end": 3558,
											"name": "REVERT"
										},
										{
											"begin": 3458,
											"end": 3558,
											"name": "tag",
											"value": "74"
										},
										{
											"begin": 3458,
											"end": 3558,
											"name": "JUMPDEST"
										},
										{
											"begin": 3569,
											"end": 3600,
											"name": "PUSH [tag]",
											"value": "75"
										},
										{
											"begin": 3578,
											"end": 3583,
											"name": "DUP10"
										},
										{
											"begin": 3585,
											"end": 3592,
											"name": "DUP10"
										},
										{
											"begin": 3594,
											"end": 3599,
											"name": "DUP10"
										},
										{
											"begin": 3569,
											"end": 3577,
											"name": "PUSH [tag]",
											"value": "61"
										},
										{
											"begin": 3569,
											"end": 3600,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3569,
											"end": 3600,
											"name": "tag",
											"value": "75"
										},
										{
											"begin": 3569,
											"end": 3600,
											"name": "JUMPDEST"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "POP"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "POP"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "POP"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "POP"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "POP"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "POP"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "POP"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "POP"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "POP"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 395,
											"end": 456,
											"name": "tag",
											"value": "58"
										},
										{
											"begin": 395,
											"end": 456,
											"name": "JUMPDEST"
										},
										{
											"begin": 395,
											"end": 456,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 395,
											"end": 456,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 395,
											"end": 456,
											"name": "MSTORE"
										},
										{
											"begin": 395,
											"end": 456,
											"name": "DUP2"
										},
										{
											"begin": 395,
											"end": 456,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 395,
											"end": 456,
											"name": "MSTORE"
										},
										{
											"begin": 395,
											"end": 456,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 395,
											"end": 456,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 395,
											"end": 456,
											"name": "KECCAK256"
										},
										{
											"begin": 395,
											"end": 456,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 395,
											"end": 456,
											"name": "MSTORE"
										},
										{
											"begin": 395,
											"end": 456,
											"name": "DUP1"
										},
										{
											"begin": 395,
											"end": 456,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 395,
											"end": 456,
											"name": "MSTORE"
										},
										{
											"begin": 395,
											"end": 456,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 395,
											"end": 456,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 395,
											"end": 456,
											"name": "KECCAK256"
										},
										{
											"begin": 395,
											"end": 456,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 395,
											"end": 456,
											"name": "SWAP2"
										},
										{
											"begin": 395,
											"end": 456,
											"name": "POP"
										},
										{
											"begin": 395,
											"end": 456,
											"name": "SWAP2"
										},
										{
											"begin": 395,
											"end": 456,
											"name": "POP"
										},
										{
											"begin": 395,
											"end": 456,
											"name": "POP"
										},
										{
											"begin": 395,
											"end": 456,
											"name": "SLOAD"
										},
										{
											"begin": 395,
											"end": 456,
											"name": "DUP2"
										},
										{
											"begin": 395,
											"end": 456,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1820,
											"end": 1989,
											"name": "tag",
											"value": "61"
										},
										{
											"begin": 1820,
											"end": 1989,
											"name": "JUMPDEST"
										},
										{
											"begin": 1929,
											"end": 1934,
											"name": "DUP1"
										},
										{
											"begin": 1901,
											"end": 1910,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1901,
											"end": 1917,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1911,
											"end": 1916,
											"name": "DUP6"
										},
										{
											"begin": 1901,
											"end": 1917,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1901,
											"end": 1917,
											"name": "AND"
										},
										{
											"begin": 1901,
											"end": 1917,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1901,
											"end": 1917,
											"name": "AND"
										},
										{
											"begin": 1901,
											"end": 1917,
											"name": "DUP2"
										},
										{
											"begin": 1901,
											"end": 1917,
											"name": "MSTORE"
										},
										{
											"begin": 1901,
											"end": 1917,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1901,
											"end": 1917,
											"name": "ADD"
										},
										{
											"begin": 1901,
											"end": 1917,
											"name": "SWAP1"
										},
										{
											"begin": 1901,
											"end": 1917,
											"name": "DUP2"
										},
										{
											"begin": 1901,
											"end": 1917,
											"name": "MSTORE"
										},
										{
											"begin": 1901,
											"end": 1917,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1901,
											"end": 1917,
											"name": "ADD"
										},
										{
											"begin": 1901,
											"end": 1917,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1901,
											"end": 1917,
											"name": "KECCAK256"
										},
										{
											"begin": 1901,
											"end": 1926,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1918,
											"end": 1925,
											"name": "DUP5"
										},
										{
											"begin": 1901,
											"end": 1926,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1901,
											"end": 1926,
											"name": "AND"
										},
										{
											"begin": 1901,
											"end": 1926,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1901,
											"end": 1926,
											"name": "AND"
										},
										{
											"begin": 1901,
											"end": 1926,
											"name": "DUP2"
										},
										{
											"begin": 1901,
											"end": 1926,
											"name": "MSTORE"
										},
										{
											"begin": 1901,
											"end": 1926,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1901,
											"end": 1926,
											"name": "ADD"
										},
										{
											"begin": 1901,
											"end": 1926,
											"name": "SWAP1"
										},
										{
											"begin": 1901,
											"end": 1926,
											"name": "DUP2"
										},
										{
											"begin": 1901,
											"end": 1926,
											"name": "MSTORE"
										},
										{
											"begin": 1901,
											"end": 1926,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1901,
											"end": 1926,
											"name": "ADD"
										},
										{
											"begin": 1901,
											"end": 1926,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1901,
											"end": 1926,
											"name": "KECCAK256"
										},
										{
											"begin": 1901,
											"end": 1934,
											"name": "DUP2"
										},
										{
											"begin": 1901,
											"end": 1934,
											"name": "SWAP1"
										},
										{
											"begin": 1901,
											"end": 1934,
											"name": "SSTORE"
										},
										{
											"begin": 1901,
											"end": 1934,
											"name": "POP"
										},
										{
											"begin": 1966,
											"end": 1973,
											"name": "DUP2"
										},
										{
											"begin": 1950,
											"end": 1981,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1950,
											"end": 1981,
											"name": "AND"
										},
										{
											"begin": 1959,
											"end": 1964,
											"name": "DUP4"
										},
										{
											"begin": 1950,
											"end": 1981,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1950,
											"end": 1981,
											"name": "AND"
										},
										{
											"begin": 1950,
											"end": 1981,
											"name": "PUSH",
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 1975,
											"end": 1980,
											"name": "DUP4"
										},
										{
											"begin": 1950,
											"end": 1981,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1950,
											"end": 1981,
											"name": "MLOAD"
										},
										{
											"begin": 1950,
											"end": 1981,
											"name": "DUP1"
										},
										{
											"begin": 1950,
											"end": 1981,
											"name": "DUP3"
										},
										{
											"begin": 1950,
											"end": 1981,
											"name": "DUP2"
										},
										{
											"begin": 1950,
											"end": 1981,
											"name": "MSTORE"
										},
										{
											"begin": 1950,
											"end": 1981,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1950,
											"end": 1981,
											"name": "ADD"
										},
										{
											"begin": 1950,
											"end": 1981,
											"name": "SWAP2"
										},
										{
											"begin": 1950,
											"end": 1981,
											"name": "POP"
										},
										{
											"begin": 1950,
											"end": 1981,
											"name": "POP"
										},
										{
											"begin": 1950,
											"end": 1981,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1950,
											"end": 1981,
											"name": "MLOAD"
										},
										{
											"begin": 1950,
											"end": 1981,
											"name": "DUP1"
										},
										{
											"begin": 1950,
											"end": 1981,
											"name": "SWAP2"
										},
										{
											"begin": 1950,
											"end": 1981,
											"name": "SUB"
										},
										{
											"begin": 1950,
											"end": 1981,
											"name": "SWAP1"
										},
										{
											"begin": 1950,
											"end": 1981,
											"name": "LOG3"
										},
										{
											"begin": 1820,
											"end": 1989,
											"name": "POP"
										},
										{
											"begin": 1820,
											"end": 1989,
											"name": "POP"
										},
										{
											"begin": 1820,
											"end": 1989,
											"name": "POP"
										},
										{
											"begin": 1820,
											"end": 1989,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 296,
											"end": 425,
											"name": "tag",
											"value": "65"
										},
										{
											"begin": 296,
											"end": 425,
											"name": "JUMPDEST"
										},
										{
											"begin": 348,
											"end": 354,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 390,
											"end": 391,
											"name": "DUP3"
										},
										{
											"begin": 384,
											"end": 385,
											"name": "DUP3"
										},
										{
											"begin": 380,
											"end": 381,
											"name": "DUP5"
										},
										{
											"begin": 380,
											"end": 385,
											"name": "SUB"
										},
										{
											"begin": 376,
											"end": 385,
											"name": "SWAP2"
										},
										{
											"begin": 376,
											"end": 385,
											"name": "POP"
										},
										{
											"begin": 376,
											"end": 385,
											"name": "DUP2"
										},
										{
											"begin": 375,
											"end": 391,
											"name": "GT"
										},
										{
											"begin": 375,
											"end": 391,
											"name": "ISZERO"
										},
										{
											"begin": 367,
											"end": 417,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 367,
											"end": 417,
											"name": "JUMPI"
										},
										{
											"begin": 367,
											"end": 417,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 367,
											"end": 417,
											"name": "MLOAD"
										},
										{
											"begin": 367,
											"end": 417,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 367,
											"end": 417,
											"name": "DUP2"
										},
										{
											"begin": 367,
											"end": 417,
											"name": "MSTORE"
										},
										{
											"begin": 367,
											"end": 417,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 367,
											"end": 417,
											"name": "ADD"
										},
										{
											"begin": 367,
											"end": 417,
											"name": "DUP1"
										},
										{
											"begin": 367,
											"end": 417,
											"name": "DUP1"
										},
										{
											"begin": 367,
											"end": 417,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 367,
											"end": 417,
											"name": "ADD"
										},
										{
											"begin": 367,
											"end": 417,
											"name": "DUP3"
										},
										{
											"begin": 367,
											"end": 417,
											"name": "DUP2"
										},
										{
											"begin": 367,
											"end": 417,
											"name": "SUB"
										},
										{
											"begin": 367,
											"end": 417,
											"name": "DUP3"
										},
										{
											"begin": 367,
											"end": 417,
											"name": "MSTORE"
										},
										{
											"begin": 367,
											"end": 417,
											"name": "PUSH",
											"value": "15"
										},
										{
											"begin": 367,
											"end": 417,
											"name": "DUP2"
										},
										{
											"begin": 367,
											"end": 417,
											"name": "MSTORE"
										},
										{
											"begin": 367,
											"end": 417,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 367,
											"end": 417,
											"name": "ADD"
										},
										{
											"begin": 367,
											"end": 417,
											"name": "DUP1"
										},
										{
											"begin": 367,
											"end": 417,
											"name": "PUSH",
											"value": "64732D6D6174682D7375622D756E646572666C6F770000000000000000000000"
										},
										{
											"begin": 367,
											"end": 417,
											"name": "DUP2"
										},
										{
											"begin": 367,
											"end": 417,
											"name": "MSTORE"
										},
										{
											"begin": 367,
											"end": 417,
											"name": "POP"
										},
										{
											"begin": 367,
											"end": 417,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 367,
											"end": 417,
											"name": "ADD"
										},
										{
											"begin": 367,
											"end": 417,
											"name": "SWAP2"
										},
										{
											"begin": 367,
											"end": 417,
											"name": "POP"
										},
										{
											"begin": 367,
											"end": 417,
											"name": "POP"
										},
										{
											"begin": 367,
											"end": 417,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 367,
											"end": 417,
											"name": "MLOAD"
										},
										{
											"begin": 367,
											"end": 417,
											"name": "DUP1"
										},
										{
											"begin": 367,
											"end": 417,
											"name": "SWAP2"
										},
										{
											"begin": 367,
											"end": 417,
											"name": "SUB"
										},
										{
											"begin": 367,
											"end": 417,
											"name": "SWAP1"
										},
										{
											"begin": 367,
											"end": 417,
											"name": "REVERT"
										},
										{
											"begin": 367,
											"end": 417,
											"name": "tag",
											"value": "78"
										},
										{
											"begin": 367,
											"end": 417,
											"name": "JUMPDEST"
										},
										{
											"begin": 296,
											"end": 425,
											"name": "SWAP3"
										},
										{
											"begin": 296,
											"end": 425,
											"name": "SWAP2"
										},
										{
											"begin": 296,
											"end": 425,
											"name": "POP"
										},
										{
											"begin": 296,
											"end": 425,
											"name": "POP"
										},
										{
											"begin": 296,
											"end": 425,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1997,
											"end": 2217,
											"name": "tag",
											"value": "67"
										},
										{
											"begin": 1997,
											"end": 2217,
											"name": "JUMPDEST"
										},
										{
											"begin": 2091,
											"end": 2117,
											"name": "PUSH [tag]",
											"value": "80"
										},
										{
											"begin": 2111,
											"end": 2116,
											"name": "DUP2"
										},
										{
											"begin": 2091,
											"end": 2100,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2091,
											"end": 2106,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2101,
											"end": 2105,
											"name": "DUP7"
										},
										{
											"begin": 2091,
											"end": 2106,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2091,
											"end": 2106,
											"name": "AND"
										},
										{
											"begin": 2091,
											"end": 2106,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2091,
											"end": 2106,
											"name": "AND"
										},
										{
											"begin": 2091,
											"end": 2106,
											"name": "DUP2"
										},
										{
											"begin": 2091,
											"end": 2106,
											"name": "MSTORE"
										},
										{
											"begin": 2091,
											"end": 2106,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2091,
											"end": 2106,
											"name": "ADD"
										},
										{
											"begin": 2091,
											"end": 2106,
											"name": "SWAP1"
										},
										{
											"begin": 2091,
											"end": 2106,
											"name": "DUP2"
										},
										{
											"begin": 2091,
											"end": 2106,
											"name": "MSTORE"
										},
										{
											"begin": 2091,
											"end": 2106,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2091,
											"end": 2106,
											"name": "ADD"
										},
										{
											"begin": 2091,
											"end": 2106,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2091,
											"end": 2106,
											"name": "KECCAK256"
										},
										{
											"begin": 2091,
											"end": 2106,
											"name": "SLOAD"
										},
										{
											"begin": 2091,
											"end": 2110,
											"name": "PUSH [tag]",
											"value": "65"
										},
										{
											"begin": 2091,
											"end": 2110,
											"name": "SWAP1"
										},
										{
											"begin": 2091,
											"end": 2117,
											"name": "SWAP2"
										},
										{
											"begin": 2091,
											"end": 2117,
											"name": "SWAP1"
										},
										{
											"begin": 2091,
											"end": 2117,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 2091,
											"end": 2117,
											"name": "AND"
										},
										{
											"begin": 2091,
											"end": 2117,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2091,
											"end": 2117,
											"name": "tag",
											"value": "80"
										},
										{
											"begin": 2091,
											"end": 2117,
											"name": "JUMPDEST"
										},
										{
											"begin": 2073,
											"end": 2082,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2073,
											"end": 2088,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2083,
											"end": 2087,
											"name": "DUP6"
										},
										{
											"begin": 2073,
											"end": 2088,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2073,
											"end": 2088,
											"name": "AND"
										},
										{
											"begin": 2073,
											"end": 2088,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2073,
											"end": 2088,
											"name": "AND"
										},
										{
											"begin": 2073,
											"end": 2088,
											"name": "DUP2"
										},
										{
											"begin": 2073,
											"end": 2088,
											"name": "MSTORE"
										},
										{
											"begin": 2073,
											"end": 2088,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2073,
											"end": 2088,
											"name": "ADD"
										},
										{
											"begin": 2073,
											"end": 2088,
											"name": "SWAP1"
										},
										{
											"begin": 2073,
											"end": 2088,
											"name": "DUP2"
										},
										{
											"begin": 2073,
											"end": 2088,
											"name": "MSTORE"
										},
										{
											"begin": 2073,
											"end": 2088,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2073,
											"end": 2088,
											"name": "ADD"
										},
										{
											"begin": 2073,
											"end": 2088,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2073,
											"end": 2088,
											"name": "KECCAK256"
										},
										{
											"begin": 2073,
											"end": 2117,
											"name": "DUP2"
										},
										{
											"begin": 2073,
											"end": 2117,
											"name": "SWAP1"
										},
										{
											"begin": 2073,
											"end": 2117,
											"name": "SSTORE"
										},
										{
											"begin": 2073,
											"end": 2117,
											"name": "POP"
										},
										{
											"begin": 2144,
											"end": 2168,
											"name": "PUSH [tag]",
											"value": "81"
										},
										{
											"begin": 2162,
											"end": 2167,
											"name": "DUP2"
										},
										{
											"begin": 2144,
											"end": 2153,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2144,
											"end": 2157,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2154,
											"end": 2156,
											"name": "DUP6"
										},
										{
											"begin": 2144,
											"end": 2157,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2144,
											"end": 2157,
											"name": "AND"
										},
										{
											"begin": 2144,
											"end": 2157,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2144,
											"end": 2157,
											"name": "AND"
										},
										{
											"begin": 2144,
											"end": 2157,
											"name": "DUP2"
										},
										{
											"begin": 2144,
											"end": 2157,
											"name": "MSTORE"
										},
										{
											"begin": 2144,
											"end": 2157,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2157,
											"name": "ADD"
										},
										{
											"begin": 2144,
											"end": 2157,
											"name": "SWAP1"
										},
										{
											"begin": 2144,
											"end": 2157,
											"name": "DUP2"
										},
										{
											"begin": 2144,
											"end": 2157,
											"name": "MSTORE"
										},
										{
											"begin": 2144,
											"end": 2157,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2157,
											"name": "ADD"
										},
										{
											"begin": 2144,
											"end": 2157,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2157,
											"name": "KECCAK256"
										},
										{
											"begin": 2144,
											"end": 2157,
											"name": "SLOAD"
										},
										{
											"begin": 2144,
											"end": 2161,
											"name": "PUSH [tag]",
											"value": "82"
										},
										{
											"begin": 2144,
											"end": 2161,
											"name": "SWAP1"
										},
										{
											"begin": 2144,
											"end": 2168,
											"name": "SWAP2"
										},
										{
											"begin": 2144,
											"end": 2168,
											"name": "SWAP1"
										},
										{
											"begin": 2144,
											"end": 2168,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 2144,
											"end": 2168,
											"name": "AND"
										},
										{
											"begin": 2144,
											"end": 2168,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2144,
											"end": 2168,
											"name": "tag",
											"value": "81"
										},
										{
											"begin": 2144,
											"end": 2168,
											"name": "JUMPDEST"
										},
										{
											"begin": 2128,
											"end": 2137,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2128,
											"end": 2141,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2138,
											"end": 2140,
											"name": "DUP5"
										},
										{
											"begin": 2128,
											"end": 2141,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2128,
											"end": 2141,
											"name": "AND"
										},
										{
											"begin": 2128,
											"end": 2141,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2128,
											"end": 2141,
											"name": "AND"
										},
										{
											"begin": 2128,
											"end": 2141,
											"name": "DUP2"
										},
										{
											"begin": 2128,
											"end": 2141,
											"name": "MSTORE"
										},
										{
											"begin": 2128,
											"end": 2141,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2128,
											"end": 2141,
											"name": "ADD"
										},
										{
											"begin": 2128,
											"end": 2141,
											"name": "SWAP1"
										},
										{
											"begin": 2128,
											"end": 2141,
											"name": "DUP2"
										},
										{
											"begin": 2128,
											"end": 2141,
											"name": "MSTORE"
										},
										{
											"begin": 2128,
											"end": 2141,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2128,
											"end": 2141,
											"name": "ADD"
										},
										{
											"begin": 2128,
											"end": 2141,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2128,
											"end": 2141,
											"name": "KECCAK256"
										},
										{
											"begin": 2128,
											"end": 2168,
											"name": "DUP2"
										},
										{
											"begin": 2128,
											"end": 2168,
											"name": "SWAP1"
										},
										{
											"begin": 2128,
											"end": 2168,
											"name": "SSTORE"
										},
										{
											"begin": 2128,
											"end": 2168,
											"name": "POP"
										},
										{
											"begin": 2199,
											"end": 2201,
											"name": "DUP2"
										},
										{
											"begin": 2184,
											"end": 2209,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2184,
											"end": 2209,
											"name": "AND"
										},
										{
											"begin": 2193,
											"end": 2197,
											"name": "DUP4"
										},
										{
											"begin": 2184,
											"end": 2209,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2184,
											"end": 2209,
											"name": "AND"
										},
										{
											"begin": 2184,
											"end": 2209,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 2203,
											"end": 2208,
											"name": "DUP4"
										},
										{
											"begin": 2184,
											"end": 2209,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2184,
											"end": 2209,
											"name": "MLOAD"
										},
										{
											"begin": 2184,
											"end": 2209,
											"name": "DUP1"
										},
										{
											"begin": 2184,
											"end": 2209,
											"name": "DUP3"
										},
										{
											"begin": 2184,
											"end": 2209,
											"name": "DUP2"
										},
										{
											"begin": 2184,
											"end": 2209,
											"name": "MSTORE"
										},
										{
											"begin": 2184,
											"end": 2209,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2184,
											"end": 2209,
											"name": "ADD"
										},
										{
											"begin": 2184,
											"end": 2209,
											"name": "SWAP2"
										},
										{
											"begin": 2184,
											"end": 2209,
											"name": "POP"
										},
										{
											"begin": 2184,
											"end": 2209,
											"name": "POP"
										},
										{
											"begin": 2184,
											"end": 2209,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2184,
											"end": 2209,
											"name": "MLOAD"
										},
										{
											"begin": 2184,
											"end": 2209,
											"name": "DUP1"
										},
										{
											"begin": 2184,
											"end": 2209,
											"name": "SWAP2"
										},
										{
											"begin": 2184,
											"end": 2209,
											"name": "SUB"
										},
										{
											"begin": 2184,
											"end": 2209,
											"name": "SWAP1"
										},
										{
											"begin": 2184,
											"end": 2209,
											"name": "LOG3"
										},
										{
											"begin": 1997,
											"end": 2217,
											"name": "POP"
										},
										{
											"begin": 1997,
											"end": 2217,
											"name": "POP"
										},
										{
											"begin": 1997,
											"end": 2217,
											"name": "POP"
										},
										{
											"begin": 1997,
											"end": 2217,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 160,
											"end": 288,
											"name": "tag",
											"value": "82"
										},
										{
											"begin": 160,
											"end": 288,
											"name": "JUMPDEST"
										},
										{
											"begin": 212,
											"end": 218,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 254,
											"end": 255,
											"name": "DUP3"
										},
										{
											"begin": 248,
											"end": 249,
											"name": "DUP3"
										},
										{
											"begin": 244,
											"end": 245,
											"name": "DUP5"
										},
										{
											"begin": 244,
											"end": 249,
											"name": "ADD"
										},
										{
											"begin": 240,
											"end": 249,
											"name": "SWAP2"
										},
										{
											"begin": 240,
											"end": 249,
											"name": "POP"
										},
										{
											"begin": 240,
											"end": 249,
											"name": "DUP2"
										},
										{
											"begin": 239,
											"end": 255,
											"name": "LT"
										},
										{
											"begin": 239,
											"end": 255,
											"name": "ISZERO"
										},
										{
											"begin": 231,
											"end": 280,
											"name": "PUSH [tag]",
											"value": "84"
										},
										{
											"begin": 231,
											"end": 280,
											"name": "JUMPI"
										},
										{
											"begin": 231,
											"end": 280,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 231,
											"end": 280,
											"name": "MLOAD"
										},
										{
											"begin": 231,
											"end": 280,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 231,
											"end": 280,
											"name": "DUP2"
										},
										{
											"begin": 231,
											"end": 280,
											"name": "MSTORE"
										},
										{
											"begin": 231,
											"end": 280,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 231,
											"end": 280,
											"name": "ADD"
										},
										{
											"begin": 231,
											"end": 280,
											"name": "DUP1"
										},
										{
											"begin": 231,
											"end": 280,
											"name": "DUP1"
										},
										{
											"begin": 231,
											"end": 280,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 231,
											"end": 280,
											"name": "ADD"
										},
										{
											"begin": 231,
											"end": 280,
											"name": "DUP3"
										},
										{
											"begin": 231,
											"end": 280,
											"name": "DUP2"
										},
										{
											"begin": 231,
											"end": 280,
											"name": "SUB"
										},
										{
											"begin": 231,
											"end": 280,
											"name": "DUP3"
										},
										{
											"begin": 231,
											"end": 280,
											"name": "MSTORE"
										},
										{
											"begin": 231,
											"end": 280,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 231,
											"end": 280,
											"name": "DUP2"
										},
										{
											"begin": 231,
											"end": 280,
											"name": "MSTORE"
										},
										{
											"begin": 231,
											"end": 280,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 231,
											"end": 280,
											"name": "ADD"
										},
										{
											"begin": 231,
											"end": 280,
											"name": "DUP1"
										},
										{
											"begin": 231,
											"end": 280,
											"name": "PUSH",
											"value": "64732D6D6174682D6164642D6F766572666C6F77000000000000000000000000"
										},
										{
											"begin": 231,
											"end": 280,
											"name": "DUP2"
										},
										{
											"begin": 231,
											"end": 280,
											"name": "MSTORE"
										},
										{
											"begin": 231,
											"end": 280,
											"name": "POP"
										},
										{
											"begin": 231,
											"end": 280,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 231,
											"end": 280,
											"name": "ADD"
										},
										{
											"begin": 231,
											"end": 280,
											"name": "SWAP2"
										},
										{
											"begin": 231,
											"end": 280,
											"name": "POP"
										},
										{
											"begin": 231,
											"end": 280,
											"name": "POP"
										},
										{
											"begin": 231,
											"end": 280,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 231,
											"end": 280,
											"name": "MLOAD"
										},
										{
											"begin": 231,
											"end": 280,
											"name": "DUP1"
										},
										{
											"begin": 231,
											"end": 280,
											"name": "SWAP2"
										},
										{
											"begin": 231,
											"end": 280,
											"name": "SUB"
										},
										{
											"begin": 231,
											"end": 280,
											"name": "SWAP1"
										},
										{
											"begin": 231,
											"end": 280,
											"name": "REVERT"
										},
										{
											"begin": 231,
											"end": 280,
											"name": "tag",
											"value": "84"
										},
										{
											"begin": 231,
											"end": 280,
											"name": "JUMPDEST"
										},
										{
											"begin": 160,
											"end": 288,
											"name": "SWAP3"
										},
										{
											"begin": 160,
											"end": 288,
											"name": "SWAP2"
										},
										{
											"begin": 160,
											"end": 288,
											"name": "POP"
										},
										{
											"begin": 160,
											"end": 288,
											"name": "POP"
										},
										{
											"begin": 160,
											"end": 288,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								},
								"8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F": "454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429"
							}
						},
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"PERMIT_TYPEHASH()": "30adf81f",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/TenkERC20.sol\":\"TenkERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/TenkERC20.sol\":{\"keccak256\":\"0x564cc1b68259ffaafc878219f81dd989ab6b7527a44f93b2a98f17f5fdac4aa9\",\"urls\":[\"bzz-raw://2f7ecc32eae641789aa895deea12f5dee0d23591126ed737abd5a3793c8c374e\",\"dweb:/ipfs/QmWEUR7wKh8qL7oz6E1xycTEK4piVbUuzv6vBFB7SGkxVM\"]},\"interfaces/I10kERC20.sol\":{\"keccak256\":\"0xa8c5a9bfdb6371d4c7f37e4958b410ae7ee7978965162843a07865c2d1005456\",\"urls\":[\"bzz-raw://34bc30986cbfe78549b1d3b11a13372d7f5667627966a72bc08065797515c608\",\"dweb:/ipfs/QmeP39jGMV8JSHkz4VnC1xPjC8Pc68wJgBnuJbBBfBMVEY\"]},\"libraries/SafeMath.sol\":{\"keccak256\":\"0x187b45f92784b0471f1007f6fcfa33f97d92c100c3edc7f9b86c2c35a56b6e5d\",\"urls\":[\"bzz-raw://c05bbc97ca818b0657dac8786ed37e0c77537f4c6ec4b7c25940a3b1fcb7ca64\",\"dweb:/ipfs/QmfSvmTfitBonGZ14AVUa794iMNzmfKHLUNbxSekFSvPLU\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 19,
								"contract": "contracts/TenkERC20.sol:TenkERC20",
								"label": "totalSupply",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 23,
								"contract": "contracts/TenkERC20.sol:TenkERC20",
								"label": "balanceOf",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 29,
								"contract": "contracts/TenkERC20.sol:TenkERC20",
								"label": "allowance",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 31,
								"contract": "contracts/TenkERC20.sol:TenkERC20",
								"label": "DOMAIN_SEPARATOR",
								"offset": 0,
								"slot": "3",
								"type": "t_bytes32"
							},
							{
								"astId": 38,
								"contract": "contracts/TenkERC20.sol:TenkERC20",
								"label": "nonces",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"contracts/TenkStablePair.sol": {
				"TenkStablePair": {
					"abi": [
						{
							"inputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "Burn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "DrainWrongToken",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint16",
									"name": "token0FeePercent",
									"type": "uint16"
								},
								{
									"indexed": false,
									"internalType": "uint16",
									"name": "token1FeePercent",
									"type": "uint16"
								}
							],
							"name": "FeePercentUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Mint",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "SetPairTypeImmutable",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "bool",
									"name": "prevStableSwap",
									"type": "bool"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "stableSwap",
									"type": "bool"
								}
							],
							"name": "SetStableSwap",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "Skim",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0In",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1In",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0Out",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1Out",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "Swap",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint112",
									"name": "reserve0",
									"type": "uint112"
								},
								{
									"indexed": false,
									"internalType": "uint112",
									"name": "reserve1",
									"type": "uint112"
								}
							],
							"name": "Sync",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "FEE_DENOMINATOR",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "MAX_FEE_PERCENT",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "MINIMUM_LIQUIDITY",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "PERMIT_TYPEHASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "burn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "drainWrongToken",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "tokenIn",
									"type": "address"
								}
							],
							"name": "getAmountOut",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "getReserves",
							"outputs": [
								{
									"internalType": "uint112",
									"name": "_reserve0",
									"type": "uint112"
								},
								{
									"internalType": "uint112",
									"name": "_reserve1",
									"type": "uint112"
								},
								{
									"internalType": "uint16",
									"name": "_token0FeePercent",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "_token1FeePercent",
									"type": "uint16"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "_token0",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_token1",
									"type": "address"
								}
							],
							"name": "initialize",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "initialized",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "kLast",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "pairTypeImmutable",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "precisionMultiplier0",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "precisionMultiplier1",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "uint16",
									"name": "newToken0FeePercent",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "newToken1FeePercent",
									"type": "uint16"
								}
							],
							"name": "setFeePercent",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "setPairTypeImmutable",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "bool",
									"name": "stable",
									"type": "bool"
								},
								{
									"internalType": "uint112",
									"name": "expectedReserve0",
									"type": "uint112"
								},
								{
									"internalType": "uint112",
									"name": "expectedReserve1",
									"type": "uint112"
								}
							],
							"name": "setStableSwap",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "skim",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "stableSwap",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount0Out",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1Out",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "swap",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount0Out",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1Out",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"internalType": "address",
									"name": "referrer",
									"type": "address"
								}
							],
							"name": "swap",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "sync",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "token0",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "token0FeePercent",
							"outputs": [
								{
									"internalType": "uint16",
									"name": "",
									"type": "uint16"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "token1",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "token1FeePercent",
							"outputs": [
								{
									"internalType": "uint16",
									"name": "",
									"type": "uint16"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {
							"drainWrongToken(address,address)": {
								"details": "Allow to recover token sent here by mistake   * Can only be called by factory's owner"
							},
							"setFeePercent(uint16,uint16)": {
								"details": "Updates the swap fees percent   * Can only be called by the factory's feeAmountOwner"
							}
						}
					},
					"evm": {
						"assembly": "    /* \"contracts/TenkStablePair.sol\":263:18101  contract TenkStablePair is I10kStablePair, TenkERC20 {\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/TenkStablePair.sol\":942:945  300 */\n  0x012c\n    /* \"contracts/TenkStablePair.sol\":909:945  uint16 public token0FeePercent = 300 */\n  0x08\n  exp(0x0100, 0x1c)\n  dup2\n  sload\n  dup2\n  0xffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/TenkStablePair.sol\":1058:1061  300 */\n  0x012c\n    /* \"contracts/TenkStablePair.sol\":1025:1061  uint16 public token1FeePercent = 300 */\n  0x08\n  exp(0x0100, 0x1e)\n  dup2\n  sload\n  dup2\n  0xffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/TenkStablePair.sol\":1520:1521  1 */\n  0x01\n    /* \"contracts/TenkStablePair.sol\":1496:1521  uint private unlocked = 1 */\n  0x0d\n  sstore\n    /* \"contracts/TenkStablePair.sol\":2825:2879  constructor() public {\r... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"contracts/TenkStablePair.sol\":2825:2879  constructor() public {\r... */\n  pop\n    /* \"contracts/TenkERC20.sol\":960:972  uint chainId */\n  0x00\n    /* \"contracts/TenkERC20.sol\":1018:1025  chainid */\n  chainid\n    /* \"contracts/TenkERC20.sol\":1007:1025  chainId := chainid */\n  swap1\n  pop\n    /* \"contracts/TenkERC20.sol\":1118:1213  keccak256('EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)') */\n  mload(0x40)\n  dup1\n  dup1\n  data_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f\n  0x52\n  swap2\n  codecopy\n  0x52\n  add\n  swap1\n  pop\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  keccak256\n    /* \"contracts/TenkERC20.sol\":1248:1252  name */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0a\n  dup2\n  mstore\n  0x20\n  add\n  0x43616d656c6f74204c5000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"contracts/TenkERC20.sol\":1232:1254  keccak256(bytes(name)) */\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  keccak256\n    /* \"contracts/TenkERC20.sol\":1283:1293  bytes('1') */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x01\n  dup2\n  mstore\n  0x20\n  add\n  0x3100000000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"contracts/TenkERC20.sol\":1273:1294  keccak256(bytes('1')) */\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  keccak256\n    /* \"contracts/TenkERC20.sol\":1313:1320  chainId */\n  dup4\n    /* \"contracts/TenkERC20.sol\":1347:1351  this */\n  address\n    /* \"contracts/TenkERC20.sol\":1089:1367  abi.encode(\r... */\n  add(0x20, mload(0x40))\n  dup1\n  dup7\n  dup2\n  mstore\n  0x20\n  add\n  dup6\n  dup2\n  mstore\n  0x20\n  add\n  dup5\n  dup2\n  mstore\n  0x20\n  add\n  dup4\n  dup2\n  mstore\n  0x20\n  add\n  dup3\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap6\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  mload(0x40)\n    /* \"--CODEGEN--\":49:53   */\n  0x20\n    /* \"--CODEGEN--\":39:46   */\n  dup2\n    /* \"--CODEGEN--\":30:37   */\n  dup4\n    /* \"--CODEGEN--\":26:47   */\n  sub\n    /* \"--CODEGEN--\":22:54   */\n  sub\n    /* \"--CODEGEN--\":13:20   */\n  dup2\n    /* \"--CODEGEN--\":6:55   */\n  mstore\n    /* \"contracts/TenkERC20.sol\":1089:1367  abi.encode(\r... */\n  swap1\n  0x40\n  mstore\n    /* \"contracts/TenkERC20.sol\":1065:1378  keccak256(\r... */\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  keccak256\n    /* \"contracts/TenkERC20.sol\":1046:1062  DOMAIN_SEPARATOR */\n  0x03\n    /* \"contracts/TenkERC20.sol\":1046:1378  DOMAIN_SEPARATOR = keccak256(\r... */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/TenkERC20.sol\":928:1386  constructor() public {\r... */\n  pop\n    /* \"contracts/TenkStablePair.sol\":2863:2873  msg.sender */\n  caller\n    /* \"contracts/TenkStablePair.sol\":2853:2860  factory */\n  0x05\n  0x00\n    /* \"contracts/TenkStablePair.sol\":2853:2873  factory = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/TenkStablePair.sol\":263:18101  contract TenkStablePair is I10kStablePair, TenkERC20 {\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\ndata_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f 454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429\n\nsub_0: assembly {\n        /* \"contracts/TenkStablePair.sol\":263:18101  contract TenkStablePair is I10kStablePair, TenkERC20 {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_1:\n        /* \"contracts/TenkStablePair.sol\":263:18101  contract TenkStablePair is I10kStablePair, TenkERC20 {\r... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x6a627842\n      gt\n      tag_43\n      jumpi\n      dup1\n      0xba9a7a56\n      gt\n      tag_44\n      jumpi\n      dup1\n      0xd73792a9\n      gt\n      tag_45\n      jumpi\n      dup1\n      0xd73792a9\n      eq\n      tag_38\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_39\n      jumpi\n      dup1\n      0xf140a35a\n      eq\n      tag_40\n      jumpi\n      dup1\n      0xf39ac11f\n      eq\n      tag_41\n      jumpi\n      dup1\n      0xfff6cae9\n      eq\n      tag_42\n      jumpi\n      jump(tag_2)\n    tag_45:\n      dup1\n      0xba9a7a56\n      eq\n      tag_33\n      jumpi\n      dup1\n      0xbc25cf77\n      eq\n      tag_34\n      jumpi\n      dup1\n      0xc45a0155\n      eq\n      tag_35\n      jumpi\n      dup1\n      0xd21220a7\n      eq\n      tag_36\n      jumpi\n      dup1\n      0xd505accf\n      eq\n      tag_37\n      jumpi\n      jump(tag_2)\n    tag_44:\n      dup1\n      0x89afcb44\n      gt\n      tag_46\n      jumpi\n      dup1\n      0x89afcb44\n      eq\n      tag_28\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_29\n      jumpi\n      dup1\n      0x9e548b7f\n      eq\n      tag_30\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_31\n      jumpi\n      dup1\n      0xb6200b07\n      eq\n      tag_32\n      jumpi\n      jump(tag_2)\n    tag_46:\n      dup1\n      0x6a627842\n      eq\n      tag_23\n      jumpi\n      dup1\n      0x6e1fdd7f\n      eq\n      tag_24\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_25\n      jumpi\n      dup1\n      0x7464fc3d\n      eq\n      tag_26\n      jumpi\n      dup1\n      0x7ecebe00\n      eq\n      tag_27\n      jumpi\n      jump(tag_2)\n    tag_43:\n      dup1\n      0x3029e5d4\n      gt\n      tag_47\n      jumpi\n      dup1\n      0x3ba17077\n      gt\n      tag_48\n      jumpi\n      dup1\n      0x3ba17077\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x485cc955\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x48e5d260\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x62ecec03\n      eq\n      tag_21\n      jumpi\n      dup1\n      0x67d81740\n      eq\n      tag_22\n      jumpi\n      jump(tag_2)\n    tag_48:\n      dup1\n      0x3029e5d4\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x30adf81f\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x3644e515\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x3b9f1dc0\n      eq\n      tag_17\n      jumpi\n      jump(tag_2)\n    tag_47:\n      dup1\n      0x158ef93e\n      gt\n      tag_49\n      jumpi\n      dup1\n      0x158ef93e\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x288e5d02\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x2fcd1692\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_49:\n      dup1\n      0x022c0d9f\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x0902f1ac\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x0dfe1681\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/TenkStablePair.sol\":9279:9676  function swap(uint amount0Out, uint amount1Out, address to, bytes calldata data) external {\r... */\n    tag_3:\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:16   */\n      0x80\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:17   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_51\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_51:\n        /* \"contracts/TenkStablePair.sol\":9279:9676  function swap(uint amount0Out, uint amount1Out, address to, bytes calldata data) external {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n        /* \"--CODEGEN--\":21:32   */\n      0x0100000000\n        /* \"--CODEGEN--\":8:19   */\n      dup2\n        /* \"--CODEGEN--\":5:33   */\n      gt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_52\n      jumpi\n        /* \"--CODEGEN--\":46:47   */\n      0x00\n        /* \"--CODEGEN--\":43:44   */\n      dup1\n        /* \"--CODEGEN--\":36:48   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_52:\n        /* \"contracts/TenkStablePair.sol\":9279:9676  function swap(uint amount0Out, uint amount1Out, address to, bytes calldata data) external {\r... */\n      dup3\n      add\n        /* \"--CODEGEN--\":35:44   */\n      dup4\n        /* \"--CODEGEN--\":28:32   */\n      0x20\n        /* \"--CODEGEN--\":12:26   */\n      dup3\n        /* \"--CODEGEN--\":8:33   */\n      add\n        /* \"--CODEGEN--\":5:45   */\n      gt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_53\n      jumpi\n        /* \"--CODEGEN--\":58:59   */\n      0x00\n        /* \"--CODEGEN--\":55:56   */\n      dup1\n        /* \"--CODEGEN--\":48:60   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_53:\n        /* \"contracts/TenkStablePair.sol\":9279:9676  function swap(uint amount0Out, uint amount1Out, address to, bytes calldata data) external {\r... */\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap2\n        /* \"--CODEGEN--\":100:109   */\n      dup5\n        /* \"--CODEGEN--\":95:96   */\n      0x01\n        /* \"--CODEGEN--\":81:93   */\n      dup4\n        /* \"--CODEGEN--\":77:97   */\n      mul\n        /* \"--CODEGEN--\":67:75   */\n      dup5\n        /* \"--CODEGEN--\":63:98   */\n      add\n        /* \"--CODEGEN--\":60:110   */\n      gt\n        /* \"--CODEGEN--\":39:50   */\n      0x0100000000\n        /* \"--CODEGEN--\":25:37   */\n      dup4\n        /* \"--CODEGEN--\":22:51   */\n      gt\n        /* \"--CODEGEN--\":11:118   */\n      or\n        /* \"--CODEGEN--\":8:10   */\n      iszero\n      tag_54\n      jumpi\n        /* \"--CODEGEN--\":131:132   */\n      0x00\n        /* \"--CODEGEN--\":128:129   */\n      dup1\n        /* \"--CODEGEN--\":121:133   */\n      revert\n        /* \"--CODEGEN--\":8:10   */\n    tag_54:\n        /* \"contracts/TenkStablePair.sol\":9279:9676  function swap(uint amount0Out, uint amount1Out, address to, bytes calldata data) external {\r... */\n      swap1\n      swap2\n      swap3\n      swap4\n      swap2\n      swap3\n      swap4\n      swap1\n      pop\n      pop\n      pop\n      tag_55\n      jump\t// in\n    tag_50:\n      stop\n        /* \"contracts/TenkERC20.sol\":177:219  string public constant name = 'Camelot LP' */\n    tag_4:\n      tag_56\n      tag_57\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_58:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_60\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_58)\n    tag_60:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"contracts/TenkERC20.sol\":177:219  string public constant name = 'Camelot LP' */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_61\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_61:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/TenkStablePair.sol\":1644:1924  function getReserves() public view returns (uint112 _reserve0, uint112 _reserve1, uint16 _token0FeePercent, uint16 _token1FeePercent) {\r... */\n    tag_5:\n      tag_62\n      tag_63\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      dup1\n      dup6\n      0xffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup5\n      0xffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      0xffff\n      and\n      0xffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      0xffff\n      and\n      0xffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/TenkERC20.sol\":2225:2372  function approve(address spender, uint value) external returns (bool) {\r... */\n    tag_6:\n      tag_64\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_65\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_65:\n        /* \"contracts/TenkERC20.sol\":2225:2372  function approve(address spender, uint value) external returns (bool) {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_66\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/TenkStablePair.sol\":527:548  address public token0 */\n    tag_7:\n      tag_67\n      tag_68\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/TenkStablePair.sol\":581:604  bool public initialized */\n    tag_8:\n      tag_69\n      tag_70\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/TenkERC20.sol\":316:340  uint  public totalSupply */\n    tag_9:\n      tag_71\n      tag_72\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/TenkERC20.sol\":2527:2926  function transferFrom(address from, address to, uint value) external returns (bool) {\r... */\n    tag_10:\n      tag_73\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x60\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_74\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_74:\n        /* \"contracts/TenkERC20.sol\":2527:2926  function transferFrom(address from, address to, uint value) external returns (bool) {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_75\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/TenkStablePair.sol\":1180:1212  uint public precisionMultiplier1 */\n    tag_11:\n      tag_76\n      tag_77\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/TenkStablePair.sol\":1025:1061  uint16 public token1FeePercent = 300 */\n    tag_12:\n      tag_78\n      tag_79\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      dup1\n      dup3\n      0xffff\n      and\n      0xffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/TenkStablePair.sol\":4068:4682  function setStableSwap(bool stable, uint112 expectedReserve0, uint112 expectedReserve1) external lock {\r... */\n    tag_13:\n      tag_80\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x60\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_81\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_81:\n        /* \"contracts/TenkStablePair.sol\":4068:4682  function setStableSwap(bool stable, uint112 expectedReserve0, uint112 expectedReserve1) external lock {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      iszero\n      iszero\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_82\n      jump\t// in\n    tag_80:\n      stop\n        /* \"contracts/TenkERC20.sol\":608:716  bytes32 public constant PERMIT_TYPEHASH = 0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9 */\n    tag_14:\n      tag_83\n      tag_84\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/TenkERC20.sol\":274:309  uint8 public constant decimals = 18 */\n    tag_15:\n      tag_85\n      tag_86\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      dup1\n      dup3\n      0xff\n      and\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/TenkERC20.sol\":465:496  bytes32 public DOMAIN_SEPARATOR */\n    tag_16:\n      tag_87\n      tag_88\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/TenkStablePair.sol\":1143:1175  uint public precisionMultiplier0 */\n    tag_17:\n      tag_89\n      tag_90\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/TenkStablePair.sol\":4688:4960  function setPairTypeImmutable() external lock {\r... */\n    tag_18:\n      tag_91\n      tag_92\n      jump\t// in\n    tag_91:\n      stop\n        /* \"contracts/TenkStablePair.sol\":2940:3316  function initialize(address _token0, address _token1) external {\r... */\n    tag_19:\n      tag_93\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_94\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_94:\n        /* \"contracts/TenkStablePair.sol\":2940:3316  function initialize(address _token0, address _token1) external {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_95\n      jump\t// in\n    tag_93:\n      stop\n        /* \"contracts/TenkStablePair.sol\":3436:4062  function setFeePercent(uint16 newToken0FeePercent, uint16 newToken1FeePercent) external lock {\r... */\n    tag_20:\n      tag_96\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_97\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_97:\n        /* \"contracts/TenkStablePair.sol\":3436:4062  function setFeePercent(uint16 newToken0FeePercent, uint16 newToken1FeePercent) external lock {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_98\n      jump\t// in\n    tag_96:\n      stop\n        /* \"contracts/TenkStablePair.sol\":909:945  uint16 public token0FeePercent = 300 */\n    tag_21:\n      tag_99\n      tag_100\n      jump\t// in\n    tag_99:\n      mload(0x40)\n      dup1\n      dup3\n      0xffff\n      and\n      0xffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/TenkStablePair.sol\":661:704  uint public constant MAX_FEE_PERCENT = 2000 */\n    tag_22:\n      tag_101\n      tag_102\n      jump\t// in\n    tag_101:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/TenkStablePair.sol\":6390:7552  function mint(address to) external lock returns (uint liquidity) {\r... */\n    tag_23:\n      tag_103\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_104\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_104:\n        /* \"contracts/TenkStablePair.sol\":6390:7552  function mint(address to) external lock returns (uint liquidity) {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_105\n      jump\t// in\n    tag_103:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/TenkStablePair.sol\":9784:10197  function swap(uint amount0Out, uint amount1Out, address to, bytes calldata data, address referrer) external {\r... */\n    tag_24:\n      tag_106\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:16   */\n      0xa0\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:17   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_107\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_107:\n        /* \"contracts/TenkStablePair.sol\":9784:10197  function swap(uint amount0Out, uint amount1Out, address to, bytes calldata data, address referrer) external {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n        /* \"--CODEGEN--\":21:32   */\n      0x0100000000\n        /* \"--CODEGEN--\":8:19   */\n      dup2\n        /* \"--CODEGEN--\":5:33   */\n      gt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_108\n      jumpi\n        /* \"--CODEGEN--\":46:47   */\n      0x00\n        /* \"--CODEGEN--\":43:44   */\n      dup1\n        /* \"--CODEGEN--\":36:48   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_108:\n        /* \"contracts/TenkStablePair.sol\":9784:10197  function swap(uint amount0Out, uint amount1Out, address to, bytes calldata data, address referrer) external {\r... */\n      dup3\n      add\n        /* \"--CODEGEN--\":35:44   */\n      dup4\n        /* \"--CODEGEN--\":28:32   */\n      0x20\n        /* \"--CODEGEN--\":12:26   */\n      dup3\n        /* \"--CODEGEN--\":8:33   */\n      add\n        /* \"--CODEGEN--\":5:45   */\n      gt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_109\n      jumpi\n        /* \"--CODEGEN--\":58:59   */\n      0x00\n        /* \"--CODEGEN--\":55:56   */\n      dup1\n        /* \"--CODEGEN--\":48:60   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_109:\n        /* \"contracts/TenkStablePair.sol\":9784:10197  function swap(uint amount0Out, uint amount1Out, address to, bytes calldata data, address referrer) external {\r... */\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap2\n        /* \"--CODEGEN--\":100:109   */\n      dup5\n        /* \"--CODEGEN--\":95:96   */\n      0x01\n        /* \"--CODEGEN--\":81:93   */\n      dup4\n        /* \"--CODEGEN--\":77:97   */\n      mul\n        /* \"--CODEGEN--\":67:75   */\n      dup5\n        /* \"--CODEGEN--\":63:98   */\n      add\n        /* \"--CODEGEN--\":60:110   */\n      gt\n        /* \"--CODEGEN--\":39:50   */\n      0x0100000000\n        /* \"--CODEGEN--\":25:37   */\n      dup4\n        /* \"--CODEGEN--\":22:51   */\n      gt\n        /* \"--CODEGEN--\":11:118   */\n      or\n        /* \"--CODEGEN--\":8:10   */\n      iszero\n      tag_110\n      jumpi\n        /* \"--CODEGEN--\":131:132   */\n      0x00\n        /* \"--CODEGEN--\":128:129   */\n      dup1\n        /* \"--CODEGEN--\":121:133   */\n      revert\n        /* \"--CODEGEN--\":8:10   */\n    tag_110:\n        /* \"contracts/TenkStablePair.sol\":9784:10197  function swap(uint amount0Out, uint amount1Out, address to, bytes calldata data, address referrer) external {\r... */\n      swap1\n      swap2\n      swap3\n      swap4\n      swap2\n      swap3\n      swap4\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_111\n      jump\t// in\n    tag_106:\n      stop\n        /* \"contracts/TenkERC20.sol\":347:388  mapping(address => uint) public balanceOf */\n    tag_25:\n      tag_112\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_113\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_113:\n        /* \"contracts/TenkERC20.sol\":347:388  mapping(address => uint) public balanceOf */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_114\n      jump\t// in\n    tag_112:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/TenkStablePair.sol\":1219:1236  uint public kLast */\n    tag_26:\n      tag_115\n      tag_116\n      jump\t// in\n    tag_115:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/TenkERC20.sol\":723:761  mapping(address => uint) public nonces */\n    tag_27:\n      tag_117\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_118\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_118:\n        /* \"contracts/TenkERC20.sol\":723:761  mapping(address => uint) public nonces */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_119\n      jump\t// in\n    tag_117:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/TenkStablePair.sol\":7660:8965  function burn(address to) external lock returns (uint amount0, uint amount1) {\r... */\n    tag_28:\n      tag_120\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_121\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_121:\n        /* \"contracts/TenkStablePair.sol\":7660:8965  function burn(address to) external lock returns (uint amount0, uint amount1) {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_122\n      jump\t// in\n    tag_120:\n      mload(0x40)\n      dup1\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/TenkERC20.sol\":226:267  string public constant symbol = 'CMLT-LP' */\n    tag_29:\n      tag_123\n      tag_124\n      jump\t// in\n    tag_123:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_125:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_127\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_125)\n    tag_127:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"contracts/TenkERC20.sol\":226:267  string public constant symbol = 'CMLT-LP' */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_128\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_128:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/TenkStablePair.sol\":1323:1345  bool public stableSwap */\n    tag_30:\n      tag_129\n      tag_130\n      jump\t// in\n    tag_129:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/TenkERC20.sol\":2380:2519  function transfer(address to, uint value) external returns (bool) {\r... */\n    tag_31:\n      tag_131\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_132\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_132:\n        /* \"contracts/TenkERC20.sol\":2380:2519  function transfer(address to, uint value) external returns (bool) {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_133\n      jump\t// in\n    tag_131:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/TenkStablePair.sol\":1397:1426  bool public pairTypeImmutable */\n    tag_32:\n      tag_134\n      tag_135\n      jump\t// in\n    tag_134:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/TenkStablePair.sol\":352:400  uint public constant MINIMUM_LIQUIDITY = 10 ** 3 */\n    tag_33:\n      tag_136\n      tag_137\n      jump\t// in\n    tag_136:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/TenkStablePair.sol\":16932:17276  function skim(address to) external lock {\r... */\n    tag_34:\n      tag_138\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_139\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_139:\n        /* \"contracts/TenkStablePair.sol\":16932:17276  function skim(address to) external lock {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_140\n      jump\t// in\n    tag_138:\n      stop\n        /* \"contracts/TenkStablePair.sol\":500:522  address public factory */\n    tag_35:\n      tag_141\n      tag_142\n      jump\t// in\n    tag_141:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/TenkStablePair.sol\":553:574  address public token1 */\n    tag_36:\n      tag_143\n      tag_144\n      jump\t// in\n    tag_143:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/TenkERC20.sol\":2934:3608  function permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external {\r... */\n    tag_37:\n      tag_145\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:16   */\n      0xe0\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:17   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_146\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_146:\n        /* \"contracts/TenkERC20.sol\":2934:3608  function permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_147\n      jump\t// in\n    tag_145:\n      stop\n        /* \"contracts/TenkStablePair.sol\":611:656  uint public constant FEE_DENOMINATOR = 100000 */\n    tag_38:\n      tag_148\n      tag_149\n      jump\t// in\n    tag_148:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/TenkERC20.sol\":395:456  mapping(address => mapping(address => uint)) public allowance */\n    tag_39:\n      tag_150\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_151\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_151:\n        /* \"contracts/TenkERC20.sol\":395:456  mapping(address => mapping(address => uint)) public allowance */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_152\n      jump\t// in\n    tag_150:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/TenkStablePair.sol\":15507:15768  function getAmountOut(uint amountIn, address tokenIn) external view returns (uint) {\r... */\n    tag_40:\n      tag_153\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_154\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_154:\n        /* \"contracts/TenkStablePair.sol\":15507:15768  function getAmountOut(uint amountIn, address tokenIn) external view returns (uint) {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_155\n      jump\t// in\n    tag_153:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/TenkStablePair.sol\":17752:18098  function drainWrongToken(address token, address to) external lock {\r... */\n    tag_41:\n      tag_156\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_157\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_157:\n        /* \"contracts/TenkStablePair.sol\":17752:18098  function drainWrongToken(address token, address to) external lock {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_158\n      jump\t// in\n    tag_156:\n      stop\n        /* \"contracts/TenkStablePair.sol\":17321:17631  function sync() external lock {\r... */\n    tag_42:\n      tag_159\n      tag_160\n      jump\t// in\n    tag_159:\n      stop\n        /* \"contracts/TenkStablePair.sol\":9279:9676  function swap(uint amount0Out, uint amount1Out, address to, bytes calldata data) external {\r... */\n    tag_55:\n        /* \"contracts/TenkStablePair.sol\":9376:9404  TokensData memory tokensData */\n      tag_162\n      tag_163\n      jump\t// in\n    tag_162:\n        /* \"contracts/TenkStablePair.sol\":9407:9624  TokensData({\r... */\n      mload(0x40)\n      dup1\n      0x0100\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/TenkStablePair.sol\":9435:9441  token0 */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TenkStablePair.sol\":9407:9624  TokensData({\r... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/TenkStablePair.sol\":9458:9464  token1 */\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TenkStablePair.sol\":9407:9624  TokensData({\r... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/TenkStablePair.sol\":9485:9495  amount0Out */\n      dup8\n        /* \"contracts/TenkStablePair.sol\":9407:9624  TokensData({\r... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/TenkStablePair.sol\":9516:9526  amount1Out */\n      dup7\n        /* \"contracts/TenkStablePair.sol\":9407:9624  TokensData({\r... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/TenkStablePair.sol\":9545:9546  0 */\n      0x00\n        /* \"contracts/TenkStablePair.sol\":9407:9624  TokensData({\r... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/TenkStablePair.sol\":9565:9566  0 */\n      0x00\n        /* \"contracts/TenkStablePair.sol\":9407:9624  TokensData({\r... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/TenkStablePair.sol\":9590:9591  0 */\n      0x00\n        /* \"contracts/TenkStablePair.sol\":9407:9624  TokensData({\r... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/TenkStablePair.sol\":9615:9616  0 */\n      0x00\n        /* \"contracts/TenkStablePair.sol\":9407:9624  TokensData({\r... */\n      dup2\n      mstore\n      pop\n        /* \"contracts/TenkStablePair.sol\":9376:9624  TokensData memory tokensData = TokensData({\r... */\n      swap1\n      pop\n        /* \"contracts/TenkStablePair.sol\":9631:9670  _swap(tokensData, to, data, address(0)) */\n      tag_164\n        /* \"contracts/TenkStablePair.sol\":9637:9647  tokensData */\n      dup2\n        /* \"contracts/TenkStablePair.sol\":9649:9651  to */\n      dup6\n        /* \"contracts/TenkStablePair.sol\":9653:9657  data */\n      dup6\n      dup6\n        /* \"contracts/TenkStablePair.sol\":9631:9670  _swap(tokensData, to, data, address(0)) */\n      dup1\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n        /* \"--CODEGEN--\":30:33   */\n      dup1\n        /* \"--CODEGEN--\":22:28   */\n      dup3\n        /* \"--CODEGEN--\":14:20   */\n      dup5\n        /* \"--CODEGEN--\":1:34   */\n      calldatacopy\n        /* \"--CODEGEN--\":99:100   */\n      0x00\n        /* \"--CODEGEN--\":93:96   */\n      dup2\n        /* \"--CODEGEN--\":85:91   */\n      dup5\n        /* \"--CODEGEN--\":81:97   */\n      add\n        /* \"--CODEGEN--\":74:101   */\n      mstore\n        /* \"--CODEGEN--\":137:141   */\n      0x1f\n        /* \"--CODEGEN--\":133:142   */\n      not\n        /* \"--CODEGEN--\":126:130   */\n      0x1f\n        /* \"--CODEGEN--\":121:124   */\n      dup3\n        /* \"--CODEGEN--\":117:131   */\n      add\n        /* \"--CODEGEN--\":113:143   */\n      and\n        /* \"--CODEGEN--\":106:143   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":169:172   */\n      dup1\n        /* \"--CODEGEN--\":161:167   */\n      dup4\n        /* \"--CODEGEN--\":157:173   */\n      add\n        /* \"--CODEGEN--\":147:173   */\n      swap3\n      pop\n        /* \"contracts/TenkStablePair.sol\":9631:9670  _swap(tokensData, to, data, address(0)) */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/TenkStablePair.sol\":9667:9668  0 */\n      0x00\n        /* \"contracts/TenkStablePair.sol\":9631:9636  _swap */\n      tag_165\n        /* \"contracts/TenkStablePair.sol\":9631:9670  _swap(tokensData, to, data, address(0)) */\n      jump\t// in\n    tag_164:\n        /* \"contracts/TenkStablePair.sol\":9279:9676  function swap(uint amount0Out, uint amount1Out, address to, bytes calldata data) external {\r... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/TenkERC20.sol\":177:219  string public constant name = 'Camelot LP' */\n    tag_57:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x0a\n      dup2\n      mstore\n      0x20\n      add\n      0x43616d656c6f74204c5000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/TenkStablePair.sol\":1644:1924  function getReserves() public view returns (uint112 _reserve0, uint112 _reserve1, uint16 _token0FeePercent, uint16 _token1FeePercent) {\r... */\n    tag_63:\n        /* \"contracts/TenkStablePair.sol\":1688:1705  uint112 _reserve0 */\n      0x00\n        /* \"contracts/TenkStablePair.sol\":1707:1724  uint112 _reserve1 */\n      dup1\n        /* \"contracts/TenkStablePair.sol\":1726:1750  uint16 _token0FeePercent */\n      0x00\n        /* \"contracts/TenkStablePair.sol\":1752:1776  uint16 _token1FeePercent */\n      dup1\n        /* \"contracts/TenkStablePair.sol\":1797:1805  reserve0 */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TenkStablePair.sol\":1785:1805  _reserve0 = reserve0 */\n      swap4\n      pop\n        /* \"contracts/TenkStablePair.sol\":1824:1832  reserve1 */\n      0x08\n      0x0e\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TenkStablePair.sol\":1812:1832  _reserve1 = reserve1 */\n      swap3\n      pop\n        /* \"contracts/TenkStablePair.sol\":1859:1875  token0FeePercent */\n      0x08\n      0x1c\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffff\n      and\n        /* \"contracts/TenkStablePair.sol\":1839:1875  _token0FeePercent = token0FeePercent */\n      swap2\n      pop\n        /* \"contracts/TenkStablePair.sol\":1902:1918  token1FeePercent */\n      0x08\n      0x1e\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffff\n      and\n        /* \"contracts/TenkStablePair.sol\":1882:1918  _token1FeePercent = token1FeePercent */\n      swap1\n      pop\n        /* \"contracts/TenkStablePair.sol\":1644:1924  function getReserves() public view returns (uint112 _reserve0, uint112 _reserve1, uint16 _token0FeePercent, uint16 _token1FeePercent) {\r... */\n      swap1\n      swap2\n      swap3\n      swap4\n      jump\t// out\n        /* \"contracts/TenkERC20.sol\":2225:2372  function approve(address spender, uint value) external returns (bool) {\r... */\n    tag_66:\n        /* \"contracts/TenkERC20.sol\":2289:2293  bool */\n      0x00\n        /* \"contracts/TenkERC20.sol\":2306:2342  _approve(msg.sender, spender, value) */\n      tag_168\n        /* \"contracts/TenkERC20.sol\":2315:2325  msg.sender */\n      caller\n        /* \"contracts/TenkERC20.sol\":2327:2334  spender */\n      dup5\n        /* \"contracts/TenkERC20.sol\":2336:2341  value */\n      dup5\n        /* \"contracts/TenkERC20.sol\":2306:2314  _approve */\n      tag_169\n        /* \"contracts/TenkERC20.sol\":2306:2342  _approve(msg.sender, spender, value) */\n      jump\t// in\n    tag_168:\n        /* \"contracts/TenkERC20.sol\":2360:2364  true */\n      0x01\n        /* \"contracts/TenkERC20.sol\":2353:2364  return true */\n      swap1\n      pop\n        /* \"contracts/TenkERC20.sol\":2225:2372  function approve(address spender, uint value) external returns (bool) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/TenkStablePair.sol\":527:548  address public token0 */\n    tag_68:\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/TenkStablePair.sol\":581:604  bool public initialized */\n    tag_70:\n      0x07\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/TenkERC20.sol\":316:340  uint  public totalSupply */\n    tag_72:\n      sload(0x00)\n      dup2\n      jump\t// out\n        /* \"contracts/TenkERC20.sol\":2527:2926  function transferFrom(address from, address to, uint value) external returns (bool) {\r... */\n    tag_75:\n        /* \"contracts/TenkERC20.sol\":2605:2609  bool */\n      0x00\n        /* \"contracts/TenkERC20.sol\":2662:2664  -1 */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"contracts/TenkERC20.sol\":2626:2635  allowance */\n      0x02\n        /* \"contracts/TenkERC20.sol\":2626:2641  allowance[from] */\n      0x00\n        /* \"contracts/TenkERC20.sol\":2636:2640  from */\n      dup7\n        /* \"contracts/TenkERC20.sol\":2626:2641  allowance[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/TenkERC20.sol\":2626:2653  allowance[from][msg.sender] */\n      0x00\n        /* \"contracts/TenkERC20.sol\":2642:2652  msg.sender */\n      caller\n        /* \"contracts/TenkERC20.sol\":2626:2653  allowance[from][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/TenkERC20.sol\":2626:2665  allowance[from][msg.sender] != uint(-1) */\n      eq\n        /* \"contracts/TenkERC20.sol\":2622:2860  if (allowance[from][msg.sender] != uint(-1)) {\r... */\n      tag_171\n      jumpi\n        /* \"contracts/TenkERC20.sol\":2682:2696  uint remaining */\n      0x00\n        /* \"contracts/TenkERC20.sol\":2699:2737  allowance[from][msg.sender].sub(value) */\n      tag_172\n        /* \"contracts/TenkERC20.sol\":2731:2736  value */\n      dup4\n        /* \"contracts/TenkERC20.sol\":2699:2708  allowance */\n      0x02\n        /* \"contracts/TenkERC20.sol\":2699:2714  allowance[from] */\n      0x00\n        /* \"contracts/TenkERC20.sol\":2709:2713  from */\n      dup9\n        /* \"contracts/TenkERC20.sol\":2699:2714  allowance[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/TenkERC20.sol\":2699:2726  allowance[from][msg.sender] */\n      0x00\n        /* \"contracts/TenkERC20.sol\":2715:2725  msg.sender */\n      caller\n        /* \"contracts/TenkERC20.sol\":2699:2726  allowance[from][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/TenkERC20.sol\":2699:2730  allowance[from][msg.sender].sub */\n      tag_173\n      swap1\n        /* \"contracts/TenkERC20.sol\":2699:2737  allowance[from][msg.sender].sub(value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_172:\n        /* \"contracts/TenkERC20.sol\":2682:2737  uint remaining = allowance[from][msg.sender].sub(value) */\n      swap1\n      pop\n        /* \"contracts/TenkERC20.sol\":2782:2791  remaining */\n      dup1\n        /* \"contracts/TenkERC20.sol\":2752:2761  allowance */\n      0x02\n        /* \"contracts/TenkERC20.sol\":2752:2767  allowance[from] */\n      0x00\n        /* \"contracts/TenkERC20.sol\":2762:2766  from */\n      dup8\n        /* \"contracts/TenkERC20.sol\":2752:2767  allowance[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/TenkERC20.sol\":2752:2779  allowance[from][msg.sender] */\n      0x00\n        /* \"contracts/TenkERC20.sol\":2768:2778  msg.sender */\n      caller\n        /* \"contracts/TenkERC20.sol\":2752:2779  allowance[from][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/TenkERC20.sol\":2752:2791  allowance[from][msg.sender] = remaining */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/TenkERC20.sol\":2826:2836  msg.sender */\n      caller\n        /* \"contracts/TenkERC20.sol\":2811:2848  Approval(from, msg.sender, remaining) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TenkERC20.sol\":2820:2824  from */\n      dup6\n        /* \"contracts/TenkERC20.sol\":2811:2848  Approval(from, msg.sender, remaining) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"contracts/TenkERC20.sol\":2838:2847  remaining */\n      dup4\n        /* \"contracts/TenkERC20.sol\":2811:2848  Approval(from, msg.sender, remaining) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/TenkERC20.sol\":2622:2860  if (allowance[from][msg.sender] != uint(-1)) {\r... */\n      pop\n    tag_171:\n        /* \"contracts/TenkERC20.sol\":2870:2896  _transfer(from, to, value) */\n      tag_174\n        /* \"contracts/TenkERC20.sol\":2880:2884  from */\n      dup5\n        /* \"contracts/TenkERC20.sol\":2886:2888  to */\n      dup5\n        /* \"contracts/TenkERC20.sol\":2890:2895  value */\n      dup5\n        /* \"contracts/TenkERC20.sol\":2870:2879  _transfer */\n      tag_175\n        /* \"contracts/TenkERC20.sol\":2870:2896  _transfer(from, to, value) */\n      jump\t// in\n    tag_174:\n        /* \"contracts/TenkERC20.sol\":2914:2918  true */\n      0x01\n        /* \"contracts/TenkERC20.sol\":2907:2918  return true */\n      swap1\n      pop\n        /* \"contracts/TenkERC20.sol\":2527:2926  function transferFrom(address from, address to, uint value) external returns (bool) {\r... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/TenkStablePair.sol\":1180:1212  uint public precisionMultiplier1 */\n    tag_77:\n      sload(0x0a)\n      dup2\n      jump\t// out\n        /* \"contracts/TenkStablePair.sol\":1025:1061  uint16 public token1FeePercent = 300 */\n    tag_79:\n      0x08\n      0x1e\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/TenkStablePair.sol\":4068:4682  function setStableSwap(bool stable, uint112 expectedReserve0, uint112 expectedReserve1) external lock {\r... */\n    tag_82:\n        /* \"contracts/TenkStablePair.sol\":1569:1570  1 */\n      0x01\n        /* \"contracts/TenkStablePair.sol\":1557:1565  unlocked */\n      sload(0x0d)\n        /* \"contracts/TenkStablePair.sol\":1557:1570  unlocked == 1 */\n      eq\n        /* \"contracts/TenkStablePair.sol\":1549:1586  require(unlocked == 1, '10k: LOCKED') */\n      tag_177\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x0b\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x31306b3a204c4f434b4544000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_177:\n        /* \"contracts/TenkStablePair.sol\":1604:1605  0 */\n      0x00\n        /* \"contracts/TenkStablePair.sol\":1593:1601  unlocked */\n      0x0d\n        /* \"contracts/TenkStablePair.sol\":1593:1605  unlocked = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/TenkStablePair.sol\":4217:4224  factory */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TenkStablePair.sol\":4199:4240  I10kStableFactory(factory).setStableOwner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xfc39026a\n        /* \"contracts/TenkStablePair.sol\":4199:4242  I10kStableFactory(factory).setStableOwner() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_179\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_179:\n        /* \"contracts/TenkStablePair.sol\":4199:4242  I10kStableFactory(factory).setStableOwner() */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_180\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_180:\n        /* \"contracts/TenkStablePair.sol\":4199:4242  I10kStableFactory(factory).setStableOwner() */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_181\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_181:\n        /* \"contracts/TenkStablePair.sol\":4199:4242  I10kStableFactory(factory).setStableOwner() */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"contracts/TenkStablePair.sol\":4185:4242  msg.sender == I10kStableFactory(factory).setStableOwner() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TenkStablePair.sol\":4185:4195  msg.sender */\n      caller\n        /* \"contracts/TenkStablePair.sol\":4185:4242  msg.sender == I10kStableFactory(factory).setStableOwner() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/TenkStablePair.sol\":4177:4281  require(msg.sender == I10kStableFactory(factory).setStableOwner(), \"10k: only factory's setStableOwner\") */\n      tag_182\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_0e37380231c63dd542c3187103d43bf3dc8feec0b6338e70e8209c96cba47625\n      0x22\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_182:\n        /* \"contracts/TenkStablePair.sol\":4297:4314  pairTypeImmutable */\n      0x0c\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/TenkStablePair.sol\":4296:4314  !pairTypeImmutable */\n      iszero\n        /* \"contracts/TenkStablePair.sol\":4288:4333  require(!pairTypeImmutable, \"10k: immutable\") */\n      tag_183\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x0e\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x31306b3a20696d6d757461626c65000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_183:\n        /* \"contracts/TenkStablePair.sol\":4360:4370  stableSwap */\n      0x0c\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/TenkStablePair.sol\":4350:4370  stable != stableSwap */\n      iszero\n      iszero\n        /* \"contracts/TenkStablePair.sol\":4350:4356  stable */\n      dup4\n        /* \"contracts/TenkStablePair.sol\":4350:4370  stable != stableSwap */\n      iszero\n      iszero\n      eq\n      iszero\n        /* \"contracts/TenkStablePair.sol\":4342:4389  require(stable != stableSwap, \"10k: no update\") */\n      tag_184\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x0e\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x31306b3a206e6f20757064617465000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_184:\n        /* \"contracts/TenkStablePair.sol\":4424:4432  reserve0 */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TenkStablePair.sol\":4404:4432  expectedReserve0 == reserve0 */\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TenkStablePair.sol\":4404:4420  expectedReserve0 */\n      dup3\n        /* \"contracts/TenkStablePair.sol\":4404:4432  expectedReserve0 == reserve0 */\n      0xffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/TenkStablePair.sol\":4404:4464  expectedReserve0 == reserve0 && expectedReserve1 == reserve1 */\n      dup1\n      iszero\n      tag_185\n      jumpi\n      pop\n        /* \"contracts/TenkStablePair.sol\":4456:4464  reserve1 */\n      0x08\n      0x0e\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TenkStablePair.sol\":4436:4464  expectedReserve1 == reserve1 */\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TenkStablePair.sol\":4436:4452  expectedReserve1 */\n      dup2\n        /* \"contracts/TenkStablePair.sol\":4436:4464  expectedReserve1 == reserve1 */\n      0xffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/TenkStablePair.sol\":4404:4464  expectedReserve0 == reserve0 && expectedReserve1 == reserve1 */\n    tag_185:\n        /* \"contracts/TenkStablePair.sol\":4396:4480  require(expectedReserve0 == reserve0 && expectedReserve1 == reserve1, \"10k: failed\") */\n      tag_186\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x0b\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x31306b3a206661696c6564000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_186:\n        /* \"contracts/TenkStablePair.sol\":4489:4499  bool feeOn */\n      0x00\n        /* \"contracts/TenkStablePair.sol\":4502:4530  _mintFee(reserve0, reserve1) */\n      tag_187\n        /* \"contracts/TenkStablePair.sol\":4511:4519  reserve0 */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TenkStablePair.sol\":4521:4529  reserve1 */\n      0x08\n      0x0e\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TenkStablePair.sol\":4502:4510  _mintFee */\n      tag_188\n        /* \"contracts/TenkStablePair.sol\":4502:4530  _mintFee(reserve0, reserve1) */\n      jump\t// in\n    tag_187:\n        /* \"contracts/TenkStablePair.sol\":4489:4530  bool feeOn = _mintFee(reserve0, reserve1) */\n      swap1\n      pop\n        /* \"contracts/TenkStablePair.sol\":4544:4577  SetStableSwap(stableSwap, stable) */\n      0xb6a86710bde53aa7fb1b3856279e2af5b476d53e2dd0902cf17a0911b5a43a8b\n        /* \"contracts/TenkStablePair.sol\":4558:4568  stableSwap */\n      0x0c\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/TenkStablePair.sol\":4570:4576  stable */\n      dup6\n        /* \"contracts/TenkStablePair.sol\":4544:4577  SetStableSwap(stableSwap, stable) */\n      mload(0x40)\n      dup1\n      dup4\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/TenkStablePair.sol\":4597:4603  stable */\n      dup4\n        /* \"contracts/TenkStablePair.sol\":4584:4594  stableSwap */\n      0x0c\n      0x00\n        /* \"contracts/TenkStablePair.sol\":4584:4603  stableSwap = stable */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/TenkStablePair.sol\":4619:4625  stable */\n      dup4\n        /* \"contracts/TenkStablePair.sol\":4619:4634  stable && feeOn */\n      dup1\n      iszero\n      tag_189\n      jumpi\n      pop\n        /* \"contracts/TenkStablePair.sol\":4629:4634  feeOn */\n      dup1\n        /* \"contracts/TenkStablePair.sol\":4619:4634  stable && feeOn */\n    tag_189:\n        /* \"contracts/TenkStablePair.sol\":4618:4676  (stable && feeOn) ? _k(uint(reserve0), uint(reserve1)) : 0 */\n      tag_190\n      jumpi\n        /* \"contracts/TenkStablePair.sol\":4675:4676  0 */\n      0x00\n        /* \"contracts/TenkStablePair.sol\":4618:4676  (stable && feeOn) ? _k(uint(reserve0), uint(reserve1)) : 0 */\n      jump(tag_191)\n    tag_190:\n        /* \"contracts/TenkStablePair.sol\":4638:4672  _k(uint(reserve0), uint(reserve1)) */\n      tag_192\n        /* \"contracts/TenkStablePair.sol\":4646:4654  reserve0 */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TenkStablePair.sol\":4641:4655  uint(reserve0) */\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TenkStablePair.sol\":4662:4670  reserve1 */\n      0x08\n      0x0e\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TenkStablePair.sol\":4657:4671  uint(reserve1) */\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TenkStablePair.sol\":4638:4640  _k */\n      tag_193\n        /* \"contracts/TenkStablePair.sol\":4638:4672  _k(uint(reserve0), uint(reserve1)) */\n      jump\t// in\n    tag_192:\n        /* \"contracts/TenkStablePair.sol\":4618:4676  (stable && feeOn) ? _k(uint(reserve0), uint(reserve1)) : 0 */\n    tag_191:\n        /* \"contracts/TenkStablePair.sol\":4610:4615  kLast */\n      0x0b\n        /* \"contracts/TenkStablePair.sol\":4610:4676  kLast = (stable && feeOn) ? _k(uint(reserve0), uint(reserve1)) : 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/TenkStablePair.sol\":1612:1613  _ */\n      pop\n        /* \"contracts/TenkStablePair.sol\":1631:1632  1 */\n      0x01\n        /* \"contracts/TenkStablePair.sol\":1620:1628  unlocked */\n      0x0d\n        /* \"contracts/TenkStablePair.sol\":1620:1632  unlocked = 1 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/TenkStablePair.sol\":4068:4682  function setStableSwap(bool stable, uint112 expectedReserve0, uint112 expectedReserve1) external lock {\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/TenkERC20.sol\":608:716  bytes32 public constant PERMIT_TYPEHASH = 0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9 */\n    tag_84:\n        /* \"contracts/TenkERC20.sol\":650:716  0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9 */\n      0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9\n        /* \"contracts/TenkERC20.sol\":608:716  bytes32 public constant PERMIT_TYPEHASH = 0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9 */\n      0x00\n      shl\n      dup2\n      jump\t// out\n        /* \"contracts/TenkERC20.sol\":274:309  uint8 public constant decimals = 18 */\n    tag_86:\n        /* \"contracts/TenkERC20.sol\":307:309  18 */\n      0x12\n        /* \"contracts/TenkERC20.sol\":274:309  uint8 public constant decimals = 18 */\n      dup2\n      jump\t// out\n        /* \"contracts/TenkERC20.sol\":465:496  bytes32 public DOMAIN_SEPARATOR */\n    tag_88:\n      sload(0x03)\n      dup2\n      jump\t// out\n        /* \"contracts/TenkStablePair.sol\":1143:1175  uint public precisionMultiplier0 */\n    tag_90:\n      sload(0x09)\n      dup2\n      jump\t// out\n        /* \"contracts/TenkStablePair.sol\":4688:4960  function setPairTypeImmutable() external lock {\r... */\n    tag_92:\n        /* \"contracts/TenkStablePair.sol\":1569:1570  1 */\n      0x01\n        /* \"contracts/TenkStablePair.sol\":1557:1565  unlocked */\n      sload(0x0d)\n        /* \"contracts/TenkStablePair.sol\":1557:1570  unlocked == 1 */\n      eq\n        /* \"contracts/TenkStablePair.sol\":1549:1586  require(unlocked == 1, '10k: LOCKED') */\n      tag_195\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x0b\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x31306b3a204c4f434b4544000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_195:\n        /* \"contracts/TenkStablePair.sol\":1604:1605  0 */\n      0x00\n        /* \"contracts/TenkStablePair.sol\":1593:1601  unlocked */\n      0x0d\n        /* \"contracts/TenkStablePair.sol\":1593:1605  unlocked = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/TenkStablePair.sol\":4781:4788  factory */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TenkStablePair.sol\":4763:4795  I10kStableFactory(factory).owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8da5cb5b\n        /* \"contracts/TenkStablePair.sol\":4763:4797  I10kStableFactory(factory).owner() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_197\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_197:\n        /* \"contracts/TenkStablePair.sol\":4763:4797  I10kStableFactory(factory).owner() */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_198\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_198:\n        /* \"contracts/TenkStablePair.sol\":4763:4797  I10kStableFactory(factory).owner() */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_199\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_199:\n        /* \"contracts/TenkStablePair.sol\":4763:4797  I10kStableFactory(factory).owner() */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"contracts/TenkStablePair.sol\":4749:4797  msg.sender == I10kStableFactory(factory).owner() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TenkStablePair.sol\":4749:4759  msg.sender */\n      caller\n        /* \"contracts/TenkStablePair.sol\":4749:4797  msg.sender == I10kStableFactory(factory).owner() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/TenkStablePair.sol\":4741:4827  require(msg.sender == I10kStableFactory(factory).owner(), \"10k: only factory's owner\") */\n      tag_200\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x19\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x31306b3a206f6e6c7920666163746f72792773206f776e657200000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_200:\n        /* \"contracts/TenkStablePair.sol\":4843:4860  pairTypeImmutable */\n      0x0c\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/TenkStablePair.sol\":4842:4860  !pairTypeImmutable */\n      iszero\n        /* \"contracts/TenkStablePair.sol\":4834:4887  require(!pairTypeImmutable, \"10k: already immutable\") */\n      tag_201\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x16\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x31306b3a20616c726561647920696d6d757461626c6500000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_201:\n        /* \"contracts/TenkStablePair.sol\":4916:4920  true */\n      0x01\n        /* \"contracts/TenkStablePair.sol\":4896:4913  pairTypeImmutable */\n      0x0c\n      0x01\n        /* \"contracts/TenkStablePair.sol\":4896:4920  pairTypeImmutable = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/TenkStablePair.sol\":4932:4954  SetPairTypeImmutable() */\n      0x09122c41ae733a4d7740324d50e35fbd6ee85be3c1312a45596d8045150ab2f2\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/TenkStablePair.sol\":1631:1632  1 */\n      0x01\n        /* \"contracts/TenkStablePair.sol\":1620:1628  unlocked */\n      0x0d\n        /* \"contracts/TenkStablePair.sol\":1620:1632  unlocked = 1 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/TenkStablePair.sol\":4688:4960  function setPairTypeImmutable() external lock {\r... */\n      jump\t// out\n        /* \"contracts/TenkStablePair.sol\":2940:3316  function initialize(address _token0, address _token1) external {\r... */\n    tag_95:\n        /* \"contracts/TenkStablePair.sol\":3032:3039  factory */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TenkStablePair.sol\":3018:3039  msg.sender == factory */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TenkStablePair.sol\":3018:3028  msg.sender */\n      caller\n        /* \"contracts/TenkStablePair.sol\":3018:3039  msg.sender == factory */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/TenkStablePair.sol\":3018:3055  msg.sender == factory && !initialized */\n      dup1\n      iszero\n      tag_203\n      jumpi\n      pop\n        /* \"contracts/TenkStablePair.sol\":3044:3055  initialized */\n      0x07\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/TenkStablePair.sol\":3043:3055  !initialized */\n      iszero\n        /* \"contracts/TenkStablePair.sol\":3018:3055  msg.sender == factory && !initialized */\n    tag_203:\n        /* \"contracts/TenkStablePair.sol\":3010:3074  require(msg.sender == factory && !initialized, '10k: FORBIDDEN') */\n      tag_204\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x0e\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x31306b3a20464f5242494444454e000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_204:\n        /* \"contracts/TenkStablePair.sol\":3115:3122  _token0 */\n      dup2\n        /* \"contracts/TenkStablePair.sol\":3106:3112  token0 */\n      0x06\n      0x00\n        /* \"contracts/TenkStablePair.sol\":3106:3122  token0 = _token0 */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/TenkStablePair.sol\":3138:3145  _token1 */\n      dup1\n        /* \"contracts/TenkStablePair.sol\":3129:3135  token1 */\n      0x07\n      0x00\n        /* \"contracts/TenkStablePair.sol\":3129:3145  token1 = _token1 */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/TenkStablePair.sol\":3195:3202  _token0 */\n      dup2\n        /* \"contracts/TenkStablePair.sol\":3188:3212  IERC20(_token0).decimals */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x313ce567\n        /* \"contracts/TenkStablePair.sol\":3188:3214  IERC20(_token0).decimals() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_205\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_205:\n        /* \"contracts/TenkStablePair.sol\":3188:3214  IERC20(_token0).decimals() */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_206\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_206:\n        /* \"contracts/TenkStablePair.sol\":3188:3214  IERC20(_token0).decimals() */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_207\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_207:\n        /* \"contracts/TenkStablePair.sol\":3188:3214  IERC20(_token0).decimals() */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"contracts/TenkStablePair.sol\":3183:3215  uint(IERC20(_token0).decimals()) */\n      0xff\n      and\n        /* \"contracts/TenkStablePair.sol\":3177:3179  10 */\n      0x0a\n        /* \"contracts/TenkStablePair.sol\":3177:3215  10 ** uint(IERC20(_token0).decimals()) */\n      exp\n        /* \"contracts/TenkStablePair.sol\":3154:3174  precisionMultiplier0 */\n      0x09\n        /* \"contracts/TenkStablePair.sol\":3154:3215  precisionMultiplier0 = 10 ** uint(IERC20(_token0).decimals()) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/TenkStablePair.sol\":3263:3270  _token1 */\n      dup1\n        /* \"contracts/TenkStablePair.sol\":3256:3280  IERC20(_token1).decimals */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x313ce567\n        /* \"contracts/TenkStablePair.sol\":3256:3282  IERC20(_token1).decimals() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_208\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_208:\n        /* \"contracts/TenkStablePair.sol\":3256:3282  IERC20(_token1).decimals() */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_209\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_209:\n        /* \"contracts/TenkStablePair.sol\":3256:3282  IERC20(_token1).decimals() */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_210\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_210:\n        /* \"contracts/TenkStablePair.sol\":3256:3282  IERC20(_token1).decimals() */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"contracts/TenkStablePair.sol\":3251:3283  uint(IERC20(_token1).decimals()) */\n      0xff\n      and\n        /* \"contracts/TenkStablePair.sol\":3245:3247  10 */\n      0x0a\n        /* \"contracts/TenkStablePair.sol\":3245:3283  10 ** uint(IERC20(_token1).decimals()) */\n      exp\n        /* \"contracts/TenkStablePair.sol\":3222:3242  precisionMultiplier1 */\n      0x0a\n        /* \"contracts/TenkStablePair.sol\":3222:3283  precisionMultiplier1 = 10 ** uint(IERC20(_token1).decimals()) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/TenkStablePair.sol\":3306:3310  true */\n      0x01\n        /* \"contracts/TenkStablePair.sol\":3292:3303  initialized */\n      0x07\n      0x14\n        /* \"contracts/TenkStablePair.sol\":3292:3310  initialized = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/TenkStablePair.sol\":2940:3316  function initialize(address _token0, address _token1) external {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/TenkStablePair.sol\":3436:4062  function setFeePercent(uint16 newToken0FeePercent, uint16 newToken1FeePercent) external lock {\r... */\n    tag_98:\n        /* \"contracts/TenkStablePair.sol\":1569:1570  1 */\n      0x01\n        /* \"contracts/TenkStablePair.sol\":1557:1565  unlocked */\n      sload(0x0d)\n        /* \"contracts/TenkStablePair.sol\":1557:1570  unlocked == 1 */\n      eq\n        /* \"contracts/TenkStablePair.sol\":1549:1586  require(unlocked == 1, '10k: LOCKED') */\n      tag_212\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x0b\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x31306b3a204c4f434b4544000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_212:\n        /* \"contracts/TenkStablePair.sol\":1604:1605  0 */\n      0x00\n        /* \"contracts/TenkStablePair.sol\":1593:1601  unlocked */\n      0x0d\n        /* \"contracts/TenkStablePair.sol\":1593:1605  unlocked = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/TenkStablePair.sol\":3576:3583  factory */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TenkStablePair.sol\":3558:3600  I10kStableFactory(factory).feePercentOwner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x4c217715\n        /* \"contracts/TenkStablePair.sol\":3558:3602  I10kStableFactory(factory).feePercentOwner() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_214\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_214:\n        /* \"contracts/TenkStablePair.sol\":3558:3602  I10kStableFactory(factory).feePercentOwner() */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_215\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_215:\n        /* \"contracts/TenkStablePair.sol\":3558:3602  I10kStableFactory(factory).feePercentOwner() */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_216\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_216:\n        /* \"contracts/TenkStablePair.sol\":3558:3602  I10kStableFactory(factory).feePercentOwner() */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"contracts/TenkStablePair.sol\":3544:3602  msg.sender == I10kStableFactory(factory).feePercentOwner() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TenkStablePair.sol\":3544:3554  msg.sender */\n      caller\n        /* \"contracts/TenkStablePair.sol\":3544:3602  msg.sender == I10kStableFactory(factory).feePercentOwner() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/TenkStablePair.sol\":3536:3641  require(msg.sender == I10kStableFactory(factory).feePercentOwner(), \"10k: only factory's feeAmountOwner\") */\n      tag_217\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_34ffd81d2bf0b96acae486668fc9d6475667930df09e9039ee8381f9cc8ef0b1\n      0x22\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_217:\n        /* \"contracts/TenkStablePair.sol\":700:704  2000 */\n      0x07d0\n        /* \"contracts/TenkStablePair.sol\":3656:3675  newToken0FeePercent */\n      dup3\n        /* \"contracts/TenkStablePair.sol\":3656:3694  newToken0FeePercent <= MAX_FEE_PERCENT */\n      0xffff\n      and\n      gt\n      iszero\n        /* \"contracts/TenkStablePair.sol\":3656:3736  newToken0FeePercent <= MAX_FEE_PERCENT && newToken1FeePercent <= MAX_FEE_PERCENT */\n      dup1\n      iszero\n      tag_218\n      jumpi\n      pop\n        /* \"contracts/TenkStablePair.sol\":700:704  2000 */\n      0x07d0\n        /* \"contracts/TenkStablePair.sol\":3698:3717  newToken1FeePercent */\n      dup2\n        /* \"contracts/TenkStablePair.sol\":3698:3736  newToken1FeePercent <= MAX_FEE_PERCENT */\n      0xffff\n      and\n      gt\n      iszero\n        /* \"contracts/TenkStablePair.sol\":3656:3736  newToken0FeePercent <= MAX_FEE_PERCENT && newToken1FeePercent <= MAX_FEE_PERCENT */\n    tag_218:\n        /* \"contracts/TenkStablePair.sol\":3648:3783  require(newToken0FeePercent <= MAX_FEE_PERCENT && newToken1FeePercent <= MAX_FEE_PERCENT, \"10k: feePercent mustn't exceed the maximum\") */\n      tag_219\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x2a\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_45baaf65170b7d96ab118754b668eead3e0f148d8a45a6c0a60aec311cfcee2f\n      0x2a\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_219:\n        /* \"contracts/TenkStablePair.sol\":3820:3821  0 */\n      0x00\n        /* \"contracts/TenkStablePair.sol\":3798:3817  newToken0FeePercent */\n      dup3\n        /* \"contracts/TenkStablePair.sol\":3798:3821  newToken0FeePercent > 0 */\n      0xffff\n      and\n      gt\n        /* \"contracts/TenkStablePair.sol\":3798:3848  newToken0FeePercent > 0 && newToken1FeePercent > 0 */\n      dup1\n      iszero\n      tag_220\n      jumpi\n      pop\n        /* \"contracts/TenkStablePair.sol\":3847:3848  0 */\n      0x00\n        /* \"contracts/TenkStablePair.sol\":3825:3844  newToken1FeePercent */\n      dup2\n        /* \"contracts/TenkStablePair.sol\":3825:3848  newToken1FeePercent > 0 */\n      0xffff\n      and\n      gt\n        /* \"contracts/TenkStablePair.sol\":3798:3848  newToken0FeePercent > 0 && newToken1FeePercent > 0 */\n    tag_220:\n        /* \"contracts/TenkStablePair.sol\":3790:3895  require(newToken0FeePercent > 0 && newToken1FeePercent > 0, \"10k: feePercent mustn't exceed the minimum\") */\n      tag_221\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x2a\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_640c1a2bcb4b0e819d290be36ffb74fff17dd4659141ae0e8778f67d9638ba4c\n      0x2a\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_221:\n        /* \"contracts/TenkStablePair.sol\":3921:3940  newToken0FeePercent */\n      dup2\n        /* \"contracts/TenkStablePair.sol\":3902:3918  token0FeePercent */\n      0x08\n      0x1c\n        /* \"contracts/TenkStablePair.sol\":3902:3940  token0FeePercent = newToken0FeePercent */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/TenkStablePair.sol\":3966:3985  newToken1FeePercent */\n      dup1\n        /* \"contracts/TenkStablePair.sol\":3947:3963  token1FeePercent */\n      0x08\n      0x1e\n        /* \"contracts/TenkStablePair.sol\":3947:3985  token1FeePercent = newToken1FeePercent */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/TenkStablePair.sol\":3997:4056  FeePercentUpdated(newToken0FeePercent, newToken1FeePercent) */\n      0xa4877b8ecb5a00ba277e4bceeeb187a669e7113649774dfbea05c259ce27f17b\n        /* \"contracts/TenkStablePair.sol\":4015:4034  newToken0FeePercent */\n      dup3\n        /* \"contracts/TenkStablePair.sol\":4036:4055  newToken1FeePercent */\n      dup3\n        /* \"contracts/TenkStablePair.sol\":3997:4056  FeePercentUpdated(newToken0FeePercent, newToken1FeePercent) */\n      mload(0x40)\n      dup1\n      dup4\n      0xffff\n      and\n      0xffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      0xffff\n      and\n      0xffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/TenkStablePair.sol\":1631:1632  1 */\n      0x01\n        /* \"contracts/TenkStablePair.sol\":1620:1628  unlocked */\n      0x0d\n        /* \"contracts/TenkStablePair.sol\":1620:1632  unlocked = 1 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/TenkStablePair.sol\":3436:4062  function setFeePercent(uint16 newToken0FeePercent, uint16 newToken1FeePercent) external lock {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/TenkStablePair.sol\":909:945  uint16 public token0FeePercent = 300 */\n    tag_100:\n      0x08\n      0x1c\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/TenkStablePair.sol\":661:704  uint public constant MAX_FEE_PERCENT = 2000 */\n    tag_102:\n        /* \"contracts/TenkStablePair.sol\":700:704  2000 */\n      0x07d0\n        /* \"contracts/TenkStablePair.sol\":661:704  uint public constant MAX_FEE_PERCENT = 2000 */\n      dup2\n      jump\t// out\n        /* \"contracts/TenkStablePair.sol\":6390:7552  function mint(address to) external lock returns (uint liquidity) {\r... */\n    tag_105:\n        /* \"contracts/TenkStablePair.sol\":6439:6453  uint liquidity */\n      0x00\n        /* \"contracts/TenkStablePair.sol\":1569:1570  1 */\n      0x01\n        /* \"contracts/TenkStablePair.sol\":1557:1565  unlocked */\n      sload(0x0d)\n        /* \"contracts/TenkStablePair.sol\":1557:1570  unlocked == 1 */\n      eq\n        /* \"contracts/TenkStablePair.sol\":1549:1586  require(unlocked == 1, '10k: LOCKED') */\n      tag_223\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x0b\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x31306b3a204c4f434b4544000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_223:\n        /* \"contracts/TenkStablePair.sol\":1604:1605  0 */\n      0x00\n        /* \"contracts/TenkStablePair.sol\":1593:1601  unlocked */\n      0x0d\n        /* \"contracts/TenkStablePair.sol\":1593:1605  unlocked = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/TenkStablePair.sol\":6463:6480  uint112 _reserve0 */\n      0x00\n        /* \"contracts/TenkStablePair.sol\":6482:6499  uint112 _reserve1 */\n      dup1\n        /* \"contracts/TenkStablePair.sol\":6505:6518  getReserves() */\n      tag_225\n        /* \"contracts/TenkStablePair.sol\":6505:6516  getReserves */\n      tag_63\n        /* \"contracts/TenkStablePair.sol\":6505:6518  getReserves() */\n      jump\t// in\n    tag_225:\n        /* \"contracts/TenkStablePair.sol\":6462:6518  (uint112 _reserve0, uint112 _reserve1,,) = getReserves() */\n      pop\n      pop\n      swap2\n      pop\n      swap2\n      pop\n        /* \"contracts/TenkStablePair.sol\":6545:6558  uint balance0 */\n      0x00\n        /* \"contracts/TenkStablePair.sol\":6568:6574  token0 */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TenkStablePair.sol\":6561:6585  IERC20(token0).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/TenkStablePair.sol\":6594:6598  this */\n      address\n        /* \"contracts/TenkStablePair.sol\":6561:6600  IERC20(token0).balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_226\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_226:\n        /* \"contracts/TenkStablePair.sol\":6561:6600  IERC20(token0).balanceOf(address(this)) */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_227\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_227:\n        /* \"contracts/TenkStablePair.sol\":6561:6600  IERC20(token0).balanceOf(address(this)) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_228\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_228:\n        /* \"contracts/TenkStablePair.sol\":6561:6600  IERC20(token0).balanceOf(address(this)) */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"contracts/TenkStablePair.sol\":6545:6600  uint balance0 = IERC20(token0).balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/TenkStablePair.sol\":6607:6620  uint balance1 */\n      0x00\n        /* \"contracts/TenkStablePair.sol\":6630:6636  token1 */\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TenkStablePair.sol\":6623:6647  IERC20(token1).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/TenkStablePair.sol\":6656:6660  this */\n      address\n        /* \"contracts/TenkStablePair.sol\":6623:6662  IERC20(token1).balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_229\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_229:\n        /* \"contracts/TenkStablePair.sol\":6623:6662  IERC20(token1).balanceOf(address(this)) */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_230\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_230:\n        /* \"contracts/TenkStablePair.sol\":6623:6662  IERC20(token1).balanceOf(address(this)) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_231\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_231:\n        /* \"contracts/TenkStablePair.sol\":6623:6662  IERC20(token1).balanceOf(address(this)) */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"contracts/TenkStablePair.sol\":6607:6662  uint balance1 = IERC20(token1).balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/TenkStablePair.sol\":6669:6681  uint amount0 */\n      0x00\n        /* \"contracts/TenkStablePair.sol\":6684:6707  balance0.sub(_reserve0) */\n      tag_232\n        /* \"contracts/TenkStablePair.sol\":6697:6706  _reserve0 */\n      dup6\n        /* \"contracts/TenkStablePair.sol\":6684:6707  balance0.sub(_reserve0) */\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TenkStablePair.sol\":6684:6692  balance0 */\n      dup5\n        /* \"contracts/TenkStablePair.sol\":6684:6696  balance0.sub */\n      tag_173\n      swap1\n        /* \"contracts/TenkStablePair.sol\":6684:6707  balance0.sub(_reserve0) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_232:\n        /* \"contracts/TenkStablePair.sol\":6669:6707  uint amount0 = balance0.sub(_reserve0) */\n      swap1\n      pop\n        /* \"contracts/TenkStablePair.sol\":6714:6726  uint amount1 */\n      0x00\n        /* \"contracts/TenkStablePair.sol\":6729:6752  balance1.sub(_reserve1) */\n      tag_233\n        /* \"contracts/TenkStablePair.sol\":6742:6751  _reserve1 */\n      dup6\n        /* \"contracts/TenkStablePair.sol\":6729:6752  balance1.sub(_reserve1) */\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TenkStablePair.sol\":6729:6737  balance1 */\n      dup5\n        /* \"contracts/TenkStablePair.sol\":6729:6741  balance1.sub */\n      tag_173\n      swap1\n        /* \"contracts/TenkStablePair.sol\":6729:6752  balance1.sub(_reserve1) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_233:\n        /* \"contracts/TenkStablePair.sol\":6714:6752  uint amount1 = balance1.sub(_reserve1) */\n      swap1\n      pop\n        /* \"contracts/TenkStablePair.sol\":6761:6771  bool feeOn */\n      0x00\n        /* \"contracts/TenkStablePair.sol\":6774:6804  _mintFee(_reserve0, _reserve1) */\n      tag_234\n        /* \"contracts/TenkStablePair.sol\":6783:6792  _reserve0 */\n      dup8\n        /* \"contracts/TenkStablePair.sol\":6794:6803  _reserve1 */\n      dup8\n        /* \"contracts/TenkStablePair.sol\":6774:6782  _mintFee */\n      tag_188\n        /* \"contracts/TenkStablePair.sol\":6774:6804  _mintFee(_reserve0, _reserve1) */\n      jump\t// in\n    tag_234:\n        /* \"contracts/TenkStablePair.sol\":6761:6804  bool feeOn = _mintFee(_reserve0, _reserve1) */\n      swap1\n      pop\n        /* \"contracts/TenkStablePair.sol\":6811:6828  uint _totalSupply */\n      0x00\n        /* \"contracts/TenkStablePair.sol\":6831:6842  totalSupply */\n      dup1\n      sload\n        /* \"contracts/TenkStablePair.sol\":6811:6842  uint _totalSupply = totalSupply */\n      swap1\n      pop\n        /* \"contracts/TenkStablePair.sol\":6952:6953  0 */\n      0x00\n        /* \"contracts/TenkStablePair.sol\":6936:6948  _totalSupply */\n      dup2\n        /* \"contracts/TenkStablePair.sol\":6936:6953  _totalSupply == 0 */\n      eq\n        /* \"contracts/TenkStablePair.sol\":6932:7266  if (_totalSupply == 0) {\r... */\n      iszero\n      tag_235\n      jumpi\n        /* \"contracts/TenkStablePair.sol\":6976:7030  Math.sqrt(amount0.mul(amount1)).sub(MINIMUM_LIQUIDITY) */\n      tag_236\n        /* \"contracts/TenkStablePair.sol\":393:400  10 ** 3 */\n      0x03e8\n        /* \"contracts/TenkStablePair.sol\":6976:7007  Math.sqrt(amount0.mul(amount1)) */\n      tag_237\n        /* \"contracts/TenkStablePair.sol\":6986:7006  amount0.mul(amount1) */\n      tag_238\n        /* \"contracts/TenkStablePair.sol\":6998:7005  amount1 */\n      dup7\n        /* \"contracts/TenkStablePair.sol\":6986:6993  amount0 */\n      dup9\n        /* \"contracts/TenkStablePair.sol\":6986:6997  amount0.mul */\n      tag_239\n      swap1\n        /* \"contracts/TenkStablePair.sol\":6986:7006  amount0.mul(amount1) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_238:\n        /* \"contracts/TenkStablePair.sol\":6976:6985  Math.sqrt */\n      tag_240\n        /* \"contracts/TenkStablePair.sol\":6976:7007  Math.sqrt(amount0.mul(amount1)) */\n      jump\t// in\n    tag_237:\n        /* \"contracts/TenkStablePair.sol\":6976:7011  Math.sqrt(amount0.mul(amount1)).sub */\n      tag_173\n      swap1\n        /* \"contracts/TenkStablePair.sol\":6976:7030  Math.sqrt(amount0.mul(amount1)).sub(MINIMUM_LIQUIDITY) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_236:\n        /* \"contracts/TenkStablePair.sol\":6964:7030  liquidity = Math.sqrt(amount0.mul(amount1)).sub(MINIMUM_LIQUIDITY) */\n      swap9\n      pop\n        /* \"contracts/TenkStablePair.sol\":7039:7075  _mint(address(0), MINIMUM_LIQUIDITY) */\n      tag_241\n        /* \"contracts/TenkStablePair.sol\":7053:7054  0 */\n      0x00\n        /* \"contracts/TenkStablePair.sol\":393:400  10 ** 3 */\n      0x03e8\n        /* \"contracts/TenkStablePair.sol\":7039:7044  _mint */\n      tag_242\n        /* \"contracts/TenkStablePair.sol\":7039:7075  _mint(address(0), MINIMUM_LIQUIDITY) */\n      jump\t// in\n    tag_241:\n        /* \"contracts/TenkStablePair.sol\":6932:7266  if (_totalSupply == 0) {\r... */\n      jump(tag_243)\n    tag_235:\n        /* \"contracts/TenkStablePair.sol\":7172:7258  Math.min(amount0.mul(_totalSupply) / _reserve0, amount1.mul(_totalSupply) / _reserve1) */\n      tag_244\n        /* \"contracts/TenkStablePair.sol\":7209:7218  _reserve0 */\n      dup9\n        /* \"contracts/TenkStablePair.sol\":7181:7218  amount0.mul(_totalSupply) / _reserve0 */\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TenkStablePair.sol\":7181:7206  amount0.mul(_totalSupply) */\n      tag_245\n        /* \"contracts/TenkStablePair.sol\":7193:7205  _totalSupply */\n      dup4\n        /* \"contracts/TenkStablePair.sol\":7181:7188  amount0 */\n      dup8\n        /* \"contracts/TenkStablePair.sol\":7181:7192  amount0.mul */\n      tag_239\n      swap1\n        /* \"contracts/TenkStablePair.sol\":7181:7206  amount0.mul(_totalSupply) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_245:\n        /* \"contracts/TenkStablePair.sol\":7181:7218  amount0.mul(_totalSupply) / _reserve0 */\n      dup2\n      tag_246\n      jumpi\n      invalid\n    tag_246:\n      div\n        /* \"contracts/TenkStablePair.sol\":7248:7257  _reserve1 */\n      dup9\n        /* \"contracts/TenkStablePair.sol\":7220:7257  amount1.mul(_totalSupply) / _reserve1 */\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TenkStablePair.sol\":7220:7245  amount1.mul(_totalSupply) */\n      tag_247\n        /* \"contracts/TenkStablePair.sol\":7232:7244  _totalSupply */\n      dup5\n        /* \"contracts/TenkStablePair.sol\":7220:7227  amount1 */\n      dup8\n        /* \"contracts/TenkStablePair.sol\":7220:7231  amount1.mul */\n      tag_239\n      swap1\n        /* \"contracts/TenkStablePair.sol\":7220:7245  amount1.mul(_totalSupply) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_247:\n        /* \"contracts/TenkStablePair.sol\":7220:7257  amount1.mul(_totalSupply) / _reserve1 */\n      dup2\n      tag_248\n      jumpi\n      invalid\n    tag_248:\n      div\n        /* \"contracts/TenkStablePair.sol\":7172:7180  Math.min */\n      tag_249\n        /* \"contracts/TenkStablePair.sol\":7172:7258  Math.min(amount0.mul(_totalSupply) / _reserve0, amount1.mul(_totalSupply) / _reserve1) */\n      jump\t// in\n    tag_244:\n        /* \"contracts/TenkStablePair.sol\":7160:7258  liquidity = Math.min(amount0.mul(_totalSupply) / _reserve0, amount1.mul(_totalSupply) / _reserve1) */\n      swap9\n      pop\n        /* \"contracts/TenkStablePair.sol\":6932:7266  if (_totalSupply == 0) {\r... */\n    tag_243:\n        /* \"contracts/TenkStablePair.sol\":7292:7293  0 */\n      0x00\n        /* \"contracts/TenkStablePair.sol\":7280:7289  liquidity */\n      dup10\n        /* \"contracts/TenkStablePair.sol\":7280:7293  liquidity > 0 */\n      gt\n        /* \"contracts/TenkStablePair.sol\":7272:7332  require(liquidity > 0, '10k: INSUFFICIENT_LIQUIDITY_MINTED') */\n      tag_250\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_8a472e50ec0b760c580c3dc8c62cdcf0fe39bab372eaf2d9e07261f1b72df71d\n      0x22\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_250:\n        /* \"contracts/TenkStablePair.sol\":7339:7359  _mint(to, liquidity) */\n      tag_251\n        /* \"contracts/TenkStablePair.sol\":7345:7347  to */\n      dup11\n        /* \"contracts/TenkStablePair.sol\":7349:7358  liquidity */\n      dup11\n        /* \"contracts/TenkStablePair.sol\":7339:7344  _mint */\n      tag_242\n        /* \"contracts/TenkStablePair.sol\":7339:7359  _mint(to, liquidity) */\n      jump\t// in\n    tag_251:\n        /* \"contracts/TenkStablePair.sol\":7368:7395  _update(balance0, balance1) */\n      tag_252\n        /* \"contracts/TenkStablePair.sol\":7376:7384  balance0 */\n      dup7\n        /* \"contracts/TenkStablePair.sol\":7386:7394  balance1 */\n      dup7\n        /* \"contracts/TenkStablePair.sol\":7368:7375  _update */\n      tag_253\n        /* \"contracts/TenkStablePair.sol\":7368:7395  _update(balance0, balance1) */\n      jump\t// in\n    tag_252:\n        /* \"contracts/TenkStablePair.sol\":7406:7411  feeOn */\n      dup2\n        /* \"contracts/TenkStablePair.sol\":7402:7455  if (feeOn) kLast = _k(uint(reserve0), uint(reserve1)) */\n      iszero\n      tag_254\n      jumpi\n        /* \"contracts/TenkStablePair.sol\":7421:7455  _k(uint(reserve0), uint(reserve1)) */\n      tag_255\n        /* \"contracts/TenkStablePair.sol\":7429:7437  reserve0 */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TenkStablePair.sol\":7424:7438  uint(reserve0) */\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TenkStablePair.sol\":7445:7453  reserve1 */\n      0x08\n      0x0e\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TenkStablePair.sol\":7440:7454  uint(reserve1) */\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TenkStablePair.sol\":7421:7423  _k */\n      tag_193\n        /* \"contracts/TenkStablePair.sol\":7421:7455  _k(uint(reserve0), uint(reserve1)) */\n      jump\t// in\n    tag_255:\n        /* \"contracts/TenkStablePair.sol\":7413:7418  kLast */\n      0x0b\n        /* \"contracts/TenkStablePair.sol\":7413:7455  kLast = _k(uint(reserve0), uint(reserve1)) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/TenkStablePair.sol\":7402:7455  if (feeOn) kLast = _k(uint(reserve0), uint(reserve1)) */\n    tag_254:\n        /* \"contracts/TenkStablePair.sol\":7517:7527  msg.sender */\n      caller\n        /* \"contracts/TenkStablePair.sol\":7512:7546  Mint(msg.sender, amount0, amount1) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f\n        /* \"contracts/TenkStablePair.sol\":7529:7536  amount0 */\n      dup6\n        /* \"contracts/TenkStablePair.sol\":7538:7545  amount1 */\n      dup6\n        /* \"contracts/TenkStablePair.sol\":7512:7546  Mint(msg.sender, amount0, amount1) */\n      mload(0x40)\n      dup1\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/TenkStablePair.sol\":1612:1613  _ */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/TenkStablePair.sol\":1631:1632  1 */\n      0x01\n        /* \"contracts/TenkStablePair.sol\":1620:1628  unlocked */\n      0x0d\n        /* \"contracts/TenkStablePair.sol\":1620:1632  unlocked = 1 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/TenkStablePair.sol\":6390:7552  function mint(address to) external lock returns (uint liquidity) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/TenkStablePair.sol\":9784:10197  function swap(uint amount0Out, uint amount1Out, address to, bytes calldata data, address referrer) external {\r... */\n    tag_111:\n        /* \"contracts/TenkStablePair.sol\":9899:9927  TokensData memory tokensData */\n      tag_257\n      tag_163\n      jump\t// in\n    tag_257:\n        /* \"contracts/TenkStablePair.sol\":9930:10147  TokensData({\r... */\n      mload(0x40)\n      dup1\n      0x0100\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/TenkStablePair.sol\":9958:9964  token0 */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TenkStablePair.sol\":9930:10147  TokensData({\r... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/TenkStablePair.sol\":9981:9987  token1 */\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TenkStablePair.sol\":9930:10147  TokensData({\r... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/TenkStablePair.sol\":10008:10018  amount0Out */\n      dup9\n        /* \"contracts/TenkStablePair.sol\":9930:10147  TokensData({\r... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/TenkStablePair.sol\":10039:10049  amount1Out */\n      dup8\n        /* \"contracts/TenkStablePair.sol\":9930:10147  TokensData({\r... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/TenkStablePair.sol\":10068:10069  0 */\n      0x00\n        /* \"contracts/TenkStablePair.sol\":9930:10147  TokensData({\r... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/TenkStablePair.sol\":10088:10089  0 */\n      0x00\n        /* \"contracts/TenkStablePair.sol\":9930:10147  TokensData({\r... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/TenkStablePair.sol\":10113:10114  0 */\n      0x00\n        /* \"contracts/TenkStablePair.sol\":9930:10147  TokensData({\r... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/TenkStablePair.sol\":10138:10139  0 */\n      0x00\n        /* \"contracts/TenkStablePair.sol\":9930:10147  TokensData({\r... */\n      dup2\n      mstore\n      pop\n        /* \"contracts/TenkStablePair.sol\":9899:10147  TokensData memory tokensData = TokensData({\r... */\n      swap1\n      pop\n        /* \"contracts/TenkStablePair.sol\":10154:10191  _swap(tokensData, to, data, referrer) */\n      tag_258\n        /* \"contracts/TenkStablePair.sol\":10160:10170  tokensData */\n      dup2\n        /* \"contracts/TenkStablePair.sol\":10172:10174  to */\n      dup7\n        /* \"contracts/TenkStablePair.sol\":10176:10180  data */\n      dup7\n      dup7\n        /* \"contracts/TenkStablePair.sol\":10154:10191  _swap(tokensData, to, data, referrer) */\n      dup1\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n        /* \"--CODEGEN--\":30:33   */\n      dup1\n        /* \"--CODEGEN--\":22:28   */\n      dup3\n        /* \"--CODEGEN--\":14:20   */\n      dup5\n        /* \"--CODEGEN--\":1:34   */\n      calldatacopy\n        /* \"--CODEGEN--\":99:100   */\n      0x00\n        /* \"--CODEGEN--\":93:96   */\n      dup2\n        /* \"--CODEGEN--\":85:91   */\n      dup5\n        /* \"--CODEGEN--\":81:97   */\n      add\n        /* \"--CODEGEN--\":74:101   */\n      mstore\n        /* \"--CODEGEN--\":137:141   */\n      0x1f\n        /* \"--CODEGEN--\":133:142   */\n      not\n        /* \"--CODEGEN--\":126:130   */\n      0x1f\n        /* \"--CODEGEN--\":121:124   */\n      dup3\n        /* \"--CODEGEN--\":117:131   */\n      add\n        /* \"--CODEGEN--\":113:143   */\n      and\n        /* \"--CODEGEN--\":106:143   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":169:172   */\n      dup1\n        /* \"--CODEGEN--\":161:167   */\n      dup4\n        /* \"--CODEGEN--\":157:173   */\n      add\n        /* \"--CODEGEN--\":147:173   */\n      swap3\n      pop\n        /* \"contracts/TenkStablePair.sol\":10154:10191  _swap(tokensData, to, data, referrer) */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/TenkStablePair.sol\":10182:10190  referrer */\n      dup6\n        /* \"contracts/TenkStablePair.sol\":10154:10159  _swap */\n      tag_165\n        /* \"contracts/TenkStablePair.sol\":10154:10191  _swap(tokensData, to, data, referrer) */\n      jump\t// in\n    tag_258:\n        /* \"contracts/TenkStablePair.sol\":9784:10197  function swap(uint amount0Out, uint amount1Out, address to, bytes calldata data, address referrer) external {\r... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/TenkERC20.sol\":347:388  mapping(address => uint) public balanceOf */\n    tag_114:\n      mstore(0x20, 0x01)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/TenkStablePair.sol\":1219:1236  uint public kLast */\n    tag_116:\n      sload(0x0b)\n      dup2\n      jump\t// out\n        /* \"contracts/TenkERC20.sol\":723:761  mapping(address => uint) public nonces */\n    tag_119:\n      mstore(0x20, 0x04)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/TenkStablePair.sol\":7660:8965  function burn(address to) external lock returns (uint amount0, uint amount1) {\r... */\n    tag_122:\n        /* \"contracts/TenkStablePair.sol\":7709:7721  uint amount0 */\n      0x00\n        /* \"contracts/TenkStablePair.sol\":7723:7735  uint amount1 */\n      dup1\n        /* \"contracts/TenkStablePair.sol\":1569:1570  1 */\n      0x01\n        /* \"contracts/TenkStablePair.sol\":1557:1565  unlocked */\n      sload(0x0d)\n        /* \"contracts/TenkStablePair.sol\":1557:1570  unlocked == 1 */\n      eq\n        /* \"contracts/TenkStablePair.sol\":1549:1586  require(unlocked == 1, '10k: LOCKED') */\n      tag_260\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x0b\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x31306b3a204c4f434b4544000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_260:\n        /* \"contracts/TenkStablePair.sol\":1604:1605  0 */\n      0x00\n        /* \"contracts/TenkStablePair.sol\":1593:1601  unlocked */\n      0x0d\n        /* \"contracts/TenkStablePair.sol\":1593:1605  unlocked = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/TenkStablePair.sol\":7745:7762  uint112 _reserve0 */\n      0x00\n        /* \"contracts/TenkStablePair.sol\":7764:7781  uint112 _reserve1 */\n      dup1\n        /* \"contracts/TenkStablePair.sol\":7787:7800  getReserves() */\n      tag_262\n        /* \"contracts/TenkStablePair.sol\":7787:7798  getReserves */\n      tag_63\n        /* \"contracts/TenkStablePair.sol\":7787:7800  getReserves() */\n      jump\t// in\n    tag_262:\n        /* \"contracts/TenkStablePair.sol\":7744:7800  (uint112 _reserve0, uint112 _reserve1,,) = getReserves() */\n      pop\n      pop\n      swap2\n      pop\n      swap2\n      pop\n        /* \"contracts/TenkStablePair.sol\":7822:7837  address _token0 */\n      0x00\n        /* \"contracts/TenkStablePair.sol\":7840:7846  token0 */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TenkStablePair.sol\":7822:7846  address _token0 = token0 */\n      swap1\n      pop\n        /* \"contracts/TenkStablePair.sol\":7868:7883  address _token1 */\n      0x00\n        /* \"contracts/TenkStablePair.sol\":7886:7892  token1 */\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TenkStablePair.sol\":7868:7892  address _token1 = token1 */\n      swap1\n      pop\n        /* \"contracts/TenkStablePair.sol\":7914:7927  uint balance0 */\n      0x00\n        /* \"contracts/TenkStablePair.sol\":7937:7944  _token0 */\n      dup3\n        /* \"contracts/TenkStablePair.sol\":7930:7955  IERC20(_token0).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/TenkStablePair.sol\":7964:7968  this */\n      address\n        /* \"contracts/TenkStablePair.sol\":7930:7970  IERC20(_token0).balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_263\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_263:\n        /* \"contracts/TenkStablePair.sol\":7930:7970  IERC20(_token0).balanceOf(address(this)) */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_264\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_264:\n        /* \"contracts/TenkStablePair.sol\":7930:7970  IERC20(_token0).balanceOf(address(this)) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_265\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_265:\n        /* \"contracts/TenkStablePair.sol\":7930:7970  IERC20(_token0).balanceOf(address(this)) */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"contracts/TenkStablePair.sol\":7914:7970  uint balance0 = IERC20(_token0).balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/TenkStablePair.sol\":7977:7990  uint balance1 */\n      0x00\n        /* \"contracts/TenkStablePair.sol\":8000:8007  _token1 */\n      dup3\n        /* \"contracts/TenkStablePair.sol\":7993:8018  IERC20(_token1).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/TenkStablePair.sol\":8027:8031  this */\n      address\n        /* \"contracts/TenkStablePair.sol\":7993:8033  IERC20(_token1).balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_266\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_266:\n        /* \"contracts/TenkStablePair.sol\":7993:8033  IERC20(_token1).balanceOf(address(this)) */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_267\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_267:\n        /* \"contracts/TenkStablePair.sol\":7993:8033  IERC20(_token1).balanceOf(address(this)) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_268\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_268:\n        /* \"contracts/TenkStablePair.sol\":7993:8033  IERC20(_token1).balanceOf(address(this)) */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"contracts/TenkStablePair.sol\":7977:8033  uint balance1 = IERC20(_token1).balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/TenkStablePair.sol\":8040:8054  uint liquidity */\n      0x00\n        /* \"contracts/TenkStablePair.sol\":8057:8066  balanceOf */\n      0x01\n        /* \"contracts/TenkStablePair.sol\":8057:8081  balanceOf[address(this)] */\n      0x00\n        /* \"contracts/TenkStablePair.sol\":8075:8079  this */\n      address\n        /* \"contracts/TenkStablePair.sol\":8057:8081  balanceOf[address(this)] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/TenkStablePair.sol\":8040:8081  uint liquidity = balanceOf[address(this)] */\n      swap1\n      pop\n        /* \"contracts/TenkStablePair.sol\":8090:8100  bool feeOn */\n      0x00\n        /* \"contracts/TenkStablePair.sol\":8103:8133  _mintFee(_reserve0, _reserve1) */\n      tag_269\n        /* \"contracts/TenkStablePair.sol\":8112:8121  _reserve0 */\n      dup9\n        /* \"contracts/TenkStablePair.sol\":8123:8132  _reserve1 */\n      dup9\n        /* \"contracts/TenkStablePair.sol\":8103:8111  _mintFee */\n      tag_188\n        /* \"contracts/TenkStablePair.sol\":8103:8133  _mintFee(_reserve0, _reserve1) */\n      jump\t// in\n    tag_269:\n        /* \"contracts/TenkStablePair.sol\":8090:8133  bool feeOn = _mintFee(_reserve0, _reserve1) */\n      swap1\n      pop\n        /* \"contracts/TenkStablePair.sol\":8140:8157  uint _totalSupply */\n      0x00\n        /* \"contracts/TenkStablePair.sol\":8160:8171  totalSupply */\n      dup1\n      sload\n        /* \"contracts/TenkStablePair.sol\":8140:8171  uint _totalSupply = totalSupply */\n      swap1\n      pop\n        /* \"contracts/TenkStablePair.sol\":8292:8304  _totalSupply */\n      dup1\n        /* \"contracts/TenkStablePair.sol\":8266:8289  liquidity.mul(balance0) */\n      tag_270\n        /* \"contracts/TenkStablePair.sol\":8280:8288  balance0 */\n      dup7\n        /* \"contracts/TenkStablePair.sol\":8266:8275  liquidity */\n      dup6\n        /* \"contracts/TenkStablePair.sol\":8266:8279  liquidity.mul */\n      tag_239\n      swap1\n        /* \"contracts/TenkStablePair.sol\":8266:8289  liquidity.mul(balance0) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_270:\n        /* \"contracts/TenkStablePair.sol\":8266:8304  liquidity.mul(balance0) / _totalSupply */\n      dup2\n      tag_271\n      jumpi\n      invalid\n    tag_271:\n      div\n        /* \"contracts/TenkStablePair.sol\":8256:8304  amount0 = liquidity.mul(balance0) / _totalSupply */\n      swap11\n      pop\n        /* \"contracts/TenkStablePair.sol\":8395:8407  _totalSupply */\n      dup1\n        /* \"contracts/TenkStablePair.sol\":8369:8392  liquidity.mul(balance1) */\n      tag_272\n        /* \"contracts/TenkStablePair.sol\":8383:8391  balance1 */\n      dup6\n        /* \"contracts/TenkStablePair.sol\":8369:8378  liquidity */\n      dup6\n        /* \"contracts/TenkStablePair.sol\":8369:8382  liquidity.mul */\n      tag_239\n      swap1\n        /* \"contracts/TenkStablePair.sol\":8369:8392  liquidity.mul(balance1) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_272:\n        /* \"contracts/TenkStablePair.sol\":8369:8407  liquidity.mul(balance1) / _totalSupply */\n      dup2\n      tag_273\n      jumpi\n      invalid\n    tag_273:\n      div\n        /* \"contracts/TenkStablePair.sol\":8359:8407  amount1 = liquidity.mul(balance1) / _totalSupply */\n      swap10\n      pop\n        /* \"contracts/TenkStablePair.sol\":8480:8481  0 */\n      0x00\n        /* \"contracts/TenkStablePair.sol\":8470:8477  amount0 */\n      dup12\n        /* \"contracts/TenkStablePair.sol\":8470:8481  amount0 > 0 */\n      gt\n        /* \"contracts/TenkStablePair.sol\":8470:8496  amount0 > 0 && amount1 > 0 */\n      dup1\n      iszero\n      tag_274\n      jumpi\n      pop\n        /* \"contracts/TenkStablePair.sol\":8495:8496  0 */\n      0x00\n        /* \"contracts/TenkStablePair.sol\":8485:8492  amount1 */\n      dup11\n        /* \"contracts/TenkStablePair.sol\":8485:8496  amount1 > 0 */\n      gt\n        /* \"contracts/TenkStablePair.sol\":8470:8496  amount0 > 0 && amount1 > 0 */\n    tag_274:\n        /* \"contracts/TenkStablePair.sol\":8462:8535  require(amount0 > 0 && amount1 > 0, '10k: INSUFFICIENT_LIQUIDITY_BURNED') */\n      tag_275\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_e445a9437cf2a16b4c4a661deca6e9c597ce139bb56e2872aedda20402a5d4d9\n      0x22\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_275:\n        /* \"contracts/TenkStablePair.sol\":8542:8573  _burn(address(this), liquidity) */\n      tag_276\n        /* \"contracts/TenkStablePair.sol\":8556:8560  this */\n      address\n        /* \"contracts/TenkStablePair.sol\":8563:8572  liquidity */\n      dup5\n        /* \"contracts/TenkStablePair.sol\":8542:8547  _burn */\n      tag_277\n        /* \"contracts/TenkStablePair.sol\":8542:8573  _burn(address(this), liquidity) */\n      jump\t// in\n    tag_276:\n        /* \"contracts/TenkStablePair.sol\":8580:8615  _safeTransfer(_token0, to, amount0) */\n      tag_278\n        /* \"contracts/TenkStablePair.sol\":8594:8601  _token0 */\n      dup8\n        /* \"contracts/TenkStablePair.sol\":8603:8605  to */\n      dup14\n        /* \"contracts/TenkStablePair.sol\":8607:8614  amount0 */\n      dup14\n        /* \"contracts/TenkStablePair.sol\":8580:8593  _safeTransfer */\n      tag_279\n        /* \"contracts/TenkStablePair.sol\":8580:8615  _safeTransfer(_token0, to, amount0) */\n      jump\t// in\n    tag_278:\n        /* \"contracts/TenkStablePair.sol\":8622:8657  _safeTransfer(_token1, to, amount1) */\n      tag_280\n        /* \"contracts/TenkStablePair.sol\":8636:8643  _token1 */\n      dup7\n        /* \"contracts/TenkStablePair.sol\":8645:8647  to */\n      dup14\n        /* \"contracts/TenkStablePair.sol\":8649:8656  amount1 */\n      dup13\n        /* \"contracts/TenkStablePair.sol\":8622:8635  _safeTransfer */\n      tag_279\n        /* \"contracts/TenkStablePair.sol\":8622:8657  _safeTransfer(_token1, to, amount1) */\n      jump\t// in\n    tag_280:\n        /* \"contracts/TenkStablePair.sol\":8682:8689  _token0 */\n      dup7\n        /* \"contracts/TenkStablePair.sol\":8675:8700  IERC20(_token0).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/TenkStablePair.sol\":8709:8713  this */\n      address\n        /* \"contracts/TenkStablePair.sol\":8675:8715  IERC20(_token0).balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_281\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_281:\n        /* \"contracts/TenkStablePair.sol\":8675:8715  IERC20(_token0).balanceOf(address(this)) */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_282\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_282:\n        /* \"contracts/TenkStablePair.sol\":8675:8715  IERC20(_token0).balanceOf(address(this)) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_283\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_283:\n        /* \"contracts/TenkStablePair.sol\":8675:8715  IERC20(_token0).balanceOf(address(this)) */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"contracts/TenkStablePair.sol\":8664:8715  balance0 = IERC20(_token0).balanceOf(address(this)) */\n      swap5\n      pop\n        /* \"contracts/TenkStablePair.sol\":8740:8747  _token1 */\n      dup6\n        /* \"contracts/TenkStablePair.sol\":8733:8758  IERC20(_token1).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/TenkStablePair.sol\":8767:8771  this */\n      address\n        /* \"contracts/TenkStablePair.sol\":8733:8773  IERC20(_token1).balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_284\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_284:\n        /* \"contracts/TenkStablePair.sol\":8733:8773  IERC20(_token1).balanceOf(address(this)) */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_285\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_285:\n        /* \"contracts/TenkStablePair.sol\":8733:8773  IERC20(_token1).balanceOf(address(this)) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_286\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_286:\n        /* \"contracts/TenkStablePair.sol\":8733:8773  IERC20(_token1).balanceOf(address(this)) */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"contracts/TenkStablePair.sol\":8722:8773  balance1 = IERC20(_token1).balanceOf(address(this)) */\n      swap4\n      pop\n        /* \"contracts/TenkStablePair.sol\":8782:8809  _update(balance0, balance1) */\n      tag_287\n        /* \"contracts/TenkStablePair.sol\":8790:8798  balance0 */\n      dup6\n        /* \"contracts/TenkStablePair.sol\":8800:8808  balance1 */\n      dup6\n        /* \"contracts/TenkStablePair.sol\":8782:8789  _update */\n      tag_253\n        /* \"contracts/TenkStablePair.sol\":8782:8809  _update(balance0, balance1) */\n      jump\t// in\n    tag_287:\n        /* \"contracts/TenkStablePair.sol\":8820:8825  feeOn */\n      dup2\n        /* \"contracts/TenkStablePair.sol\":8816:8869  if (feeOn) kLast = _k(uint(reserve0), uint(reserve1)) */\n      iszero\n      tag_288\n      jumpi\n        /* \"contracts/TenkStablePair.sol\":8835:8869  _k(uint(reserve0), uint(reserve1)) */\n      tag_289\n        /* \"contracts/TenkStablePair.sol\":8843:8851  reserve0 */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TenkStablePair.sol\":8838:8852  uint(reserve0) */\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TenkStablePair.sol\":8859:8867  reserve1 */\n      0x08\n      0x0e\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TenkStablePair.sol\":8854:8868  uint(reserve1) */\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TenkStablePair.sol\":8835:8837  _k */\n      tag_193\n        /* \"contracts/TenkStablePair.sol\":8835:8869  _k(uint(reserve0), uint(reserve1)) */\n      jump\t// in\n    tag_289:\n        /* \"contracts/TenkStablePair.sol\":8827:8832  kLast */\n      0x0b\n        /* \"contracts/TenkStablePair.sol\":8827:8869  kLast = _k(uint(reserve0), uint(reserve1)) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/TenkStablePair.sol\":8816:8869  if (feeOn) kLast = _k(uint(reserve0), uint(reserve1)) */\n    tag_288:\n        /* \"contracts/TenkStablePair.sol\":8956:8958  to */\n      dup12\n        /* \"contracts/TenkStablePair.sol\":8921:8959  Burn(msg.sender, amount0, amount1, to) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TenkStablePair.sol\":8926:8936  msg.sender */\n      caller\n        /* \"contracts/TenkStablePair.sol\":8921:8959  Burn(msg.sender, amount0, amount1, to) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xdccd412f0b1252819cb1fd330b93224ca42612892bb3f4f789976e6d81936496\n        /* \"contracts/TenkStablePair.sol\":8938:8945  amount0 */\n      dup14\n        /* \"contracts/TenkStablePair.sol\":8947:8954  amount1 */\n      dup14\n        /* \"contracts/TenkStablePair.sol\":8921:8959  Burn(msg.sender, amount0, amount1, to) */\n      mload(0x40)\n      dup1\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/TenkStablePair.sol\":1612:1613  _ */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/TenkStablePair.sol\":1631:1632  1 */\n      0x01\n        /* \"contracts/TenkStablePair.sol\":1620:1628  unlocked */\n      0x0d\n        /* \"contracts/TenkStablePair.sol\":1620:1632  unlocked = 1 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/TenkStablePair.sol\":7660:8965  function burn(address to) external lock returns (uint amount0, uint amount1) {\r... */\n      swap2\n      pop\n      swap2\n      jump\t// out\n        /* \"contracts/TenkERC20.sol\":226:267  string public constant symbol = 'CMLT-LP' */\n    tag_124:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x07\n      dup2\n      mstore\n      0x20\n      add\n      0x434d4c542d4c5000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/TenkStablePair.sol\":1323:1345  bool public stableSwap */\n    tag_130:\n      0x0c\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/TenkERC20.sol\":2380:2519  function transfer(address to, uint value) external returns (bool) {\r... */\n    tag_133:\n        /* \"contracts/TenkERC20.sol\":2440:2444  bool */\n      0x00\n        /* \"contracts/TenkERC20.sol\":2457:2489  _transfer(msg.sender, to, value) */\n      tag_291\n        /* \"contracts/TenkERC20.sol\":2467:2477  msg.sender */\n      caller\n        /* \"contracts/TenkERC20.sol\":2479:2481  to */\n      dup5\n        /* \"contracts/TenkERC20.sol\":2483:2488  value */\n      dup5\n        /* \"contracts/TenkERC20.sol\":2457:2466  _transfer */\n      tag_175\n        /* \"contracts/TenkERC20.sol\":2457:2489  _transfer(msg.sender, to, value) */\n      jump\t// in\n    tag_291:\n        /* \"contracts/TenkERC20.sol\":2507:2511  true */\n      0x01\n        /* \"contracts/TenkERC20.sol\":2500:2511  return true */\n      swap1\n      pop\n        /* \"contracts/TenkERC20.sol\":2380:2519  function transfer(address to, uint value) external returns (bool) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/TenkStablePair.sol\":1397:1426  bool public pairTypeImmutable */\n    tag_135:\n      0x0c\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/TenkStablePair.sol\":352:400  uint public constant MINIMUM_LIQUIDITY = 10 ** 3 */\n    tag_137:\n        /* \"contracts/TenkStablePair.sol\":393:400  10 ** 3 */\n      0x03e8\n        /* \"contracts/TenkStablePair.sol\":352:400  uint public constant MINIMUM_LIQUIDITY = 10 ** 3 */\n      dup2\n      jump\t// out\n        /* \"contracts/TenkStablePair.sol\":16932:17276  function skim(address to) external lock {\r... */\n    tag_140:\n        /* \"contracts/TenkStablePair.sol\":1569:1570  1 */\n      0x01\n        /* \"contracts/TenkStablePair.sol\":1557:1565  unlocked */\n      sload(0x0d)\n        /* \"contracts/TenkStablePair.sol\":1557:1570  unlocked == 1 */\n      eq\n        /* \"contracts/TenkStablePair.sol\":1549:1586  require(unlocked == 1, '10k: LOCKED') */\n      tag_293\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x0b\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x31306b3a204c4f434b4544000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_293:\n        /* \"contracts/TenkStablePair.sol\":1604:1605  0 */\n      0x00\n        /* \"contracts/TenkStablePair.sol\":1593:1601  unlocked */\n      0x0d\n        /* \"contracts/TenkStablePair.sol\":1593:1605  unlocked = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/TenkStablePair.sol\":16979:16994  address _token0 */\n      0x00\n        /* \"contracts/TenkStablePair.sol\":16997:17003  token0 */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TenkStablePair.sol\":16979:17003  address _token0 = token0 */\n      swap1\n      pop\n        /* \"contracts/TenkStablePair.sol\":17030:17045  address _token1 */\n      0x00\n        /* \"contracts/TenkStablePair.sol\":17048:17054  token1 */\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TenkStablePair.sol\":17030:17054  address _token1 = token1 */\n      swap1\n      pop\n        /* \"contracts/TenkStablePair.sol\":17081:17163  _safeTransfer(_token0, to, IERC20(_token0).balanceOf(address(this)).sub(reserve0)) */\n      tag_295\n        /* \"contracts/TenkStablePair.sol\":17095:17102  _token0 */\n      dup3\n        /* \"contracts/TenkStablePair.sol\":17104:17106  to */\n      dup5\n        /* \"contracts/TenkStablePair.sol\":17108:17162  IERC20(_token0).balanceOf(address(this)).sub(reserve0) */\n      tag_296\n        /* \"contracts/TenkStablePair.sol\":17153:17161  reserve0 */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TenkStablePair.sol\":17108:17162  IERC20(_token0).balanceOf(address(this)).sub(reserve0) */\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TenkStablePair.sol\":17115:17122  _token0 */\n      dup7\n        /* \"contracts/TenkStablePair.sol\":17108:17133  IERC20(_token0).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/TenkStablePair.sol\":17142:17146  this */\n      address\n        /* \"contracts/TenkStablePair.sol\":17108:17148  IERC20(_token0).balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_297\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_297:\n        /* \"contracts/TenkStablePair.sol\":17108:17148  IERC20(_token0).balanceOf(address(this)) */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_298\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_298:\n        /* \"contracts/TenkStablePair.sol\":17108:17148  IERC20(_token0).balanceOf(address(this)) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_299\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_299:\n        /* \"contracts/TenkStablePair.sol\":17108:17148  IERC20(_token0).balanceOf(address(this)) */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"contracts/TenkStablePair.sol\":17108:17152  IERC20(_token0).balanceOf(address(this)).sub */\n      tag_173\n      swap1\n        /* \"contracts/TenkStablePair.sol\":17108:17162  IERC20(_token0).balanceOf(address(this)).sub(reserve0) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_296:\n        /* \"contracts/TenkStablePair.sol\":17081:17094  _safeTransfer */\n      tag_279\n        /* \"contracts/TenkStablePair.sol\":17081:17163  _safeTransfer(_token0, to, IERC20(_token0).balanceOf(address(this)).sub(reserve0)) */\n      jump\t// in\n    tag_295:\n        /* \"contracts/TenkStablePair.sol\":17170:17252  _safeTransfer(_token1, to, IERC20(_token1).balanceOf(address(this)).sub(reserve1)) */\n      tag_300\n        /* \"contracts/TenkStablePair.sol\":17184:17191  _token1 */\n      dup2\n        /* \"contracts/TenkStablePair.sol\":17193:17195  to */\n      dup5\n        /* \"contracts/TenkStablePair.sol\":17197:17251  IERC20(_token1).balanceOf(address(this)).sub(reserve1) */\n      tag_301\n        /* \"contracts/TenkStablePair.sol\":17242:17250  reserve1 */\n      0x08\n      0x0e\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TenkStablePair.sol\":17197:17251  IERC20(_token1).balanceOf(address(this)).sub(reserve1) */\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TenkStablePair.sol\":17204:17211  _token1 */\n      dup6\n        /* \"contracts/TenkStablePair.sol\":17197:17222  IERC20(_token1).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/TenkStablePair.sol\":17231:17235  this */\n      address\n        /* \"contracts/TenkStablePair.sol\":17197:17237  IERC20(_token1).balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_302\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_302:\n        /* \"contracts/TenkStablePair.sol\":17197:17237  IERC20(_token1).balanceOf(address(this)) */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_303\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_303:\n        /* \"contracts/TenkStablePair.sol\":17197:17237  IERC20(_token1).balanceOf(address(this)) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_304\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_304:\n        /* \"contracts/TenkStablePair.sol\":17197:17237  IERC20(_token1).balanceOf(address(this)) */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"contracts/TenkStablePair.sol\":17197:17241  IERC20(_token1).balanceOf(address(this)).sub */\n      tag_173\n      swap1\n        /* \"contracts/TenkStablePair.sol\":17197:17251  IERC20(_token1).balanceOf(address(this)).sub(reserve1) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_301:\n        /* \"contracts/TenkStablePair.sol\":17170:17183  _safeTransfer */\n      tag_279\n        /* \"contracts/TenkStablePair.sol\":17170:17252  _safeTransfer(_token1, to, IERC20(_token1).balanceOf(address(this)).sub(reserve1)) */\n      jump\t// in\n    tag_300:\n        /* \"contracts/TenkStablePair.sol\":17264:17270  Skim() */\n      0x21ad22495c9c75cd1c94756f91824e779c0c8a8e168b267c790df464fe056b79\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/TenkStablePair.sol\":1612:1613  _ */\n      pop\n      pop\n        /* \"contracts/TenkStablePair.sol\":1631:1632  1 */\n      0x01\n        /* \"contracts/TenkStablePair.sol\":1620:1628  unlocked */\n      0x0d\n        /* \"contracts/TenkStablePair.sol\":1620:1632  unlocked = 1 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/TenkStablePair.sol\":16932:17276  function skim(address to) external lock {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/TenkStablePair.sol\":500:522  address public factory */\n    tag_142:\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/TenkStablePair.sol\":553:574  address public token1 */\n    tag_144:\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/TenkERC20.sol\":2934:3608  function permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external {\r... */\n    tag_147:\n        /* \"contracts/TenkERC20.sol\":3080:3095  block.timestamp */\n      timestamp\n        /* \"contracts/TenkERC20.sol\":3068:3076  deadline */\n      dup5\n        /* \"contracts/TenkERC20.sol\":3068:3095  deadline >= block.timestamp */\n      lt\n      iszero\n        /* \"contracts/TenkERC20.sol\":3060:3118  require(deadline >= block.timestamp, 'UniswapV2: EXPIRED') */\n      tag_306\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x12\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x556e697377617056323a20455850495245440000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_306:\n        /* \"contracts/TenkERC20.sol\":3129:3143  bytes32 digest */\n      0x00\n        /* \"contracts/TenkERC20.sol\":3234:3250  DOMAIN_SEPARATOR */\n      sload(0x03)\n        /* \"contracts/TenkERC20.sol\":650:716  0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9 */\n      0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9\n        /* \"contracts/TenkERC20.sol\":3290:3305  PERMIT_TYPEHASH */\n      0x00\n      shl\n        /* \"contracts/TenkERC20.sol\":3307:3312  owner */\n      dup10\n        /* \"contracts/TenkERC20.sol\":3314:3321  spender */\n      dup10\n        /* \"contracts/TenkERC20.sol\":3323:3328  value */\n      dup10\n        /* \"contracts/TenkERC20.sol\":3330:3336  nonces */\n      0x04\n        /* \"contracts/TenkERC20.sol\":3330:3343  nonces[owner] */\n      0x00\n        /* \"contracts/TenkERC20.sol\":3337:3342  owner */\n      dup15\n        /* \"contracts/TenkERC20.sol\":3330:3343  nonces[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/TenkERC20.sol\":3330:3345  nonces[owner]++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      0x01\n      add\n      swap2\n      swap1\n      pop\n      sstore\n        /* \"contracts/TenkERC20.sol\":3347:3355  deadline */\n      dup11\n        /* \"contracts/TenkERC20.sol\":3279:3356  abi.encode(PERMIT_TYPEHASH, owner, spender, value, nonces[owner]++, deadline) */\n      add(0x20, mload(0x40))\n      dup1\n      dup8\n      dup2\n      mstore\n      0x20\n      add\n      dup7\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup6\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup5\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n        /* \"--CODEGEN--\":49:53   */\n      0x20\n        /* \"--CODEGEN--\":39:46   */\n      dup2\n        /* \"--CODEGEN--\":30:37   */\n      dup4\n        /* \"--CODEGEN--\":26:47   */\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      sub\n        /* \"--CODEGEN--\":13:20   */\n      dup2\n        /* \"--CODEGEN--\":6:55   */\n      mstore\n        /* \"contracts/TenkERC20.sol\":3279:3356  abi.encode(PERMIT_TYPEHASH, owner, spender, value, nonces[owner]++, deadline) */\n      swap1\n      0x40\n      mstore\n        /* \"contracts/TenkERC20.sol\":3269:3357  keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, value, nonces[owner]++, deadline)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"contracts/TenkERC20.sol\":3170:3372  abi.encodePacked(\r... */\n      add(0x20, mload(0x40))\n      dup1\n      dup1\n      0x1901000000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x02\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n        /* \"--CODEGEN--\":49:53   */\n      0x20\n        /* \"--CODEGEN--\":39:46   */\n      dup2\n        /* \"--CODEGEN--\":30:37   */\n      dup4\n        /* \"--CODEGEN--\":26:47   */\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      sub\n        /* \"--CODEGEN--\":13:20   */\n      dup2\n        /* \"--CODEGEN--\":6:55   */\n      mstore\n        /* \"contracts/TenkERC20.sol\":3170:3372  abi.encodePacked(\r... */\n      swap1\n      0x40\n      mstore\n        /* \"contracts/TenkERC20.sol\":3146:3383  keccak256(\r... */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"contracts/TenkERC20.sol\":3129:3383  bytes32 digest = keccak256(\r... */\n      swap1\n      pop\n        /* \"contracts/TenkERC20.sol\":3394:3418  address recoveredAddress */\n      0x00\n        /* \"contracts/TenkERC20.sol\":3421:3447  ecrecover(digest, v, r, s) */\n      0x01\n        /* \"contracts/TenkERC20.sol\":3431:3437  digest */\n      dup3\n        /* \"contracts/TenkERC20.sol\":3439:3440  v */\n      dup7\n        /* \"contracts/TenkERC20.sol\":3442:3443  r */\n      dup7\n        /* \"contracts/TenkERC20.sol\":3445:3446  s */\n      dup7\n        /* \"contracts/TenkERC20.sol\":3421:3447  ecrecover(digest, v, r, s) */\n      mload(0x40)\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x40\n      mstore\n      mload(0x40)\n      dup1\n      dup6\n      dup2\n      mstore\n      0x20\n      add\n      dup5\n      0xff\n      and\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      0x20\n      mload(0x40)\n      0x20\n      dup2\n      sub\n      swap1\n      dup1\n      dup5\n      sub\n      swap1\n      dup6\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_307\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_307:\n        /* \"contracts/TenkERC20.sol\":3421:3447  ecrecover(digest, v, r, s) */\n      pop\n      pop\n      pop\n      mload(sub(mload(0x40), 0x20))\n        /* \"contracts/TenkERC20.sol\":3394:3447  address recoveredAddress = ecrecover(digest, v, r, s) */\n      swap1\n      pop\n        /* \"contracts/TenkERC20.sol\":3494:3495  0 */\n      0x00\n        /* \"contracts/TenkERC20.sol\":3466:3496  recoveredAddress != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TenkERC20.sol\":3466:3482  recoveredAddress */\n      dup2\n        /* \"contracts/TenkERC20.sol\":3466:3496  recoveredAddress != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/TenkERC20.sol\":3466:3525  recoveredAddress != address(0) && recoveredAddress == owner */\n      dup1\n      iszero\n      tag_308\n      jumpi\n      pop\n        /* \"contracts/TenkERC20.sol\":3520:3525  owner */\n      dup9\n        /* \"contracts/TenkERC20.sol\":3500:3525  recoveredAddress == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TenkERC20.sol\":3500:3516  recoveredAddress */\n      dup2\n        /* \"contracts/TenkERC20.sol\":3500:3525  recoveredAddress == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/TenkERC20.sol\":3466:3525  recoveredAddress != address(0) && recoveredAddress == owner */\n    tag_308:\n        /* \"contracts/TenkERC20.sol\":3458:3558  require(recoveredAddress != address(0) && recoveredAddress == owner, 'UniswapV2: INVALID_SIGNATURE') */\n      tag_309\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1c\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x556e697377617056323a20494e56414c49445f5349474e415455524500000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_309:\n        /* \"contracts/TenkERC20.sol\":3569:3600  _approve(owner, spender, value) */\n      tag_310\n        /* \"contracts/TenkERC20.sol\":3578:3583  owner */\n      dup10\n        /* \"contracts/TenkERC20.sol\":3585:3592  spender */\n      dup10\n        /* \"contracts/TenkERC20.sol\":3594:3599  value */\n      dup10\n        /* \"contracts/TenkERC20.sol\":3569:3577  _approve */\n      tag_169\n        /* \"contracts/TenkERC20.sol\":3569:3600  _approve(owner, spender, value) */\n      jump\t// in\n    tag_310:\n        /* \"contracts/TenkERC20.sol\":2934:3608  function permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external {\r... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/TenkStablePair.sol\":611:656  uint public constant FEE_DENOMINATOR = 100000 */\n    tag_149:\n        /* \"contracts/TenkStablePair.sol\":650:656  100000 */\n      0x0186a0\n        /* \"contracts/TenkStablePair.sol\":611:656  uint public constant FEE_DENOMINATOR = 100000 */\n      dup2\n      jump\t// out\n        /* \"contracts/TenkERC20.sol\":395:456  mapping(address => mapping(address => uint)) public allowance */\n    tag_152:\n      mstore(0x20, 0x02)\n      dup2\n      0x00\n      mstore\n      mstore(0x20, keccak256(0x00, 0x40))\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap2\n      pop\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/TenkStablePair.sol\":15507:15768  function getAmountOut(uint amountIn, address tokenIn) external view returns (uint) {\r... */\n    tag_155:\n        /* \"contracts/TenkStablePair.sol\":15584:15588  uint */\n      0x00\n        /* \"contracts/TenkStablePair.sol\":15597:15614  uint16 feePercent */\n      dup1\n        /* \"contracts/TenkStablePair.sol\":15628:15634  token0 */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TenkStablePair.sol\":15617:15634  tokenIn == token0 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TenkStablePair.sol\":15617:15624  tokenIn */\n      dup4\n        /* \"contracts/TenkStablePair.sol\":15617:15634  tokenIn == token0 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/TenkStablePair.sol\":15617:15672  tokenIn == token0 ? token0FeePercent : token1FeePercent */\n      tag_312\n      jumpi\n        /* \"contracts/TenkStablePair.sol\":15656:15672  token1FeePercent */\n      0x08\n      0x1e\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffff\n      and\n        /* \"contracts/TenkStablePair.sol\":15617:15672  tokenIn == token0 ? token0FeePercent : token1FeePercent */\n      jump(tag_313)\n    tag_312:\n        /* \"contracts/TenkStablePair.sol\":15637:15653  token0FeePercent */\n      0x08\n      0x1c\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffff\n      and\n        /* \"contracts/TenkStablePair.sol\":15617:15672  tokenIn == token0 ? token0FeePercent : token1FeePercent */\n    tag_313:\n        /* \"contracts/TenkStablePair.sol\":15597:15672  uint16 feePercent = tokenIn == token0 ? token0FeePercent : token1FeePercent */\n      swap1\n      pop\n        /* \"contracts/TenkStablePair.sol\":15686:15762  _getAmountOut(amountIn, tokenIn, uint(reserve0), uint(reserve1), feePercent) */\n      tag_314\n        /* \"contracts/TenkStablePair.sol\":15700:15708  amountIn */\n      dup5\n        /* \"contracts/TenkStablePair.sol\":15710:15717  tokenIn */\n      dup5\n        /* \"contracts/TenkStablePair.sol\":15724:15732  reserve0 */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TenkStablePair.sol\":15719:15733  uint(reserve0) */\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TenkStablePair.sol\":15740:15748  reserve1 */\n      0x08\n      0x0e\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TenkStablePair.sol\":15735:15749  uint(reserve1) */\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TenkStablePair.sol\":15751:15761  feePercent */\n      dup6\n        /* \"contracts/TenkStablePair.sol\":15686:15762  _getAmountOut(amountIn, tokenIn, uint(reserve0), uint(reserve1), feePercent) */\n      0xffff\n      and\n        /* \"contracts/TenkStablePair.sol\":15686:15699  _getAmountOut */\n      tag_315\n        /* \"contracts/TenkStablePair.sol\":15686:15762  _getAmountOut(amountIn, tokenIn, uint(reserve0), uint(reserve1), feePercent) */\n      jump\t// in\n    tag_314:\n        /* \"contracts/TenkStablePair.sol\":15679:15762  return _getAmountOut(amountIn, tokenIn, uint(reserve0), uint(reserve1), feePercent) */\n      swap2\n      pop\n      pop\n        /* \"contracts/TenkStablePair.sol\":15507:15768  function getAmountOut(uint amountIn, address tokenIn) external view returns (uint) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/TenkStablePair.sol\":17752:18098  function drainWrongToken(address token, address to) external lock {\r... */\n    tag_158:\n        /* \"contracts/TenkStablePair.sol\":1569:1570  1 */\n      0x01\n        /* \"contracts/TenkStablePair.sol\":1557:1565  unlocked */\n      sload(0x0d)\n        /* \"contracts/TenkStablePair.sol\":1557:1570  unlocked == 1 */\n      eq\n        /* \"contracts/TenkStablePair.sol\":1549:1586  require(unlocked == 1, '10k: LOCKED') */\n      tag_317\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x0b\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x31306b3a204c4f434b4544000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_317:\n        /* \"contracts/TenkStablePair.sol\":1604:1605  0 */\n      0x00\n        /* \"contracts/TenkStablePair.sol\":1593:1601  unlocked */\n      0x0d\n        /* \"contracts/TenkStablePair.sol\":1593:1605  unlocked = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/TenkStablePair.sol\":17865:17872  factory */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TenkStablePair.sol\":17847:17879  I10kStableFactory(factory).owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8da5cb5b\n        /* \"contracts/TenkStablePair.sol\":17847:17881  I10kStableFactory(factory).owner() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_319\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_319:\n        /* \"contracts/TenkStablePair.sol\":17847:17881  I10kStableFactory(factory).owner() */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_320\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_320:\n        /* \"contracts/TenkStablePair.sol\":17847:17881  I10kStableFactory(factory).owner() */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_321\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_321:\n        /* \"contracts/TenkStablePair.sol\":17847:17881  I10kStableFactory(factory).owner() */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"contracts/TenkStablePair.sol\":17833:17881  msg.sender == I10kStableFactory(factory).owner() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TenkStablePair.sol\":17833:17843  msg.sender */\n      caller\n        /* \"contracts/TenkStablePair.sol\":17833:17881  msg.sender == I10kStableFactory(factory).owner() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/TenkStablePair.sol\":17825:17911  require(msg.sender == I10kStableFactory(factory).owner(), \"10k: only factory's owner\") */\n      tag_322\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x19\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x31306b3a206f6e6c7920666163746f72792773206f776e657200000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_322:\n        /* \"contracts/TenkStablePair.sol\":17935:17941  token0 */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TenkStablePair.sol\":17926:17941  token != token0 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TenkStablePair.sol\":17926:17931  token */\n      dup3\n        /* \"contracts/TenkStablePair.sol\":17926:17941  token != token0 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/TenkStablePair.sol\":17926:17960  token != token0 && token != token1 */\n      dup1\n      iszero\n      tag_323\n      jumpi\n      pop\n        /* \"contracts/TenkStablePair.sol\":17954:17960  token1 */\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TenkStablePair.sol\":17945:17960  token != token1 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TenkStablePair.sol\":17945:17950  token */\n      dup3\n        /* \"contracts/TenkStablePair.sol\":17945:17960  token != token1 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/TenkStablePair.sol\":17926:17960  token != token0 && token != token1 */\n    tag_323:\n        /* \"contracts/TenkStablePair.sol\":17918:17983  require(token != token0 && token != token1, \"10k: invalid token\") */\n      tag_324\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x12\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x31306b3a20696e76616c696420746f6b656e0000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_324:\n        /* \"contracts/TenkStablePair.sol\":17990:18054  _safeTransfer(token, to, IERC20(token).balanceOf(address(this))) */\n      tag_325\n        /* \"contracts/TenkStablePair.sol\":18004:18009  token */\n      dup3\n        /* \"contracts/TenkStablePair.sol\":18011:18013  to */\n      dup3\n        /* \"contracts/TenkStablePair.sol\":18022:18027  token */\n      dup5\n        /* \"contracts/TenkStablePair.sol\":18015:18038  IERC20(token).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/TenkStablePair.sol\":18047:18051  this */\n      address\n        /* \"contracts/TenkStablePair.sol\":18015:18053  IERC20(token).balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_326\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_326:\n        /* \"contracts/TenkStablePair.sol\":18015:18053  IERC20(token).balanceOf(address(this)) */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_327\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_327:\n        /* \"contracts/TenkStablePair.sol\":18015:18053  IERC20(token).balanceOf(address(this)) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_328\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_328:\n        /* \"contracts/TenkStablePair.sol\":18015:18053  IERC20(token).balanceOf(address(this)) */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"contracts/TenkStablePair.sol\":17990:18003  _safeTransfer */\n      tag_279\n        /* \"contracts/TenkStablePair.sol\":17990:18054  _safeTransfer(token, to, IERC20(token).balanceOf(address(this))) */\n      jump\t// in\n    tag_325:\n        /* \"contracts/TenkStablePair.sol\":18082:18087  token */\n      dup2\n        /* \"contracts/TenkStablePair.sol\":18066:18092  DrainWrongToken(token, to) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x368a9dc863ecb94b5ba32a682e26295b10d9c2666fad7d785ebdf262c3c52413\n        /* \"contracts/TenkStablePair.sol\":18089:18091  to */\n      dup3\n        /* \"contracts/TenkStablePair.sol\":18066:18092  DrainWrongToken(token, to) */\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/TenkStablePair.sol\":1631:1632  1 */\n      0x01\n        /* \"contracts/TenkStablePair.sol\":1620:1628  unlocked */\n      0x0d\n        /* \"contracts/TenkStablePair.sol\":1620:1632  unlocked = 1 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/TenkStablePair.sol\":17752:18098  function drainWrongToken(address token, address to) external lock {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/TenkStablePair.sol\":17321:17631  function sync() external lock {\r... */\n    tag_160:\n        /* \"contracts/TenkStablePair.sol\":1569:1570  1 */\n      0x01\n        /* \"contracts/TenkStablePair.sol\":1557:1565  unlocked */\n      sload(0x0d)\n        /* \"contracts/TenkStablePair.sol\":1557:1570  unlocked == 1 */\n      eq\n        /* \"contracts/TenkStablePair.sol\":1549:1586  require(unlocked == 1, '10k: LOCKED') */\n      tag_330\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x0b\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x31306b3a204c4f434b4544000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_330:\n        /* \"contracts/TenkStablePair.sol\":1604:1605  0 */\n      0x00\n        /* \"contracts/TenkStablePair.sol\":1593:1601  unlocked */\n      0x0d\n        /* \"contracts/TenkStablePair.sol\":1593:1605  unlocked = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/TenkStablePair.sol\":17358:17376  uint token0Balance */\n      0x00\n        /* \"contracts/TenkStablePair.sol\":17386:17392  token0 */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TenkStablePair.sol\":17379:17403  IERC20(token0).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/TenkStablePair.sol\":17412:17416  this */\n      address\n        /* \"contracts/TenkStablePair.sol\":17379:17418  IERC20(token0).balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_332\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_332:\n        /* \"contracts/TenkStablePair.sol\":17379:17418  IERC20(token0).balanceOf(address(this)) */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_333\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_333:\n        /* \"contracts/TenkStablePair.sol\":17379:17418  IERC20(token0).balanceOf(address(this)) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_334\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_334:\n        /* \"contracts/TenkStablePair.sol\":17379:17418  IERC20(token0).balanceOf(address(this)) */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"contracts/TenkStablePair.sol\":17358:17418  uint token0Balance = IERC20(token0).balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/TenkStablePair.sol\":17425:17443  uint token1Balance */\n      0x00\n        /* \"contracts/TenkStablePair.sol\":17453:17459  token1 */\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TenkStablePair.sol\":17446:17470  IERC20(token1).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/TenkStablePair.sol\":17479:17483  this */\n      address\n        /* \"contracts/TenkStablePair.sol\":17446:17485  IERC20(token1).balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_335\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_335:\n        /* \"contracts/TenkStablePair.sol\":17446:17485  IERC20(token1).balanceOf(address(this)) */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_336\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_336:\n        /* \"contracts/TenkStablePair.sol\":17446:17485  IERC20(token1).balanceOf(address(this)) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_337\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_337:\n        /* \"contracts/TenkStablePair.sol\":17446:17485  IERC20(token1).balanceOf(address(this)) */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"contracts/TenkStablePair.sol\":17425:17485  uint token1Balance = IERC20(token1).balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/TenkStablePair.sol\":17517:17518  0 */\n      0x00\n        /* \"contracts/TenkStablePair.sol\":17500:17513  token0Balance */\n      dup3\n        /* \"contracts/TenkStablePair.sol\":17500:17518  token0Balance != 0 */\n      eq\n      iszero\n        /* \"contracts/TenkStablePair.sol\":17500:17540  token0Balance != 0 && token1Balance != 0 */\n      dup1\n      iszero\n      tag_338\n      jumpi\n      pop\n        /* \"contracts/TenkStablePair.sol\":17539:17540  0 */\n      0x00\n        /* \"contracts/TenkStablePair.sol\":17522:17535  token1Balance */\n      dup2\n        /* \"contracts/TenkStablePair.sol\":17522:17540  token1Balance != 0 */\n      eq\n      iszero\n        /* \"contracts/TenkStablePair.sol\":17500:17540  token0Balance != 0 && token1Balance != 0 */\n    tag_338:\n        /* \"contracts/TenkStablePair.sol\":17492:17581  require(token0Balance != 0 && token1Balance != 0, \"10k: liquidity ratio not initialized\") */\n      tag_339\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x24\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_a8f5b5742ea4f6d77e3ddeade1d79a13f37f3b0b50626b04c2c56458d8d3d5c7\n      0x24\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_339:\n        /* \"contracts/TenkStablePair.sol\":17588:17625  _update(token0Balance, token1Balance) */\n      tag_340\n        /* \"contracts/TenkStablePair.sol\":17596:17609  token0Balance */\n      dup3\n        /* \"contracts/TenkStablePair.sol\":17611:17624  token1Balance */\n      dup3\n        /* \"contracts/TenkStablePair.sol\":17588:17595  _update */\n      tag_253\n        /* \"contracts/TenkStablePair.sol\":17588:17625  _update(token0Balance, token1Balance) */\n      jump\t// in\n    tag_340:\n        /* \"contracts/TenkStablePair.sol\":1612:1613  _ */\n      pop\n      pop\n        /* \"contracts/TenkStablePair.sol\":1631:1632  1 */\n      0x01\n        /* \"contracts/TenkStablePair.sol\":1620:1628  unlocked */\n      0x0d\n        /* \"contracts/TenkStablePair.sol\":1620:1632  unlocked = 1 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/TenkStablePair.sol\":17321:17631  function sync() external lock {\r... */\n      jump\t// out\n        /* \"contracts/TenkStablePair.sol\":10205:14219  function _swap(TokensData memory tokensData, address to, bytes memory data, address referrer) internal lock {\r... */\n    tag_165:\n        /* \"contracts/TenkStablePair.sol\":1569:1570  1 */\n      0x01\n        /* \"contracts/TenkStablePair.sol\":1557:1565  unlocked */\n      sload(0x0d)\n        /* \"contracts/TenkStablePair.sol\":1557:1570  unlocked == 1 */\n      eq\n        /* \"contracts/TenkStablePair.sol\":1549:1586  require(unlocked == 1, '10k: LOCKED') */\n      tag_342\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x0b\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x31306b3a204c4f434b4544000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_342:\n        /* \"contracts/TenkStablePair.sol\":1604:1605  0 */\n      0x00\n        /* \"contracts/TenkStablePair.sol\":1593:1601  unlocked */\n      0x0d\n        /* \"contracts/TenkStablePair.sol\":1593:1605  unlocked = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/TenkStablePair.sol\":10352:10353  0 */\n      0x00\n        /* \"contracts/TenkStablePair.sol\":10328:10338  tokensData */\n      dup5\n        /* \"contracts/TenkStablePair.sol\":10328:10349  tokensData.amount0Out */\n      0x40\n      add\n      mload\n        /* \"contracts/TenkStablePair.sol\":10328:10353  tokensData.amount0Out > 0 */\n      gt\n        /* \"contracts/TenkStablePair.sol\":10328:10382  tokensData.amount0Out > 0 || tokensData.amount1Out > 0 */\n      dup1\n      tag_344\n      jumpi\n      pop\n        /* \"contracts/TenkStablePair.sol\":10381:10382  0 */\n      0x00\n        /* \"contracts/TenkStablePair.sol\":10357:10367  tokensData */\n      dup5\n        /* \"contracts/TenkStablePair.sol\":10357:10378  tokensData.amount1Out */\n      0x60\n      add\n      mload\n        /* \"contracts/TenkStablePair.sol\":10357:10382  tokensData.amount1Out > 0 */\n      gt\n        /* \"contracts/TenkStablePair.sol\":10328:10382  tokensData.amount0Out > 0 || tokensData.amount1Out > 0 */\n    tag_344:\n        /* \"contracts/TenkStablePair.sol\":10320:10418  require(tokensData.amount0Out > 0 || tokensData.amount1Out > 0, '10k: INSUFFICIENT_OUTPUT_AMOUNT') */\n      tag_345\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1f\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x31306b3a20494e53554646494349454e545f4f55545055545f414d4f554e5400\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_345:\n        /* \"contracts/TenkStablePair.sol\":10428:10445  uint112 _reserve0 */\n      0x00\n        /* \"contracts/TenkStablePair.sol\":10447:10464  uint112 _reserve1 */\n      dup1\n        /* \"contracts/TenkStablePair.sol\":10466:10490  uint16 _token0FeePercent */\n      0x00\n        /* \"contracts/TenkStablePair.sol\":10492:10516  uint16 _token1FeePercent */\n      dup1\n        /* \"contracts/TenkStablePair.sol\":10520:10533  getReserves() */\n      tag_346\n        /* \"contracts/TenkStablePair.sol\":10520:10531  getReserves */\n      tag_63\n        /* \"contracts/TenkStablePair.sol\":10520:10533  getReserves() */\n      jump\t// in\n    tag_346:\n        /* \"contracts/TenkStablePair.sol\":10427:10533  (uint112 _reserve0, uint112 _reserve1, uint16 _token0FeePercent, uint16 _token1FeePercent) = getReserves() */\n      swap4\n      pop\n      swap4\n      pop\n      swap4\n      pop\n      swap4\n      pop\n        /* \"contracts/TenkStablePair.sol\":10572:10581  _reserve0 */\n      dup4\n        /* \"contracts/TenkStablePair.sol\":10548:10581  tokensData.amount0Out < _reserve0 */\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TenkStablePair.sol\":10548:10558  tokensData */\n      dup9\n        /* \"contracts/TenkStablePair.sol\":10548:10569  tokensData.amount0Out */\n      0x40\n      add\n      mload\n        /* \"contracts/TenkStablePair.sol\":10548:10581  tokensData.amount0Out < _reserve0 */\n      lt\n        /* \"contracts/TenkStablePair.sol\":10548:10618  tokensData.amount0Out < _reserve0 && tokensData.amount1Out < _reserve1 */\n      dup1\n      iszero\n      tag_347\n      jumpi\n      pop\n        /* \"contracts/TenkStablePair.sol\":10609:10618  _reserve1 */\n      dup3\n        /* \"contracts/TenkStablePair.sol\":10585:10618  tokensData.amount1Out < _reserve1 */\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TenkStablePair.sol\":10585:10595  tokensData */\n      dup9\n        /* \"contracts/TenkStablePair.sol\":10585:10606  tokensData.amount1Out */\n      0x60\n      add\n      mload\n        /* \"contracts/TenkStablePair.sol\":10585:10618  tokensData.amount1Out < _reserve1 */\n      lt\n        /* \"contracts/TenkStablePair.sol\":10548:10618  tokensData.amount0Out < _reserve0 && tokensData.amount1Out < _reserve1 */\n    tag_347:\n        /* \"contracts/TenkStablePair.sol\":10540:10650  require(tokensData.amount0Out < _reserve0 && tokensData.amount1Out < _reserve1, '10k: INSUFFICIENT_LIQUIDITY') */\n      tag_348\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1b\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x31306b3a20494e53554646494349454e545f4c49515549444954590000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_348:\n        /* \"contracts/TenkStablePair.sol\":10684:10694  tokensData */\n      dup8\n        /* \"contracts/TenkStablePair.sol\":10684:10701  tokensData.token0 */\n      0x00\n      add\n      mload\n        /* \"contracts/TenkStablePair.sol\":10678:10701  to != tokensData.token0 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TenkStablePair.sol\":10678:10680  to */\n      dup8\n        /* \"contracts/TenkStablePair.sol\":10678:10701  to != tokensData.token0 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/TenkStablePair.sol\":10678:10728  to != tokensData.token0 && to != tokensData.token1 */\n      dup1\n      iszero\n      tag_349\n      jumpi\n      pop\n        /* \"contracts/TenkStablePair.sol\":10711:10721  tokensData */\n      dup8\n        /* \"contracts/TenkStablePair.sol\":10711:10728  tokensData.token1 */\n      0x20\n      add\n      mload\n        /* \"contracts/TenkStablePair.sol\":10705:10728  to != tokensData.token1 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TenkStablePair.sol\":10705:10707  to */\n      dup8\n        /* \"contracts/TenkStablePair.sol\":10705:10728  to != tokensData.token1 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/TenkStablePair.sol\":10678:10728  to != tokensData.token0 && to != tokensData.token1 */\n    tag_349:\n        /* \"contracts/TenkStablePair.sol\":10670:10748  require(to != tokensData.token0 && to != tokensData.token1, '10k: INVALID_TO') */\n      tag_350\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x0f\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x31306b3a20494e56414c49445f544f0000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_350:\n        /* \"contracts/TenkStablePair.sol\":10826:10827  0 */\n      0x00\n        /* \"contracts/TenkStablePair.sol\":10802:10812  tokensData */\n      dup9\n        /* \"contracts/TenkStablePair.sol\":10802:10823  tokensData.amount0Out */\n      0x40\n      add\n      mload\n        /* \"contracts/TenkStablePair.sol\":10802:10827  tokensData.amount0Out > 0 */\n      gt\n        /* \"contracts/TenkStablePair.sol\":10798:10888  if (tokensData.amount0Out > 0) _safeTransfer(tokensData.token0, to, tokensData.amount0Out) */\n      iszero\n      tag_351\n      jumpi\n        /* \"contracts/TenkStablePair.sol\":10829:10888  _safeTransfer(tokensData.token0, to, tokensData.amount0Out) */\n      tag_352\n        /* \"contracts/TenkStablePair.sol\":10843:10853  tokensData */\n      dup9\n        /* \"contracts/TenkStablePair.sol\":10843:10860  tokensData.token0 */\n      0x00\n      add\n      mload\n        /* \"contracts/TenkStablePair.sol\":10862:10864  to */\n      dup9\n        /* \"contracts/TenkStablePair.sol\":10866:10876  tokensData */\n      dup11\n        /* \"contracts/TenkStablePair.sol\":10866:10887  tokensData.amount0Out */\n      0x40\n      add\n      mload\n        /* \"contracts/TenkStablePair.sol\":10829:10842  _safeTransfer */\n      tag_279\n        /* \"contracts/TenkStablePair.sol\":10829:10888  _safeTransfer(tokensData.token0, to, tokensData.amount0Out) */\n      jump\t// in\n    tag_352:\n        /* \"contracts/TenkStablePair.sol\":10798:10888  if (tokensData.amount0Out > 0) _safeTransfer(tokensData.token0, to, tokensData.amount0Out) */\n    tag_351:\n        /* \"contracts/TenkStablePair.sol\":10966:10967  0 */\n      0x00\n        /* \"contracts/TenkStablePair.sol\":10942:10952  tokensData */\n      dup9\n        /* \"contracts/TenkStablePair.sol\":10942:10963  tokensData.amount1Out */\n      0x60\n      add\n      mload\n        /* \"contracts/TenkStablePair.sol\":10942:10967  tokensData.amount1Out > 0 */\n      gt\n        /* \"contracts/TenkStablePair.sol\":10938:11028  if (tokensData.amount1Out > 0) _safeTransfer(tokensData.token1, to, tokensData.amount1Out) */\n      iszero\n      tag_353\n      jumpi\n        /* \"contracts/TenkStablePair.sol\":10969:11028  _safeTransfer(tokensData.token1, to, tokensData.amount1Out) */\n      tag_354\n        /* \"contracts/TenkStablePair.sol\":10983:10993  tokensData */\n      dup9\n        /* \"contracts/TenkStablePair.sol\":10983:11000  tokensData.token1 */\n      0x20\n      add\n      mload\n        /* \"contracts/TenkStablePair.sol\":11002:11004  to */\n      dup9\n        /* \"contracts/TenkStablePair.sol\":11006:11016  tokensData */\n      dup11\n        /* \"contracts/TenkStablePair.sol\":11006:11027  tokensData.amount1Out */\n      0x60\n      add\n      mload\n        /* \"contracts/TenkStablePair.sol\":10969:10982  _safeTransfer */\n      tag_279\n        /* \"contracts/TenkStablePair.sol\":10969:11028  _safeTransfer(tokensData.token1, to, tokensData.amount1Out) */\n      jump\t// in\n    tag_354:\n        /* \"contracts/TenkStablePair.sol\":10938:11028  if (tokensData.amount1Out > 0) _safeTransfer(tokensData.token1, to, tokensData.amount1Out) */\n    tag_353:\n        /* \"contracts/TenkStablePair.sol\":11055:11056  0 */\n      0x00\n        /* \"contracts/TenkStablePair.sol\":11041:11045  data */\n      dup7\n        /* \"contracts/TenkStablePair.sol\":11041:11052  data.length */\n      mload\n        /* \"contracts/TenkStablePair.sol\":11041:11056  data.length > 0 */\n      gt\n        /* \"contracts/TenkStablePair.sol\":11037:11156  if (data.length > 0) I10kStableCallee(to).uniswapV2Call(msg.sender, tokensData.amount0Out, tokensData.amount1Out, data) */\n      iszero\n      tag_355\n      jumpi\n        /* \"contracts/TenkStablePair.sol\":11075:11077  to */\n      dup7\n        /* \"contracts/TenkStablePair.sol\":11058:11092  I10kStableCallee(to).uniswapV2Call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x10d1e85c\n        /* \"contracts/TenkStablePair.sol\":11093:11103  msg.sender */\n      caller\n        /* \"contracts/TenkStablePair.sol\":11105:11115  tokensData */\n      dup11\n        /* \"contracts/TenkStablePair.sol\":11105:11126  tokensData.amount0Out */\n      0x40\n      add\n      mload\n        /* \"contracts/TenkStablePair.sol\":11128:11138  tokensData */\n      dup12\n        /* \"contracts/TenkStablePair.sol\":11128:11149  tokensData.amount1Out */\n      0x60\n      add\n      mload\n        /* \"contracts/TenkStablePair.sol\":11151:11155  data */\n      dup11\n        /* \"contracts/TenkStablePair.sol\":11058:11156  I10kStableCallee(to).uniswapV2Call(msg.sender, tokensData.amount0Out, tokensData.amount1Out, data) */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup6\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup5\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_356:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_358\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_356)\n    tag_358:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"contracts/TenkStablePair.sol\":11058:11156  I10kStableCallee(to).uniswapV2Call(msg.sender, tokensData.amount0Out, tokensData.amount1Out, data) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_359\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_359:\n      pop\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_360\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_360:\n        /* \"contracts/TenkStablePair.sol\":11058:11156  I10kStableCallee(to).uniswapV2Call(msg.sender, tokensData.amount0Out, tokensData.amount1Out, data) */\n      pop\n      gas\n      call\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_361\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_361:\n        /* \"contracts/TenkStablePair.sol\":11058:11156  I10kStableCallee(to).uniswapV2Call(msg.sender, tokensData.amount0Out, tokensData.amount1Out, data) */\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/TenkStablePair.sol\":11037:11156  if (data.length > 0) I10kStableCallee(to).uniswapV2Call(msg.sender, tokensData.amount0Out, tokensData.amount1Out, data) */\n    tag_355:\n        /* \"contracts/TenkStablePair.sol\":11194:11204  tokensData */\n      dup8\n        /* \"contracts/TenkStablePair.sol\":11194:11211  tokensData.token0 */\n      0x00\n      add\n      mload\n        /* \"contracts/TenkStablePair.sol\":11187:11222  IERC20(tokensData.token0).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/TenkStablePair.sol\":11231:11235  this */\n      address\n        /* \"contracts/TenkStablePair.sol\":11187:11237  IERC20(tokensData.token0).balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_362\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_362:\n        /* \"contracts/TenkStablePair.sol\":11187:11237  IERC20(tokensData.token0).balanceOf(address(this)) */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_363\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_363:\n        /* \"contracts/TenkStablePair.sol\":11187:11237  IERC20(tokensData.token0).balanceOf(address(this)) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_364\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_364:\n        /* \"contracts/TenkStablePair.sol\":11187:11237  IERC20(tokensData.token0).balanceOf(address(this)) */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"contracts/TenkStablePair.sol\":11165:11175  tokensData */\n      dup9\n        /* \"contracts/TenkStablePair.sol\":11165:11184  tokensData.balance0 */\n      0x80\n      add\n        /* \"contracts/TenkStablePair.sol\":11165:11237  tokensData.balance0 = IERC20(tokensData.token0).balanceOf(address(this)) */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/TenkStablePair.sol\":11275:11285  tokensData */\n      dup8\n        /* \"contracts/TenkStablePair.sol\":11275:11292  tokensData.token1 */\n      0x20\n      add\n      mload\n        /* \"contracts/TenkStablePair.sol\":11268:11303  IERC20(tokensData.token1).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/TenkStablePair.sol\":11312:11316  this */\n      address\n        /* \"contracts/TenkStablePair.sol\":11268:11318  IERC20(tokensData.token1).balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_365\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_365:\n        /* \"contracts/TenkStablePair.sol\":11268:11318  IERC20(tokensData.token1).balanceOf(address(this)) */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_366\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_366:\n        /* \"contracts/TenkStablePair.sol\":11268:11318  IERC20(tokensData.token1).balanceOf(address(this)) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_367\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_367:\n        /* \"contracts/TenkStablePair.sol\":11268:11318  IERC20(tokensData.token1).balanceOf(address(this)) */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"contracts/TenkStablePair.sol\":11246:11256  tokensData */\n      dup9\n        /* \"contracts/TenkStablePair.sol\":11246:11265  tokensData.balance1 */\n      0xa0\n      add\n        /* \"contracts/TenkStablePair.sol\":11246:11318  tokensData.balance1 = IERC20(tokensData.token1).balanceOf(address(this)) */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/TenkStablePair.sol\":11334:11348  uint amount0In */\n      0x00\n        /* \"contracts/TenkStablePair.sol\":11385:11395  tokensData */\n      dup9\n        /* \"contracts/TenkStablePair.sol\":11385:11406  tokensData.amount0Out */\n      0x40\n      add\n      mload\n        /* \"contracts/TenkStablePair.sol\":11373:11382  _reserve0 */\n      dup6\n        /* \"contracts/TenkStablePair.sol\":11373:11406  _reserve0 - tokensData.amount0Out */\n      0xffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/TenkStablePair.sol\":11351:11361  tokensData */\n      dup10\n        /* \"contracts/TenkStablePair.sol\":11351:11370  tokensData.balance0 */\n      0x80\n      add\n      mload\n        /* \"contracts/TenkStablePair.sol\":11351:11406  tokensData.balance0 > _reserve0 - tokensData.amount0Out */\n      gt\n        /* \"contracts/TenkStablePair.sol\":11351:11470  tokensData.balance0 > _reserve0 - tokensData.amount0Out ? tokensData.balance0 - (_reserve0 - tokensData.amount0Out) : 0 */\n      tag_368\n      jumpi\n        /* \"contracts/TenkStablePair.sol\":11469:11470  0 */\n      0x00\n        /* \"contracts/TenkStablePair.sol\":11351:11470  tokensData.balance0 > _reserve0 - tokensData.amount0Out ? tokensData.balance0 - (_reserve0 - tokensData.amount0Out) : 0 */\n      jump(tag_369)\n    tag_368:\n        /* \"contracts/TenkStablePair.sol\":11444:11454  tokensData */\n      dup9\n        /* \"contracts/TenkStablePair.sol\":11444:11465  tokensData.amount0Out */\n      0x40\n      add\n      mload\n        /* \"contracts/TenkStablePair.sol\":11432:11441  _reserve0 */\n      dup6\n        /* \"contracts/TenkStablePair.sol\":11432:11465  _reserve0 - tokensData.amount0Out */\n      0xffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/TenkStablePair.sol\":11409:11419  tokensData */\n      dup10\n        /* \"contracts/TenkStablePair.sol\":11409:11428  tokensData.balance0 */\n      0x80\n      add\n      mload\n        /* \"contracts/TenkStablePair.sol\":11409:11466  tokensData.balance0 - (_reserve0 - tokensData.amount0Out) */\n      sub\n        /* \"contracts/TenkStablePair.sol\":11351:11470  tokensData.balance0 > _reserve0 - tokensData.amount0Out ? tokensData.balance0 - (_reserve0 - tokensData.amount0Out) : 0 */\n    tag_369:\n        /* \"contracts/TenkStablePair.sol\":11334:11470  uint amount0In = tokensData.balance0 > _reserve0 - tokensData.amount0Out ? tokensData.balance0 - (_reserve0 - tokensData.amount0Out) : 0 */\n      swap1\n      pop\n        /* \"contracts/TenkStablePair.sol\":11477:11491  uint amount1In */\n      0x00\n        /* \"contracts/TenkStablePair.sol\":11528:11538  tokensData */\n      dup10\n        /* \"contracts/TenkStablePair.sol\":11528:11549  tokensData.amount1Out */\n      0x60\n      add\n      mload\n        /* \"contracts/TenkStablePair.sol\":11516:11525  _reserve1 */\n      dup6\n        /* \"contracts/TenkStablePair.sol\":11516:11549  _reserve1 - tokensData.amount1Out */\n      0xffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/TenkStablePair.sol\":11494:11504  tokensData */\n      dup11\n        /* \"contracts/TenkStablePair.sol\":11494:11513  tokensData.balance1 */\n      0xa0\n      add\n      mload\n        /* \"contracts/TenkStablePair.sol\":11494:11549  tokensData.balance1 > _reserve1 - tokensData.amount1Out */\n      gt\n        /* \"contracts/TenkStablePair.sol\":11494:11613  tokensData.balance1 > _reserve1 - tokensData.amount1Out ? tokensData.balance1 - (_reserve1 - tokensData.amount1Out) : 0 */\n      tag_370\n      jumpi\n        /* \"contracts/TenkStablePair.sol\":11612:11613  0 */\n      0x00\n        /* \"contracts/TenkStablePair.sol\":11494:11613  tokensData.balance1 > _reserve1 - tokensData.amount1Out ? tokensData.balance1 - (_reserve1 - tokensData.amount1Out) : 0 */\n      jump(tag_371)\n    tag_370:\n        /* \"contracts/TenkStablePair.sol\":11587:11597  tokensData */\n      dup10\n        /* \"contracts/TenkStablePair.sol\":11587:11608  tokensData.amount1Out */\n      0x60\n      add\n      mload\n        /* \"contracts/TenkStablePair.sol\":11575:11584  _reserve1 */\n      dup6\n        /* \"contracts/TenkStablePair.sol\":11575:11608  _reserve1 - tokensData.amount1Out */\n      0xffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/TenkStablePair.sol\":11552:11562  tokensData */\n      dup11\n        /* \"contracts/TenkStablePair.sol\":11552:11571  tokensData.balance1 */\n      0xa0\n      add\n      mload\n        /* \"contracts/TenkStablePair.sol\":11552:11609  tokensData.balance1 - (_reserve1 - tokensData.amount1Out) */\n      sub\n        /* \"contracts/TenkStablePair.sol\":11494:11613  tokensData.balance1 > _reserve1 - tokensData.amount1Out ? tokensData.balance1 - (_reserve1 - tokensData.amount1Out) : 0 */\n    tag_371:\n        /* \"contracts/TenkStablePair.sol\":11477:11613  uint amount1In = tokensData.balance1 > _reserve1 - tokensData.amount1Out ? tokensData.balance1 - (_reserve1 - tokensData.amount1Out) : 0 */\n      swap1\n      pop\n        /* \"contracts/TenkStablePair.sol\":11640:11641  0 */\n      0x00\n        /* \"contracts/TenkStablePair.sol\":11628:11637  amount0In */\n      dup3\n        /* \"contracts/TenkStablePair.sol\":11628:11641  amount0In > 0 */\n      gt\n        /* \"contracts/TenkStablePair.sol\":11628:11658  amount0In > 0 || amount1In > 0 */\n      dup1\n      tag_372\n      jumpi\n      pop\n        /* \"contracts/TenkStablePair.sol\":11657:11658  0 */\n      0x00\n        /* \"contracts/TenkStablePair.sol\":11645:11654  amount1In */\n      dup2\n        /* \"contracts/TenkStablePair.sol\":11645:11658  amount1In > 0 */\n      gt\n        /* \"contracts/TenkStablePair.sol\":11628:11658  amount0In > 0 || amount1In > 0 */\n    tag_372:\n        /* \"contracts/TenkStablePair.sol\":11620:11693  require(amount0In > 0 || amount1In > 0, '10k: INSUFFICIENT_INPUT_AMOUNT') */\n      tag_373\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1e\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x31306b3a20494e53554646494349454e545f494e5055545f414d4f554e540000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_373:\n        /* \"contracts/TenkStablePair.sol\":650:656  100000 */\n      0x0186a0\n        /* \"contracts/TenkStablePair.sol\":11729:11761  amount0In.mul(_token0FeePercent) */\n      tag_374\n        /* \"contracts/TenkStablePair.sol\":11743:11760  _token0FeePercent */\n      dup6\n        /* \"contracts/TenkStablePair.sol\":11729:11761  amount0In.mul(_token0FeePercent) */\n      0xffff\n      and\n        /* \"contracts/TenkStablePair.sol\":11729:11738  amount0In */\n      dup5\n        /* \"contracts/TenkStablePair.sol\":11729:11742  amount0In.mul */\n      tag_239\n      swap1\n        /* \"contracts/TenkStablePair.sol\":11729:11761  amount0In.mul(_token0FeePercent) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_374:\n        /* \"contracts/TenkStablePair.sol\":11729:11779  amount0In.mul(_token0FeePercent) / FEE_DENOMINATOR */\n      dup2\n      tag_375\n      jumpi\n      invalid\n    tag_375:\n      div\n        /* \"contracts/TenkStablePair.sol\":11702:11712  tokensData */\n      dup11\n        /* \"contracts/TenkStablePair.sol\":11702:11726  tokensData.remainingFee0 */\n      0xc0\n      add\n        /* \"contracts/TenkStablePair.sol\":11702:11779  tokensData.remainingFee0 = amount0In.mul(_token0FeePercent) / FEE_DENOMINATOR */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/TenkStablePair.sol\":650:656  100000 */\n      0x0186a0\n        /* \"contracts/TenkStablePair.sol\":11813:11845  amount1In.mul(_token1FeePercent) */\n      tag_376\n        /* \"contracts/TenkStablePair.sol\":11827:11844  _token1FeePercent */\n      dup5\n        /* \"contracts/TenkStablePair.sol\":11813:11845  amount1In.mul(_token1FeePercent) */\n      0xffff\n      and\n        /* \"contracts/TenkStablePair.sol\":11813:11822  amount1In */\n      dup4\n        /* \"contracts/TenkStablePair.sol\":11813:11826  amount1In.mul */\n      tag_239\n      swap1\n        /* \"contracts/TenkStablePair.sol\":11813:11845  amount1In.mul(_token1FeePercent) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_376:\n        /* \"contracts/TenkStablePair.sol\":11813:11863  amount1In.mul(_token1FeePercent) / FEE_DENOMINATOR */\n      dup2\n      tag_377\n      jumpi\n      invalid\n    tag_377:\n      div\n        /* \"contracts/TenkStablePair.sol\":11786:11796  tokensData */\n      dup11\n        /* \"contracts/TenkStablePair.sol\":11786:11810  tokensData.remainingFee1 */\n      0xe0\n      add\n        /* \"contracts/TenkStablePair.sol\":11786:11863  tokensData.remainingFee1 = amount1In.mul(_token1FeePercent) / FEE_DENOMINATOR */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/TenkStablePair.sol\":11924:11932  uint fee */\n      0x00\n        /* \"contracts/TenkStablePair.sol\":11935:11936  0 */\n      dup1\n        /* \"contracts/TenkStablePair.sol\":11924:11936  uint fee = 0 */\n      swap1\n      pop\n        /* \"contracts/TenkStablePair.sol\":11947:11973  uint referrerInputFeeShare */\n      0x00\n        /* \"contracts/TenkStablePair.sol\":11996:11997  0 */\n      dup1\n        /* \"contracts/TenkStablePair.sol\":11976:11998  referrer != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TenkStablePair.sol\":11976:11984  referrer */\n      dup10\n        /* \"contracts/TenkStablePair.sol\":11976:11998  referrer != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/TenkStablePair.sol\":11976:12059  referrer != address(0) ? I10kStableFactory(factory).referrersFeeShare(referrer) : 0 */\n      tag_378\n      jumpi\n        /* \"contracts/TenkStablePair.sol\":12058:12059  0 */\n      0x00\n        /* \"contracts/TenkStablePair.sol\":11976:12059  referrer != address(0) ? I10kStableFactory(factory).referrersFeeShare(referrer) : 0 */\n      jump(tag_379)\n    tag_378:\n        /* \"contracts/TenkStablePair.sol\":12019:12026  factory */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TenkStablePair.sol\":12001:12045  I10kStableFactory(factory).referrersFeeShare */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x7183d47c\n        /* \"contracts/TenkStablePair.sol\":12046:12054  referrer */\n      dup11\n        /* \"contracts/TenkStablePair.sol\":12001:12055  I10kStableFactory(factory).referrersFeeShare(referrer) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_380\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_380:\n        /* \"contracts/TenkStablePair.sol\":12001:12055  I10kStableFactory(factory).referrersFeeShare(referrer) */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_381\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_381:\n        /* \"contracts/TenkStablePair.sol\":12001:12055  I10kStableFactory(factory).referrersFeeShare(referrer) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_382\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_382:\n        /* \"contracts/TenkStablePair.sol\":12001:12055  I10kStableFactory(factory).referrersFeeShare(referrer) */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"contracts/TenkStablePair.sol\":11976:12059  referrer != address(0) ? I10kStableFactory(factory).referrersFeeShare(referrer) : 0 */\n    tag_379:\n        /* \"contracts/TenkStablePair.sol\":11947:12059  uint referrerInputFeeShare = referrer != address(0) ? I10kStableFactory(factory).referrersFeeShare(referrer) : 0 */\n      swap1\n      pop\n        /* \"contracts/TenkStablePair.sol\":12096:12097  0 */\n      0x00\n        /* \"contracts/TenkStablePair.sol\":12072:12093  referrerInputFeeShare */\n      dup2\n        /* \"contracts/TenkStablePair.sol\":12072:12097  referrerInputFeeShare > 0 */\n      gt\n        /* \"contracts/TenkStablePair.sol\":12068:12663  if (referrerInputFeeShare > 0) {\r... */\n      iszero\n      tag_383\n      jumpi\n        /* \"contracts/TenkStablePair.sol\":12126:12127  0 */\n      0x00\n        /* \"contracts/TenkStablePair.sol\":12114:12123  amount0In */\n      dup5\n        /* \"contracts/TenkStablePair.sol\":12114:12127  amount0In > 0 */\n      gt\n        /* \"contracts/TenkStablePair.sol\":12110:12377  if (amount0In > 0) {\r... */\n      iszero\n      tag_384\n      jumpi\n        /* \"contracts/TenkStablePair.sol\":12230:12231  2 */\n      0x02\n        /* \"contracts/TenkStablePair.sol\":650:656  100000 */\n      0x0186a0\n        /* \"contracts/TenkStablePair.sol\":12211:12231  FEE_DENOMINATOR ** 2 */\n      exp\n        /* \"contracts/TenkStablePair.sol\":12148:12207  amount0In.mul(referrerInputFeeShare).mul(_token0FeePercent) */\n      tag_385\n        /* \"contracts/TenkStablePair.sol\":12189:12206  _token0FeePercent */\n      dup8\n        /* \"contracts/TenkStablePair.sol\":12148:12207  amount0In.mul(referrerInputFeeShare).mul(_token0FeePercent) */\n      0xffff\n      and\n        /* \"contracts/TenkStablePair.sol\":12148:12184  amount0In.mul(referrerInputFeeShare) */\n      tag_386\n        /* \"contracts/TenkStablePair.sol\":12162:12183  referrerInputFeeShare */\n      dup5\n        /* \"contracts/TenkStablePair.sol\":12148:12157  amount0In */\n      dup9\n        /* \"contracts/TenkStablePair.sol\":12148:12161  amount0In.mul */\n      tag_239\n      swap1\n        /* \"contracts/TenkStablePair.sol\":12148:12184  amount0In.mul(referrerInputFeeShare) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_386:\n        /* \"contracts/TenkStablePair.sol\":12148:12188  amount0In.mul(referrerInputFeeShare).mul */\n      tag_239\n      swap1\n        /* \"contracts/TenkStablePair.sol\":12148:12207  amount0In.mul(referrerInputFeeShare).mul(_token0FeePercent) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_385:\n        /* \"contracts/TenkStablePair.sol\":12148:12232  amount0In.mul(referrerInputFeeShare).mul(_token0FeePercent) / (FEE_DENOMINATOR ** 2) */\n      dup2\n      tag_387\n      jumpi\n      invalid\n    tag_387:\n      div\n        /* \"contracts/TenkStablePair.sol\":12142:12232  fee = amount0In.mul(referrerInputFeeShare).mul(_token0FeePercent) / (FEE_DENOMINATOR ** 2) */\n      swap2\n      pop\n        /* \"contracts/TenkStablePair.sol\":12272:12305  tokensData.remainingFee0.sub(fee) */\n      tag_388\n        /* \"contracts/TenkStablePair.sol\":12301:12304  fee */\n      dup3\n        /* \"contracts/TenkStablePair.sol\":12272:12282  tokensData */\n      dup14\n        /* \"contracts/TenkStablePair.sol\":12272:12296  tokensData.remainingFee0 */\n      0xc0\n      add\n      mload\n        /* \"contracts/TenkStablePair.sol\":12272:12300  tokensData.remainingFee0.sub */\n      tag_173\n      swap1\n        /* \"contracts/TenkStablePair.sol\":12272:12305  tokensData.remainingFee0.sub(fee) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_388:\n        /* \"contracts/TenkStablePair.sol\":12245:12255  tokensData */\n      dup13\n        /* \"contracts/TenkStablePair.sol\":12245:12269  tokensData.remainingFee0 */\n      0xc0\n      add\n        /* \"contracts/TenkStablePair.sol\":12245:12305  tokensData.remainingFee0 = tokensData.remainingFee0.sub(fee) */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/TenkStablePair.sol\":12318:12365  _safeTransfer(tokensData.token0, referrer, fee) */\n      tag_389\n        /* \"contracts/TenkStablePair.sol\":12332:12342  tokensData */\n      dup13\n        /* \"contracts/TenkStablePair.sol\":12332:12349  tokensData.token0 */\n      0x00\n      add\n      mload\n        /* \"contracts/TenkStablePair.sol\":12351:12359  referrer */\n      dup11\n        /* \"contracts/TenkStablePair.sol\":12361:12364  fee */\n      dup5\n        /* \"contracts/TenkStablePair.sol\":12318:12331  _safeTransfer */\n      tag_279\n        /* \"contracts/TenkStablePair.sol\":12318:12365  _safeTransfer(tokensData.token0, referrer, fee) */\n      jump\t// in\n    tag_389:\n        /* \"contracts/TenkStablePair.sol\":12110:12377  if (amount0In > 0) {\r... */\n    tag_384:\n        /* \"contracts/TenkStablePair.sol\":12403:12404  0 */\n      0x00\n        /* \"contracts/TenkStablePair.sol\":12391:12400  amount1In */\n      dup4\n        /* \"contracts/TenkStablePair.sol\":12391:12404  amount1In > 0 */\n      gt\n        /* \"contracts/TenkStablePair.sol\":12387:12654  if (amount1In > 0) {\r... */\n      iszero\n      tag_390\n      jumpi\n        /* \"contracts/TenkStablePair.sol\":12507:12508  2 */\n      0x02\n        /* \"contracts/TenkStablePair.sol\":650:656  100000 */\n      0x0186a0\n        /* \"contracts/TenkStablePair.sol\":12488:12508  FEE_DENOMINATOR ** 2 */\n      exp\n        /* \"contracts/TenkStablePair.sol\":12425:12484  amount1In.mul(referrerInputFeeShare).mul(_token1FeePercent) */\n      tag_391\n        /* \"contracts/TenkStablePair.sol\":12466:12483  _token1FeePercent */\n      dup7\n        /* \"contracts/TenkStablePair.sol\":12425:12484  amount1In.mul(referrerInputFeeShare).mul(_token1FeePercent) */\n      0xffff\n      and\n        /* \"contracts/TenkStablePair.sol\":12425:12461  amount1In.mul(referrerInputFeeShare) */\n      tag_392\n        /* \"contracts/TenkStablePair.sol\":12439:12460  referrerInputFeeShare */\n      dup5\n        /* \"contracts/TenkStablePair.sol\":12425:12434  amount1In */\n      dup8\n        /* \"contracts/TenkStablePair.sol\":12425:12438  amount1In.mul */\n      tag_239\n      swap1\n        /* \"contracts/TenkStablePair.sol\":12425:12461  amount1In.mul(referrerInputFeeShare) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_392:\n        /* \"contracts/TenkStablePair.sol\":12425:12465  amount1In.mul(referrerInputFeeShare).mul */\n      tag_239\n      swap1\n        /* \"contracts/TenkStablePair.sol\":12425:12484  amount1In.mul(referrerInputFeeShare).mul(_token1FeePercent) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_391:\n        /* \"contracts/TenkStablePair.sol\":12425:12509  amount1In.mul(referrerInputFeeShare).mul(_token1FeePercent) / (FEE_DENOMINATOR ** 2) */\n      dup2\n      tag_393\n      jumpi\n      invalid\n    tag_393:\n      div\n        /* \"contracts/TenkStablePair.sol\":12419:12509  fee = amount1In.mul(referrerInputFeeShare).mul(_token1FeePercent) / (FEE_DENOMINATOR ** 2) */\n      swap2\n      pop\n        /* \"contracts/TenkStablePair.sol\":12549:12582  tokensData.remainingFee1.sub(fee) */\n      tag_394\n        /* \"contracts/TenkStablePair.sol\":12578:12581  fee */\n      dup3\n        /* \"contracts/TenkStablePair.sol\":12549:12559  tokensData */\n      dup14\n        /* \"contracts/TenkStablePair.sol\":12549:12573  tokensData.remainingFee1 */\n      0xe0\n      add\n      mload\n        /* \"contracts/TenkStablePair.sol\":12549:12577  tokensData.remainingFee1.sub */\n      tag_173\n      swap1\n        /* \"contracts/TenkStablePair.sol\":12549:12582  tokensData.remainingFee1.sub(fee) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_394:\n        /* \"contracts/TenkStablePair.sol\":12522:12532  tokensData */\n      dup13\n        /* \"contracts/TenkStablePair.sol\":12522:12546  tokensData.remainingFee1 */\n      0xe0\n      add\n        /* \"contracts/TenkStablePair.sol\":12522:12582  tokensData.remainingFee1 = tokensData.remainingFee1.sub(fee) */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/TenkStablePair.sol\":12595:12642  _safeTransfer(tokensData.token1, referrer, fee) */\n      tag_395\n        /* \"contracts/TenkStablePair.sol\":12609:12619  tokensData */\n      dup13\n        /* \"contracts/TenkStablePair.sol\":12609:12626  tokensData.token1 */\n      0x20\n      add\n      mload\n        /* \"contracts/TenkStablePair.sol\":12628:12636  referrer */\n      dup11\n        /* \"contracts/TenkStablePair.sol\":12638:12641  fee */\n      dup5\n        /* \"contracts/TenkStablePair.sol\":12595:12608  _safeTransfer */\n      tag_279\n        /* \"contracts/TenkStablePair.sol\":12595:12642  _safeTransfer(tokensData.token1, referrer, fee) */\n      jump\t// in\n    tag_395:\n        /* \"contracts/TenkStablePair.sol\":12387:12654  if (amount1In > 0) {\r... */\n    tag_390:\n        /* \"contracts/TenkStablePair.sol\":12068:12663  if (referrerInputFeeShare > 0) {\r... */\n    tag_383:\n        /* \"contracts/TenkStablePair.sol\":12676:12686  stableSwap */\n      0x0c\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/TenkStablePair.sol\":12673:13470  if(stableSwap){\r... */\n      iszero\n      tag_396\n      jumpi\n        /* \"contracts/TenkStablePair.sol\":12699:12717  uint ownerFeeShare */\n      0x00\n        /* \"contracts/TenkStablePair.sol\":12719:12732  address feeTo */\n      dup1\n        /* \"contracts/TenkStablePair.sol\":12754:12761  factory */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TenkStablePair.sol\":12736:12770  I10kStableFactory(factory).feeInfo */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x995b5aae\n        /* \"contracts/TenkStablePair.sol\":12736:12772  I10kStableFactory(factory).feeInfo() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x40\n      dup1\n      mload\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_397\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_397:\n        /* \"contracts/TenkStablePair.sol\":12736:12772  I10kStableFactory(factory).feeInfo() */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_398\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_398:\n        /* \"contracts/TenkStablePair.sol\":12736:12772  I10kStableFactory(factory).feeInfo() */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_399\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_399:\n        /* \"contracts/TenkStablePair.sol\":12736:12772  I10kStableFactory(factory).feeInfo() */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"contracts/TenkStablePair.sol\":12698:12772  (uint ownerFeeShare, address feeTo) = I10kStableFactory(factory).feeInfo() */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"contracts/TenkStablePair.sol\":12803:12804  0 */\n      0x00\n        /* \"contracts/TenkStablePair.sol\":12786:12805  feeTo != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TenkStablePair.sol\":12786:12791  feeTo */\n      dup2\n        /* \"contracts/TenkStablePair.sol\":12786:12805  feeTo != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/TenkStablePair.sol\":12783:13461  if(feeTo != address(0)) {\r... */\n      tag_400\n      jumpi\n        /* \"contracts/TenkStablePair.sol\":12836:12897  FEE_DENOMINATOR.sub(referrerInputFeeShare).mul(ownerFeeShare) */\n      tag_401\n        /* \"contracts/TenkStablePair.sol\":12883:12896  ownerFeeShare */\n      dup3\n        /* \"contracts/TenkStablePair.sol\":12836:12878  FEE_DENOMINATOR.sub(referrerInputFeeShare) */\n      tag_402\n        /* \"contracts/TenkStablePair.sol\":12856:12877  referrerInputFeeShare */\n      dup6\n        /* \"contracts/TenkStablePair.sol\":650:656  100000 */\n      0x0186a0\n        /* \"contracts/TenkStablePair.sol\":12836:12855  FEE_DENOMINATOR.sub */\n      tag_173\n      swap1\n        /* \"contracts/TenkStablePair.sol\":12836:12878  FEE_DENOMINATOR.sub(referrerInputFeeShare) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_402:\n        /* \"contracts/TenkStablePair.sol\":12836:12882  FEE_DENOMINATOR.sub(referrerInputFeeShare).mul */\n      tag_239\n      swap1\n        /* \"contracts/TenkStablePair.sol\":12836:12897  FEE_DENOMINATOR.sub(referrerInputFeeShare).mul(ownerFeeShare) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_401:\n        /* \"contracts/TenkStablePair.sol\":12820:12897  ownerFeeShare = FEE_DENOMINATOR.sub(referrerInputFeeShare).mul(ownerFeeShare) */\n      swap2\n      pop\n        /* \"contracts/TenkStablePair.sol\":12926:12927  0 */\n      0x00\n        /* \"contracts/TenkStablePair.sol\":12914:12923  amount0In */\n      dup7\n        /* \"contracts/TenkStablePair.sol\":12914:12927  amount0In > 0 */\n      gt\n        /* \"contracts/TenkStablePair.sol\":12910:13174  if (amount0In > 0) {\r... */\n      iszero\n      tag_403\n      jumpi\n        /* \"contracts/TenkStablePair.sol\":13024:13025  3 */\n      0x03\n        /* \"contracts/TenkStablePair.sol\":650:656  100000 */\n      0x0186a0\n        /* \"contracts/TenkStablePair.sol\":13005:13025  FEE_DENOMINATOR ** 3 */\n      exp\n        /* \"contracts/TenkStablePair.sol\":12950:13001  amount0In.mul(ownerFeeShare).mul(_token0FeePercent) */\n      tag_404\n        /* \"contracts/TenkStablePair.sol\":12983:13000  _token0FeePercent */\n      dup10\n        /* \"contracts/TenkStablePair.sol\":12950:13001  amount0In.mul(ownerFeeShare).mul(_token0FeePercent) */\n      0xffff\n      and\n        /* \"contracts/TenkStablePair.sol\":12950:12978  amount0In.mul(ownerFeeShare) */\n      tag_405\n        /* \"contracts/TenkStablePair.sol\":12964:12977  ownerFeeShare */\n      dup6\n        /* \"contracts/TenkStablePair.sol\":12950:12959  amount0In */\n      dup11\n        /* \"contracts/TenkStablePair.sol\":12950:12963  amount0In.mul */\n      tag_239\n      swap1\n        /* \"contracts/TenkStablePair.sol\":12950:12978  amount0In.mul(ownerFeeShare) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_405:\n        /* \"contracts/TenkStablePair.sol\":12950:12982  amount0In.mul(ownerFeeShare).mul */\n      tag_239\n      swap1\n        /* \"contracts/TenkStablePair.sol\":12950:13001  amount0In.mul(ownerFeeShare).mul(_token0FeePercent) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_404:\n        /* \"contracts/TenkStablePair.sol\":12950:13026  amount0In.mul(ownerFeeShare).mul(_token0FeePercent) / (FEE_DENOMINATOR ** 3) */\n      dup2\n      tag_406\n      jumpi\n      invalid\n    tag_406:\n      div\n        /* \"contracts/TenkStablePair.sol\":12944:13026  fee = amount0In.mul(ownerFeeShare).mul(_token0FeePercent) / (FEE_DENOMINATOR ** 3) */\n      swap4\n      pop\n        /* \"contracts/TenkStablePair.sol\":13068:13101  tokensData.remainingFee0.sub(fee) */\n      tag_407\n        /* \"contracts/TenkStablePair.sol\":13097:13100  fee */\n      dup5\n        /* \"contracts/TenkStablePair.sol\":13068:13078  tokensData */\n      dup16\n        /* \"contracts/TenkStablePair.sol\":13068:13092  tokensData.remainingFee0 */\n      0xc0\n      add\n      mload\n        /* \"contracts/TenkStablePair.sol\":13068:13096  tokensData.remainingFee0.sub */\n      tag_173\n      swap1\n        /* \"contracts/TenkStablePair.sol\":13068:13101  tokensData.remainingFee0.sub(fee) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_407:\n        /* \"contracts/TenkStablePair.sol\":13041:13051  tokensData */\n      dup15\n        /* \"contracts/TenkStablePair.sol\":13041:13065  tokensData.remainingFee0 */\n      0xc0\n      add\n        /* \"contracts/TenkStablePair.sol\":13041:13101  tokensData.remainingFee0 = tokensData.remainingFee0.sub(fee) */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/TenkStablePair.sol\":13116:13160  _safeTransfer(tokensData.token0, feeTo, fee) */\n      tag_408\n        /* \"contracts/TenkStablePair.sol\":13130:13140  tokensData */\n      dup15\n        /* \"contracts/TenkStablePair.sol\":13130:13147  tokensData.token0 */\n      0x00\n      add\n      mload\n        /* \"contracts/TenkStablePair.sol\":13149:13154  feeTo */\n      dup3\n        /* \"contracts/TenkStablePair.sol\":13156:13159  fee */\n      dup7\n        /* \"contracts/TenkStablePair.sol\":13116:13129  _safeTransfer */\n      tag_279\n        /* \"contracts/TenkStablePair.sol\":13116:13160  _safeTransfer(tokensData.token0, feeTo, fee) */\n      jump\t// in\n    tag_408:\n        /* \"contracts/TenkStablePair.sol\":12910:13174  if (amount0In > 0) {\r... */\n    tag_403:\n        /* \"contracts/TenkStablePair.sol\":13202:13203  0 */\n      0x00\n        /* \"contracts/TenkStablePair.sol\":13190:13199  amount1In */\n      dup6\n        /* \"contracts/TenkStablePair.sol\":13190:13203  amount1In > 0 */\n      gt\n        /* \"contracts/TenkStablePair.sol\":13186:13450  if (amount1In > 0) {\r... */\n      iszero\n      tag_409\n      jumpi\n        /* \"contracts/TenkStablePair.sol\":13300:13301  3 */\n      0x03\n        /* \"contracts/TenkStablePair.sol\":650:656  100000 */\n      0x0186a0\n        /* \"contracts/TenkStablePair.sol\":13281:13301  FEE_DENOMINATOR ** 3 */\n      exp\n        /* \"contracts/TenkStablePair.sol\":13226:13277  amount1In.mul(ownerFeeShare).mul(_token1FeePercent) */\n      tag_410\n        /* \"contracts/TenkStablePair.sol\":13259:13276  _token1FeePercent */\n      dup9\n        /* \"contracts/TenkStablePair.sol\":13226:13277  amount1In.mul(ownerFeeShare).mul(_token1FeePercent) */\n      0xffff\n      and\n        /* \"contracts/TenkStablePair.sol\":13226:13254  amount1In.mul(ownerFeeShare) */\n      tag_411\n        /* \"contracts/TenkStablePair.sol\":13240:13253  ownerFeeShare */\n      dup6\n        /* \"contracts/TenkStablePair.sol\":13226:13235  amount1In */\n      dup10\n        /* \"contracts/TenkStablePair.sol\":13226:13239  amount1In.mul */\n      tag_239\n      swap1\n        /* \"contracts/TenkStablePair.sol\":13226:13254  amount1In.mul(ownerFeeShare) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_411:\n        /* \"contracts/TenkStablePair.sol\":13226:13258  amount1In.mul(ownerFeeShare).mul */\n      tag_239\n      swap1\n        /* \"contracts/TenkStablePair.sol\":13226:13277  amount1In.mul(ownerFeeShare).mul(_token1FeePercent) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_410:\n        /* \"contracts/TenkStablePair.sol\":13226:13302  amount1In.mul(ownerFeeShare).mul(_token1FeePercent) / (FEE_DENOMINATOR ** 3) */\n      dup2\n      tag_412\n      jumpi\n      invalid\n    tag_412:\n      div\n        /* \"contracts/TenkStablePair.sol\":13220:13302  fee = amount1In.mul(ownerFeeShare).mul(_token1FeePercent) / (FEE_DENOMINATOR ** 3) */\n      swap4\n      pop\n        /* \"contracts/TenkStablePair.sol\":13344:13377  tokensData.remainingFee1.sub(fee) */\n      tag_413\n        /* \"contracts/TenkStablePair.sol\":13373:13376  fee */\n      dup5\n        /* \"contracts/TenkStablePair.sol\":13344:13354  tokensData */\n      dup16\n        /* \"contracts/TenkStablePair.sol\":13344:13368  tokensData.remainingFee1 */\n      0xe0\n      add\n      mload\n        /* \"contracts/TenkStablePair.sol\":13344:13372  tokensData.remainingFee1.sub */\n      tag_173\n      swap1\n        /* \"contracts/TenkStablePair.sol\":13344:13377  tokensData.remainingFee1.sub(fee) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_413:\n        /* \"contracts/TenkStablePair.sol\":13317:13327  tokensData */\n      dup15\n        /* \"contracts/TenkStablePair.sol\":13317:13341  tokensData.remainingFee1 */\n      0xe0\n      add\n        /* \"contracts/TenkStablePair.sol\":13317:13377  tokensData.remainingFee1 = tokensData.remainingFee1.sub(fee) */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/TenkStablePair.sol\":13392:13436  _safeTransfer(tokensData.token1, feeTo, fee) */\n      tag_414\n        /* \"contracts/TenkStablePair.sol\":13406:13416  tokensData */\n      dup15\n        /* \"contracts/TenkStablePair.sol\":13406:13423  tokensData.token1 */\n      0x20\n      add\n      mload\n        /* \"contracts/TenkStablePair.sol\":13425:13430  feeTo */\n      dup3\n        /* \"contracts/TenkStablePair.sol\":13432:13435  fee */\n      dup7\n        /* \"contracts/TenkStablePair.sol\":13392:13405  _safeTransfer */\n      tag_279\n        /* \"contracts/TenkStablePair.sol\":13392:13436  _safeTransfer(tokensData.token1, feeTo, fee) */\n      jump\t// in\n    tag_414:\n        /* \"contracts/TenkStablePair.sol\":13186:13450  if (amount1In > 0) {\r... */\n    tag_409:\n        /* \"contracts/TenkStablePair.sol\":12783:13461  if(feeTo != address(0)) {\r... */\n    tag_400:\n        /* \"contracts/TenkStablePair.sol\":12673:13470  if(stableSwap){\r... */\n      pop\n      pop\n    tag_396:\n        /* \"contracts/TenkStablePair.sol\":13528:13529  0 */\n      0x00\n        /* \"contracts/TenkStablePair.sol\":13516:13525  amount0In */\n      dup5\n        /* \"contracts/TenkStablePair.sol\":13516:13529  amount0In > 0 */\n      gt\n        /* \"contracts/TenkStablePair.sol\":13512:13603  if (amount0In > 0) tokensData.balance0 = IERC20(tokensData.token0).balanceOf(address(this)) */\n      iszero\n      tag_415\n      jumpi\n        /* \"contracts/TenkStablePair.sol\":13560:13570  tokensData */\n      dup12\n        /* \"contracts/TenkStablePair.sol\":13560:13577  tokensData.token0 */\n      0x00\n      add\n      mload\n        /* \"contracts/TenkStablePair.sol\":13553:13588  IERC20(tokensData.token0).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/TenkStablePair.sol\":13597:13601  this */\n      address\n        /* \"contracts/TenkStablePair.sol\":13553:13603  IERC20(tokensData.token0).balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_416\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_416:\n        /* \"contracts/TenkStablePair.sol\":13553:13603  IERC20(tokensData.token0).balanceOf(address(this)) */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_417\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_417:\n        /* \"contracts/TenkStablePair.sol\":13553:13603  IERC20(tokensData.token0).balanceOf(address(this)) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_418\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_418:\n        /* \"contracts/TenkStablePair.sol\":13553:13603  IERC20(tokensData.token0).balanceOf(address(this)) */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"contracts/TenkStablePair.sol\":13531:13541  tokensData */\n      dup13\n        /* \"contracts/TenkStablePair.sol\":13531:13550  tokensData.balance0 */\n      0x80\n      add\n        /* \"contracts/TenkStablePair.sol\":13531:13603  tokensData.balance0 = IERC20(tokensData.token0).balanceOf(address(this)) */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/TenkStablePair.sol\":13512:13603  if (amount0In > 0) tokensData.balance0 = IERC20(tokensData.token0).balanceOf(address(this)) */\n    tag_415:\n        /* \"contracts/TenkStablePair.sol\":13628:13629  0 */\n      0x00\n        /* \"contracts/TenkStablePair.sol\":13616:13625  amount1In */\n      dup4\n        /* \"contracts/TenkStablePair.sol\":13616:13629  amount1In > 0 */\n      gt\n        /* \"contracts/TenkStablePair.sol\":13612:13703  if (amount1In > 0) tokensData.balance1 = IERC20(tokensData.token1).balanceOf(address(this)) */\n      iszero\n      tag_419\n      jumpi\n        /* \"contracts/TenkStablePair.sol\":13660:13670  tokensData */\n      dup12\n        /* \"contracts/TenkStablePair.sol\":13660:13677  tokensData.token1 */\n      0x20\n      add\n      mload\n        /* \"contracts/TenkStablePair.sol\":13653:13688  IERC20(tokensData.token1).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/TenkStablePair.sol\":13697:13701  this */\n      address\n        /* \"contracts/TenkStablePair.sol\":13653:13703  IERC20(tokensData.token1).balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_420\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_420:\n        /* \"contracts/TenkStablePair.sol\":13653:13703  IERC20(tokensData.token1).balanceOf(address(this)) */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_421\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_421:\n        /* \"contracts/TenkStablePair.sol\":13653:13703  IERC20(tokensData.token1).balanceOf(address(this)) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_422\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_422:\n        /* \"contracts/TenkStablePair.sol\":13653:13703  IERC20(tokensData.token1).balanceOf(address(this)) */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"contracts/TenkStablePair.sol\":13631:13641  tokensData */\n      dup13\n        /* \"contracts/TenkStablePair.sol\":13631:13650  tokensData.balance1 */\n      0xa0\n      add\n        /* \"contracts/TenkStablePair.sol\":13631:13703  tokensData.balance1 = IERC20(tokensData.token1).balanceOf(address(this)) */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/TenkStablePair.sol\":13612:13703  if (amount1In > 0) tokensData.balance1 = IERC20(tokensData.token1).balanceOf(address(this)) */\n    tag_419:\n        /* \"contracts/TenkStablePair.sol\":1612:1613  _ */\n      pop\n      pop\n        /* \"contracts/TenkStablePair.sol\":13789:13810  uint balance0Adjusted */\n      0x00\n        /* \"contracts/TenkStablePair.sol\":13813:13862  tokensData.balance0.sub(tokensData.remainingFee0) */\n      tag_423\n        /* \"contracts/TenkStablePair.sol\":13837:13847  tokensData */\n      dup12\n        /* \"contracts/TenkStablePair.sol\":13837:13861  tokensData.remainingFee0 */\n      0xc0\n      add\n      mload\n        /* \"contracts/TenkStablePair.sol\":13813:13823  tokensData */\n      dup13\n        /* \"contracts/TenkStablePair.sol\":13813:13832  tokensData.balance0 */\n      0x80\n      add\n      mload\n        /* \"contracts/TenkStablePair.sol\":13813:13836  tokensData.balance0.sub */\n      tag_173\n      swap1\n        /* \"contracts/TenkStablePair.sol\":13813:13862  tokensData.balance0.sub(tokensData.remainingFee0) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_423:\n        /* \"contracts/TenkStablePair.sol\":13789:13862  uint balance0Adjusted = tokensData.balance0.sub(tokensData.remainingFee0) */\n      swap1\n      pop\n        /* \"contracts/TenkStablePair.sol\":13871:13892  uint balance1Adjusted */\n      0x00\n        /* \"contracts/TenkStablePair.sol\":13895:13944  tokensData.balance1.sub(tokensData.remainingFee1) */\n      tag_424\n        /* \"contracts/TenkStablePair.sol\":13919:13929  tokensData */\n      dup13\n        /* \"contracts/TenkStablePair.sol\":13919:13943  tokensData.remainingFee1 */\n      0xe0\n      add\n      mload\n        /* \"contracts/TenkStablePair.sol\":13895:13905  tokensData */\n      dup14\n        /* \"contracts/TenkStablePair.sol\":13895:13914  tokensData.balance1 */\n      0xa0\n      add\n      mload\n        /* \"contracts/TenkStablePair.sol\":13895:13918  tokensData.balance1.sub */\n      tag_173\n      swap1\n        /* \"contracts/TenkStablePair.sol\":13895:13944  tokensData.balance1.sub(tokensData.remainingFee1) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_424:\n        /* \"contracts/TenkStablePair.sol\":13871:13944  uint balance1Adjusted = tokensData.balance1.sub(tokensData.remainingFee1) */\n      swap1\n      pop\n        /* \"contracts/TenkStablePair.sol\":14003:14039  _k(uint(_reserve0), uint(_reserve1)) */\n      tag_425\n        /* \"contracts/TenkStablePair.sol\":14011:14020  _reserve0 */\n      dup9\n        /* \"contracts/TenkStablePair.sol\":14006:14021  uint(_reserve0) */\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TenkStablePair.sol\":14028:14037  _reserve1 */\n      dup9\n        /* \"contracts/TenkStablePair.sol\":14023:14038  uint(_reserve1) */\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TenkStablePair.sol\":14003:14005  _k */\n      tag_193\n        /* \"contracts/TenkStablePair.sol\":14003:14039  _k(uint(_reserve0), uint(_reserve1)) */\n      jump\t// in\n    tag_425:\n        /* \"contracts/TenkStablePair.sol\":13961:13999  _k(balance0Adjusted, balance1Adjusted) */\n      tag_426\n        /* \"contracts/TenkStablePair.sol\":13964:13980  balance0Adjusted */\n      dup4\n        /* \"contracts/TenkStablePair.sol\":13982:13998  balance1Adjusted */\n      dup4\n        /* \"contracts/TenkStablePair.sol\":13961:13963  _k */\n      tag_193\n        /* \"contracts/TenkStablePair.sol\":13961:13999  _k(balance0Adjusted, balance1Adjusted) */\n      jump\t// in\n    tag_426:\n        /* \"contracts/TenkStablePair.sol\":13961:14039  _k(balance0Adjusted, balance1Adjusted) >= _k(uint(_reserve0), uint(_reserve1)) */\n      lt\n      iszero\n        /* \"contracts/TenkStablePair.sol\":13953:14050  require(_k(balance0Adjusted, balance1Adjusted) >= _k(uint(_reserve0), uint(_reserve1)), '10k: K') */\n      tag_427\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x06\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x31306b3a204b0000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_427:\n        /* \"contracts/TenkStablePair.sol\":1612:1613  _ */\n      pop\n      pop\n        /* \"contracts/TenkStablePair.sol\":14064:14113  _update(tokensData.balance0, tokensData.balance1) */\n      tag_428\n        /* \"contracts/TenkStablePair.sol\":14072:14082  tokensData */\n      dup11\n        /* \"contracts/TenkStablePair.sol\":14072:14091  tokensData.balance0 */\n      0x80\n      add\n      mload\n        /* \"contracts/TenkStablePair.sol\":14093:14103  tokensData */\n      dup12\n        /* \"contracts/TenkStablePair.sol\":14093:14112  tokensData.balance1 */\n      0xa0\n      add\n      mload\n        /* \"contracts/TenkStablePair.sol\":14064:14071  _update */\n      tag_253\n        /* \"contracts/TenkStablePair.sol\":14064:14113  _update(tokensData.balance0, tokensData.balance1) */\n      jump\t// in\n    tag_428:\n        /* \"contracts/TenkStablePair.sol\":14210:14212  to */\n      dup9\n        /* \"contracts/TenkStablePair.sol\":14125:14213  Swap(msg.sender, amount0In, amount1In, tokensData.amount0Out, tokensData.amount1Out, to) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TenkStablePair.sol\":14130:14140  msg.sender */\n      caller\n        /* \"contracts/TenkStablePair.sol\":14125:14213  Swap(msg.sender, amount0In, amount1In, tokensData.amount0Out, tokensData.amount1Out, to) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xd78ad95fa46c994b6551d0da85fc275fe613ce37657fb8d5e3d130840159d822\n        /* \"contracts/TenkStablePair.sol\":14142:14151  amount0In */\n      dup5\n        /* \"contracts/TenkStablePair.sol\":14153:14162  amount1In */\n      dup5\n        /* \"contracts/TenkStablePair.sol\":14164:14174  tokensData */\n      dup15\n        /* \"contracts/TenkStablePair.sol\":14164:14185  tokensData.amount0Out */\n      0x40\n      add\n      mload\n        /* \"contracts/TenkStablePair.sol\":14187:14197  tokensData */\n      dup16\n        /* \"contracts/TenkStablePair.sol\":14187:14208  tokensData.amount1Out */\n      0x60\n      add\n      mload\n        /* \"contracts/TenkStablePair.sol\":14125:14213  Swap(msg.sender, amount0In, amount1In, tokensData.amount0Out, tokensData.amount1Out, to) */\n      mload(0x40)\n      dup1\n      dup6\n      dup2\n      mstore\n      0x20\n      add\n      dup5\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/TenkStablePair.sol\":1612:1613  _ */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/TenkStablePair.sol\":1631:1632  1 */\n      0x01\n        /* \"contracts/TenkStablePair.sol\":1620:1628  unlocked */\n      0x0d\n        /* \"contracts/TenkStablePair.sol\":1620:1632  unlocked = 1 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/TenkStablePair.sol\":10205:14219  function _swap(TokensData memory tokensData, address to, bytes memory data, address referrer) internal lock {\r... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/TenkERC20.sol\":1820:1989  function _approve(address owner, address spender, uint value) private {\r... */\n    tag_169:\n        /* \"contracts/TenkERC20.sol\":1929:1934  value */\n      dup1\n        /* \"contracts/TenkERC20.sol\":1901:1910  allowance */\n      0x02\n        /* \"contracts/TenkERC20.sol\":1901:1917  allowance[owner] */\n      0x00\n        /* \"contracts/TenkERC20.sol\":1911:1916  owner */\n      dup6\n        /* \"contracts/TenkERC20.sol\":1901:1917  allowance[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/TenkERC20.sol\":1901:1926  allowance[owner][spender] */\n      0x00\n        /* \"contracts/TenkERC20.sol\":1918:1925  spender */\n      dup5\n        /* \"contracts/TenkERC20.sol\":1901:1926  allowance[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/TenkERC20.sol\":1901:1934  allowance[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/TenkERC20.sol\":1966:1973  spender */\n      dup2\n        /* \"contracts/TenkERC20.sol\":1950:1981  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TenkERC20.sol\":1959:1964  owner */\n      dup4\n        /* \"contracts/TenkERC20.sol\":1950:1981  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"contracts/TenkERC20.sol\":1975:1980  value */\n      dup4\n        /* \"contracts/TenkERC20.sol\":1950:1981  Approval(owner, spender, value) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/TenkERC20.sol\":1820:1989  function _approve(address owner, address spender, uint value) private {\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"libraries/SafeMath.sol\":296:425  function sub(uint x, uint y) internal pure returns (uint z) {\r... */\n    tag_173:\n        /* \"libraries/SafeMath.sol\":348:354  uint z */\n      0x00\n        /* \"libraries/SafeMath.sol\":390:391  x */\n      dup3\n        /* \"libraries/SafeMath.sol\":384:385  y */\n      dup3\n        /* \"libraries/SafeMath.sol\":380:381  x */\n      dup5\n        /* \"libraries/SafeMath.sol\":380:385  x - y */\n      sub\n        /* \"libraries/SafeMath.sol\":376:385  z = x - y */\n      swap2\n      pop\n      dup2\n        /* \"libraries/SafeMath.sol\":375:391  (z = x - y) <= x */\n      gt\n      iszero\n        /* \"libraries/SafeMath.sol\":367:417  require((z = x - y) <= x, 'ds-math-sub-underflow') */\n      tag_431\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x15\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x64732d6d6174682d7375622d756e646572666c6f770000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_431:\n        /* \"libraries/SafeMath.sol\":296:425  function sub(uint x, uint y) internal pure returns (uint z) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/TenkERC20.sol\":1997:2217  function _transfer(address from, address to, uint value) private {\r... */\n    tag_175:\n        /* \"contracts/TenkERC20.sol\":2091:2117  balanceOf[from].sub(value) */\n      tag_433\n        /* \"contracts/TenkERC20.sol\":2111:2116  value */\n      dup2\n        /* \"contracts/TenkERC20.sol\":2091:2100  balanceOf */\n      0x01\n        /* \"contracts/TenkERC20.sol\":2091:2106  balanceOf[from] */\n      0x00\n        /* \"contracts/TenkERC20.sol\":2101:2105  from */\n      dup7\n        /* \"contracts/TenkERC20.sol\":2091:2106  balanceOf[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/TenkERC20.sol\":2091:2110  balanceOf[from].sub */\n      tag_173\n      swap1\n        /* \"contracts/TenkERC20.sol\":2091:2117  balanceOf[from].sub(value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_433:\n        /* \"contracts/TenkERC20.sol\":2073:2082  balanceOf */\n      0x01\n        /* \"contracts/TenkERC20.sol\":2073:2088  balanceOf[from] */\n      0x00\n        /* \"contracts/TenkERC20.sol\":2083:2087  from */\n      dup6\n        /* \"contracts/TenkERC20.sol\":2073:2088  balanceOf[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/TenkERC20.sol\":2073:2117  balanceOf[from] = balanceOf[from].sub(value) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/TenkERC20.sol\":2144:2168  balanceOf[to].add(value) */\n      tag_434\n        /* \"contracts/TenkERC20.sol\":2162:2167  value */\n      dup2\n        /* \"contracts/TenkERC20.sol\":2144:2153  balanceOf */\n      0x01\n        /* \"contracts/TenkERC20.sol\":2144:2157  balanceOf[to] */\n      0x00\n        /* \"contracts/TenkERC20.sol\":2154:2156  to */\n      dup6\n        /* \"contracts/TenkERC20.sol\":2144:2157  balanceOf[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/TenkERC20.sol\":2144:2161  balanceOf[to].add */\n      tag_435\n      swap1\n        /* \"contracts/TenkERC20.sol\":2144:2168  balanceOf[to].add(value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_434:\n        /* \"contracts/TenkERC20.sol\":2128:2137  balanceOf */\n      0x01\n        /* \"contracts/TenkERC20.sol\":2128:2141  balanceOf[to] */\n      0x00\n        /* \"contracts/TenkERC20.sol\":2138:2140  to */\n      dup5\n        /* \"contracts/TenkERC20.sol\":2128:2141  balanceOf[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/TenkERC20.sol\":2128:2168  balanceOf[to] = balanceOf[to].add(value) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/TenkERC20.sol\":2199:2201  to */\n      dup2\n        /* \"contracts/TenkERC20.sol\":2184:2209  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TenkERC20.sol\":2193:2197  from */\n      dup4\n        /* \"contracts/TenkERC20.sol\":2184:2209  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/TenkERC20.sol\":2203:2208  value */\n      dup4\n        /* \"contracts/TenkERC20.sol\":2184:2209  Transfer(from, to, value) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/TenkERC20.sol\":1997:2217  function _transfer(address from, address to, uint value) private {\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/TenkStablePair.sol\":5399:6282  function _mintFee(uint112 _reserve0, uint112 _reserve1) private returns (bool feeOn) {\r... */\n    tag_188:\n        /* \"contracts/TenkStablePair.sol\":5472:5482  bool feeOn */\n      0x00\n        /* \"contracts/TenkStablePair.sol\":5494:5504  stableSwap */\n      0x0c\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/TenkStablePair.sol\":5491:5518  if(stableSwap) return false */\n      iszero\n      tag_437\n      jumpi\n        /* \"contracts/TenkStablePair.sol\":5513:5518  false */\n      0x00\n        /* \"contracts/TenkStablePair.sol\":5506:5518  return false */\n      swap1\n      pop\n      jump(tag_436)\n        /* \"contracts/TenkStablePair.sol\":5491:5518  if(stableSwap) return false */\n    tag_437:\n        /* \"contracts/TenkStablePair.sol\":5528:5546  uint ownerFeeShare */\n      0x00\n        /* \"contracts/TenkStablePair.sol\":5548:5561  address feeTo */\n      dup1\n        /* \"contracts/TenkStablePair.sol\":5583:5590  factory */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TenkStablePair.sol\":5565:5599  I10kStableFactory(factory).feeInfo */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x995b5aae\n        /* \"contracts/TenkStablePair.sol\":5565:5601  I10kStableFactory(factory).feeInfo() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x40\n      dup1\n      mload\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_438\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_438:\n        /* \"contracts/TenkStablePair.sol\":5565:5601  I10kStableFactory(factory).feeInfo() */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_439\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_439:\n        /* \"contracts/TenkStablePair.sol\":5565:5601  I10kStableFactory(factory).feeInfo() */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_440\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_440:\n        /* \"contracts/TenkStablePair.sol\":5565:5601  I10kStableFactory(factory).feeInfo() */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"contracts/TenkStablePair.sol\":5527:5601  (uint ownerFeeShare, address feeTo) = I10kStableFactory(factory).feeInfo() */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"contracts/TenkStablePair.sol\":5633:5634  0 */\n      0x00\n        /* \"contracts/TenkStablePair.sol\":5616:5635  feeTo != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TenkStablePair.sol\":5616:5621  feeTo */\n      dup2\n        /* \"contracts/TenkStablePair.sol\":5616:5635  feeTo != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/TenkStablePair.sol\":5608:5635  feeOn = feeTo != address(0) */\n      swap3\n      pop\n        /* \"contracts/TenkStablePair.sol\":5642:5653  uint _kLast */\n      0x00\n        /* \"contracts/TenkStablePair.sol\":5656:5661  kLast */\n      sload(0x0b)\n        /* \"contracts/TenkStablePair.sol\":5642:5661  uint _kLast = kLast */\n      swap1\n      pop\n        /* \"contracts/TenkStablePair.sol\":5692:5697  feeOn */\n      dup4\n        /* \"contracts/TenkStablePair.sol\":5688:6277  if (feeOn) {\r... */\n      iszero\n      tag_441\n      jumpi\n        /* \"contracts/TenkStablePair.sol\":5722:5723  0 */\n      0x00\n        /* \"contracts/TenkStablePair.sol\":5712:5718  _kLast */\n      dup2\n        /* \"contracts/TenkStablePair.sol\":5712:5723  _kLast != 0 */\n      eq\n        /* \"contracts/TenkStablePair.sol\":5708:6221  if (_kLast != 0) {\r... */\n      tag_442\n      jumpi\n        /* \"contracts/TenkStablePair.sol\":5736:5746  uint rootK */\n      0x00\n        /* \"contracts/TenkStablePair.sol\":5749:5796  Math.sqrt(_k(uint(_reserve0), uint(_reserve1))) */\n      tag_443\n        /* \"contracts/TenkStablePair.sol\":5759:5795  _k(uint(_reserve0), uint(_reserve1)) */\n      tag_444\n        /* \"contracts/TenkStablePair.sol\":5767:5776  _reserve0 */\n      dup9\n        /* \"contracts/TenkStablePair.sol\":5762:5777  uint(_reserve0) */\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TenkStablePair.sol\":5784:5793  _reserve1 */\n      dup9\n        /* \"contracts/TenkStablePair.sol\":5779:5794  uint(_reserve1) */\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TenkStablePair.sol\":5759:5761  _k */\n      tag_193\n        /* \"contracts/TenkStablePair.sol\":5759:5795  _k(uint(_reserve0), uint(_reserve1)) */\n      jump\t// in\n    tag_444:\n        /* \"contracts/TenkStablePair.sol\":5749:5758  Math.sqrt */\n      tag_240\n        /* \"contracts/TenkStablePair.sol\":5749:5796  Math.sqrt(_k(uint(_reserve0), uint(_reserve1))) */\n      jump\t// in\n    tag_443:\n        /* \"contracts/TenkStablePair.sol\":5736:5796  uint rootK = Math.sqrt(_k(uint(_reserve0), uint(_reserve1))) */\n      swap1\n      pop\n        /* \"contracts/TenkStablePair.sol\":5807:5821  uint rootKLast */\n      0x00\n        /* \"contracts/TenkStablePair.sol\":5824:5841  Math.sqrt(_kLast) */\n      tag_445\n        /* \"contracts/TenkStablePair.sol\":5834:5840  _kLast */\n      dup4\n        /* \"contracts/TenkStablePair.sol\":5824:5833  Math.sqrt */\n      tag_240\n        /* \"contracts/TenkStablePair.sol\":5824:5841  Math.sqrt(_kLast) */\n      jump\t// in\n    tag_445:\n        /* \"contracts/TenkStablePair.sol\":5807:5841  uint rootKLast = Math.sqrt(_kLast) */\n      swap1\n      pop\n        /* \"contracts/TenkStablePair.sol\":5864:5873  rootKLast */\n      dup1\n        /* \"contracts/TenkStablePair.sol\":5856:5861  rootK */\n      dup3\n        /* \"contracts/TenkStablePair.sol\":5856:5873  rootK > rootKLast */\n      gt\n        /* \"contracts/TenkStablePair.sol\":5852:6212  if (rootK > rootKLast) {\r... */\n      iszero\n      tag_446\n      jumpi\n        /* \"contracts/TenkStablePair.sol\":5888:5894  uint d */\n      0x00\n        /* \"contracts/TenkStablePair.sol\":5897:5948  (FEE_DENOMINATOR.mul(100) / ownerFeeShare).sub(100) */\n      tag_447\n        /* \"contracts/TenkStablePair.sol\":5944:5947  100 */\n      0x64\n        /* \"contracts/TenkStablePair.sol\":5925:5938  ownerFeeShare */\n      dup8\n        /* \"contracts/TenkStablePair.sol\":5898:5922  FEE_DENOMINATOR.mul(100) */\n      tag_448\n        /* \"contracts/TenkStablePair.sol\":5918:5921  100 */\n      0x64\n        /* \"contracts/TenkStablePair.sol\":650:656  100000 */\n      0x0186a0\n        /* \"contracts/TenkStablePair.sol\":5898:5917  FEE_DENOMINATOR.mul */\n      tag_239\n      swap1\n        /* \"contracts/TenkStablePair.sol\":5898:5922  FEE_DENOMINATOR.mul(100) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_448:\n        /* \"contracts/TenkStablePair.sol\":5898:5938  FEE_DENOMINATOR.mul(100) / ownerFeeShare */\n      dup2\n      tag_449\n      jumpi\n      invalid\n    tag_449:\n      div\n        /* \"contracts/TenkStablePair.sol\":5897:5943  (FEE_DENOMINATOR.mul(100) / ownerFeeShare).sub */\n      tag_173\n      swap1\n        /* \"contracts/TenkStablePair.sol\":5897:5948  (FEE_DENOMINATOR.mul(100) / ownerFeeShare).sub(100) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_447:\n        /* \"contracts/TenkStablePair.sol\":5888:5948  uint d = (FEE_DENOMINATOR.mul(100) / ownerFeeShare).sub(100) */\n      swap1\n      pop\n        /* \"contracts/TenkStablePair.sol\":5961:5975  uint numerator */\n      0x00\n        /* \"contracts/TenkStablePair.sol\":5978:6024  totalSupply.mul(rootK.sub(rootKLast)).mul(100) */\n      tag_450\n        /* \"contracts/TenkStablePair.sol\":6020:6023  100 */\n      0x64\n        /* \"contracts/TenkStablePair.sol\":5978:6015  totalSupply.mul(rootK.sub(rootKLast)) */\n      tag_451\n        /* \"contracts/TenkStablePair.sol\":5994:6014  rootK.sub(rootKLast) */\n      tag_452\n        /* \"contracts/TenkStablePair.sol\":6004:6013  rootKLast */\n      dup7\n        /* \"contracts/TenkStablePair.sol\":5994:5999  rootK */\n      dup9\n        /* \"contracts/TenkStablePair.sol\":5994:6003  rootK.sub */\n      tag_173\n      swap1\n        /* \"contracts/TenkStablePair.sol\":5994:6014  rootK.sub(rootKLast) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_452:\n        /* \"contracts/TenkStablePair.sol\":5978:5989  totalSupply */\n      sload(0x00)\n        /* \"contracts/TenkStablePair.sol\":5978:5993  totalSupply.mul */\n      tag_239\n      swap1\n        /* \"contracts/TenkStablePair.sol\":5978:6015  totalSupply.mul(rootK.sub(rootKLast)) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_451:\n        /* \"contracts/TenkStablePair.sol\":5978:6019  totalSupply.mul(rootK.sub(rootKLast)).mul */\n      tag_239\n      swap1\n        /* \"contracts/TenkStablePair.sol\":5978:6024  totalSupply.mul(rootK.sub(rootKLast)).mul(100) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_450:\n        /* \"contracts/TenkStablePair.sol\":5961:6024  uint numerator = totalSupply.mul(rootK.sub(rootKLast)).mul(100) */\n      swap1\n      pop\n        /* \"contracts/TenkStablePair.sol\":6037:6053  uint denominator */\n      0x00\n        /* \"contracts/TenkStablePair.sol\":6056:6092  rootK.mul(d).add(rootKLast.mul(100)) */\n      tag_453\n        /* \"contracts/TenkStablePair.sol\":6073:6091  rootKLast.mul(100) */\n      tag_454\n        /* \"contracts/TenkStablePair.sol\":6087:6090  100 */\n      0x64\n        /* \"contracts/TenkStablePair.sol\":6073:6082  rootKLast */\n      dup7\n        /* \"contracts/TenkStablePair.sol\":6073:6086  rootKLast.mul */\n      tag_239\n      swap1\n        /* \"contracts/TenkStablePair.sol\":6073:6091  rootKLast.mul(100) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_454:\n        /* \"contracts/TenkStablePair.sol\":6056:6068  rootK.mul(d) */\n      tag_455\n        /* \"contracts/TenkStablePair.sol\":6066:6067  d */\n      dup6\n        /* \"contracts/TenkStablePair.sol\":6056:6061  rootK */\n      dup9\n        /* \"contracts/TenkStablePair.sol\":6056:6065  rootK.mul */\n      tag_239\n      swap1\n        /* \"contracts/TenkStablePair.sol\":6056:6068  rootK.mul(d) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_455:\n        /* \"contracts/TenkStablePair.sol\":6056:6072  rootK.mul(d).add */\n      tag_435\n      swap1\n        /* \"contracts/TenkStablePair.sol\":6056:6092  rootK.mul(d).add(rootKLast.mul(100)) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_453:\n        /* \"contracts/TenkStablePair.sol\":6037:6092  uint denominator = rootK.mul(d).add(rootKLast.mul(100)) */\n      swap1\n      pop\n        /* \"contracts/TenkStablePair.sol\":6105:6119  uint liquidity */\n      0x00\n        /* \"contracts/TenkStablePair.sol\":6134:6145  denominator */\n      dup2\n        /* \"contracts/TenkStablePair.sol\":6122:6131  numerator */\n      dup4\n        /* \"contracts/TenkStablePair.sol\":6122:6145  numerator / denominator */\n      dup2\n      tag_456\n      jumpi\n      invalid\n    tag_456:\n      div\n        /* \"contracts/TenkStablePair.sol\":6105:6145  uint liquidity = numerator / denominator */\n      swap1\n      pop\n        /* \"contracts/TenkStablePair.sol\":6174:6175  0 */\n      0x00\n        /* \"contracts/TenkStablePair.sol\":6162:6171  liquidity */\n      dup2\n        /* \"contracts/TenkStablePair.sol\":6162:6175  liquidity > 0 */\n      gt\n        /* \"contracts/TenkStablePair.sol\":6158:6200  if (liquidity > 0) _mint(feeTo, liquidity) */\n      iszero\n      tag_457\n      jumpi\n        /* \"contracts/TenkStablePair.sol\":6177:6200  _mint(feeTo, liquidity) */\n      tag_458\n        /* \"contracts/TenkStablePair.sol\":6183:6188  feeTo */\n      dup9\n        /* \"contracts/TenkStablePair.sol\":6190:6199  liquidity */\n      dup3\n        /* \"contracts/TenkStablePair.sol\":6177:6182  _mint */\n      tag_242\n        /* \"contracts/TenkStablePair.sol\":6177:6200  _mint(feeTo, liquidity) */\n      jump\t// in\n    tag_458:\n        /* \"contracts/TenkStablePair.sol\":6158:6200  if (liquidity > 0) _mint(feeTo, liquidity) */\n    tag_457:\n        /* \"contracts/TenkStablePair.sol\":5852:6212  if (rootK > rootKLast) {\r... */\n      pop\n      pop\n      pop\n      pop\n    tag_446:\n        /* \"contracts/TenkStablePair.sol\":5708:6221  if (_kLast != 0) {\r... */\n      pop\n      pop\n    tag_442:\n        /* \"contracts/TenkStablePair.sol\":5688:6277  if (feeOn) {\r... */\n      jump(tag_459)\n    tag_441:\n        /* \"contracts/TenkStablePair.sol\":6248:6249  0 */\n      0x00\n        /* \"contracts/TenkStablePair.sol\":6238:6244  _kLast */\n      dup2\n        /* \"contracts/TenkStablePair.sol\":6238:6249  _kLast != 0 */\n      eq\n        /* \"contracts/TenkStablePair.sol\":6234:6277  if (_kLast != 0) {\r... */\n      tag_460\n      jumpi\n        /* \"contracts/TenkStablePair.sol\":6268:6269  0 */\n      0x00\n        /* \"contracts/TenkStablePair.sol\":6260:6265  kLast */\n      0x0b\n        /* \"contracts/TenkStablePair.sol\":6260:6269  kLast = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/TenkStablePair.sol\":6234:6277  if (_kLast != 0) {\r... */\n    tag_460:\n        /* \"contracts/TenkStablePair.sol\":5688:6277  if (feeOn) {\r... */\n    tag_459:\n        /* \"contracts/TenkStablePair.sol\":5399:6282  function _mintFee(uint112 _reserve0, uint112 _reserve1) private returns (bool feeOn) {\r... */\n      pop\n      pop\n      pop\n    tag_436:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/TenkStablePair.sol\":14225:14637  function _k(uint balance0, uint balance1) internal view returns (uint) {\r... */\n    tag_193:\n        /* \"contracts/TenkStablePair.sol\":14290:14294  uint */\n      0x00\n        /* \"contracts/TenkStablePair.sol\":14307:14317  stableSwap */\n      0x0c\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/TenkStablePair.sol\":14303:14596  if (stableSwap) {\r... */\n      iszero\n      tag_462\n      jumpi\n        /* \"contracts/TenkStablePair.sol\":14328:14335  uint _x */\n      0x00\n        /* \"contracts/TenkStablePair.sol\":14359:14379  precisionMultiplier0 */\n      sload(0x09)\n        /* \"contracts/TenkStablePair.sol\":14338:14356  balance0.mul(1e18) */\n      tag_463\n        /* \"contracts/TenkStablePair.sol\":14351:14355  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/TenkStablePair.sol\":14338:14346  balance0 */\n      dup7\n        /* \"contracts/TenkStablePair.sol\":14338:14350  balance0.mul */\n      tag_239\n      swap1\n        /* \"contracts/TenkStablePair.sol\":14338:14356  balance0.mul(1e18) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_463:\n        /* \"contracts/TenkStablePair.sol\":14338:14379  balance0.mul(1e18) / precisionMultiplier0 */\n      dup2\n      tag_464\n      jumpi\n      invalid\n    tag_464:\n      div\n        /* \"contracts/TenkStablePair.sol\":14328:14379  uint _x = balance0.mul(1e18) / precisionMultiplier0 */\n      swap1\n      pop\n        /* \"contracts/TenkStablePair.sol\":14388:14395  uint _y */\n      0x00\n        /* \"contracts/TenkStablePair.sol\":14419:14439  precisionMultiplier1 */\n      sload(0x0a)\n        /* \"contracts/TenkStablePair.sol\":14398:14416  balance1.mul(1e18) */\n      tag_465\n        /* \"contracts/TenkStablePair.sol\":14411:14415  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/TenkStablePair.sol\":14398:14406  balance1 */\n      dup7\n        /* \"contracts/TenkStablePair.sol\":14398:14410  balance1.mul */\n      tag_239\n      swap1\n        /* \"contracts/TenkStablePair.sol\":14398:14416  balance1.mul(1e18) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_465:\n        /* \"contracts/TenkStablePair.sol\":14398:14439  balance1.mul(1e18) / precisionMultiplier1 */\n      dup2\n      tag_466\n      jumpi\n      invalid\n    tag_466:\n      div\n        /* \"contracts/TenkStablePair.sol\":14388:14439  uint _y = balance1.mul(1e18) / precisionMultiplier1 */\n      swap1\n      pop\n        /* \"contracts/TenkStablePair.sol\":14448:14455  uint _a */\n      0x00\n        /* \"contracts/TenkStablePair.sol\":14473:14477  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/TenkStablePair.sol\":14459:14469  _x.mul(_y) */\n      tag_467\n        /* \"contracts/TenkStablePair.sol\":14466:14468  _y */\n      dup4\n        /* \"contracts/TenkStablePair.sol\":14459:14461  _x */\n      dup6\n        /* \"contracts/TenkStablePair.sol\":14459:14465  _x.mul */\n      tag_239\n      swap1\n        /* \"contracts/TenkStablePair.sol\":14459:14469  _x.mul(_y) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_467:\n        /* \"contracts/TenkStablePair.sol\":14458:14477  (_x.mul(_y)) / 1e18 */\n      dup2\n      tag_468\n      jumpi\n      invalid\n    tag_468:\n      div\n        /* \"contracts/TenkStablePair.sol\":14448:14477  uint _a = (_x.mul(_y)) / 1e18 */\n      swap1\n      pop\n        /* \"contracts/TenkStablePair.sol\":14486:14493  uint _b */\n      0x00\n        /* \"contracts/TenkStablePair.sol\":14496:14538  (_x.mul(_x) / 1e18).add(_y.mul(_y) / 1e18) */\n      tag_469\n        /* \"contracts/TenkStablePair.sol\":14533:14537  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/TenkStablePair.sol\":14520:14530  _y.mul(_y) */\n      tag_470\n        /* \"contracts/TenkStablePair.sol\":14527:14529  _y */\n      dup6\n        /* \"contracts/TenkStablePair.sol\":14520:14522  _y */\n      dup7\n        /* \"contracts/TenkStablePair.sol\":14520:14526  _y.mul */\n      tag_239\n      swap1\n        /* \"contracts/TenkStablePair.sol\":14520:14530  _y.mul(_y) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_470:\n        /* \"contracts/TenkStablePair.sol\":14520:14537  _y.mul(_y) / 1e18 */\n      dup2\n      tag_471\n      jumpi\n      invalid\n    tag_471:\n      div\n        /* \"contracts/TenkStablePair.sol\":14510:14514  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/TenkStablePair.sol\":14497:14507  _x.mul(_x) */\n      tag_472\n        /* \"contracts/TenkStablePair.sol\":14504:14506  _x */\n      dup8\n        /* \"contracts/TenkStablePair.sol\":14497:14499  _x */\n      dup9\n        /* \"contracts/TenkStablePair.sol\":14497:14503  _x.mul */\n      tag_239\n      swap1\n        /* \"contracts/TenkStablePair.sol\":14497:14507  _x.mul(_x) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_472:\n        /* \"contracts/TenkStablePair.sol\":14497:14514  _x.mul(_x) / 1e18 */\n      dup2\n      tag_473\n      jumpi\n      invalid\n    tag_473:\n      div\n        /* \"contracts/TenkStablePair.sol\":14496:14519  (_x.mul(_x) / 1e18).add */\n      tag_435\n      swap1\n        /* \"contracts/TenkStablePair.sol\":14496:14538  (_x.mul(_x) / 1e18).add(_y.mul(_y) / 1e18) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_469:\n        /* \"contracts/TenkStablePair.sol\":14486:14538  uint _b = (_x.mul(_x) / 1e18).add(_y.mul(_y) / 1e18) */\n      swap1\n      pop\n        /* \"contracts/TenkStablePair.sol\":14568:14572  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/TenkStablePair.sol\":14555:14565  _a.mul(_b) */\n      tag_474\n        /* \"contracts/TenkStablePair.sol\":14562:14564  _b */\n      dup3\n        /* \"contracts/TenkStablePair.sol\":14555:14557  _a */\n      dup5\n        /* \"contracts/TenkStablePair.sol\":14555:14561  _a.mul */\n      tag_239\n      swap1\n        /* \"contracts/TenkStablePair.sol\":14555:14565  _a.mul(_b) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_474:\n        /* \"contracts/TenkStablePair.sol\":14555:14572  _a.mul(_b) / 1e18 */\n      dup2\n      tag_475\n      jumpi\n      invalid\n    tag_475:\n      div\n        /* \"contracts/TenkStablePair.sol\":14547:14572  return  _a.mul(_b) / 1e18 */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump(tag_461)\n        /* \"contracts/TenkStablePair.sol\":14303:14596  if (stableSwap) {\r... */\n    tag_462:\n        /* \"contracts/TenkStablePair.sol\":14609:14631  balance0.mul(balance1) */\n      tag_476\n        /* \"contracts/TenkStablePair.sol\":14622:14630  balance1 */\n      dup3\n        /* \"contracts/TenkStablePair.sol\":14609:14617  balance0 */\n      dup5\n        /* \"contracts/TenkStablePair.sol\":14609:14621  balance0.mul */\n      tag_239\n      swap1\n        /* \"contracts/TenkStablePair.sol\":14609:14631  balance0.mul(balance1) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_476:\n        /* \"contracts/TenkStablePair.sol\":14602:14631  return balance0.mul(balance1) */\n      swap1\n      pop\n        /* \"contracts/TenkStablePair.sol\":14225:14637  function _k(uint balance0, uint balance1) internal view returns (uint) {\r... */\n    tag_461:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"libraries/SafeMath.sol\":433:575  function mul(uint x, uint y) internal pure returns (uint z) {\r... */\n    tag_239:\n        /* \"libraries/SafeMath.sol\":485:491  uint z */\n      0x00\n        /* \"libraries/SafeMath.sol\":517:518  0 */\n      dup1\n        /* \"libraries/SafeMath.sol\":512:513  y */\n      dup3\n        /* \"libraries/SafeMath.sol\":512:518  y == 0 */\n      eq\n        /* \"libraries/SafeMath.sol\":512:542  y == 0 || (z = x * y) / y == x */\n      dup1\n      tag_478\n      jumpi\n      pop\n        /* \"libraries/SafeMath.sol\":541:542  x */\n      dup3\n        /* \"libraries/SafeMath.sol\":536:537  y */\n      dup3\n        /* \"libraries/SafeMath.sol\":531:532  y */\n      dup4\n        /* \"libraries/SafeMath.sol\":527:528  x */\n      dup6\n        /* \"libraries/SafeMath.sol\":527:532  x * y */\n      mul\n        /* \"libraries/SafeMath.sol\":523:532  z = x * y */\n      swap3\n      pop\n      dup3\n        /* \"libraries/SafeMath.sol\":522:537  (z = x * y) / y */\n      dup2\n      tag_479\n      jumpi\n      invalid\n    tag_479:\n      div\n        /* \"libraries/SafeMath.sol\":522:542  (z = x * y) / y == x */\n      eq\n        /* \"libraries/SafeMath.sol\":512:542  y == 0 || (z = x * y) / y == x */\n    tag_478:\n        /* \"libraries/SafeMath.sol\":504:567  require(y == 0 || (z = x * y) / y == x, 'ds-math-mul-overflow') */\n      tag_480\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x14\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x64732d6d6174682d6d756c2d6f766572666c6f77000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_480:\n        /* \"libraries/SafeMath.sol\":433:575  function mul(uint x, uint y) internal pure returns (uint z) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"libraries/Math.sol\":317:620  function sqrt(uint y) internal pure returns (uint z) {\r... */\n    tag_240:\n        /* \"libraries/Math.sol\":362:368  uint z */\n      0x00\n        /* \"libraries/Math.sol\":389:390  3 */\n      0x03\n        /* \"libraries/Math.sol\":385:386  y */\n      dup3\n        /* \"libraries/Math.sol\":385:390  y > 3 */\n      gt\n        /* \"libraries/Math.sol\":381:613  if (y > 3) {\r... */\n      iszero\n      tag_482\n      jumpi\n        /* \"libraries/Math.sol\":411:412  y */\n      dup2\n        /* \"libraries/Math.sol\":407:412  z = y */\n      swap1\n      pop\n        /* \"libraries/Math.sol\":427:433  uint x */\n      0x00\n        /* \"libraries/Math.sol\":444:445  1 */\n      0x01\n        /* \"libraries/Math.sol\":440:441  2 */\n      0x02\n        /* \"libraries/Math.sol\":436:437  y */\n      dup5\n        /* \"libraries/Math.sol\":436:441  y / 2 */\n      dup2\n      tag_483\n      jumpi\n      invalid\n    tag_483:\n      div\n        /* \"libraries/Math.sol\":436:445  y / 2 + 1 */\n      add\n        /* \"libraries/Math.sol\":427:445  uint x = y / 2 + 1 */\n      swap1\n      pop\n        /* \"libraries/Math.sol\":460:552  while (x < z) {\r... */\n    tag_484:\n        /* \"libraries/Math.sol\":471:472  z */\n      dup2\n        /* \"libraries/Math.sol\":467:468  x */\n      dup2\n        /* \"libraries/Math.sol\":467:472  x < z */\n      lt\n        /* \"libraries/Math.sol\":460:552  while (x < z) {\r... */\n      iszero\n      tag_485\n      jumpi\n        /* \"libraries/Math.sol\":497:498  x */\n      dup1\n        /* \"libraries/Math.sol\":493:498  z = x */\n      swap2\n      pop\n        /* \"libraries/Math.sol\":535:536  2 */\n      0x02\n        /* \"libraries/Math.sol\":530:531  x */\n      dup2\n        /* \"libraries/Math.sol\":526:527  x */\n      dup3\n        /* \"libraries/Math.sol\":522:523  y */\n      dup6\n        /* \"libraries/Math.sol\":522:527  y / x */\n      dup2\n      tag_486\n      jumpi\n      invalid\n    tag_486:\n      div\n        /* \"libraries/Math.sol\":522:531  y / x + x */\n      add\n        /* \"libraries/Math.sol\":521:536  (y / x + x) / 2 */\n      dup2\n      tag_487\n      jumpi\n      invalid\n    tag_487:\n      div\n        /* \"libraries/Math.sol\":517:536  x = (y / x + x) / 2 */\n      swap1\n      pop\n        /* \"libraries/Math.sol\":460:552  while (x < z) {\r... */\n      jump(tag_484)\n    tag_485:\n        /* \"libraries/Math.sol\":381:613  if (y > 3) {\r... */\n      pop\n      jump(tag_488)\n    tag_482:\n        /* \"libraries/Math.sol\":578:579  0 */\n      0x00\n        /* \"libraries/Math.sol\":573:574  y */\n      dup3\n        /* \"libraries/Math.sol\":573:579  y != 0 */\n      eq\n        /* \"libraries/Math.sol\":569:613  if (y != 0) {\r... */\n      tag_489\n      jumpi\n        /* \"libraries/Math.sol\":600:601  1 */\n      0x01\n        /* \"libraries/Math.sol\":596:601  z = 1 */\n      swap1\n      pop\n        /* \"libraries/Math.sol\":569:613  if (y != 0) {\r... */\n    tag_489:\n        /* \"libraries/Math.sol\":381:613  if (y > 3) {\r... */\n    tag_488:\n        /* \"libraries/Math.sol\":317:620  function sqrt(uint y) internal pure returns (uint z) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/TenkERC20.sol\":1394:1595  function _mint(address to, uint value) internal {\r... */\n    tag_242:\n        /* \"contracts/TenkERC20.sol\":1467:1489  totalSupply.add(value) */\n      tag_491\n        /* \"contracts/TenkERC20.sol\":1483:1488  value */\n      dup2\n        /* \"contracts/TenkERC20.sol\":1467:1478  totalSupply */\n      sload(0x00)\n        /* \"contracts/TenkERC20.sol\":1467:1482  totalSupply.add */\n      tag_435\n      swap1\n        /* \"contracts/TenkERC20.sol\":1467:1489  totalSupply.add(value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_491:\n        /* \"contracts/TenkERC20.sol\":1453:1464  totalSupply */\n      0x00\n        /* \"contracts/TenkERC20.sol\":1453:1489  totalSupply = totalSupply.add(value) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/TenkERC20.sol\":1516:1540  balanceOf[to].add(value) */\n      tag_492\n        /* \"contracts/TenkERC20.sol\":1534:1539  value */\n      dup2\n        /* \"contracts/TenkERC20.sol\":1516:1525  balanceOf */\n      0x01\n        /* \"contracts/TenkERC20.sol\":1516:1529  balanceOf[to] */\n      0x00\n        /* \"contracts/TenkERC20.sol\":1526:1528  to */\n      dup6\n        /* \"contracts/TenkERC20.sol\":1516:1529  balanceOf[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/TenkERC20.sol\":1516:1533  balanceOf[to].add */\n      tag_435\n      swap1\n        /* \"contracts/TenkERC20.sol\":1516:1540  balanceOf[to].add(value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_492:\n        /* \"contracts/TenkERC20.sol\":1500:1509  balanceOf */\n      0x01\n        /* \"contracts/TenkERC20.sol\":1500:1513  balanceOf[to] */\n      0x00\n        /* \"contracts/TenkERC20.sol\":1510:1512  to */\n      dup5\n        /* \"contracts/TenkERC20.sol\":1500:1513  balanceOf[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/TenkERC20.sol\":1500:1540  balanceOf[to] = balanceOf[to].add(value) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/TenkERC20.sol\":1577:1579  to */\n      dup2\n        /* \"contracts/TenkERC20.sol\":1556:1587  Transfer(address(0), to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TenkERC20.sol\":1573:1574  0 */\n      0x00\n        /* \"contracts/TenkERC20.sol\":1556:1587  Transfer(address(0), to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/TenkERC20.sol\":1581:1586  value */\n      dup4\n        /* \"contracts/TenkERC20.sol\":1556:1587  Transfer(address(0), to, value) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/TenkERC20.sol\":1394:1595  function _mint(address to, uint value) internal {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"libraries/Math.sol\":103:199  function min(uint x, uint y) internal pure returns (uint z) {\r... */\n    tag_249:\n        /* \"libraries/Math.sol\":155:161  uint z */\n      0x00\n        /* \"libraries/Math.sol\":182:183  y */\n      dup2\n        /* \"libraries/Math.sol\":178:179  x */\n      dup4\n        /* \"libraries/Math.sol\":178:183  x < y */\n      lt\n        /* \"libraries/Math.sol\":178:191  x < y ? x : y */\n      tag_494\n      jumpi\n        /* \"libraries/Math.sol\":190:191  y */\n      dup2\n        /* \"libraries/Math.sol\":178:191  x < y ? x : y */\n      jump(tag_495)\n    tag_494:\n        /* \"libraries/Math.sol\":186:187  x */\n      dup3\n        /* \"libraries/Math.sol\":178:191  x < y ? x : y */\n    tag_495:\n        /* \"libraries/Math.sol\":174:191  z = x < y ? x : y */\n      swap1\n      pop\n        /* \"libraries/Math.sol\":103:199  function min(uint x, uint y) internal pure returns (uint z) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/TenkStablePair.sol\":4988:5260  function _update(uint balance0, uint balance1) private {\r... */\n    tag_253:\n        /* \"contracts/TenkStablePair.sol\":5078:5081  - 1 */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"contracts/TenkStablePair.sol\":5058:5082  balance0 <= uint112(- 1) */\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TenkStablePair.sol\":5058:5066  balance0 */\n      dup3\n        /* \"contracts/TenkStablePair.sol\":5058:5082  balance0 <= uint112(- 1) */\n      gt\n      iszero\n        /* \"contracts/TenkStablePair.sol\":5058:5110  balance0 <= uint112(- 1) && balance1 <= uint112(- 1) */\n      dup1\n      iszero\n      tag_497\n      jumpi\n      pop\n        /* \"contracts/TenkStablePair.sol\":5106:5109  - 1 */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"contracts/TenkStablePair.sol\":5086:5110  balance1 <= uint112(- 1) */\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TenkStablePair.sol\":5086:5094  balance1 */\n      dup2\n        /* \"contracts/TenkStablePair.sol\":5086:5110  balance1 <= uint112(- 1) */\n      gt\n      iszero\n        /* \"contracts/TenkStablePair.sol\":5058:5110  balance0 <= uint112(- 1) && balance1 <= uint112(- 1) */\n    tag_497:\n        /* \"contracts/TenkStablePair.sol\":5050:5128  require(balance0 <= uint112(- 1) && balance1 <= uint112(- 1), '10k: OVERFLOW') */\n      tag_498\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x0d\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x31306b3a204f564552464c4f5700000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_498:\n        /* \"contracts/TenkStablePair.sol\":5156:5164  balance0 */\n      dup2\n        /* \"contracts/TenkStablePair.sol\":5137:5145  reserve0 */\n      0x08\n      0x00\n        /* \"contracts/TenkStablePair.sol\":5137:5165  reserve0 = uint112(balance0) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/TenkStablePair.sol\":5191:5199  balance1 */\n      dup1\n        /* \"contracts/TenkStablePair.sol\":5172:5180  reserve1 */\n      0x08\n      0x0e\n        /* \"contracts/TenkStablePair.sol\":5172:5200  reserve1 = uint112(balance1) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/TenkStablePair.sol\":5212:5254  Sync(uint112(balance0), uint112(balance1)) */\n      0x1c411e9a96e071241c2f21f7726b17ae89e3cab4c78be50e062b03a9fffbbad1\n        /* \"contracts/TenkStablePair.sol\":5225:5233  balance0 */\n      dup3\n        /* \"contracts/TenkStablePair.sol\":5244:5252  balance1 */\n      dup3\n        /* \"contracts/TenkStablePair.sol\":5212:5254  Sync(uint112(balance0), uint112(balance1)) */\n      mload(0x40)\n      dup1\n      dup4\n      0xffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      0xffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/TenkStablePair.sol\":4988:5260  function _update(uint balance0, uint balance1) private {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/TenkERC20.sol\":1603:1812  function _burn(address from, uint value) internal {\r... */\n    tag_277:\n        /* \"contracts/TenkERC20.sol\":1682:1708  balanceOf[from].sub(value) */\n      tag_500\n        /* \"contracts/TenkERC20.sol\":1702:1707  value */\n      dup2\n        /* \"contracts/TenkERC20.sol\":1682:1691  balanceOf */\n      0x01\n        /* \"contracts/TenkERC20.sol\":1682:1697  balanceOf[from] */\n      0x00\n        /* \"contracts/TenkERC20.sol\":1692:1696  from */\n      dup6\n        /* \"contracts/TenkERC20.sol\":1682:1697  balanceOf[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/TenkERC20.sol\":1682:1701  balanceOf[from].sub */\n      tag_173\n      swap1\n        /* \"contracts/TenkERC20.sol\":1682:1708  balanceOf[from].sub(value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_500:\n        /* \"contracts/TenkERC20.sol\":1664:1673  balanceOf */\n      0x01\n        /* \"contracts/TenkERC20.sol\":1664:1679  balanceOf[from] */\n      0x00\n        /* \"contracts/TenkERC20.sol\":1674:1678  from */\n      dup5\n        /* \"contracts/TenkERC20.sol\":1664:1679  balanceOf[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/TenkERC20.sol\":1664:1708  balanceOf[from] = balanceOf[from].sub(value) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/TenkERC20.sol\":1733:1755  totalSupply.sub(value) */\n      tag_501\n        /* \"contracts/TenkERC20.sol\":1749:1754  value */\n      dup2\n        /* \"contracts/TenkERC20.sol\":1733:1744  totalSupply */\n      sload(0x00)\n        /* \"contracts/TenkERC20.sol\":1733:1748  totalSupply.sub */\n      tag_173\n      swap1\n        /* \"contracts/TenkERC20.sol\":1733:1755  totalSupply.sub(value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_501:\n        /* \"contracts/TenkERC20.sol\":1719:1730  totalSupply */\n      0x00\n        /* \"contracts/TenkERC20.sol\":1719:1755  totalSupply = totalSupply.sub(value) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/TenkERC20.sol\":1794:1795  0 */\n      0x00\n        /* \"contracts/TenkERC20.sol\":1771:1804  Transfer(from, address(0), value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TenkERC20.sol\":1780:1784  from */\n      dup3\n        /* \"contracts/TenkERC20.sol\":1771:1804  Transfer(from, address(0), value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/TenkERC20.sol\":1798:1803  value */\n      dup4\n        /* \"contracts/TenkERC20.sol\":1771:1804  Transfer(from, address(0), value) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/TenkERC20.sol\":1603:1812  function _burn(address from, uint value) internal {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/TenkStablePair.sol\":1930:2201  function _safeTransfer(address token, address to, uint value) private {\r... */\n    tag_279:\n        /* \"contracts/TenkStablePair.sol\":2008:2020  bool success */\n      0x00\n        /* \"contracts/TenkStablePair.sol\":2022:2039  bytes memory data */\n      0x60\n        /* \"contracts/TenkStablePair.sol\":2043:2048  token */\n      dup5\n        /* \"contracts/TenkStablePair.sol\":2043:2053  token.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TenkStablePair.sol\":457:491  bytes('transfer(address,uint256)') */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x19\n      dup2\n      mstore\n      0x20\n      add\n      0x7472616e7366657228616464726573732c75696e743235362900000000000000\n      dup2\n      mstore\n      pop\n        /* \"contracts/TenkStablePair.sol\":447:492  keccak256(bytes('transfer(address,uint256)')) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"contracts/TenkStablePair.sol\":2087:2089  to */\n      dup6\n        /* \"contracts/TenkStablePair.sol\":2091:2096  value */\n      dup6\n        /* \"contracts/TenkStablePair.sol\":2054:2097  abi.encodeWithSelector(SELECTOR, to, value) */\n      add(0x24, mload(0x40))\n      dup1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n        /* \"--CODEGEN--\":49:53   */\n      0x20\n        /* \"--CODEGEN--\":39:46   */\n      dup2\n        /* \"--CODEGEN--\":30:37   */\n      dup4\n        /* \"--CODEGEN--\":26:47   */\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      sub\n        /* \"--CODEGEN--\":13:20   */\n      dup2\n        /* \"--CODEGEN--\":6:55   */\n      mstore\n        /* \"contracts/TenkStablePair.sol\":2054:2097  abi.encodeWithSelector(SELECTOR, to, value) */\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"--CODEGEN--\":38:42   */\n      0x20\n        /* \"--CODEGEN--\":29:36   */\n      dup3\n        /* \"--CODEGEN--\":25:43   */\n      add\n        /* \"--CODEGEN--\":67:77   */\n      dup1\n        /* \"--CODEGEN--\":61:78   */\n      mload\n        /* \"--CODEGEN--\":96:154   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"--CODEGEN--\":199:207   */\n      dup4\n        /* \"--CODEGEN--\":192:196   */\n      dup2\n        /* \"--CODEGEN--\":186:190   */\n      dup4\n        /* \"--CODEGEN--\":182:197   */\n      and\n        /* \"--CODEGEN--\":179:208   */\n      or\n        /* \"--CODEGEN--\":167:177   */\n      dup4\n        /* \"--CODEGEN--\":160:209   */\n      mstore\n        /* \"--CODEGEN--\":0:215   */\n      pop\n      pop\n      pop\n        /* \"contracts/TenkStablePair.sol\":2054:2097  abi.encodeWithSelector(SELECTOR, to, value) */\n      pop\n        /* \"contracts/TenkStablePair.sol\":2043:2098  token.call(abi.encodeWithSelector(SELECTOR, to, value)) */\n      mload(0x40)\n      dup1\n      dup3\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":36:189   */\n    tag_503:\n        /* \"--CODEGEN--\":66:68   */\n      0x20\n        /* \"--CODEGEN--\":61:64   */\n      dup4\n        /* \"--CODEGEN--\":58:69   */\n      lt\n        /* \"--CODEGEN--\":36:189   */\n      tag_505\n      jumpi\n        /* \"--CODEGEN--\":182:185   */\n      dup1\n        /* \"--CODEGEN--\":176:186   */\n      mload\n        /* \"--CODEGEN--\":171:174   */\n      dup3\n        /* \"--CODEGEN--\":164:187   */\n      mstore\n        /* \"--CODEGEN--\":98:100   */\n      0x20\n        /* \"--CODEGEN--\":93:96   */\n      dup3\n        /* \"--CODEGEN--\":89:101   */\n      add\n        /* \"--CODEGEN--\":82:101   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":123:125   */\n      0x20\n        /* \"--CODEGEN--\":118:121   */\n      dup2\n        /* \"--CODEGEN--\":114:126   */\n      add\n        /* \"--CODEGEN--\":107:126   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":148:150   */\n      0x20\n        /* \"--CODEGEN--\":143:146   */\n      dup4\n        /* \"--CODEGEN--\":139:151   */\n      sub\n        /* \"--CODEGEN--\":132:151   */\n      swap3\n      pop\n        /* \"--CODEGEN--\":36:189   */\n      jump(tag_503)\n    tag_505:\n        /* \"--CODEGEN--\":274:275   */\n      0x01\n        /* \"--CODEGEN--\":267:270   */\n      dup4\n        /* \"--CODEGEN--\":263:265   */\n      0x20\n        /* \"--CODEGEN--\":259:271   */\n      sub\n        /* \"--CODEGEN--\":254:257   */\n      0x0100\n        /* \"--CODEGEN--\":250:272   */\n      exp\n        /* \"--CODEGEN--\":246:276   */\n      sub\n        /* \"--CODEGEN--\":315:319   */\n      dup1\n        /* \"--CODEGEN--\":311:320   */\n      not\n        /* \"--CODEGEN--\":305:308   */\n      dup3\n        /* \"--CODEGEN--\":299:309   */\n      mload\n        /* \"--CODEGEN--\":295:321   */\n      and\n        /* \"--CODEGEN--\":356:360   */\n      dup2\n        /* \"--CODEGEN--\":350:353   */\n      dup5\n        /* \"--CODEGEN--\":344:354   */\n      mload\n        /* \"--CODEGEN--\":340:361   */\n      and\n        /* \"--CODEGEN--\":389:396   */\n      dup1\n        /* \"--CODEGEN--\":380:387   */\n      dup3\n        /* \"--CODEGEN--\":377:397   */\n      or\n        /* \"--CODEGEN--\":372:375   */\n      dup6\n        /* \"--CODEGEN--\":365:398   */\n      mstore\n        /* \"--CODEGEN--\":3:402   */\n      pop\n      pop\n      pop\n        /* \"contracts/TenkStablePair.sol\":2043:2098  token.call(abi.encodeWithSelector(SELECTOR, to, value)) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap2\n      pop\n      pop\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup7\n      gas\n      call\n      swap2\n      pop\n      pop\n      returndatasize\n        /* \"--CODEGEN--\":14:15   */\n      dup1\n        /* \"--CODEGEN--\":21:22   */\n      0x00\n        /* \"--CODEGEN--\":16:47   */\n      dup2\n      eq\n      tag_507\n      jumpi\n        /* \"--CODEGEN--\":75:79   */\n      0x40\n        /* \"--CODEGEN--\":69:80   */\n      mload\n        /* \"--CODEGEN--\":64:80   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":144:148   */\n      0x1f\n        /* \"--CODEGEN--\":140:149   */\n      not\n        /* \"--CODEGEN--\":133:137   */\n      0x3f\n        /* \"--CODEGEN--\":115:131   */\n      returndatasize\n        /* \"--CODEGEN--\":111:138   */\n      add\n        /* \"--CODEGEN--\":107:150   */\n      and\n        /* \"--CODEGEN--\":104:105   */\n      dup3\n        /* \"--CODEGEN--\":100:151   */\n      add\n        /* \"--CODEGEN--\":94:98   */\n      0x40\n        /* \"--CODEGEN--\":87:152   */\n      mstore\n        /* \"--CODEGEN--\":169:185   */\n      returndatasize\n        /* \"--CODEGEN--\":166:167   */\n      dup3\n        /* \"--CODEGEN--\":159:186   */\n      mstore\n        /* \"--CODEGEN--\":225:241   */\n      returndatasize\n        /* \"--CODEGEN--\":222:223   */\n      0x00\n        /* \"--CODEGEN--\":215:219   */\n      0x20\n        /* \"--CODEGEN--\":212:213   */\n      dup5\n        /* \"--CODEGEN--\":208:220   */\n      add\n        /* \"--CODEGEN--\":193:242   */\n      returndatacopy\n        /* \"--CODEGEN--\":7:249   */\n      jump(tag_506)\n        /* \"--CODEGEN--\":16:47   */\n    tag_507:\n        /* \"--CODEGEN--\":36:40   */\n      0x60\n        /* \"--CODEGEN--\":31:40   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":7:249   */\n    tag_506:\n      pop\n        /* \"contracts/TenkStablePair.sol\":2007:2098  (bool success, bytes memory data) = token.call(abi.encodeWithSelector(SELECTOR, to, value)) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"contracts/TenkStablePair.sol\":2113:2120  success */\n      dup2\n        /* \"contracts/TenkStablePair.sol\":2113:2170  success && (data.length == 0 || abi.decode(data, (bool))) */\n      dup1\n      iszero\n      tag_508\n      jumpi\n      pop\n        /* \"contracts/TenkStablePair.sol\":2140:2141  0 */\n      0x00\n        /* \"contracts/TenkStablePair.sol\":2125:2129  data */\n      dup2\n        /* \"contracts/TenkStablePair.sol\":2125:2136  data.length */\n      mload\n        /* \"contracts/TenkStablePair.sol\":2125:2141  data.length == 0 */\n      eq\n        /* \"contracts/TenkStablePair.sol\":2125:2169  data.length == 0 || abi.decode(data, (bool)) */\n      dup1\n      tag_509\n      jumpi\n      pop\n        /* \"contracts/TenkStablePair.sol\":2156:2160  data */\n      dup1\n        /* \"contracts/TenkStablePair.sol\":2145:2169  abi.decode(data, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_510\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_510:\n        /* \"contracts/TenkStablePair.sol\":2145:2169  abi.decode(data, (bool)) */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"contracts/TenkStablePair.sol\":2125:2169  data.length == 0 || abi.decode(data, (bool)) */\n    tag_509:\n        /* \"contracts/TenkStablePair.sol\":2113:2170  success && (data.length == 0 || abi.decode(data, (bool))) */\n    tag_508:\n        /* \"contracts/TenkStablePair.sol\":2105:2195  require(success && (data.length == 0 || abi.decode(data, (bool))), '10k: TRANSFER_FAILED') */\n      tag_511\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x14\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x31306b3a205452414e534645525f4641494c4544000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_511:\n        /* \"contracts/TenkStablePair.sol\":1930:2201  function _safeTransfer(address token, address to, uint value) private {\r... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/TenkStablePair.sol\":15774:16887  function _getAmountOut(uint amountIn, address tokenIn, uint _reserve0, uint _reserve1, uint feePercent) internal view returns (uint) {\r... */\n    tag_315:\n        /* \"contracts/TenkStablePair.sol\":15901:15905  uint */\n      0x00\n        /* \"contracts/TenkStablePair.sol\":15918:15928  stableSwap */\n      0x0c\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/TenkStablePair.sol\":15914:16882  if (stableSwap) {\r... */\n      iszero\n      tag_513\n      jumpi\n        /* \"contracts/TenkStablePair.sol\":15950:16006  amountIn.sub(amountIn.mul(feePercent) / FEE_DENOMINATOR) */\n      tag_514\n        /* \"contracts/TenkStablePair.sol\":650:656  100000 */\n      0x0186a0\n        /* \"contracts/TenkStablePair.sol\":15963:15987  amountIn.mul(feePercent) */\n      tag_515\n        /* \"contracts/TenkStablePair.sol\":15976:15986  feePercent */\n      dup5\n        /* \"contracts/TenkStablePair.sol\":15963:15971  amountIn */\n      dup10\n        /* \"contracts/TenkStablePair.sol\":15963:15975  amountIn.mul */\n      tag_239\n      swap1\n        /* \"contracts/TenkStablePair.sol\":15963:15987  amountIn.mul(feePercent) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_515:\n        /* \"contracts/TenkStablePair.sol\":15963:16005  amountIn.mul(feePercent) / FEE_DENOMINATOR */\n      dup2\n      tag_516\n      jumpi\n      invalid\n    tag_516:\n      div\n        /* \"contracts/TenkStablePair.sol\":15950:15958  amountIn */\n      dup8\n        /* \"contracts/TenkStablePair.sol\":15950:15962  amountIn.sub */\n      tag_173\n      swap1\n        /* \"contracts/TenkStablePair.sol\":15950:16006  amountIn.sub(amountIn.mul(feePercent) / FEE_DENOMINATOR) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_514:\n        /* \"contracts/TenkStablePair.sol\":15939:16006  amountIn = amountIn.sub(amountIn.mul(feePercent) / FEE_DENOMINATOR) */\n      swap6\n      pop\n        /* \"contracts/TenkStablePair.sol\":16050:16057  uint xy */\n      0x00\n        /* \"contracts/TenkStablePair.sol\":16060:16084  _k(_reserve0, _reserve1) */\n      tag_517\n        /* \"contracts/TenkStablePair.sol\":16063:16072  _reserve0 */\n      dup6\n        /* \"contracts/TenkStablePair.sol\":16074:16083  _reserve1 */\n      dup6\n        /* \"contracts/TenkStablePair.sol\":16060:16062  _k */\n      tag_193\n        /* \"contracts/TenkStablePair.sol\":16060:16084  _k(_reserve0, _reserve1) */\n      jump\t// in\n    tag_517:\n        /* \"contracts/TenkStablePair.sol\":16050:16084  uint xy = _k(_reserve0, _reserve1) */\n      swap1\n      pop\n        /* \"contracts/TenkStablePair.sol\":16124:16144  precisionMultiplier0 */\n      sload(0x09)\n        /* \"contracts/TenkStablePair.sol\":16117:16121  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/TenkStablePair.sol\":16105:16114  _reserve0 */\n      dup7\n        /* \"contracts/TenkStablePair.sol\":16105:16121  _reserve0 * 1e18 */\n      mul\n        /* \"contracts/TenkStablePair.sol\":16105:16144  _reserve0 * 1e18 / precisionMultiplier0 */\n      dup2\n      tag_518\n      jumpi\n      invalid\n    tag_518:\n      div\n        /* \"contracts/TenkStablePair.sol\":16093:16144  _reserve0 = _reserve0 * 1e18 / precisionMultiplier0 */\n      swap5\n      pop\n        /* \"contracts/TenkStablePair.sol\":16184:16204  precisionMultiplier1 */\n      sload(0x0a)\n        /* \"contracts/TenkStablePair.sol\":16177:16181  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/TenkStablePair.sol\":16165:16174  _reserve1 */\n      dup6\n        /* \"contracts/TenkStablePair.sol\":16165:16181  _reserve1 * 1e18 */\n      mul\n        /* \"contracts/TenkStablePair.sol\":16165:16204  _reserve1 * 1e18 / precisionMultiplier1 */\n      dup2\n      tag_519\n      jumpi\n      invalid\n    tag_519:\n      div\n        /* \"contracts/TenkStablePair.sol\":16153:16204  _reserve1 = _reserve1 * 1e18 / precisionMultiplier1 */\n      swap4\n      pop\n        /* \"contracts/TenkStablePair.sol\":16216:16229  uint reserveA */\n      0x00\n        /* \"contracts/TenkStablePair.sol\":16231:16244  uint reserveB */\n      dup1\n        /* \"contracts/TenkStablePair.sol\":16259:16265  token0 */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TenkStablePair.sol\":16248:16265  tokenIn == token0 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TenkStablePair.sol\":16248:16255  tokenIn */\n      dup9\n        /* \"contracts/TenkStablePair.sol\":16248:16265  tokenIn == token0 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/TenkStablePair.sol\":16248:16315  tokenIn == token0 ? (_reserve0, _reserve1) : (_reserve1, _reserve0) */\n      tag_520\n      jumpi\n        /* \"contracts/TenkStablePair.sol\":16294:16303  _reserve1 */\n      dup6\n        /* \"contracts/TenkStablePair.sol\":16305:16314  _reserve0 */\n      dup8\n        /* \"contracts/TenkStablePair.sol\":16248:16315  tokenIn == token0 ? (_reserve0, _reserve1) : (_reserve1, _reserve0) */\n      jump(tag_521)\n    tag_520:\n        /* \"contracts/TenkStablePair.sol\":16269:16278  _reserve0 */\n      dup7\n        /* \"contracts/TenkStablePair.sol\":16280:16289  _reserve1 */\n      dup7\n        /* \"contracts/TenkStablePair.sol\":16248:16315  tokenIn == token0 ? (_reserve0, _reserve1) : (_reserve1, _reserve0) */\n    tag_521:\n        /* \"contracts/TenkStablePair.sol\":16215:16315  (uint reserveA, uint reserveB) = tokenIn == token0 ? (_reserve0, _reserve1) : (_reserve1, _reserve0) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"contracts/TenkStablePair.sol\":16346:16352  token0 */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TenkStablePair.sol\":16335:16352  tokenIn == token0 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TenkStablePair.sol\":16335:16342  tokenIn */\n      dup9\n        /* \"contracts/TenkStablePair.sol\":16335:16352  tokenIn == token0 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/TenkStablePair.sol\":16335:16434  tokenIn == token0 ? amountIn * 1e18 / precisionMultiplier0 : amountIn * 1e18 / precisionMultiplier1 */\n      tag_522\n      jumpi\n        /* \"contracts/TenkStablePair.sol\":16414:16434  precisionMultiplier1 */\n      sload(0x0a)\n        /* \"contracts/TenkStablePair.sol\":16407:16411  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/TenkStablePair.sol\":16396:16404  amountIn */\n      dup11\n        /* \"contracts/TenkStablePair.sol\":16396:16411  amountIn * 1e18 */\n      mul\n        /* \"contracts/TenkStablePair.sol\":16396:16434  amountIn * 1e18 / precisionMultiplier1 */\n      dup2\n      tag_523\n      jumpi\n      invalid\n    tag_523:\n      div\n        /* \"contracts/TenkStablePair.sol\":16335:16434  tokenIn == token0 ? amountIn * 1e18 / precisionMultiplier0 : amountIn * 1e18 / precisionMultiplier1 */\n      jump(tag_524)\n    tag_522:\n        /* \"contracts/TenkStablePair.sol\":16373:16393  precisionMultiplier0 */\n      sload(0x09)\n        /* \"contracts/TenkStablePair.sol\":16366:16370  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/TenkStablePair.sol\":16355:16363  amountIn */\n      dup11\n        /* \"contracts/TenkStablePair.sol\":16355:16370  amountIn * 1e18 */\n      mul\n        /* \"contracts/TenkStablePair.sol\":16355:16393  amountIn * 1e18 / precisionMultiplier0 */\n      dup2\n      tag_525\n      jumpi\n      invalid\n    tag_525:\n      div\n        /* \"contracts/TenkStablePair.sol\":16335:16434  tokenIn == token0 ? amountIn * 1e18 / precisionMultiplier0 : amountIn * 1e18 / precisionMultiplier1 */\n    tag_524:\n        /* \"contracts/TenkStablePair.sol\":16324:16434  amountIn = tokenIn == token0 ? amountIn * 1e18 / precisionMultiplier0 : amountIn * 1e18 / precisionMultiplier1 */\n      swap9\n      pop\n        /* \"contracts/TenkStablePair.sol\":16443:16449  uint y */\n      0x00\n        /* \"contracts/TenkStablePair.sol\":16463:16504  _get_y(amountIn + reserveA, xy, reserveB) */\n      tag_526\n        /* \"contracts/TenkStablePair.sol\":16481:16489  reserveA */\n      dup4\n        /* \"contracts/TenkStablePair.sol\":16470:16478  amountIn */\n      dup12\n        /* \"contracts/TenkStablePair.sol\":16470:16489  amountIn + reserveA */\n      add\n        /* \"contracts/TenkStablePair.sol\":16491:16493  xy */\n      dup6\n        /* \"contracts/TenkStablePair.sol\":16495:16503  reserveB */\n      dup5\n        /* \"contracts/TenkStablePair.sol\":16463:16469  _get_y */\n      tag_527\n        /* \"contracts/TenkStablePair.sol\":16463:16504  _get_y(amountIn + reserveA, xy, reserveB) */\n      jump\t// in\n    tag_526:\n        /* \"contracts/TenkStablePair.sol\":16452:16460  reserveB */\n      dup3\n        /* \"contracts/TenkStablePair.sol\":16452:16504  reserveB - _get_y(amountIn + reserveA, xy, reserveB) */\n      sub\n        /* \"contracts/TenkStablePair.sol\":16443:16504  uint y = reserveB - _get_y(amountIn + reserveA, xy, reserveB) */\n      swap1\n      pop\n        /* \"contracts/TenkStablePair.sol\":16592:16596  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/TenkStablePair.sol\":16536:16542  token0 */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TenkStablePair.sol\":16525:16542  tokenIn == token0 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TenkStablePair.sol\":16525:16532  tokenIn */\n      dup11\n        /* \"contracts/TenkStablePair.sol\":16525:16542  tokenIn == token0 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/TenkStablePair.sol\":16525:16588  tokenIn == token0 ? precisionMultiplier1 : precisionMultiplier0 */\n      tag_528\n      jumpi\n        /* \"contracts/TenkStablePair.sol\":16568:16588  precisionMultiplier0 */\n      sload(0x09)\n        /* \"contracts/TenkStablePair.sol\":16525:16588  tokenIn == token0 ? precisionMultiplier1 : precisionMultiplier0 */\n      jump(tag_529)\n    tag_528:\n        /* \"contracts/TenkStablePair.sol\":16545:16565  precisionMultiplier1 */\n      sload(0x0a)\n        /* \"contracts/TenkStablePair.sol\":16525:16588  tokenIn == token0 ? precisionMultiplier1 : precisionMultiplier0 */\n    tag_529:\n        /* \"contracts/TenkStablePair.sol\":16520:16521  y */\n      dup3\n        /* \"contracts/TenkStablePair.sol\":16520:16589  y * (tokenIn == token0 ? precisionMultiplier1 : precisionMultiplier0) */\n      mul\n        /* \"contracts/TenkStablePair.sol\":16520:16596  y * (tokenIn == token0 ? precisionMultiplier1 : precisionMultiplier0) / 1e18 */\n      dup2\n      tag_530\n      jumpi\n      invalid\n    tag_530:\n      div\n        /* \"contracts/TenkStablePair.sol\":16513:16596  return y * (tokenIn == token0 ? precisionMultiplier1 : precisionMultiplier0) / 1e18 */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump(tag_512)\n        /* \"contracts/TenkStablePair.sol\":15914:16882  if (stableSwap) {\r... */\n    tag_513:\n        /* \"contracts/TenkStablePair.sol\":16622:16635  uint reserveA */\n      0x00\n        /* \"contracts/TenkStablePair.sol\":16637:16650  uint reserveB */\n      dup1\n        /* \"contracts/TenkStablePair.sol\":16665:16671  token0 */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TenkStablePair.sol\":16654:16671  tokenIn == token0 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TenkStablePair.sol\":16654:16661  tokenIn */\n      dup8\n        /* \"contracts/TenkStablePair.sol\":16654:16671  tokenIn == token0 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/TenkStablePair.sol\":16654:16721  tokenIn == token0 ? (_reserve0, _reserve1) : (_reserve1, _reserve0) */\n      tag_532\n      jumpi\n        /* \"contracts/TenkStablePair.sol\":16700:16709  _reserve1 */\n      dup5\n        /* \"contracts/TenkStablePair.sol\":16711:16720  _reserve0 */\n      dup7\n        /* \"contracts/TenkStablePair.sol\":16654:16721  tokenIn == token0 ? (_reserve0, _reserve1) : (_reserve1, _reserve0) */\n      jump(tag_533)\n    tag_532:\n        /* \"contracts/TenkStablePair.sol\":16675:16684  _reserve0 */\n      dup6\n        /* \"contracts/TenkStablePair.sol\":16686:16695  _reserve1 */\n      dup6\n        /* \"contracts/TenkStablePair.sol\":16654:16721  tokenIn == token0 ? (_reserve0, _reserve1) : (_reserve1, _reserve0) */\n    tag_533:\n        /* \"contracts/TenkStablePair.sol\":16621:16721  (uint reserveA, uint reserveB) = tokenIn == token0 ? (_reserve0, _reserve1) : (_reserve1, _reserve0) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"contracts/TenkStablePair.sol\":16741:16786  amountIn.mul(FEE_DENOMINATOR.sub(feePercent)) */\n      tag_534\n        /* \"contracts/TenkStablePair.sol\":16754:16785  FEE_DENOMINATOR.sub(feePercent) */\n      tag_535\n        /* \"contracts/TenkStablePair.sol\":16774:16784  feePercent */\n      dup6\n        /* \"contracts/TenkStablePair.sol\":650:656  100000 */\n      0x0186a0\n        /* \"contracts/TenkStablePair.sol\":16754:16773  FEE_DENOMINATOR.sub */\n      tag_173\n      swap1\n        /* \"contracts/TenkStablePair.sol\":16754:16785  FEE_DENOMINATOR.sub(feePercent) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_535:\n        /* \"contracts/TenkStablePair.sol\":16741:16749  amountIn */\n      dup10\n        /* \"contracts/TenkStablePair.sol\":16741:16753  amountIn.mul */\n      tag_239\n      swap1\n        /* \"contracts/TenkStablePair.sol\":16741:16786  amountIn.mul(FEE_DENOMINATOR.sub(feePercent)) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_534:\n        /* \"contracts/TenkStablePair.sol\":16730:16786  amountIn = amountIn.mul(FEE_DENOMINATOR.sub(feePercent)) */\n      swap8\n      pop\n        /* \"contracts/TenkStablePair.sol\":16830:16873  reserveA.mul(FEE_DENOMINATOR).add(amountIn) */\n      tag_536\n        /* \"contracts/TenkStablePair.sol\":16864:16872  amountIn */\n      dup9\n        /* \"contracts/TenkStablePair.sol\":16830:16859  reserveA.mul(FEE_DENOMINATOR) */\n      tag_537\n        /* \"contracts/TenkStablePair.sol\":650:656  100000 */\n      0x0186a0\n        /* \"contracts/TenkStablePair.sol\":16830:16838  reserveA */\n      dup6\n        /* \"contracts/TenkStablePair.sol\":16830:16842  reserveA.mul */\n      tag_239\n      swap1\n        /* \"contracts/TenkStablePair.sol\":16830:16859  reserveA.mul(FEE_DENOMINATOR) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_537:\n        /* \"contracts/TenkStablePair.sol\":16830:16863  reserveA.mul(FEE_DENOMINATOR).add */\n      tag_435\n      swap1\n        /* \"contracts/TenkStablePair.sol\":16830:16873  reserveA.mul(FEE_DENOMINATOR).add(amountIn) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_536:\n        /* \"contracts/TenkStablePair.sol\":16803:16825  amountIn.mul(reserveB) */\n      tag_538\n        /* \"contracts/TenkStablePair.sol\":16816:16824  reserveB */\n      dup3\n        /* \"contracts/TenkStablePair.sol\":16803:16811  amountIn */\n      dup11\n        /* \"contracts/TenkStablePair.sol\":16803:16815  amountIn.mul */\n      tag_239\n      swap1\n        /* \"contracts/TenkStablePair.sol\":16803:16825  amountIn.mul(reserveB) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_538:\n        /* \"contracts/TenkStablePair.sol\":16802:16874  (amountIn.mul(reserveB)) / (reserveA.mul(FEE_DENOMINATOR).add(amountIn)) */\n      dup2\n      tag_539\n      jumpi\n      invalid\n    tag_539:\n      div\n        /* \"contracts/TenkStablePair.sol\":16795:16874  return (amountIn.mul(reserveB)) / (reserveA.mul(FEE_DENOMINATOR).add(amountIn)) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/TenkStablePair.sol\":15774:16887  function _getAmountOut(uint amountIn, address tokenIn, uint _reserve0, uint _reserve1, uint feePercent) internal view returns (uint) {\r... */\n    tag_512:\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"libraries/SafeMath.sol\":160:288  function add(uint x, uint y) internal pure returns (uint z) {\r... */\n    tag_435:\n        /* \"libraries/SafeMath.sol\":212:218  uint z */\n      0x00\n        /* \"libraries/SafeMath.sol\":254:255  x */\n      dup3\n        /* \"libraries/SafeMath.sol\":248:249  y */\n      dup3\n        /* \"libraries/SafeMath.sol\":244:245  x */\n      dup5\n        /* \"libraries/SafeMath.sol\":244:249  x + y */\n      add\n        /* \"libraries/SafeMath.sol\":240:249  z = x + y */\n      swap2\n      pop\n      dup2\n        /* \"libraries/SafeMath.sol\":239:255  (z = x + y) >= x */\n      lt\n      iszero\n        /* \"libraries/SafeMath.sol\":231:280  require((z = x + y) >= x, 'ds-math-add-overflow') */\n      tag_541\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x14\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x64732d6d6174682d6164642d6f766572666c6f77000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_541:\n        /* \"libraries/SafeMath.sol\":160:288  function add(uint x, uint y) internal pure returns (uint z) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/TenkStablePair.sol\":14643:15193  function _get_y(uint x0, uint xy, uint y) internal pure returns (uint) {\r... */\n    tag_527:\n        /* \"contracts/TenkStablePair.sol\":14708:14712  uint */\n      0x00\n        /* \"contracts/TenkStablePair.sol\":14726:14732  uint i */\n      dup1\n        /* \"contracts/TenkStablePair.sol\":14735:14736  0 */\n      0x00\n        /* \"contracts/TenkStablePair.sol\":14726:14736  uint i = 0 */\n      swap1\n      pop\n        /* \"contracts/TenkStablePair.sol\":14721:15173  for (uint i = 0; i < 255; i++) {\r... */\n    tag_543:\n        /* \"contracts/TenkStablePair.sol\":14742:14745  255 */\n      0xff\n        /* \"contracts/TenkStablePair.sol\":14738:14739  i */\n      dup2\n        /* \"contracts/TenkStablePair.sol\":14738:14745  i < 255 */\n      lt\n        /* \"contracts/TenkStablePair.sol\":14721:15173  for (uint i = 0; i < 255; i++) {\r... */\n      iszero\n      tag_544\n      jumpi\n        /* \"contracts/TenkStablePair.sol\":14761:14772  uint y_prev */\n      0x00\n        /* \"contracts/TenkStablePair.sol\":14775:14776  y */\n      dup4\n        /* \"contracts/TenkStablePair.sol\":14761:14776  uint y_prev = y */\n      swap1\n      pop\n        /* \"contracts/TenkStablePair.sol\":14785:14791  uint k */\n      0x00\n        /* \"contracts/TenkStablePair.sol\":14794:14803  _f(x0, y) */\n      tag_546\n        /* \"contracts/TenkStablePair.sol\":14797:14799  x0 */\n      dup8\n        /* \"contracts/TenkStablePair.sol\":14801:14802  y */\n      dup7\n        /* \"contracts/TenkStablePair.sol\":14794:14796  _f */\n      tag_547\n        /* \"contracts/TenkStablePair.sol\":14794:14803  _f(x0, y) */\n      jump\t// in\n    tag_546:\n        /* \"contracts/TenkStablePair.sol\":14785:14803  uint k = _f(x0, y) */\n      swap1\n      pop\n        /* \"contracts/TenkStablePair.sol\":14820:14822  xy */\n      dup6\n        /* \"contracts/TenkStablePair.sol\":14816:14817  k */\n      dup2\n        /* \"contracts/TenkStablePair.sol\":14816:14822  k < xy */\n      lt\n        /* \"contracts/TenkStablePair.sol\":14812:14988  if (k < xy) {\r... */\n      iszero\n      tag_548\n      jumpi\n        /* \"contracts/TenkStablePair.sol\":14835:14842  uint dy */\n      0x00\n        /* \"contracts/TenkStablePair.sol\":14863:14872  _d(x0, y) */\n      tag_549\n        /* \"contracts/TenkStablePair.sol\":14866:14868  x0 */\n      dup9\n        /* \"contracts/TenkStablePair.sol\":14870:14871  y */\n      dup8\n        /* \"contracts/TenkStablePair.sol\":14863:14865  _d */\n      tag_550\n        /* \"contracts/TenkStablePair.sol\":14863:14872  _d(x0, y) */\n      jump\t// in\n    tag_549:\n        /* \"contracts/TenkStablePair.sol\":14856:14860  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/TenkStablePair.sol\":14851:14852  k */\n      dup4\n        /* \"contracts/TenkStablePair.sol\":14846:14848  xy */\n      dup10\n        /* \"contracts/TenkStablePair.sol\":14846:14852  xy - k */\n      sub\n        /* \"contracts/TenkStablePair.sol\":14845:14860  (xy - k) * 1e18 */\n      mul\n        /* \"contracts/TenkStablePair.sol\":14845:14872  (xy - k) * 1e18 / _d(x0, y) */\n      dup2\n      tag_551\n      jumpi\n      invalid\n    tag_551:\n      div\n        /* \"contracts/TenkStablePair.sol\":14835:14872  uint dy = (xy - k) * 1e18 / _d(x0, y) */\n      swap1\n      pop\n        /* \"contracts/TenkStablePair.sol\":14891:14893  dy */\n      dup1\n        /* \"contracts/TenkStablePair.sol\":14887:14888  y */\n      dup7\n        /* \"contracts/TenkStablePair.sol\":14887:14893  y + dy */\n      add\n        /* \"contracts/TenkStablePair.sol\":14883:14893  y = y + dy */\n      swap6\n      pop\n        /* \"contracts/TenkStablePair.sol\":14812:14988  if (k < xy) {\r... */\n      pop\n      jump(tag_552)\n    tag_548:\n        /* \"contracts/TenkStablePair.sol\":14920:14927  uint dy */\n      0x00\n        /* \"contracts/TenkStablePair.sol\":14948:14957  _d(x0, y) */\n      tag_553\n        /* \"contracts/TenkStablePair.sol\":14951:14953  x0 */\n      dup9\n        /* \"contracts/TenkStablePair.sol\":14955:14956  y */\n      dup8\n        /* \"contracts/TenkStablePair.sol\":14948:14950  _d */\n      tag_550\n        /* \"contracts/TenkStablePair.sol\":14948:14957  _d(x0, y) */\n      jump\t// in\n    tag_553:\n        /* \"contracts/TenkStablePair.sol\":14941:14945  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/TenkStablePair.sol\":14935:14937  xy */\n      dup9\n        /* \"contracts/TenkStablePair.sol\":14931:14932  k */\n      dup5\n        /* \"contracts/TenkStablePair.sol\":14931:14937  k - xy */\n      sub\n        /* \"contracts/TenkStablePair.sol\":14930:14945  (k - xy) * 1e18 */\n      mul\n        /* \"contracts/TenkStablePair.sol\":14930:14957  (k - xy) * 1e18 / _d(x0, y) */\n      dup2\n      tag_554\n      jumpi\n      invalid\n    tag_554:\n      div\n        /* \"contracts/TenkStablePair.sol\":14920:14957  uint dy = (k - xy) * 1e18 / _d(x0, y) */\n      swap1\n      pop\n        /* \"contracts/TenkStablePair.sol\":14976:14978  dy */\n      dup1\n        /* \"contracts/TenkStablePair.sol\":14972:14973  y */\n      dup7\n        /* \"contracts/TenkStablePair.sol\":14972:14978  y - dy */\n      sub\n        /* \"contracts/TenkStablePair.sol\":14968:14978  y = y - dy */\n      swap6\n      pop\n        /* \"contracts/TenkStablePair.sol\":14812:14988  if (k < xy) {\r... */\n      pop\n    tag_552:\n        /* \"contracts/TenkStablePair.sol\":15004:15010  y_prev */\n      dup2\n        /* \"contracts/TenkStablePair.sol\":15000:15001  y */\n      dup6\n        /* \"contracts/TenkStablePair.sol\":15000:15010  y > y_prev */\n      gt\n        /* \"contracts/TenkStablePair.sol\":14996:15166  if (y > y_prev) {\r... */\n      iszero\n      tag_555\n      jumpi\n        /* \"contracts/TenkStablePair.sol\":15041:15042  1 */\n      0x01\n        /* \"contracts/TenkStablePair.sol\":15031:15037  y_prev */\n      dup3\n        /* \"contracts/TenkStablePair.sol\":15027:15028  y */\n      dup7\n        /* \"contracts/TenkStablePair.sol\":15027:15037  y - y_prev */\n      sub\n        /* \"contracts/TenkStablePair.sol\":15027:15042  y - y_prev <= 1 */\n      gt\n        /* \"contracts/TenkStablePair.sol\":15023:15077  if (y - y_prev <= 1) {\r... */\n      tag_556\n      jumpi\n        /* \"contracts/TenkStablePair.sol\":15064:15065  y */\n      dup5\n        /* \"contracts/TenkStablePair.sol\":15057:15065  return y */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump(tag_542)\n        /* \"contracts/TenkStablePair.sol\":15023:15077  if (y - y_prev <= 1) {\r... */\n    tag_556:\n        /* \"contracts/TenkStablePair.sol\":14996:15166  if (y > y_prev) {\r... */\n      jump(tag_557)\n    tag_555:\n        /* \"contracts/TenkStablePair.sol\":15121:15122  1 */\n      0x01\n        /* \"contracts/TenkStablePair.sol\":15116:15117  y */\n      dup6\n        /* \"contracts/TenkStablePair.sol\":15107:15113  y_prev */\n      dup4\n        /* \"contracts/TenkStablePair.sol\":15107:15117  y_prev - y */\n      sub\n        /* \"contracts/TenkStablePair.sol\":15107:15122  y_prev - y <= 1 */\n      gt\n        /* \"contracts/TenkStablePair.sol\":15103:15157  if (y_prev - y <= 1) {\r... */\n      tag_558\n      jumpi\n        /* \"contracts/TenkStablePair.sol\":15144:15145  y */\n      dup5\n        /* \"contracts/TenkStablePair.sol\":15137:15145  return y */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump(tag_542)\n        /* \"contracts/TenkStablePair.sol\":15103:15157  if (y_prev - y <= 1) {\r... */\n    tag_558:\n        /* \"contracts/TenkStablePair.sol\":14996:15166  if (y > y_prev) {\r... */\n    tag_557:\n        /* \"contracts/TenkStablePair.sol\":14721:15173  for (uint i = 0; i < 255; i++) {\r... */\n      pop\n      pop\n        /* \"contracts/TenkStablePair.sol\":14747:14750  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"contracts/TenkStablePair.sol\":14721:15173  for (uint i = 0; i < 255; i++) {\r... */\n      jump(tag_543)\n    tag_544:\n      pop\n        /* \"contracts/TenkStablePair.sol\":15186:15187  y */\n      dup2\n        /* \"contracts/TenkStablePair.sol\":15179:15187  return y */\n      swap1\n      pop\n        /* \"contracts/TenkStablePair.sol\":14643:15193  function _get_y(uint x0, uint xy, uint y) internal pure returns (uint) {\r... */\n    tag_542:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/TenkStablePair.sol\":15199:15356  function _f(uint x0, uint y) internal pure returns (uint) {\r... */\n    tag_547:\n        /* \"contracts/TenkStablePair.sol\":15251:15255  uint */\n      0x00\n        /* \"contracts/TenkStablePair.sol\":15346:15350  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/TenkStablePair.sol\":15342:15343  y */\n      dup3\n        /* \"contracts/TenkStablePair.sol\":15334:15338  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/TenkStablePair.sol\":15329:15331  x0 */\n      dup6\n        /* \"contracts/TenkStablePair.sol\":15322:15326  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/TenkStablePair.sol\":15317:15319  x0 */\n      dup8\n        /* \"contracts/TenkStablePair.sol\":15312:15314  x0 */\n      dup9\n        /* \"contracts/TenkStablePair.sol\":15312:15319  x0 * x0 */\n      mul\n        /* \"contracts/TenkStablePair.sol\":15312:15326  x0 * x0 / 1e18 */\n      dup2\n      tag_560\n      jumpi\n      invalid\n    tag_560:\n      div\n        /* \"contracts/TenkStablePair.sol\":15312:15331  x0 * x0 / 1e18 * x0 */\n      mul\n        /* \"contracts/TenkStablePair.sol\":15312:15338  x0 * x0 / 1e18 * x0 / 1e18 */\n      dup2\n      tag_561\n      jumpi\n      invalid\n    tag_561:\n      div\n        /* \"contracts/TenkStablePair.sol\":15311:15343  (x0 * x0 / 1e18 * x0 / 1e18) * y */\n      mul\n        /* \"contracts/TenkStablePair.sol\":15311:15350  (x0 * x0 / 1e18 * x0 / 1e18) * y / 1e18 */\n      dup2\n      tag_562\n      jumpi\n      invalid\n    tag_562:\n      div\n        /* \"contracts/TenkStablePair.sol\":15304:15308  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/TenkStablePair.sol\":15296:15300  1e18 */\n      dup1\n        /* \"contracts/TenkStablePair.sol\":15292:15293  y */\n      dup5\n        /* \"contracts/TenkStablePair.sol\":15285:15289  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/TenkStablePair.sol\":15281:15282  y */\n      dup7\n        /* \"contracts/TenkStablePair.sol\":15277:15278  y */\n      dup8\n        /* \"contracts/TenkStablePair.sol\":15277:15282  y * y */\n      mul\n        /* \"contracts/TenkStablePair.sol\":15277:15289  y * y / 1e18 */\n      dup2\n      tag_563\n      jumpi\n      invalid\n    tag_563:\n      div\n        /* \"contracts/TenkStablePair.sol\":15277:15293  y * y / 1e18 * y */\n      mul\n        /* \"contracts/TenkStablePair.sol\":15277:15300  y * y / 1e18 * y / 1e18 */\n      dup2\n      tag_564\n      jumpi\n      invalid\n    tag_564:\n      div\n        /* \"contracts/TenkStablePair.sol\":15271:15273  x0 */\n      dup6\n        /* \"contracts/TenkStablePair.sol\":15271:15301  x0 * (y * y / 1e18 * y / 1e18) */\n      mul\n        /* \"contracts/TenkStablePair.sol\":15271:15308  x0 * (y * y / 1e18 * y / 1e18) / 1e18 */\n      dup2\n      tag_565\n      jumpi\n      invalid\n    tag_565:\n      div\n        /* \"contracts/TenkStablePair.sol\":15271:15350  x0 * (y * y / 1e18 * y / 1e18) / 1e18 + (x0 * x0 / 1e18 * x0 / 1e18) * y / 1e18 */\n      add\n        /* \"contracts/TenkStablePair.sol\":15264:15350  return x0 * (y * y / 1e18 * y / 1e18) / 1e18 + (x0 * x0 / 1e18 * x0 / 1e18) * y / 1e18 */\n      swap1\n      pop\n        /* \"contracts/TenkStablePair.sol\":15199:15356  function _f(uint x0, uint y) internal pure returns (uint) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/TenkStablePair.sol\":15362:15501  function _d(uint x0, uint y) internal pure returns (uint) {\r... */\n    tag_550:\n        /* \"contracts/TenkStablePair.sol\":15414:15418  uint */\n      0x00\n        /* \"contracts/TenkStablePair.sol\":15490:15494  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/TenkStablePair.sol\":15485:15487  x0 */\n      dup4\n        /* \"contracts/TenkStablePair.sol\":15478:15482  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/TenkStablePair.sol\":15473:15475  x0 */\n      dup6\n        /* \"contracts/TenkStablePair.sol\":15468:15470  x0 */\n      dup7\n        /* \"contracts/TenkStablePair.sol\":15468:15475  x0 * x0 */\n      mul\n        /* \"contracts/TenkStablePair.sol\":15468:15482  x0 * x0 / 1e18 */\n      dup2\n      tag_567\n      jumpi\n      invalid\n    tag_567:\n      div\n        /* \"contracts/TenkStablePair.sol\":15468:15487  x0 * x0 / 1e18 * x0 */\n      mul\n        /* \"contracts/TenkStablePair.sol\":15468:15494  x0 * x0 / 1e18 * x0 / 1e18 */\n      dup2\n      tag_568\n      jumpi\n      invalid\n    tag_568:\n      div\n        /* \"contracts/TenkStablePair.sol\":15460:15464  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/TenkStablePair.sol\":15452:15456  1e18 */\n      dup1\n        /* \"contracts/TenkStablePair.sol\":15448:15449  y */\n      dup5\n        /* \"contracts/TenkStablePair.sol\":15444:15445  y */\n      dup6\n        /* \"contracts/TenkStablePair.sol\":15444:15449  y * y */\n      mul\n        /* \"contracts/TenkStablePair.sol\":15444:15456  y * y / 1e18 */\n      dup2\n      tag_569\n      jumpi\n      invalid\n    tag_569:\n      div\n        /* \"contracts/TenkStablePair.sol\":15438:15440  x0 */\n      dup6\n        /* \"contracts/TenkStablePair.sol\":15434:15435  3 */\n      0x03\n        /* \"contracts/TenkStablePair.sol\":15434:15440  3 * x0 */\n      mul\n        /* \"contracts/TenkStablePair.sol\":15434:15457  3 * x0 * (y * y / 1e18) */\n      mul\n        /* \"contracts/TenkStablePair.sol\":15434:15464  3 * x0 * (y * y / 1e18) / 1e18 */\n      dup2\n      tag_570\n      jumpi\n      invalid\n    tag_570:\n      div\n        /* \"contracts/TenkStablePair.sol\":15434:15495  3 * x0 * (y * y / 1e18) / 1e18 + (x0 * x0 / 1e18 * x0 / 1e18) */\n      add\n        /* \"contracts/TenkStablePair.sol\":15427:15495  return 3 * x0 * (y * y / 1e18) / 1e18 + (x0 * x0 / 1e18 * x0 / 1e18) */\n      swap1\n      pop\n        /* \"contracts/TenkStablePair.sol\":15362:15501  function _d(uint x0, uint y) internal pure returns (uint) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/TenkStablePair.sol\":263:18101  contract TenkStablePair is I10kStablePair, TenkERC20 {\r... */\n    tag_163:\n      mload(0x40)\n      dup1\n      0x0100\n      add\n      0x40\n      mstore\n      dup1\n      and(0xffffffffffffffffffffffffffffffffffffffff, 0x00)\n      dup2\n      mstore\n      0x20\n      add\n      and(0xffffffffffffffffffffffffffffffffffffffff, 0x00)\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      jump\t// out\n    stop\n    data_0e37380231c63dd542c3187103d43bf3dc8feec0b6338e70e8209c96cba47625 31306b3a206f6e6c7920666163746f7279277320736574537461626c654f776e6572\n    data_34ffd81d2bf0b96acae486668fc9d6475667930df09e9039ee8381f9cc8ef0b1 31306b3a206f6e6c7920666163746f7279277320666565416d6f756e744f776e6572\n    data_45baaf65170b7d96ab118754b668eead3e0f148d8a45a6c0a60aec311cfcee2f 31306b3a2066656550657263656e74206d7573746e27742065786365656420746865206d6178696d756d\n    data_640c1a2bcb4b0e819d290be36ffb74fff17dd4659141ae0e8778f67d9638ba4c 31306b3a2066656550657263656e74206d7573746e27742065786365656420746865206d696e696d756d\n    data_8a472e50ec0b760c580c3dc8c62cdcf0fe39bab372eaf2d9e07261f1b72df71d 31306b3a20494e53554646494349454e545f4c49515549444954595f4d494e544544\n    data_a8f5b5742ea4f6d77e3ddeade1d79a13f37f3b0b50626b04c2c56458d8d3d5c7 31306b3a206c697175696469747920726174696f206e6f7420696e697469616c697a6564\n    data_e445a9437cf2a16b4c4a661deca6e9c597ce139bb56e2872aedda20402a5d4d9 31306b3a20494e53554646494349454e545f4c49515549444954595f4255524e4544\n\n    auxdata: 0xa265627a7a72315820ee8f3c6e2f98867d4967ab639c69f698d9aebd73707e24e7ca2713a5fb2ef17e64736f6c63430005100032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405261012c6008601c6101000a81548161ffff021916908361ffff16021790555061012c6008601e6101000a81548161ffff021916908361ffff1602179055506001600d553480156200005457600080fd5b506000469050604051808062005f9260529139605201905060405180910390206040518060400160405280600a81526020017f43616d656c6f74204c5000000000000000000000000000000000000000000000815250805190602001206040518060400160405280600181526020017f3100000000000000000000000000000000000000000000000000000000000000815250805190602001208330604051602001808681526020018581526020018481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200195505050505050604051602081830303815290604052805190602001206003819055505033600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550615ddc80620001b66000396000f3fe608060405234801561001057600080fd5b50600436106102485760003560e01c80636a6278421161013b578063ba9a7a56116100b8578063d73792a91161007c578063d73792a914610c9c578063dd62ed3e14610cba578063f140a35a14610d32578063f39ac11f14610d94578063fff6cae914610df857610248565b8063ba9a7a5614610b0d578063bc25cf7714610b2b578063c45a015514610b6f578063d21220a714610bb9578063d505accf14610c0357610248565b806389afcb44116100ff57806389afcb441461098157806395d89b41146109e05780639e548b7f14610a63578063a9059cbb14610a85578063b6200b0714610aeb57610248565b80636a6278421461078e5780636e1fdd7f146107e657806370a08231146108b35780637464fc3d1461090b5780637ecebe001461092957610248565b80633029e5d4116101c95780633ba170771161018d5780633ba170771461069c578063485cc955146106a657806348e5d2601461070a57806362ecec031461074a57806367d817401461077057610248565b80633029e5d4146105ba57806330adf81f1461061e578063313ce5671461063c5780633644e515146106605780633b9f1dc01461067e57610248565b8063158ef93e11610210578063158ef93e146104b057806318160ddd146104d257806323b872dd146104f0578063288e5d02146105765780632fcd16921461059457610248565b8063022c0d9f1461024d57806306fdde03146102fa5780630902f1ac1461037d578063095ea7b3146104005780630dfe168114610466575b600080fd5b6102f86004803603608081101561026357600080fd5b810190808035906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001906401000000008111156102b457600080fd5b8201836020820111156102c657600080fd5b803590602001918460018302840111640100000000831117156102e857600080fd5b9091929391929390505050610e02565b005b610302610f13565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610342578082015181840152602081019050610327565b50505050905090810190601f16801561036f5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610385610f4c565b60405180856dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff168152602001846dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff1681526020018361ffff1661ffff1681526020018261ffff1661ffff16815260200194505050505060405180910390f35b61044c6004803603604081101561041657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610fbc565b604051808215151515815260200191505060405180910390f35b61046e610fd3565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6104b8610ff9565b604051808215151515815260200191505060405180910390f35b6104da61100c565b6040518082815260200191505060405180910390f35b61055c6004803603606081101561050657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611012565b604051808215151515815260200191505060405180910390f35b61057e611248565b6040518082815260200191505060405180910390f35b61059c61124e565b604051808261ffff1661ffff16815260200191505060405180910390f35b61061c600480360360608110156105d057600080fd5b8101908080351515906020019092919080356dffffffffffffffffffffffffffff16906020019092919080356dffffffffffffffffffffffffffff169060200190929190505050611262565b005b61062661174e565b6040518082815260200191505060405180910390f35b610644611775565b604051808260ff1660ff16815260200191505060405180910390f35b61066861177a565b6040518082815260200191505060405180910390f35b610686611780565b6040518082815260200191505060405180910390f35b6106a4611786565b005b610708600480360360408110156106bc57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611a1d565b005b6107486004803603604081101561072057600080fd5b81019080803561ffff169060200190929190803561ffff169060200190929190505050611cb4565b005b610752611fcd565b604051808261ffff1661ffff16815260200191505060405180910390f35b610778611fe1565b6040518082815260200191505060405180910390f35b6107d0600480360360208110156107a457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611fe7565b6040518082815260200191505060405180910390f35b6108b1600480360360a08110156107fc57600080fd5b810190808035906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019064010000000081111561084d57600080fd5b82018360208201111561085f57600080fd5b8035906020019184600183028401116401000000008311171561088157600080fd5b9091929391929390803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061248e565b005b6108f5600480360360208110156108c957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061259f565b6040518082815260200191505060405180910390f35b6109136125b7565b6040518082815260200191505060405180910390f35b61096b6004803603602081101561093f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506125bd565b6040518082815260200191505060405180910390f35b6109c36004803603602081101561099757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506125d5565b604051808381526020018281526020019250505060405180910390f35b6109e8612bb8565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610a28578082015181840152602081019050610a0d565b50505050905090810190601f168015610a555780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610a6b612bf1565b604051808215151515815260200191505060405180910390f35b610ad160048036036040811015610a9b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050612c04565b604051808215151515815260200191505060405180910390f35b610af3612c1b565b604051808215151515815260200191505060405180910390f35b610b15612c2e565b6040518082815260200191505060405180910390f35b610b6d60048036036020811015610b4157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612c34565b005b610b77612f3b565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610bc1612f61565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610c9a600480360360e0811015610c1957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190929190803560ff1690602001909291908035906020019092919080359060200190929190505050612f87565b005b610ca46132cb565b6040518082815260200191505060405180910390f35b610d1c60048036036040811015610cd057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506132d2565b6040518082815260200191505060405180910390f35b610d7e60048036036040811015610d4857600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506132f7565b6040518082815260200191505060405180910390f35b610df660048036036040811015610daa57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506133eb565b005b610e00613814565b005b610e0a615c36565b604051806101000160405280600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200187815260200186815260200160008152602001600081526020016000815260200160008152509050610f0b818585858080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050506000613acd565b505050505050565b6040518060400160405280600a81526020017f43616d656c6f74204c500000000000000000000000000000000000000000000081525081565b600080600080600860009054906101000a90046dffffffffffffffffffffffffffff1693506008600e9054906101000a90046dffffffffffffffffffffffffffff1692506008601c9054906101000a900461ffff1691506008601e9054906101000a900461ffff16905090919293565b6000610fc9338484614928565b6001905092915050565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600760149054906101000a900460ff1681565b60005481565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541461123257600061114883600260008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054614a1390919063ffffffff16565b905080600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505b61123d848484614a96565b600190509392505050565b600a5481565b6008601e9054906101000a900461ffff1681565b6001600d54146112da576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600b8152602001807f31306b3a204c4f434b454400000000000000000000000000000000000000000081525060200191505060405180910390fd5b6000600d81905550600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fc39026a6040518163ffffffff1660e01b815260040160206040518083038186803b15801561134a57600080fd5b505afa15801561135e573d6000803e3d6000fd5b505050506040513d602081101561137457600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611408576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180615ca86022913960400191505060405180910390fd5b600c60019054906101000a900460ff161561148b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600e8152602001807f31306b3a20696d6d757461626c6500000000000000000000000000000000000081525060200191505060405180910390fd5b600c60009054906101000a900460ff1615158315151415611514576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600e8152602001807f31306b3a206e6f2075706461746500000000000000000000000000000000000081525060200191505060405180910390fd5b600860009054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff16826dffffffffffffffffffffffffffff1614801561159a57506008600e9054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff16816dffffffffffffffffffffffffffff16145b61160c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600b8152602001807f31306b3a206661696c656400000000000000000000000000000000000000000081525060200191505060405180910390fd5b6000611650600860009054906101000a90046dffffffffffffffffffffffffffff166008600e9054906101000a90046dffffffffffffffffffffffffffff16614c2a565b90507fb6a86710bde53aa7fb1b3856279e2af5b476d53e2dd0902cf17a0911b5a43a8b600c60009054906101000a900460ff16856040518083151515158152602001821515151581526020019250505060405180910390a183600c60006101000a81548160ff0219169083151502179055508380156116cc5750805b6116d757600061173a565b611739600860009054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff166008600e9054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff16614e8c565b5b600b81905550506001600d81905550505050565b7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c960001b81565b601281565b60035481565b60095481565b6001600d54146117fe576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600b8152602001807f31306b3a204c4f434b454400000000000000000000000000000000000000000081525060200191505060405180910390fd5b6000600d81905550600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561186e57600080fd5b505afa158015611882573d6000803e3d6000fd5b505050506040513d602081101561189857600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611949576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f31306b3a206f6e6c7920666163746f72792773206f776e65720000000000000081525060200191505060405180910390fd5b600c60019054906101000a900460ff16156119cc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f31306b3a20616c726561647920696d6d757461626c650000000000000000000081525060200191505060405180910390fd5b6001600c60016101000a81548160ff0219169083151502179055507f09122c41ae733a4d7740324d50e35fbd6ee85be3c1312a45596d8045150ab2f260405160405180910390a16001600d81905550565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148015611a875750600760149054906101000a900460ff16155b611af9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600e8152602001807f31306b3a20464f5242494444454e00000000000000000000000000000000000081525060200191505060405180910390fd5b81600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b158015611bc157600080fd5b505afa158015611bd5573d6000803e3d6000fd5b505050506040513d6020811015611beb57600080fd5b810190808051906020019092919050505060ff16600a0a6009819055508073ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b158015611c4e57600080fd5b505afa158015611c62573d6000803e3d6000fd5b505050506040513d6020811015611c7857600080fd5b810190808051906020019092919050505060ff16600a0a600a819055506001600760146101000a81548160ff0219169083151502179055505050565b6001600d5414611d2c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600b8152602001807f31306b3a204c4f434b454400000000000000000000000000000000000000000081525060200191505060405180910390fd5b6000600d81905550600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634c2177156040518163ffffffff1660e01b815260040160206040518083038186803b158015611d9c57600080fd5b505afa158015611db0573d6000803e3d6000fd5b505050506040513d6020811015611dc657600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611e5a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180615cca6022913960400191505060405180910390fd5b6107d08261ffff1611158015611e7657506107d08161ffff1611155b611ecb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a815260200180615cec602a913960400191505060405180910390fd5b60008261ffff16118015611ee3575060008161ffff16115b611f38576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a815260200180615d16602a913960400191505060405180910390fd5b816008601c6101000a81548161ffff021916908361ffff160217905550806008601e6101000a81548161ffff021916908361ffff1602179055507fa4877b8ecb5a00ba277e4bceeeb187a669e7113649774dfbea05c259ce27f17b8282604051808361ffff1661ffff1681526020018261ffff1661ffff1681526020019250505060405180910390a16001600d819055505050565b6008601c9054906101000a900461ffff1681565b6107d081565b60006001600d5414612061576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600b8152602001807f31306b3a204c4f434b454400000000000000000000000000000000000000000081525060200191505060405180910390fd5b6000600d81905550600080612074610f4c565b5050915091506000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561211b57600080fd5b505afa15801561212f573d6000803e3d6000fd5b505050506040513d602081101561214557600080fd5b810190808051906020019092919050505090506000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b1580156121f957600080fd5b505afa15801561220d573d6000803e3d6000fd5b505050506040513d602081101561222357600080fd5b81019080805190602001909291905050509050600061225b856dffffffffffffffffffffffffffff1684614a1390919063ffffffff16565b90506000612282856dffffffffffffffffffffffffffff1684614a1390919063ffffffff16565b905060006122908787614c2a565b905060008054905060008114156122e4576122d06103e86122c26122bd8688614fc790919063ffffffff16565b61505c565b614a1390919063ffffffff16565b98506122df60006103e86150be565b612347565b612344886dffffffffffffffffffffffffffff1661230b8387614fc790919063ffffffff16565b8161231257fe5b04886dffffffffffffffffffffffffffff166123378487614fc790919063ffffffff16565b8161233e57fe5b046151d8565b98505b600089116123a0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180615d406022913960400191505060405180910390fd5b6123aa8a8a6150be565b6123b486866151f1565b81156124235761241c600860009054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff166008600e9054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff16614e8c565b600b819055505b3373ffffffffffffffffffffffffffffffffffffffff167f4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f8585604051808381526020018281526020019250505060405180910390a250505050505050506001600d81905550919050565b612496615c36565b604051806101000160405280600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200188815260200187815260200160008152602001600081526020016000815260200160008152509050612596818686868080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505085613acd565b50505050505050565b60016020528060005260406000206000915090505481565b600b5481565b60046020528060005260406000206000915090505481565b6000806001600d5414612650576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600b8152602001807f31306b3a204c4f434b454400000000000000000000000000000000000000000081525060200191505060405180910390fd5b6000600d81905550600080612663610f4c565b5050915091506000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008273ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561273657600080fd5b505afa15801561274a573d6000803e3d6000fd5b505050506040513d602081101561276057600080fd5b8101908080519060200190929190505050905060008273ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b1580156127f257600080fd5b505afa158015612806573d6000803e3d6000fd5b505050506040513d602081101561281c57600080fd5b810190808051906020019092919050505090506000600160003073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050600061287f8888614c2a565b90506000805490508061289b8685614fc790919063ffffffff16565b816128a257fe5b049a50806128b98585614fc790919063ffffffff16565b816128c057fe5b04995060008b1180156128d3575060008a115b612928576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180615d866022913960400191505060405180910390fd5b61293230846153c0565b61293d878d8d6154da565b612948868d8c6154da565b8673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b1580156129c557600080fd5b505afa1580156129d9573d6000803e3d6000fd5b505050506040513d60208110156129ef57600080fd5b810190808051906020019092919050505094508573ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015612a7f57600080fd5b505afa158015612a93573d6000803e3d6000fd5b505050506040513d6020811015612aa957600080fd5b81019080805190602001909291905050509350612ac685856151f1565b8115612b3557612b2e600860009054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff166008600e9054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff16614e8c565b600b819055505b8b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fdccd412f0b1252819cb1fd330b93224ca42612892bb3f4f789976e6d819364968d8d604051808381526020018281526020019250505060405180910390a35050505050505050506001600d81905550915091565b6040518060400160405280600781526020017f434d4c542d4c500000000000000000000000000000000000000000000000000081525081565b600c60009054906101000a900460ff1681565b6000612c11338484614a96565b6001905092915050565b600c60019054906101000a900460ff1681565b6103e881565b6001600d5414612cac576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600b8152602001807f31306b3a204c4f434b454400000000000000000000000000000000000000000081525060200191505060405180910390fd5b6000600d819055506000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050612e028284612dfd600860009054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015612db457600080fd5b505afa158015612dc8573d6000803e3d6000fd5b505050506040513d6020811015612dde57600080fd5b8101908080519060200190929190505050614a1390919063ffffffff16565b6154da565b612f028184612efd6008600e9054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015612eb457600080fd5b505afa158015612ec8573d6000803e3d6000fd5b505050506040513d6020811015612ede57600080fd5b8101908080519060200190929190505050614a1390919063ffffffff16565b6154da565b7f21ad22495c9c75cd1c94756f91824e779c0c8a8e168b267c790df464fe056b7960405160405180910390a150506001600d8190555050565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b42841015612ffd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f556e697377617056323a2045585049524544000000000000000000000000000081525060200191505060405180910390fd5b60006003547f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c960001b898989600460008e73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815480929190600101919050558a604051602001808781526020018673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200184815260200183815260200182815260200196505050505050506040516020818303038152906040528051906020012060405160200180807f190100000000000000000000000000000000000000000000000000000000000081525060020183815260200182815260200192505050604051602081830303815290604052805190602001209050600060018286868660405160008152602001604052604051808581526020018460ff1660ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa1580156131cf573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415801561324357508873ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b6132b5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f556e697377617056323a20494e56414c49445f5349474e41545552450000000081525060200191505060405180910390fd5b6132c0898989614928565b505050505050505050565b620186a081565b6002602052816000526040600020602052806000526040600020600091509150505481565b600080600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614613365576008601e9054906101000a900461ffff16613377565b6008601c9054906101000a900461ffff165b90506133e28484600860009054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff166008600e9054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff168561ffff16615727565b91505092915050565b6001600d5414613463576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600b8152602001807f31306b3a204c4f434b454400000000000000000000000000000000000000000081525060200191505060405180910390fd5b6000600d81905550600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b1580156134d357600080fd5b505afa1580156134e7573d6000803e3d6000fd5b505050506040513d60208110156134fd57600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146135ae576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f31306b3a206f6e6c7920666163746f72792773206f776e65720000000000000081525060200191505060405180910390fd5b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415801561365a5750600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b6136cc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f31306b3a20696e76616c696420746f6b656e000000000000000000000000000081525060200191505060405180910390fd5b61378e82828473ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561374e57600080fd5b505afa158015613762573d6000803e3d6000fd5b505050506040513d602081101561377857600080fd5b81019080805190602001909291905050506154da565b8173ffffffffffffffffffffffffffffffffffffffff167f368a9dc863ecb94b5ba32a682e26295b10d9c2666fad7d785ebdf262c3c5241382604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a26001600d819055505050565b6001600d541461388c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600b8152602001807f31306b3a204c4f434b454400000000000000000000000000000000000000000081525060200191505060405180910390fd5b6000600d819055506000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561393557600080fd5b505afa158015613949573d6000803e3d6000fd5b505050506040513d602081101561395f57600080fd5b810190808051906020019092919050505090506000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015613a1357600080fd5b505afa158015613a27573d6000803e3d6000fd5b505050506040513d6020811015613a3d57600080fd5b8101908080519060200190929190505050905060008214158015613a62575060008114155b613ab7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526024815260200180615d626024913960400191505060405180910390fd5b613ac182826151f1565b50506001600d81905550565b6001600d5414613b45576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600b8152602001807f31306b3a204c4f434b454400000000000000000000000000000000000000000081525060200191505060405180910390fd5b6000600d81905550600084604001511180613b64575060008460600151115b613bd6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f31306b3a20494e53554646494349454e545f4f55545055545f414d4f554e540081525060200191505060405180910390fd5b600080600080613be4610f4c565b9350935093509350836dffffffffffffffffffffffffffff168860400151108015613c225750826dffffffffffffffffffffffffffff168860600151105b613c94576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f31306b3a20494e53554646494349454e545f4c4951554944495459000000000081525060200191505060405180910390fd5b876000015173ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff1614158015613d045750876020015173ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff1614155b613d76576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f31306b3a20494e56414c49445f544f000000000000000000000000000000000081525060200191505060405180910390fd5b600088604001511115613d9757613d968860000151888a604001516154da565b5b600088606001511115613db857613db78860200151888a606001516154da565b5b600086511115613edf578673ffffffffffffffffffffffffffffffffffffffff166310d1e85c338a604001518b606001518a6040518563ffffffff1660e01b8152600401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200184815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015613e77578082015181840152602081019050613e5c565b50505050905090810190601f168015613ea45780820380516001836020036101000a031916815260200191505b5095505050505050600060405180830381600087803b158015613ec657600080fd5b505af1158015613eda573d6000803e3d6000fd5b505050505b876000015173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015613f6057600080fd5b505afa158015613f74573d6000803e3d6000fd5b505050506040513d6020811015613f8a57600080fd5b8101908080519060200190929190505050886080018181525050876020015173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561402557600080fd5b505afa158015614039573d6000803e3d6000fd5b505050506040513d602081101561404f57600080fd5b81019080805190602001909291905050508860a001818152505060008860400151856dffffffffffffffffffffffffffff16038960800151116140935760006140b1565b8860400151856dffffffffffffffffffffffffffff16038960800151035b905060008960600151856dffffffffffffffffffffffffffff16038a60a00151116140dd5760006140fb565b8960600151856dffffffffffffffffffffffffffff16038a60a00151035b9050600082118061410c5750600081115b61417e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f31306b3a20494e53554646494349454e545f494e5055545f414d4f554e54000081525060200191505060405180910390fd5b620186a06141998561ffff1684614fc790919063ffffffff16565b816141a057fe5b048a60c0018181525050620186a06141c58461ffff1683614fc790919063ffffffff16565b816141cc57fe5b048a60e0018181525050600080905060008073ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff1614156142185760006142f3565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16637183d47c8a6040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b1580156142b757600080fd5b505afa1580156142cb573d6000803e3d6000fd5b505050506040513d60208110156142e157600080fd5b81019080805190602001909291905050505b905060008111156143e5576000841115614371576002620186a00a6143378761ffff166143298488614fc790919063ffffffff16565b614fc790919063ffffffff16565b8161433e57fe5b049150614358828d60c00151614a1390919063ffffffff16565b8c60c00181815250506143708c600001518a846154da565b5b60008311156143e4576002620186a00a6143aa8661ffff1661439c8487614fc790919063ffffffff16565b614fc790919063ffffffff16565b816143b157fe5b0491506143cb828d60e00151614a1390919063ffffffff16565b8c60e00181815250506143e38c602001518a846154da565b5b5b600c60009054906101000a900460ff16156145f557600080600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663995b5aae6040518163ffffffff1660e01b8152600401604080518083038186803b15801561446457600080fd5b505afa158015614478573d6000803e3d6000fd5b505050506040513d604081101561448e57600080fd5b81019080805190602001909291908051906020019092919050505091509150600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146145f257614509826144fb85620186a0614a1390919063ffffffff16565b614fc790919063ffffffff16565b9150600086111561457e576003620186a00a6145448961ffff16614536858a614fc790919063ffffffff16565b614fc790919063ffffffff16565b8161454b57fe5b049350614565848f60c00151614a1390919063ffffffff16565b8e60c001818152505061457d8e6000015182866154da565b5b60008511156145f1576003620186a00a6145b78861ffff166145a98589614fc790919063ffffffff16565b614fc790919063ffffffff16565b816145be57fe5b0493506145d8848f60e00151614a1390919063ffffffff16565b8e60e00181815250506145f08e6020015182866154da565b5b5b50505b60008411156146c4578b6000015173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561467f57600080fd5b505afa158015614693573d6000803e3d6000fd5b505050506040513d60208110156146a957600080fd5b81019080805190602001909291905050508c60800181815250505b6000831115614793578b6020015173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561474e57600080fd5b505afa158015614762573d6000803e3d6000fd5b505050506040513d602081101561477857600080fd5b81019080805190602001909291905050508c60a00181815250505b505060006147b28b60c001518c60800151614a1390919063ffffffff16565b905060006147d18c60e001518d60a00151614a1390919063ffffffff16565b90506147fd886dffffffffffffffffffffffffffff16886dffffffffffffffffffffffffffff16614e8c565b6148078383614e8c565b101561487b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260068152602001807f31306b3a204b000000000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b505061488f8a608001518b60a001516151f1565b8873ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fd78ad95fa46c994b6551d0da85fc275fe613ce37657fb8d5e3d130840159d82284848e604001518f606001516040518085815260200184815260200183815260200182815260200194505050505060405180910390a35050505050506001600d8190555050505050565b80600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b6000828284039150811115614a90576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f64732d6d6174682d7375622d756e646572666c6f77000000000000000000000081525060200191505060405180910390fd5b92915050565b614ae881600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054614a1390919063ffffffff16565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550614b7d81600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054615a1190919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b6000600c60009054906101000a900460ff1615614c4a5760009050614e86565b600080600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663995b5aae6040518163ffffffff1660e01b8152600401604080518083038186803b158015614cb457600080fd5b505afa158015614cc8573d6000803e3d6000fd5b505050506040513d6040811015614cde57600080fd5b81019080805190602001909291908051906020019092919050505091509150600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141592506000600b5490508315614e705760008114614e6b576000614d79614d74886dffffffffffffffffffffffffffff16886dffffffffffffffffffffffffffff16614e8c565b61505c565b90506000614d868361505c565b905080821115614e68576000614dc5606487614daf6064620186a0614fc790919063ffffffff16565b81614db657fe5b04614a1390919063ffffffff16565b90506000614e036064614df5614de48688614a1390919063ffffffff16565b600054614fc790919063ffffffff16565b614fc790919063ffffffff16565b90506000614e3f614e1e606486614fc790919063ffffffff16565b614e318588614fc790919063ffffffff16565b615a1190919063ffffffff16565b90506000818381614e4c57fe5b0490506000811115614e6357614e6288826150be565b5b505050505b50505b614e82565b60008114614e81576000600b819055505b5b5050505b92915050565b6000600c60009054906101000a900460ff1615614fab576000600954614ec3670de0b6b3a764000086614fc790919063ffffffff16565b81614eca57fe5b0490506000600a54614eed670de0b6b3a764000086614fc790919063ffffffff16565b81614ef457fe5b0490506000670de0b6b3a7640000614f158385614fc790919063ffffffff16565b81614f1c57fe5b0490506000614f7a670de0b6b3a7640000614f408586614fc790919063ffffffff16565b81614f4757fe5b04670de0b6b3a7640000614f648788614fc790919063ffffffff16565b81614f6b57fe5b04615a1190919063ffffffff16565b9050670de0b6b3a7640000614f988284614fc790919063ffffffff16565b81614f9f57fe5b04945050505050614fc1565b614fbe8284614fc790919063ffffffff16565b90505b92915050565b600080821480614fe45750828283850292508281614fe157fe5b04145b615056576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f64732d6d6174682d6d756c2d6f766572666c6f7700000000000000000000000081525060200191505060405180910390fd5b92915050565b600060038211156150ab57819050600060016002848161507857fe5b040190505b818110156150a55780915060028182858161509457fe5b04018161509d57fe5b04905061507d565b506150b9565b600082146150b857600190505b5b919050565b6150d381600054615a1190919063ffffffff16565b60008190555061512b81600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054615a1190919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b60008183106151e757816151e9565b825b905092915050565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6dffffffffffffffffffffffffffff16821115801561526157507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6dffffffffffffffffffffffffffff168111155b6152d3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600d8152602001807f31306b3a204f564552464c4f570000000000000000000000000000000000000081525060200191505060405180910390fd5b81600860006101000a8154816dffffffffffffffffffffffffffff02191690836dffffffffffffffffffffffffffff160217905550806008600e6101000a8154816dffffffffffffffffffffffffffff02191690836dffffffffffffffffffffffffffff1602179055507f1c411e9a96e071241c2f21f7726b17ae89e3cab4c78be50e062b03a9fffbbad1828260405180836dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff168152602001826dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff1681526020019250505060405180910390a15050565b61541281600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054614a1390919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061546a81600054614a1390919063ffffffff16565b600081905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b600060608473ffffffffffffffffffffffffffffffffffffffff166040518060400160405280601981526020017f7472616e7366657228616464726573732c75696e743235362900000000000000815250805190602001208585604051602401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040518082805190602001908083835b6020831061560757805182526020820191506020810190506020830392506155e4565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114615669576040519150601f19603f3d011682016040523d82523d6000602084013e61566e565b606091505b50915091508180156156ae57506000815114806156ad575080806020019051602081101561569b57600080fd5b81019080805190602001909291905050505b5b615720576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f31306b3a205452414e534645525f4641494c454400000000000000000000000081525060200191505060405180910390fd5b5050505050565b6000600c60009054906101000a900460ff16156159305761576f620186a06157588489614fc790919063ffffffff16565b8161575f57fe5b0487614a1390919063ffffffff16565b9550600061577d8585614e8c565b9050600954670de0b6b3a764000086028161579457fe5b049450600a54670de0b6b3a76400008502816157ac57fe5b049350600080600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff161461580e578587615811565b86865b91509150600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff161461588557600a54670de0b6b3a76400008a028161587f57fe5b0461589c565b600954670de0b6b3a76400008a028161589a57fe5b045b985060006158ad838b018584615a94565b82039050670de0b6b3a7640000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168a73ffffffffffffffffffffffffffffffffffffffff16146159175760095461591b565b600a545b82028161592457fe5b04945050505050615a08565b600080600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff161461598f578486615992565b85855b915091506159be6159af85620186a0614a1390919063ffffffff16565b89614fc790919063ffffffff16565b97506159e8886159da620186a085614fc790919063ffffffff16565b615a1190919063ffffffff16565b6159fb828a614fc790919063ffffffff16565b81615a0257fe5b04925050505b95945050505050565b6000828284019150811015615a8e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f64732d6d6174682d6164642d6f766572666c6f7700000000000000000000000081525060200191505060405180910390fd5b92915050565b600080600090505b60ff811015615b5f5760008390506000615ab68786615b6b565b905085811015615aee576000615acc8887615be2565b670de0b6b3a76400008389030281615ae057fe5b049050808601955050615b18565b6000615afa8887615be2565b670de0b6b3a76400008884030281615b0e57fe5b0490508086039550505b81851115615b3a57600182860311615b3557849350505050615b64565b615b50565b600185830311615b4f57849350505050615b64565b5b50508080600101915050615a9c565b508190505b9392505050565b6000670de0b6b3a764000082670de0b6b3a764000085670de0b6b3a764000087880281615b9457fe5b040281615b9d57fe5b040281615ba657fe5b04670de0b6b3a76400008084670de0b6b3a764000086870281615bc557fe5b040281615bce57fe5b04850281615bd857fe5b0401905092915050565b6000670de0b6b3a764000083670de0b6b3a764000085860281615c0157fe5b040281615c0a57fe5b04670de0b6b3a76400008084850281615c1f57fe5b04856003020281615c2c57fe5b0401905092915050565b604051806101000160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600081526020016000815260200160008152602001600081526020016000815260200160008152509056fe31306b3a206f6e6c7920666163746f7279277320736574537461626c654f776e657231306b3a206f6e6c7920666163746f7279277320666565416d6f756e744f776e657231306b3a2066656550657263656e74206d7573746e27742065786365656420746865206d6178696d756d31306b3a2066656550657263656e74206d7573746e27742065786365656420746865206d696e696d756d31306b3a20494e53554646494349454e545f4c49515549444954595f4d494e54454431306b3a206c697175696469747920726174696f206e6f7420696e697469616c697a656431306b3a20494e53554646494349454e545f4c49515549444954595f4255524e4544a265627a7a72315820ee8f3c6e2f98867d4967ab639c69f698d9aebd73707e24e7ca2713a5fb2ef17e64736f6c63430005100032454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH2 0x12C PUSH1 0x8 PUSH1 0x1C PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH2 0xFFFF MUL NOT AND SWAP1 DUP4 PUSH2 0xFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x12C PUSH1 0x8 PUSH1 0x1E PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH2 0xFFFF MUL NOT AND SWAP1 DUP4 PUSH2 0xFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0xD SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x54 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 CHAINID SWAP1 POP PUSH1 0x40 MLOAD DUP1 DUP1 PUSH3 0x5F92 PUSH1 0x52 SWAP2 CODECOPY PUSH1 0x52 ADD SWAP1 POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x43616D656C6F74204C5000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3100000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP4 ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP6 POP POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x3 DUP2 SWAP1 SSTORE POP POP CALLER PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x5DDC DUP1 PUSH3 0x1B6 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x248 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6A627842 GT PUSH2 0x13B JUMPI DUP1 PUSH4 0xBA9A7A56 GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xD73792A9 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xD73792A9 EQ PUSH2 0xC9C JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0xCBA JUMPI DUP1 PUSH4 0xF140A35A EQ PUSH2 0xD32 JUMPI DUP1 PUSH4 0xF39AC11F EQ PUSH2 0xD94 JUMPI DUP1 PUSH4 0xFFF6CAE9 EQ PUSH2 0xDF8 JUMPI PUSH2 0x248 JUMP JUMPDEST DUP1 PUSH4 0xBA9A7A56 EQ PUSH2 0xB0D JUMPI DUP1 PUSH4 0xBC25CF77 EQ PUSH2 0xB2B JUMPI DUP1 PUSH4 0xC45A0155 EQ PUSH2 0xB6F JUMPI DUP1 PUSH4 0xD21220A7 EQ PUSH2 0xBB9 JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0xC03 JUMPI PUSH2 0x248 JUMP JUMPDEST DUP1 PUSH4 0x89AFCB44 GT PUSH2 0xFF JUMPI DUP1 PUSH4 0x89AFCB44 EQ PUSH2 0x981 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x9E0 JUMPI DUP1 PUSH4 0x9E548B7F EQ PUSH2 0xA63 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0xA85 JUMPI DUP1 PUSH4 0xB6200B07 EQ PUSH2 0xAEB JUMPI PUSH2 0x248 JUMP JUMPDEST DUP1 PUSH4 0x6A627842 EQ PUSH2 0x78E JUMPI DUP1 PUSH4 0x6E1FDD7F EQ PUSH2 0x7E6 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x8B3 JUMPI DUP1 PUSH4 0x7464FC3D EQ PUSH2 0x90B JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x929 JUMPI PUSH2 0x248 JUMP JUMPDEST DUP1 PUSH4 0x3029E5D4 GT PUSH2 0x1C9 JUMPI DUP1 PUSH4 0x3BA17077 GT PUSH2 0x18D JUMPI DUP1 PUSH4 0x3BA17077 EQ PUSH2 0x69C JUMPI DUP1 PUSH4 0x485CC955 EQ PUSH2 0x6A6 JUMPI DUP1 PUSH4 0x48E5D260 EQ PUSH2 0x70A JUMPI DUP1 PUSH4 0x62ECEC03 EQ PUSH2 0x74A JUMPI DUP1 PUSH4 0x67D81740 EQ PUSH2 0x770 JUMPI PUSH2 0x248 JUMP JUMPDEST DUP1 PUSH4 0x3029E5D4 EQ PUSH2 0x5BA JUMPI DUP1 PUSH4 0x30ADF81F EQ PUSH2 0x61E JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x63C JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x660 JUMPI DUP1 PUSH4 0x3B9F1DC0 EQ PUSH2 0x67E JUMPI PUSH2 0x248 JUMP JUMPDEST DUP1 PUSH4 0x158EF93E GT PUSH2 0x210 JUMPI DUP1 PUSH4 0x158EF93E EQ PUSH2 0x4B0 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x4D2 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x4F0 JUMPI DUP1 PUSH4 0x288E5D02 EQ PUSH2 0x576 JUMPI DUP1 PUSH4 0x2FCD1692 EQ PUSH2 0x594 JUMPI PUSH2 0x248 JUMP JUMPDEST DUP1 PUSH4 0x22C0D9F EQ PUSH2 0x24D JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x2FA JUMPI DUP1 PUSH4 0x902F1AC EQ PUSH2 0x37D JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x400 JUMPI DUP1 PUSH4 0xDFE1681 EQ PUSH2 0x466 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2F8 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x263 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x2B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x2C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x2E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP2 SWAP3 SWAP4 SWAP1 POP POP POP PUSH2 0xE02 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x302 PUSH2 0xF13 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x342 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x327 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x36F JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x385 PUSH2 0xF4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP6 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH2 0xFFFF AND PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH2 0xFFFF AND PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x44C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x416 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xFBC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x46E PUSH2 0xFD3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4B8 PUSH2 0xFF9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4DA PUSH2 0x100C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x55C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x506 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1012 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x57E PUSH2 0x1248 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x59C PUSH2 0x124E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH2 0xFFFF AND PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x61C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x5D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD ISZERO ISZERO SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1262 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x626 PUSH2 0x174E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x644 PUSH2 0x1775 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x668 PUSH2 0x177A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x686 PUSH2 0x1780 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6A4 PUSH2 0x1786 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x708 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x6BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1A1D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x748 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x720 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH2 0xFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH2 0xFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1CB4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x752 PUSH2 0x1FCD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH2 0xFFFF AND PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x778 PUSH2 0x1FE1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7D0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x7A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1FE7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8B1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0x7FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x84D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x85F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x881 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP2 SWAP3 SWAP4 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x248E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x8F5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x8C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x259F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x913 PUSH2 0x25B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x96B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x93F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x25BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9C3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x997 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x25D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9E8 PUSH2 0x2BB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xA28 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xA0D JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xA55 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA6B PUSH2 0x2BF1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xAD1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xA9B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x2C04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xAF3 PUSH2 0x2C1B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB15 PUSH2 0x2C2E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB6D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xB41 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x2C34 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xB77 PUSH2 0x2F3B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xBC1 PUSH2 0x2F61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC9A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xE0 DUP2 LT ISZERO PUSH2 0xC19 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH1 0xFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x2F87 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xCA4 PUSH2 0x32CB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD1C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xCD0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x32D2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD7E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xD48 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x32F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF6 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xDAA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x33EB JUMP JUMPDEST STOP JUMPDEST PUSH2 0xE00 PUSH2 0x3814 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xE0A PUSH2 0x5C36 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP PUSH2 0xF0B DUP2 DUP6 DUP6 DUP6 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP PUSH1 0x0 PUSH2 0x3ACD JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x43616D656C6F74204C5000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP4 POP PUSH1 0x8 PUSH1 0xE SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP3 POP PUSH1 0x8 PUSH1 0x1C SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND SWAP2 POP PUSH1 0x8 PUSH1 0x1E SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND SWAP1 POP SWAP1 SWAP2 SWAP3 SWAP4 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFC9 CALLER DUP5 DUP5 PUSH2 0x4928 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ PUSH2 0x1232 JUMPI PUSH1 0x0 PUSH2 0x1148 DUP4 PUSH1 0x2 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x4A13 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x2 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMPDEST PUSH2 0x123D DUP5 DUP5 DUP5 PUSH2 0x4A96 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x1E SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xD SLOAD EQ PUSH2 0x12DA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x31306B3A204C4F434B4544000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xD DUP2 SWAP1 SSTORE POP PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFC39026A PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x134A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x135E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1374 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1408 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x5CA8 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xC PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x148B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xE DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x31306B3A20696D6D757461626C65000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO DUP4 ISZERO ISZERO EQ ISZERO PUSH2 0x1514 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xE DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x31306B3A206E6F20757064617465000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x159A JUMPI POP PUSH1 0x8 PUSH1 0xE SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0x160C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x31306B3A206661696C6564000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1650 PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x8 PUSH1 0xE SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x4C2A JUMP JUMPDEST SWAP1 POP PUSH32 0xB6A86710BDE53AA7FB1B3856279E2AF5B476D53E2DD0902CF17A0911B5A43A8B PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP6 PUSH1 0x40 MLOAD DUP1 DUP4 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 DUP4 PUSH1 0xC PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP4 DUP1 ISZERO PUSH2 0x16CC JUMPI POP DUP1 JUMPDEST PUSH2 0x16D7 JUMPI PUSH1 0x0 PUSH2 0x173A JUMP JUMPDEST PUSH2 0x1739 PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x8 PUSH1 0xE SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x4E8C JUMP JUMPDEST JUMPDEST PUSH1 0xB DUP2 SWAP1 SSTORE POP POP PUSH1 0x1 PUSH1 0xD DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 PUSH1 0x0 SHL DUP2 JUMP JUMPDEST PUSH1 0x12 DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xD SLOAD EQ PUSH2 0x17FE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x31306B3A204C4F434B4544000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xD DUP2 SWAP1 SSTORE POP PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8DA5CB5B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x186E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1882 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1898 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1949 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x19 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x31306B3A206F6E6C7920666163746F72792773206F776E657200000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xC PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x19CC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x16 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x31306B3A20616C726561647920696D6D757461626C6500000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xC PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x9122C41AE733A4D7740324D50E35FBD6EE85BE3C1312A45596D8045150AB2F2 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 PUSH1 0xD DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x1A87 JUMPI POP PUSH1 0x7 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x1AF9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xE DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x31306B3A20464F5242494444454E000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x6 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x7 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1BC1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1BD5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1BEB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH1 0xFF AND PUSH1 0xA EXP PUSH1 0x9 DUP2 SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1C4E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1C62 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1C78 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH1 0xFF AND PUSH1 0xA EXP PUSH1 0xA DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x7 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0xD SLOAD EQ PUSH2 0x1D2C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x31306B3A204C4F434B4544000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xD DUP2 SWAP1 SSTORE POP PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x4C217715 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1D9C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1DB0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1DC6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1E5A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x5CCA PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7D0 DUP3 PUSH2 0xFFFF AND GT ISZERO DUP1 ISZERO PUSH2 0x1E76 JUMPI POP PUSH2 0x7D0 DUP2 PUSH2 0xFFFF AND GT ISZERO JUMPDEST PUSH2 0x1ECB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x5CEC PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xFFFF AND GT DUP1 ISZERO PUSH2 0x1EE3 JUMPI POP PUSH1 0x0 DUP2 PUSH2 0xFFFF AND GT JUMPDEST PUSH2 0x1F38 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x5D16 PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x8 PUSH1 0x1C PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH2 0xFFFF MUL NOT AND SWAP1 DUP4 PUSH2 0xFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x8 PUSH1 0x1E PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH2 0xFFFF MUL NOT AND SWAP1 DUP4 PUSH2 0xFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0xA4877B8ECB5A00BA277E4BCEEEB187A669E7113649774DFBEA05C259CE27F17B DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 DUP4 PUSH2 0xFFFF AND PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH2 0xFFFF AND PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 PUSH1 0xD DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x8 PUSH1 0x1C SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x7D0 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0xD SLOAD EQ PUSH2 0x2061 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x31306B3A204C4F434B4544000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xD DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP1 PUSH2 0x2074 PUSH2 0xF4C JUMP JUMPDEST POP POP SWAP2 POP SWAP2 POP PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x211B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x212F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2145 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x21F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x220D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2223 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP PUSH1 0x0 PUSH2 0x225B DUP6 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH2 0x4A13 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2282 DUP6 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH2 0x4A13 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2290 DUP8 DUP8 PUSH2 0x4C2A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 SLOAD SWAP1 POP PUSH1 0x0 DUP2 EQ ISZERO PUSH2 0x22E4 JUMPI PUSH2 0x22D0 PUSH2 0x3E8 PUSH2 0x22C2 PUSH2 0x22BD DUP7 DUP9 PUSH2 0x4FC7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x505C JUMP JUMPDEST PUSH2 0x4A13 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP9 POP PUSH2 0x22DF PUSH1 0x0 PUSH2 0x3E8 PUSH2 0x50BE JUMP JUMPDEST PUSH2 0x2347 JUMP JUMPDEST PUSH2 0x2344 DUP9 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x230B DUP4 DUP8 PUSH2 0x4FC7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH2 0x2312 JUMPI INVALID JUMPDEST DIV DUP9 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2337 DUP5 DUP8 PUSH2 0x4FC7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH2 0x233E JUMPI INVALID JUMPDEST DIV PUSH2 0x51D8 JUMP JUMPDEST SWAP9 POP JUMPDEST PUSH1 0x0 DUP10 GT PUSH2 0x23A0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x5D40 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x23AA DUP11 DUP11 PUSH2 0x50BE JUMP JUMPDEST PUSH2 0x23B4 DUP7 DUP7 PUSH2 0x51F1 JUMP JUMPDEST DUP2 ISZERO PUSH2 0x2423 JUMPI PUSH2 0x241C PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x8 PUSH1 0xE SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x4E8C JUMP JUMPDEST PUSH1 0xB DUP2 SWAP1 SSTORE POP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4C209B5FC8AD50758F13E2E1088BA56A560DFF690A1C6FEF26394F4C03821C4F DUP6 DUP6 PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP POP POP PUSH1 0x1 PUSH1 0xD DUP2 SWAP1 SSTORE POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2496 PUSH2 0x5C36 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP9 DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP PUSH2 0x2596 DUP2 DUP7 DUP7 DUP7 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP DUP6 PUSH2 0x3ACD JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 PUSH1 0xD SLOAD EQ PUSH2 0x2650 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x31306B3A204C4F434B4544000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xD DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP1 PUSH2 0x2663 PUSH2 0xF4C JUMP JUMPDEST POP POP SWAP2 POP SWAP2 POP PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2736 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x274A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2760 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x27F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2806 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x281C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 PUSH2 0x287F DUP9 DUP9 PUSH2 0x4C2A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 SLOAD SWAP1 POP DUP1 PUSH2 0x289B DUP7 DUP6 PUSH2 0x4FC7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH2 0x28A2 JUMPI INVALID JUMPDEST DIV SWAP11 POP DUP1 PUSH2 0x28B9 DUP6 DUP6 PUSH2 0x4FC7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH2 0x28C0 JUMPI INVALID JUMPDEST DIV SWAP10 POP PUSH1 0x0 DUP12 GT DUP1 ISZERO PUSH2 0x28D3 JUMPI POP PUSH1 0x0 DUP11 GT JUMPDEST PUSH2 0x2928 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x5D86 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2932 ADDRESS DUP5 PUSH2 0x53C0 JUMP JUMPDEST PUSH2 0x293D DUP8 DUP14 DUP14 PUSH2 0x54DA JUMP JUMPDEST PUSH2 0x2948 DUP7 DUP14 DUP13 PUSH2 0x54DA JUMP JUMPDEST DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x29C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x29D9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x29EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP5 POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2A7F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2A93 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2AA9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP4 POP PUSH2 0x2AC6 DUP6 DUP6 PUSH2 0x51F1 JUMP JUMPDEST DUP2 ISZERO PUSH2 0x2B35 JUMPI PUSH2 0x2B2E PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x8 PUSH1 0xE SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x4E8C JUMP JUMPDEST PUSH1 0xB DUP2 SWAP1 SSTORE POP JUMPDEST DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDCCD412F0B1252819CB1FD330B93224CA42612892BB3F4F789976E6D81936496 DUP14 DUP14 PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP POP POP PUSH1 0x1 PUSH1 0xD DUP2 SWAP1 SSTORE POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x434D4C542D4C5000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C11 CALLER DUP5 DUP5 PUSH2 0x4A96 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xC PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x3E8 DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xD SLOAD EQ PUSH2 0x2CAC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x31306B3A204C4F434B4544000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xD DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH2 0x2E02 DUP3 DUP5 PUSH2 0x2DFD PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2DB4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2DC8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2DDE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x4A13 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x54DA JUMP JUMPDEST PUSH2 0x2F02 DUP2 DUP5 PUSH2 0x2EFD PUSH1 0x8 PUSH1 0xE SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2EB4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2EC8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2EDE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x4A13 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x54DA JUMP JUMPDEST PUSH32 0x21AD22495C9C75CD1C94756F91824E779C0C8A8E168B267C790DF464FE056B79 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP PUSH1 0x1 PUSH1 0xD DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST TIMESTAMP DUP5 LT ISZERO PUSH2 0x2FFD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x556E697377617056323A20455850495245440000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 PUSH1 0x0 SHL DUP10 DUP10 DUP10 PUSH1 0x4 PUSH1 0x0 DUP15 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE DUP11 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP7 POP POP POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP1 PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x2 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP3 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x31CF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x3243 JUMPI POP DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0x32B5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1C DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x556E697377617056323A20494E56414C49445F5349474E415455524500000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x32C0 DUP10 DUP10 DUP10 PUSH2 0x4928 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH3 0x186A0 DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x3365 JUMPI PUSH1 0x8 PUSH1 0x1E SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND PUSH2 0x3377 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x1C SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND JUMPDEST SWAP1 POP PUSH2 0x33E2 DUP5 DUP5 PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x8 PUSH1 0xE SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH2 0xFFFF AND PUSH2 0x5727 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0xD SLOAD EQ PUSH2 0x3463 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x31306B3A204C4F434B4544000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xD DUP2 SWAP1 SSTORE POP PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8DA5CB5B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x34D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x34E7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x34FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x35AE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x19 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x31306B3A206F6E6C7920666163746F72792773206F776E657200000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x365A JUMPI POP PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST PUSH2 0x36CC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x31306B3A20696E76616C696420746F6B656E0000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x378E DUP3 DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x374E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3762 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3778 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x54DA JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x368A9DC863ECB94B5BA32A682E26295B10D9C2666FAD7D785EBDF262C3C52413 DUP3 PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x1 PUSH1 0xD DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0xD SLOAD EQ PUSH2 0x388C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x31306B3A204C4F434B4544000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xD DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3935 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3949 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x395F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3A13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3A27 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3A3D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP PUSH1 0x0 DUP3 EQ ISZERO DUP1 ISZERO PUSH2 0x3A62 JUMPI POP PUSH1 0x0 DUP2 EQ ISZERO JUMPDEST PUSH2 0x3AB7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x5D62 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3AC1 DUP3 DUP3 PUSH2 0x51F1 JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0xD DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0xD SLOAD EQ PUSH2 0x3B45 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x31306B3A204C4F434B4544000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xD DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP5 PUSH1 0x40 ADD MLOAD GT DUP1 PUSH2 0x3B64 JUMPI POP PUSH1 0x0 DUP5 PUSH1 0x60 ADD MLOAD GT JUMPDEST PUSH2 0x3BD6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x31306B3A20494E53554646494349454E545F4F55545055545F414D4F554E5400 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x3BE4 PUSH2 0xF4C JUMP JUMPDEST SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP DUP4 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH1 0x40 ADD MLOAD LT DUP1 ISZERO PUSH2 0x3C22 JUMPI POP DUP3 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH1 0x60 ADD MLOAD LT JUMPDEST PUSH2 0x3C94 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x31306B3A20494E53554646494349454E545F4C49515549444954590000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP8 PUSH1 0x0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x3D04 JUMPI POP DUP8 PUSH1 0x20 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST PUSH2 0x3D76 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xF DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x31306B3A20494E56414C49445F544F0000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP9 PUSH1 0x40 ADD MLOAD GT ISZERO PUSH2 0x3D97 JUMPI PUSH2 0x3D96 DUP9 PUSH1 0x0 ADD MLOAD DUP9 DUP11 PUSH1 0x40 ADD MLOAD PUSH2 0x54DA JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP9 PUSH1 0x60 ADD MLOAD GT ISZERO PUSH2 0x3DB8 JUMPI PUSH2 0x3DB7 DUP9 PUSH1 0x20 ADD MLOAD DUP9 DUP11 PUSH1 0x60 ADD MLOAD PUSH2 0x54DA JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP7 MLOAD GT ISZERO PUSH2 0x3EDF JUMPI DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x10D1E85C CALLER DUP11 PUSH1 0x40 ADD MLOAD DUP12 PUSH1 0x60 ADD MLOAD DUP11 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3E77 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3E5C JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x3EA4 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP6 POP POP POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3EC6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3EDA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST DUP8 PUSH1 0x0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3F60 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3F74 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3F8A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP DUP9 PUSH1 0x80 ADD DUP2 DUP2 MSTORE POP POP DUP8 PUSH1 0x20 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4025 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4039 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x404F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP DUP9 PUSH1 0xA0 ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x0 DUP9 PUSH1 0x40 ADD MLOAD DUP6 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB DUP10 PUSH1 0x80 ADD MLOAD GT PUSH2 0x4093 JUMPI PUSH1 0x0 PUSH2 0x40B1 JUMP JUMPDEST DUP9 PUSH1 0x40 ADD MLOAD DUP6 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB DUP10 PUSH1 0x80 ADD MLOAD SUB JUMPDEST SWAP1 POP PUSH1 0x0 DUP10 PUSH1 0x60 ADD MLOAD DUP6 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB DUP11 PUSH1 0xA0 ADD MLOAD GT PUSH2 0x40DD JUMPI PUSH1 0x0 PUSH2 0x40FB JUMP JUMPDEST DUP10 PUSH1 0x60 ADD MLOAD DUP6 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB DUP11 PUSH1 0xA0 ADD MLOAD SUB JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 GT DUP1 PUSH2 0x410C JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST PUSH2 0x417E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x31306B3A20494E53554646494349454E545F494E5055545F414D4F554E540000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x186A0 PUSH2 0x4199 DUP6 PUSH2 0xFFFF AND DUP5 PUSH2 0x4FC7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH2 0x41A0 JUMPI INVALID JUMPDEST DIV DUP11 PUSH1 0xC0 ADD DUP2 DUP2 MSTORE POP POP PUSH3 0x186A0 PUSH2 0x41C5 DUP5 PUSH2 0xFFFF AND DUP4 PUSH2 0x4FC7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH2 0x41CC JUMPI INVALID JUMPDEST DIV DUP11 PUSH1 0xE0 ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x0 DUP1 SWAP1 POP PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x4218 JUMPI PUSH1 0x0 PUSH2 0x42F3 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x7183D47C DUP11 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x42B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x42CB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x42E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x43E5 JUMPI PUSH1 0x0 DUP5 GT ISZERO PUSH2 0x4371 JUMPI PUSH1 0x2 PUSH3 0x186A0 EXP PUSH2 0x4337 DUP8 PUSH2 0xFFFF AND PUSH2 0x4329 DUP5 DUP9 PUSH2 0x4FC7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x4FC7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH2 0x433E JUMPI INVALID JUMPDEST DIV SWAP2 POP PUSH2 0x4358 DUP3 DUP14 PUSH1 0xC0 ADD MLOAD PUSH2 0x4A13 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP13 PUSH1 0xC0 ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x4370 DUP13 PUSH1 0x0 ADD MLOAD DUP11 DUP5 PUSH2 0x54DA JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 GT ISZERO PUSH2 0x43E4 JUMPI PUSH1 0x2 PUSH3 0x186A0 EXP PUSH2 0x43AA DUP7 PUSH2 0xFFFF AND PUSH2 0x439C DUP5 DUP8 PUSH2 0x4FC7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x4FC7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH2 0x43B1 JUMPI INVALID JUMPDEST DIV SWAP2 POP PUSH2 0x43CB DUP3 DUP14 PUSH1 0xE0 ADD MLOAD PUSH2 0x4A13 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP13 PUSH1 0xE0 ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x43E3 DUP13 PUSH1 0x20 ADD MLOAD DUP11 DUP5 PUSH2 0x54DA JUMP JUMPDEST JUMPDEST JUMPDEST PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x45F5 JUMPI PUSH1 0x0 DUP1 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x995B5AAE PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4464 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4478 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x448E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP2 POP SWAP2 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x45F2 JUMPI PUSH2 0x4509 DUP3 PUSH2 0x44FB DUP6 PUSH3 0x186A0 PUSH2 0x4A13 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x4FC7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP PUSH1 0x0 DUP7 GT ISZERO PUSH2 0x457E JUMPI PUSH1 0x3 PUSH3 0x186A0 EXP PUSH2 0x4544 DUP10 PUSH2 0xFFFF AND PUSH2 0x4536 DUP6 DUP11 PUSH2 0x4FC7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x4FC7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH2 0x454B JUMPI INVALID JUMPDEST DIV SWAP4 POP PUSH2 0x4565 DUP5 DUP16 PUSH1 0xC0 ADD MLOAD PUSH2 0x4A13 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP15 PUSH1 0xC0 ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x457D DUP15 PUSH1 0x0 ADD MLOAD DUP3 DUP7 PUSH2 0x54DA JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP6 GT ISZERO PUSH2 0x45F1 JUMPI PUSH1 0x3 PUSH3 0x186A0 EXP PUSH2 0x45B7 DUP9 PUSH2 0xFFFF AND PUSH2 0x45A9 DUP6 DUP10 PUSH2 0x4FC7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x4FC7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH2 0x45BE JUMPI INVALID JUMPDEST DIV SWAP4 POP PUSH2 0x45D8 DUP5 DUP16 PUSH1 0xE0 ADD MLOAD PUSH2 0x4A13 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP15 PUSH1 0xE0 ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x45F0 DUP15 PUSH1 0x20 ADD MLOAD DUP3 DUP7 PUSH2 0x54DA JUMP JUMPDEST JUMPDEST JUMPDEST POP POP JUMPDEST PUSH1 0x0 DUP5 GT ISZERO PUSH2 0x46C4 JUMPI DUP12 PUSH1 0x0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x467F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4693 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x46A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP DUP13 PUSH1 0x80 ADD DUP2 DUP2 MSTORE POP POP JUMPDEST PUSH1 0x0 DUP4 GT ISZERO PUSH2 0x4793 JUMPI DUP12 PUSH1 0x20 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x474E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4762 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4778 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP DUP13 PUSH1 0xA0 ADD DUP2 DUP2 MSTORE POP POP JUMPDEST POP POP PUSH1 0x0 PUSH2 0x47B2 DUP12 PUSH1 0xC0 ADD MLOAD DUP13 PUSH1 0x80 ADD MLOAD PUSH2 0x4A13 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x47D1 DUP13 PUSH1 0xE0 ADD MLOAD DUP14 PUSH1 0xA0 ADD MLOAD PUSH2 0x4A13 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x47FD DUP9 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x4E8C JUMP JUMPDEST PUSH2 0x4807 DUP4 DUP4 PUSH2 0x4E8C JUMP JUMPDEST LT ISZERO PUSH2 0x487B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x31306B3A204B0000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP PUSH2 0x488F DUP11 PUSH1 0x80 ADD MLOAD DUP12 PUSH1 0xA0 ADD MLOAD PUSH2 0x51F1 JUMP JUMPDEST DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xD78AD95FA46C994B6551D0DA85FC275FE613CE37657FB8D5E3D130840159D822 DUP5 DUP5 DUP15 PUSH1 0x40 ADD MLOAD DUP16 PUSH1 0x60 ADD MLOAD PUSH1 0x40 MLOAD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP PUSH1 0x1 PUSH1 0xD DUP2 SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 DUP5 SUB SWAP2 POP DUP2 GT ISZERO PUSH2 0x4A90 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x15 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x64732D6D6174682D7375622D756E646572666C6F770000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x4AE8 DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x4A13 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x4B7D DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x5A11 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x4C4A JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x4E86 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x995B5AAE PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4CB4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4CC8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x4CDE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP2 POP SWAP2 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO SWAP3 POP PUSH1 0x0 PUSH1 0xB SLOAD SWAP1 POP DUP4 ISZERO PUSH2 0x4E70 JUMPI PUSH1 0x0 DUP2 EQ PUSH2 0x4E6B JUMPI PUSH1 0x0 PUSH2 0x4D79 PUSH2 0x4D74 DUP9 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x4E8C JUMP JUMPDEST PUSH2 0x505C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x4D86 DUP4 PUSH2 0x505C JUMP JUMPDEST SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x4E68 JUMPI PUSH1 0x0 PUSH2 0x4DC5 PUSH1 0x64 DUP8 PUSH2 0x4DAF PUSH1 0x64 PUSH3 0x186A0 PUSH2 0x4FC7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH2 0x4DB6 JUMPI INVALID JUMPDEST DIV PUSH2 0x4A13 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x4E03 PUSH1 0x64 PUSH2 0x4DF5 PUSH2 0x4DE4 DUP7 DUP9 PUSH2 0x4A13 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x4FC7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x4FC7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x4E3F PUSH2 0x4E1E PUSH1 0x64 DUP7 PUSH2 0x4FC7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x4E31 DUP6 DUP9 PUSH2 0x4FC7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x5A11 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 DUP4 DUP2 PUSH2 0x4E4C JUMPI INVALID JUMPDEST DIV SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x4E63 JUMPI PUSH2 0x4E62 DUP9 DUP3 PUSH2 0x50BE JUMP JUMPDEST JUMPDEST POP POP POP POP JUMPDEST POP POP JUMPDEST PUSH2 0x4E82 JUMP JUMPDEST PUSH1 0x0 DUP2 EQ PUSH2 0x4E81 JUMPI PUSH1 0x0 PUSH1 0xB DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x4FAB JUMPI PUSH1 0x0 PUSH1 0x9 SLOAD PUSH2 0x4EC3 PUSH8 0xDE0B6B3A7640000 DUP7 PUSH2 0x4FC7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH2 0x4ECA JUMPI INVALID JUMPDEST DIV SWAP1 POP PUSH1 0x0 PUSH1 0xA SLOAD PUSH2 0x4EED PUSH8 0xDE0B6B3A7640000 DUP7 PUSH2 0x4FC7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH2 0x4EF4 JUMPI INVALID JUMPDEST DIV SWAP1 POP PUSH1 0x0 PUSH8 0xDE0B6B3A7640000 PUSH2 0x4F15 DUP4 DUP6 PUSH2 0x4FC7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH2 0x4F1C JUMPI INVALID JUMPDEST DIV SWAP1 POP PUSH1 0x0 PUSH2 0x4F7A PUSH8 0xDE0B6B3A7640000 PUSH2 0x4F40 DUP6 DUP7 PUSH2 0x4FC7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH2 0x4F47 JUMPI INVALID JUMPDEST DIV PUSH8 0xDE0B6B3A7640000 PUSH2 0x4F64 DUP8 DUP9 PUSH2 0x4FC7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH2 0x4F6B JUMPI INVALID JUMPDEST DIV PUSH2 0x5A11 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH8 0xDE0B6B3A7640000 PUSH2 0x4F98 DUP3 DUP5 PUSH2 0x4FC7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH2 0x4F9F JUMPI INVALID JUMPDEST DIV SWAP5 POP POP POP POP POP PUSH2 0x4FC1 JUMP JUMPDEST PUSH2 0x4FBE DUP3 DUP5 PUSH2 0x4FC7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 EQ DUP1 PUSH2 0x4FE4 JUMPI POP DUP3 DUP3 DUP4 DUP6 MUL SWAP3 POP DUP3 DUP2 PUSH2 0x4FE1 JUMPI INVALID JUMPDEST DIV EQ JUMPDEST PUSH2 0x5056 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x14 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x64732D6D6174682D6D756C2D6F766572666C6F77000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP3 GT ISZERO PUSH2 0x50AB JUMPI DUP2 SWAP1 POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x2 DUP5 DUP2 PUSH2 0x5078 JUMPI INVALID JUMPDEST DIV ADD SWAP1 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x50A5 JUMPI DUP1 SWAP2 POP PUSH1 0x2 DUP2 DUP3 DUP6 DUP2 PUSH2 0x5094 JUMPI INVALID JUMPDEST DIV ADD DUP2 PUSH2 0x509D JUMPI INVALID JUMPDEST DIV SWAP1 POP PUSH2 0x507D JUMP JUMPDEST POP PUSH2 0x50B9 JUMP JUMPDEST PUSH1 0x0 DUP3 EQ PUSH2 0x50B8 JUMPI PUSH1 0x1 SWAP1 POP JUMPDEST JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x50D3 DUP2 PUSH1 0x0 SLOAD PUSH2 0x5A11 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH2 0x512B DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x5A11 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT PUSH2 0x51E7 JUMPI DUP2 PUSH2 0x51E9 JUMP JUMPDEST DUP3 JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 GT ISZERO DUP1 ISZERO PUSH2 0x5261 JUMPI POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 GT ISZERO JUMPDEST PUSH2 0x52D3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xD DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x31306B3A204F564552464C4F5700000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x8 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x8 PUSH1 0xE PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0x1C411E9A96E071241C2F21F7726B17AE89E3CAB4C78BE50E062B03A9FFFBBAD1 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 DUP4 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH2 0x5412 DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x4A13 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x546A DUP2 PUSH1 0x0 SLOAD PUSH2 0x4A13 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x19 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x7472616E7366657228616464726573732C75696E743235362900000000000000 DUP2 MSTORE POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x5607 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0x55E4 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x5669 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x566E JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x56AE JUMPI POP PUSH1 0x0 DUP2 MLOAD EQ DUP1 PUSH2 0x56AD JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x569B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP JUMPDEST JUMPDEST PUSH2 0x5720 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x14 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x31306B3A205452414E534645525F4641494C4544000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x5930 JUMPI PUSH2 0x576F PUSH3 0x186A0 PUSH2 0x5758 DUP5 DUP10 PUSH2 0x4FC7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH2 0x575F JUMPI INVALID JUMPDEST DIV DUP8 PUSH2 0x4A13 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP6 POP PUSH1 0x0 PUSH2 0x577D DUP6 DUP6 PUSH2 0x4E8C JUMP JUMPDEST SWAP1 POP PUSH1 0x9 SLOAD PUSH8 0xDE0B6B3A7640000 DUP7 MUL DUP2 PUSH2 0x5794 JUMPI INVALID JUMPDEST DIV SWAP5 POP PUSH1 0xA SLOAD PUSH8 0xDE0B6B3A7640000 DUP6 MUL DUP2 PUSH2 0x57AC JUMPI INVALID JUMPDEST DIV SWAP4 POP PUSH1 0x0 DUP1 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x580E JUMPI DUP6 DUP8 PUSH2 0x5811 JUMP JUMPDEST DUP7 DUP7 JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x5885 JUMPI PUSH1 0xA SLOAD PUSH8 0xDE0B6B3A7640000 DUP11 MUL DUP2 PUSH2 0x587F JUMPI INVALID JUMPDEST DIV PUSH2 0x589C JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH8 0xDE0B6B3A7640000 DUP11 MUL DUP2 PUSH2 0x589A JUMPI INVALID JUMPDEST DIV JUMPDEST SWAP9 POP PUSH1 0x0 PUSH2 0x58AD DUP4 DUP12 ADD DUP6 DUP5 PUSH2 0x5A94 JUMP JUMPDEST DUP3 SUB SWAP1 POP PUSH8 0xDE0B6B3A7640000 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x5917 JUMPI PUSH1 0x9 SLOAD PUSH2 0x591B JUMP JUMPDEST PUSH1 0xA SLOAD JUMPDEST DUP3 MUL DUP2 PUSH2 0x5924 JUMPI INVALID JUMPDEST DIV SWAP5 POP POP POP POP POP PUSH2 0x5A08 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x598F JUMPI DUP5 DUP7 PUSH2 0x5992 JUMP JUMPDEST DUP6 DUP6 JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x59BE PUSH2 0x59AF DUP6 PUSH3 0x186A0 PUSH2 0x4A13 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP10 PUSH2 0x4FC7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP8 POP PUSH2 0x59E8 DUP9 PUSH2 0x59DA PUSH3 0x186A0 DUP6 PUSH2 0x4FC7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x5A11 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x59FB DUP3 DUP11 PUSH2 0x4FC7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH2 0x5A02 JUMPI INVALID JUMPDEST DIV SWAP3 POP POP POP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 DUP5 ADD SWAP2 POP DUP2 LT ISZERO PUSH2 0x5A8E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x14 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x64732D6D6174682D6164642D6F766572666C6F77000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0xFF DUP2 LT ISZERO PUSH2 0x5B5F JUMPI PUSH1 0x0 DUP4 SWAP1 POP PUSH1 0x0 PUSH2 0x5AB6 DUP8 DUP7 PUSH2 0x5B6B JUMP JUMPDEST SWAP1 POP DUP6 DUP2 LT ISZERO PUSH2 0x5AEE JUMPI PUSH1 0x0 PUSH2 0x5ACC DUP9 DUP8 PUSH2 0x5BE2 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP4 DUP10 SUB MUL DUP2 PUSH2 0x5AE0 JUMPI INVALID JUMPDEST DIV SWAP1 POP DUP1 DUP7 ADD SWAP6 POP POP PUSH2 0x5B18 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5AFA DUP9 DUP8 PUSH2 0x5BE2 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP9 DUP5 SUB MUL DUP2 PUSH2 0x5B0E JUMPI INVALID JUMPDEST DIV SWAP1 POP DUP1 DUP7 SUB SWAP6 POP POP JUMPDEST DUP2 DUP6 GT ISZERO PUSH2 0x5B3A JUMPI PUSH1 0x1 DUP3 DUP7 SUB GT PUSH2 0x5B35 JUMPI DUP5 SWAP4 POP POP POP POP PUSH2 0x5B64 JUMP JUMPDEST PUSH2 0x5B50 JUMP JUMPDEST PUSH1 0x1 DUP6 DUP4 SUB GT PUSH2 0x5B4F JUMPI DUP5 SWAP4 POP POP POP POP PUSH2 0x5B64 JUMP JUMPDEST JUMPDEST POP POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x5A9C JUMP JUMPDEST POP DUP2 SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xDE0B6B3A7640000 DUP3 PUSH8 0xDE0B6B3A7640000 DUP6 PUSH8 0xDE0B6B3A7640000 DUP8 DUP9 MUL DUP2 PUSH2 0x5B94 JUMPI INVALID JUMPDEST DIV MUL DUP2 PUSH2 0x5B9D JUMPI INVALID JUMPDEST DIV MUL DUP2 PUSH2 0x5BA6 JUMPI INVALID JUMPDEST DIV PUSH8 0xDE0B6B3A7640000 DUP1 DUP5 PUSH8 0xDE0B6B3A7640000 DUP7 DUP8 MUL DUP2 PUSH2 0x5BC5 JUMPI INVALID JUMPDEST DIV MUL DUP2 PUSH2 0x5BCE JUMPI INVALID JUMPDEST DIV DUP6 MUL DUP2 PUSH2 0x5BD8 JUMPI INVALID JUMPDEST DIV ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xDE0B6B3A7640000 DUP4 PUSH8 0xDE0B6B3A7640000 DUP6 DUP7 MUL DUP2 PUSH2 0x5C01 JUMPI INVALID JUMPDEST DIV MUL DUP2 PUSH2 0x5C0A JUMPI INVALID JUMPDEST DIV PUSH8 0xDE0B6B3A7640000 DUP1 DUP5 DUP6 MUL DUP2 PUSH2 0x5C1F JUMPI INVALID JUMPDEST DIV DUP6 PUSH1 0x3 MUL MUL DUP2 PUSH2 0x5C2C JUMPI INVALID JUMPDEST DIV ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP INVALID BALANCE ADDRESS PUSH12 0x3A206F6E6C7920666163746F PUSH19 0x79277320736574537461626C654F776E657231 ADDRESS PUSH12 0x3A206F6E6C7920666163746F PUSH19 0x79277320666565416D6F756E744F776E657231 ADDRESS PUSH12 0x3A2066656550657263656E74 KECCAK256 PUSH14 0x7573746E27742065786365656420 PUSH21 0x6865206D6178696D756D31306B3A20666565506572 PUSH4 0x656E7420 PUSH14 0x7573746E27742065786365656420 PUSH21 0x6865206D696E696D756D31306B3A20494E53554646 0x49 NUMBER 0x49 GASLIMIT 0x4E SLOAD 0x5F 0x4C 0x49 MLOAD SSTORE 0x49 DIFFICULTY 0x49 SLOAD MSIZE 0x5F 0x4D 0x49 0x4E SLOAD GASLIMIT DIFFICULTY BALANCE ADDRESS PUSH12 0x3A206C697175696469747920 PUSH19 0x6174696F206E6F7420696E697469616C697A65 PUSH5 0x31306B3A20 0x49 0x4E MSTORE8 SSTORE CHAINID CHAINID 0x49 NUMBER 0x49 GASLIMIT 0x4E SLOAD 0x5F 0x4C 0x49 MLOAD SSTORE 0x49 DIFFICULTY 0x49 SLOAD MSIZE 0x5F TIMESTAMP SSTORE MSTORE 0x4E GASLIMIT DIFFICULTY LOG2 PUSH6 0x627A7A723158 KECCAK256 0xEE DUP16 EXTCODECOPY PUSH15 0x2F98867D4967AB639C69F698D9AEBD PUSH20 0x707E24E7CA2713A5FB2EF17E64736F6C63430005 LT STOP ORIGIN GASLIMIT 0x49 POP CALLDATACOPY BALANCE ORIGIN DIFFICULTY PUSH16 0x6D61696E28737472696E67206E616D65 0x2C PUSH20 0x7472696E672076657273696F6E2C75696E743235 CALLDATASIZE KECCAK256 PUSH4 0x6861696E 0x49 PUSH5 0x2C61646472 PUSH6 0x737320766572 PUSH10 0x6679696E67436F6E7472 PUSH2 0x6374 0x29 ",
							"sourceMap": "263:17838:1:-;;;942:3;909:36;;;;;;;;;;;;;;;;;;;;1058:3;1025:36;;;;;;;;;;;;;;;;;;;;1520:1;1496:25;;2825:54;8:9:-1;5:2;;;30:1;27;20:12;5:2;2825:54:1;960:12:0;1018:7;1007:18;;1118:95;;;;;;;;;;;;;;;;;;;1248:4;;;;;;;;;;;;;;;;;1232:22;;;;;;1283:10;;;;;;;;;;;;;;;;;1273:21;;;;;;1313:7;1347:4;1089:278;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1089:278:0;;;1065:313;;;;;;1046:16;:332;;;;928:458;2863:10:1;2853:7;;:20;;;;;;;;;;;;;;;;;;263:17838;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x248 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6A627842 GT PUSH2 0x13B JUMPI DUP1 PUSH4 0xBA9A7A56 GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xD73792A9 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xD73792A9 EQ PUSH2 0xC9C JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0xCBA JUMPI DUP1 PUSH4 0xF140A35A EQ PUSH2 0xD32 JUMPI DUP1 PUSH4 0xF39AC11F EQ PUSH2 0xD94 JUMPI DUP1 PUSH4 0xFFF6CAE9 EQ PUSH2 0xDF8 JUMPI PUSH2 0x248 JUMP JUMPDEST DUP1 PUSH4 0xBA9A7A56 EQ PUSH2 0xB0D JUMPI DUP1 PUSH4 0xBC25CF77 EQ PUSH2 0xB2B JUMPI DUP1 PUSH4 0xC45A0155 EQ PUSH2 0xB6F JUMPI DUP1 PUSH4 0xD21220A7 EQ PUSH2 0xBB9 JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0xC03 JUMPI PUSH2 0x248 JUMP JUMPDEST DUP1 PUSH4 0x89AFCB44 GT PUSH2 0xFF JUMPI DUP1 PUSH4 0x89AFCB44 EQ PUSH2 0x981 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x9E0 JUMPI DUP1 PUSH4 0x9E548B7F EQ PUSH2 0xA63 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0xA85 JUMPI DUP1 PUSH4 0xB6200B07 EQ PUSH2 0xAEB JUMPI PUSH2 0x248 JUMP JUMPDEST DUP1 PUSH4 0x6A627842 EQ PUSH2 0x78E JUMPI DUP1 PUSH4 0x6E1FDD7F EQ PUSH2 0x7E6 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x8B3 JUMPI DUP1 PUSH4 0x7464FC3D EQ PUSH2 0x90B JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x929 JUMPI PUSH2 0x248 JUMP JUMPDEST DUP1 PUSH4 0x3029E5D4 GT PUSH2 0x1C9 JUMPI DUP1 PUSH4 0x3BA17077 GT PUSH2 0x18D JUMPI DUP1 PUSH4 0x3BA17077 EQ PUSH2 0x69C JUMPI DUP1 PUSH4 0x485CC955 EQ PUSH2 0x6A6 JUMPI DUP1 PUSH4 0x48E5D260 EQ PUSH2 0x70A JUMPI DUP1 PUSH4 0x62ECEC03 EQ PUSH2 0x74A JUMPI DUP1 PUSH4 0x67D81740 EQ PUSH2 0x770 JUMPI PUSH2 0x248 JUMP JUMPDEST DUP1 PUSH4 0x3029E5D4 EQ PUSH2 0x5BA JUMPI DUP1 PUSH4 0x30ADF81F EQ PUSH2 0x61E JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x63C JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x660 JUMPI DUP1 PUSH4 0x3B9F1DC0 EQ PUSH2 0x67E JUMPI PUSH2 0x248 JUMP JUMPDEST DUP1 PUSH4 0x158EF93E GT PUSH2 0x210 JUMPI DUP1 PUSH4 0x158EF93E EQ PUSH2 0x4B0 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x4D2 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x4F0 JUMPI DUP1 PUSH4 0x288E5D02 EQ PUSH2 0x576 JUMPI DUP1 PUSH4 0x2FCD1692 EQ PUSH2 0x594 JUMPI PUSH2 0x248 JUMP JUMPDEST DUP1 PUSH4 0x22C0D9F EQ PUSH2 0x24D JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x2FA JUMPI DUP1 PUSH4 0x902F1AC EQ PUSH2 0x37D JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x400 JUMPI DUP1 PUSH4 0xDFE1681 EQ PUSH2 0x466 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2F8 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x263 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x2B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x2C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x2E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP2 SWAP3 SWAP4 SWAP1 POP POP POP PUSH2 0xE02 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x302 PUSH2 0xF13 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x342 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x327 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x36F JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x385 PUSH2 0xF4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP6 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH2 0xFFFF AND PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH2 0xFFFF AND PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x44C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x416 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xFBC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x46E PUSH2 0xFD3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4B8 PUSH2 0xFF9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4DA PUSH2 0x100C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x55C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x506 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1012 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x57E PUSH2 0x1248 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x59C PUSH2 0x124E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH2 0xFFFF AND PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x61C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x5D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD ISZERO ISZERO SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1262 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x626 PUSH2 0x174E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x644 PUSH2 0x1775 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x668 PUSH2 0x177A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x686 PUSH2 0x1780 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6A4 PUSH2 0x1786 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x708 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x6BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1A1D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x748 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x720 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH2 0xFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH2 0xFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1CB4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x752 PUSH2 0x1FCD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH2 0xFFFF AND PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x778 PUSH2 0x1FE1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7D0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x7A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1FE7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8B1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0x7FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x84D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x85F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x881 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP2 SWAP3 SWAP4 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x248E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x8F5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x8C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x259F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x913 PUSH2 0x25B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x96B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x93F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x25BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9C3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x997 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x25D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9E8 PUSH2 0x2BB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xA28 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xA0D JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xA55 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA6B PUSH2 0x2BF1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xAD1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xA9B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x2C04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xAF3 PUSH2 0x2C1B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB15 PUSH2 0x2C2E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB6D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xB41 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x2C34 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xB77 PUSH2 0x2F3B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xBC1 PUSH2 0x2F61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC9A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xE0 DUP2 LT ISZERO PUSH2 0xC19 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH1 0xFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x2F87 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xCA4 PUSH2 0x32CB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD1C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xCD0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x32D2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD7E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xD48 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x32F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF6 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xDAA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x33EB JUMP JUMPDEST STOP JUMPDEST PUSH2 0xE00 PUSH2 0x3814 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xE0A PUSH2 0x5C36 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP PUSH2 0xF0B DUP2 DUP6 DUP6 DUP6 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP PUSH1 0x0 PUSH2 0x3ACD JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x43616D656C6F74204C5000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP4 POP PUSH1 0x8 PUSH1 0xE SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP3 POP PUSH1 0x8 PUSH1 0x1C SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND SWAP2 POP PUSH1 0x8 PUSH1 0x1E SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND SWAP1 POP SWAP1 SWAP2 SWAP3 SWAP4 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFC9 CALLER DUP5 DUP5 PUSH2 0x4928 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ PUSH2 0x1232 JUMPI PUSH1 0x0 PUSH2 0x1148 DUP4 PUSH1 0x2 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x4A13 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x2 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMPDEST PUSH2 0x123D DUP5 DUP5 DUP5 PUSH2 0x4A96 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x1E SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xD SLOAD EQ PUSH2 0x12DA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x31306B3A204C4F434B4544000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xD DUP2 SWAP1 SSTORE POP PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFC39026A PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x134A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x135E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1374 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1408 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x5CA8 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xC PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x148B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xE DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x31306B3A20696D6D757461626C65000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO DUP4 ISZERO ISZERO EQ ISZERO PUSH2 0x1514 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xE DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x31306B3A206E6F20757064617465000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x159A JUMPI POP PUSH1 0x8 PUSH1 0xE SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0x160C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x31306B3A206661696C6564000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1650 PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x8 PUSH1 0xE SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x4C2A JUMP JUMPDEST SWAP1 POP PUSH32 0xB6A86710BDE53AA7FB1B3856279E2AF5B476D53E2DD0902CF17A0911B5A43A8B PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP6 PUSH1 0x40 MLOAD DUP1 DUP4 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 DUP4 PUSH1 0xC PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP4 DUP1 ISZERO PUSH2 0x16CC JUMPI POP DUP1 JUMPDEST PUSH2 0x16D7 JUMPI PUSH1 0x0 PUSH2 0x173A JUMP JUMPDEST PUSH2 0x1739 PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x8 PUSH1 0xE SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x4E8C JUMP JUMPDEST JUMPDEST PUSH1 0xB DUP2 SWAP1 SSTORE POP POP PUSH1 0x1 PUSH1 0xD DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 PUSH1 0x0 SHL DUP2 JUMP JUMPDEST PUSH1 0x12 DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xD SLOAD EQ PUSH2 0x17FE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x31306B3A204C4F434B4544000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xD DUP2 SWAP1 SSTORE POP PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8DA5CB5B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x186E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1882 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1898 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1949 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x19 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x31306B3A206F6E6C7920666163746F72792773206F776E657200000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xC PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x19CC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x16 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x31306B3A20616C726561647920696D6D757461626C6500000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xC PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x9122C41AE733A4D7740324D50E35FBD6EE85BE3C1312A45596D8045150AB2F2 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 PUSH1 0xD DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x1A87 JUMPI POP PUSH1 0x7 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x1AF9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xE DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x31306B3A20464F5242494444454E000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x6 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x7 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1BC1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1BD5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1BEB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH1 0xFF AND PUSH1 0xA EXP PUSH1 0x9 DUP2 SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1C4E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1C62 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1C78 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH1 0xFF AND PUSH1 0xA EXP PUSH1 0xA DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x7 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0xD SLOAD EQ PUSH2 0x1D2C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x31306B3A204C4F434B4544000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xD DUP2 SWAP1 SSTORE POP PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x4C217715 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1D9C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1DB0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1DC6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1E5A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x5CCA PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7D0 DUP3 PUSH2 0xFFFF AND GT ISZERO DUP1 ISZERO PUSH2 0x1E76 JUMPI POP PUSH2 0x7D0 DUP2 PUSH2 0xFFFF AND GT ISZERO JUMPDEST PUSH2 0x1ECB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x5CEC PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xFFFF AND GT DUP1 ISZERO PUSH2 0x1EE3 JUMPI POP PUSH1 0x0 DUP2 PUSH2 0xFFFF AND GT JUMPDEST PUSH2 0x1F38 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x5D16 PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x8 PUSH1 0x1C PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH2 0xFFFF MUL NOT AND SWAP1 DUP4 PUSH2 0xFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x8 PUSH1 0x1E PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH2 0xFFFF MUL NOT AND SWAP1 DUP4 PUSH2 0xFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0xA4877B8ECB5A00BA277E4BCEEEB187A669E7113649774DFBEA05C259CE27F17B DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 DUP4 PUSH2 0xFFFF AND PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH2 0xFFFF AND PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 PUSH1 0xD DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x8 PUSH1 0x1C SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x7D0 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0xD SLOAD EQ PUSH2 0x2061 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x31306B3A204C4F434B4544000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xD DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP1 PUSH2 0x2074 PUSH2 0xF4C JUMP JUMPDEST POP POP SWAP2 POP SWAP2 POP PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x211B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x212F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2145 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x21F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x220D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2223 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP PUSH1 0x0 PUSH2 0x225B DUP6 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH2 0x4A13 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2282 DUP6 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH2 0x4A13 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2290 DUP8 DUP8 PUSH2 0x4C2A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 SLOAD SWAP1 POP PUSH1 0x0 DUP2 EQ ISZERO PUSH2 0x22E4 JUMPI PUSH2 0x22D0 PUSH2 0x3E8 PUSH2 0x22C2 PUSH2 0x22BD DUP7 DUP9 PUSH2 0x4FC7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x505C JUMP JUMPDEST PUSH2 0x4A13 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP9 POP PUSH2 0x22DF PUSH1 0x0 PUSH2 0x3E8 PUSH2 0x50BE JUMP JUMPDEST PUSH2 0x2347 JUMP JUMPDEST PUSH2 0x2344 DUP9 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x230B DUP4 DUP8 PUSH2 0x4FC7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH2 0x2312 JUMPI INVALID JUMPDEST DIV DUP9 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2337 DUP5 DUP8 PUSH2 0x4FC7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH2 0x233E JUMPI INVALID JUMPDEST DIV PUSH2 0x51D8 JUMP JUMPDEST SWAP9 POP JUMPDEST PUSH1 0x0 DUP10 GT PUSH2 0x23A0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x5D40 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x23AA DUP11 DUP11 PUSH2 0x50BE JUMP JUMPDEST PUSH2 0x23B4 DUP7 DUP7 PUSH2 0x51F1 JUMP JUMPDEST DUP2 ISZERO PUSH2 0x2423 JUMPI PUSH2 0x241C PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x8 PUSH1 0xE SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x4E8C JUMP JUMPDEST PUSH1 0xB DUP2 SWAP1 SSTORE POP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4C209B5FC8AD50758F13E2E1088BA56A560DFF690A1C6FEF26394F4C03821C4F DUP6 DUP6 PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP POP POP PUSH1 0x1 PUSH1 0xD DUP2 SWAP1 SSTORE POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2496 PUSH2 0x5C36 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP9 DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP PUSH2 0x2596 DUP2 DUP7 DUP7 DUP7 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP DUP6 PUSH2 0x3ACD JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 PUSH1 0xD SLOAD EQ PUSH2 0x2650 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x31306B3A204C4F434B4544000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xD DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP1 PUSH2 0x2663 PUSH2 0xF4C JUMP JUMPDEST POP POP SWAP2 POP SWAP2 POP PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2736 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x274A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2760 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x27F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2806 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x281C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 PUSH2 0x287F DUP9 DUP9 PUSH2 0x4C2A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 SLOAD SWAP1 POP DUP1 PUSH2 0x289B DUP7 DUP6 PUSH2 0x4FC7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH2 0x28A2 JUMPI INVALID JUMPDEST DIV SWAP11 POP DUP1 PUSH2 0x28B9 DUP6 DUP6 PUSH2 0x4FC7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH2 0x28C0 JUMPI INVALID JUMPDEST DIV SWAP10 POP PUSH1 0x0 DUP12 GT DUP1 ISZERO PUSH2 0x28D3 JUMPI POP PUSH1 0x0 DUP11 GT JUMPDEST PUSH2 0x2928 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x5D86 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2932 ADDRESS DUP5 PUSH2 0x53C0 JUMP JUMPDEST PUSH2 0x293D DUP8 DUP14 DUP14 PUSH2 0x54DA JUMP JUMPDEST PUSH2 0x2948 DUP7 DUP14 DUP13 PUSH2 0x54DA JUMP JUMPDEST DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x29C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x29D9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x29EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP5 POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2A7F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2A93 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2AA9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP4 POP PUSH2 0x2AC6 DUP6 DUP6 PUSH2 0x51F1 JUMP JUMPDEST DUP2 ISZERO PUSH2 0x2B35 JUMPI PUSH2 0x2B2E PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x8 PUSH1 0xE SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x4E8C JUMP JUMPDEST PUSH1 0xB DUP2 SWAP1 SSTORE POP JUMPDEST DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDCCD412F0B1252819CB1FD330B93224CA42612892BB3F4F789976E6D81936496 DUP14 DUP14 PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP POP POP PUSH1 0x1 PUSH1 0xD DUP2 SWAP1 SSTORE POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x434D4C542D4C5000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C11 CALLER DUP5 DUP5 PUSH2 0x4A96 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xC PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x3E8 DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xD SLOAD EQ PUSH2 0x2CAC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x31306B3A204C4F434B4544000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xD DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH2 0x2E02 DUP3 DUP5 PUSH2 0x2DFD PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2DB4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2DC8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2DDE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x4A13 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x54DA JUMP JUMPDEST PUSH2 0x2F02 DUP2 DUP5 PUSH2 0x2EFD PUSH1 0x8 PUSH1 0xE SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2EB4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2EC8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2EDE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x4A13 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x54DA JUMP JUMPDEST PUSH32 0x21AD22495C9C75CD1C94756F91824E779C0C8A8E168B267C790DF464FE056B79 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP PUSH1 0x1 PUSH1 0xD DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST TIMESTAMP DUP5 LT ISZERO PUSH2 0x2FFD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x556E697377617056323A20455850495245440000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 PUSH1 0x0 SHL DUP10 DUP10 DUP10 PUSH1 0x4 PUSH1 0x0 DUP15 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE DUP11 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP7 POP POP POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP1 PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x2 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP3 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x31CF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x3243 JUMPI POP DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0x32B5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1C DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x556E697377617056323A20494E56414C49445F5349474E415455524500000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x32C0 DUP10 DUP10 DUP10 PUSH2 0x4928 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH3 0x186A0 DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x3365 JUMPI PUSH1 0x8 PUSH1 0x1E SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND PUSH2 0x3377 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x1C SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND JUMPDEST SWAP1 POP PUSH2 0x33E2 DUP5 DUP5 PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x8 PUSH1 0xE SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH2 0xFFFF AND PUSH2 0x5727 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0xD SLOAD EQ PUSH2 0x3463 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x31306B3A204C4F434B4544000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xD DUP2 SWAP1 SSTORE POP PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8DA5CB5B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x34D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x34E7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x34FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x35AE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x19 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x31306B3A206F6E6C7920666163746F72792773206F776E657200000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x365A JUMPI POP PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST PUSH2 0x36CC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x31306B3A20696E76616C696420746F6B656E0000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x378E DUP3 DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x374E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3762 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3778 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x54DA JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x368A9DC863ECB94B5BA32A682E26295B10D9C2666FAD7D785EBDF262C3C52413 DUP3 PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x1 PUSH1 0xD DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0xD SLOAD EQ PUSH2 0x388C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x31306B3A204C4F434B4544000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xD DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3935 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3949 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x395F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3A13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3A27 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3A3D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP PUSH1 0x0 DUP3 EQ ISZERO DUP1 ISZERO PUSH2 0x3A62 JUMPI POP PUSH1 0x0 DUP2 EQ ISZERO JUMPDEST PUSH2 0x3AB7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x5D62 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3AC1 DUP3 DUP3 PUSH2 0x51F1 JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0xD DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0xD SLOAD EQ PUSH2 0x3B45 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x31306B3A204C4F434B4544000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xD DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP5 PUSH1 0x40 ADD MLOAD GT DUP1 PUSH2 0x3B64 JUMPI POP PUSH1 0x0 DUP5 PUSH1 0x60 ADD MLOAD GT JUMPDEST PUSH2 0x3BD6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x31306B3A20494E53554646494349454E545F4F55545055545F414D4F554E5400 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x3BE4 PUSH2 0xF4C JUMP JUMPDEST SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP DUP4 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH1 0x40 ADD MLOAD LT DUP1 ISZERO PUSH2 0x3C22 JUMPI POP DUP3 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH1 0x60 ADD MLOAD LT JUMPDEST PUSH2 0x3C94 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x31306B3A20494E53554646494349454E545F4C49515549444954590000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP8 PUSH1 0x0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x3D04 JUMPI POP DUP8 PUSH1 0x20 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST PUSH2 0x3D76 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xF DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x31306B3A20494E56414C49445F544F0000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP9 PUSH1 0x40 ADD MLOAD GT ISZERO PUSH2 0x3D97 JUMPI PUSH2 0x3D96 DUP9 PUSH1 0x0 ADD MLOAD DUP9 DUP11 PUSH1 0x40 ADD MLOAD PUSH2 0x54DA JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP9 PUSH1 0x60 ADD MLOAD GT ISZERO PUSH2 0x3DB8 JUMPI PUSH2 0x3DB7 DUP9 PUSH1 0x20 ADD MLOAD DUP9 DUP11 PUSH1 0x60 ADD MLOAD PUSH2 0x54DA JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP7 MLOAD GT ISZERO PUSH2 0x3EDF JUMPI DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x10D1E85C CALLER DUP11 PUSH1 0x40 ADD MLOAD DUP12 PUSH1 0x60 ADD MLOAD DUP11 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3E77 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3E5C JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x3EA4 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP6 POP POP POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3EC6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3EDA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST DUP8 PUSH1 0x0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3F60 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3F74 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3F8A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP DUP9 PUSH1 0x80 ADD DUP2 DUP2 MSTORE POP POP DUP8 PUSH1 0x20 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4025 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4039 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x404F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP DUP9 PUSH1 0xA0 ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x0 DUP9 PUSH1 0x40 ADD MLOAD DUP6 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB DUP10 PUSH1 0x80 ADD MLOAD GT PUSH2 0x4093 JUMPI PUSH1 0x0 PUSH2 0x40B1 JUMP JUMPDEST DUP9 PUSH1 0x40 ADD MLOAD DUP6 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB DUP10 PUSH1 0x80 ADD MLOAD SUB JUMPDEST SWAP1 POP PUSH1 0x0 DUP10 PUSH1 0x60 ADD MLOAD DUP6 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB DUP11 PUSH1 0xA0 ADD MLOAD GT PUSH2 0x40DD JUMPI PUSH1 0x0 PUSH2 0x40FB JUMP JUMPDEST DUP10 PUSH1 0x60 ADD MLOAD DUP6 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB DUP11 PUSH1 0xA0 ADD MLOAD SUB JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 GT DUP1 PUSH2 0x410C JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST PUSH2 0x417E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x31306B3A20494E53554646494349454E545F494E5055545F414D4F554E540000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x186A0 PUSH2 0x4199 DUP6 PUSH2 0xFFFF AND DUP5 PUSH2 0x4FC7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH2 0x41A0 JUMPI INVALID JUMPDEST DIV DUP11 PUSH1 0xC0 ADD DUP2 DUP2 MSTORE POP POP PUSH3 0x186A0 PUSH2 0x41C5 DUP5 PUSH2 0xFFFF AND DUP4 PUSH2 0x4FC7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH2 0x41CC JUMPI INVALID JUMPDEST DIV DUP11 PUSH1 0xE0 ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x0 DUP1 SWAP1 POP PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x4218 JUMPI PUSH1 0x0 PUSH2 0x42F3 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x7183D47C DUP11 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x42B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x42CB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x42E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x43E5 JUMPI PUSH1 0x0 DUP5 GT ISZERO PUSH2 0x4371 JUMPI PUSH1 0x2 PUSH3 0x186A0 EXP PUSH2 0x4337 DUP8 PUSH2 0xFFFF AND PUSH2 0x4329 DUP5 DUP9 PUSH2 0x4FC7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x4FC7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH2 0x433E JUMPI INVALID JUMPDEST DIV SWAP2 POP PUSH2 0x4358 DUP3 DUP14 PUSH1 0xC0 ADD MLOAD PUSH2 0x4A13 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP13 PUSH1 0xC0 ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x4370 DUP13 PUSH1 0x0 ADD MLOAD DUP11 DUP5 PUSH2 0x54DA JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 GT ISZERO PUSH2 0x43E4 JUMPI PUSH1 0x2 PUSH3 0x186A0 EXP PUSH2 0x43AA DUP7 PUSH2 0xFFFF AND PUSH2 0x439C DUP5 DUP8 PUSH2 0x4FC7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x4FC7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH2 0x43B1 JUMPI INVALID JUMPDEST DIV SWAP2 POP PUSH2 0x43CB DUP3 DUP14 PUSH1 0xE0 ADD MLOAD PUSH2 0x4A13 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP13 PUSH1 0xE0 ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x43E3 DUP13 PUSH1 0x20 ADD MLOAD DUP11 DUP5 PUSH2 0x54DA JUMP JUMPDEST JUMPDEST JUMPDEST PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x45F5 JUMPI PUSH1 0x0 DUP1 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x995B5AAE PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4464 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4478 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x448E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP2 POP SWAP2 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x45F2 JUMPI PUSH2 0x4509 DUP3 PUSH2 0x44FB DUP6 PUSH3 0x186A0 PUSH2 0x4A13 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x4FC7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP PUSH1 0x0 DUP7 GT ISZERO PUSH2 0x457E JUMPI PUSH1 0x3 PUSH3 0x186A0 EXP PUSH2 0x4544 DUP10 PUSH2 0xFFFF AND PUSH2 0x4536 DUP6 DUP11 PUSH2 0x4FC7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x4FC7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH2 0x454B JUMPI INVALID JUMPDEST DIV SWAP4 POP PUSH2 0x4565 DUP5 DUP16 PUSH1 0xC0 ADD MLOAD PUSH2 0x4A13 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP15 PUSH1 0xC0 ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x457D DUP15 PUSH1 0x0 ADD MLOAD DUP3 DUP7 PUSH2 0x54DA JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP6 GT ISZERO PUSH2 0x45F1 JUMPI PUSH1 0x3 PUSH3 0x186A0 EXP PUSH2 0x45B7 DUP9 PUSH2 0xFFFF AND PUSH2 0x45A9 DUP6 DUP10 PUSH2 0x4FC7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x4FC7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH2 0x45BE JUMPI INVALID JUMPDEST DIV SWAP4 POP PUSH2 0x45D8 DUP5 DUP16 PUSH1 0xE0 ADD MLOAD PUSH2 0x4A13 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP15 PUSH1 0xE0 ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x45F0 DUP15 PUSH1 0x20 ADD MLOAD DUP3 DUP7 PUSH2 0x54DA JUMP JUMPDEST JUMPDEST JUMPDEST POP POP JUMPDEST PUSH1 0x0 DUP5 GT ISZERO PUSH2 0x46C4 JUMPI DUP12 PUSH1 0x0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x467F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4693 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x46A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP DUP13 PUSH1 0x80 ADD DUP2 DUP2 MSTORE POP POP JUMPDEST PUSH1 0x0 DUP4 GT ISZERO PUSH2 0x4793 JUMPI DUP12 PUSH1 0x20 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x474E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4762 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4778 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP DUP13 PUSH1 0xA0 ADD DUP2 DUP2 MSTORE POP POP JUMPDEST POP POP PUSH1 0x0 PUSH2 0x47B2 DUP12 PUSH1 0xC0 ADD MLOAD DUP13 PUSH1 0x80 ADD MLOAD PUSH2 0x4A13 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x47D1 DUP13 PUSH1 0xE0 ADD MLOAD DUP14 PUSH1 0xA0 ADD MLOAD PUSH2 0x4A13 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x47FD DUP9 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x4E8C JUMP JUMPDEST PUSH2 0x4807 DUP4 DUP4 PUSH2 0x4E8C JUMP JUMPDEST LT ISZERO PUSH2 0x487B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x31306B3A204B0000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP PUSH2 0x488F DUP11 PUSH1 0x80 ADD MLOAD DUP12 PUSH1 0xA0 ADD MLOAD PUSH2 0x51F1 JUMP JUMPDEST DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xD78AD95FA46C994B6551D0DA85FC275FE613CE37657FB8D5E3D130840159D822 DUP5 DUP5 DUP15 PUSH1 0x40 ADD MLOAD DUP16 PUSH1 0x60 ADD MLOAD PUSH1 0x40 MLOAD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP PUSH1 0x1 PUSH1 0xD DUP2 SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 DUP5 SUB SWAP2 POP DUP2 GT ISZERO PUSH2 0x4A90 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x15 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x64732D6D6174682D7375622D756E646572666C6F770000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x4AE8 DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x4A13 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x4B7D DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x5A11 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x4C4A JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x4E86 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x995B5AAE PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4CB4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4CC8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x4CDE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP2 POP SWAP2 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO SWAP3 POP PUSH1 0x0 PUSH1 0xB SLOAD SWAP1 POP DUP4 ISZERO PUSH2 0x4E70 JUMPI PUSH1 0x0 DUP2 EQ PUSH2 0x4E6B JUMPI PUSH1 0x0 PUSH2 0x4D79 PUSH2 0x4D74 DUP9 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x4E8C JUMP JUMPDEST PUSH2 0x505C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x4D86 DUP4 PUSH2 0x505C JUMP JUMPDEST SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x4E68 JUMPI PUSH1 0x0 PUSH2 0x4DC5 PUSH1 0x64 DUP8 PUSH2 0x4DAF PUSH1 0x64 PUSH3 0x186A0 PUSH2 0x4FC7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH2 0x4DB6 JUMPI INVALID JUMPDEST DIV PUSH2 0x4A13 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x4E03 PUSH1 0x64 PUSH2 0x4DF5 PUSH2 0x4DE4 DUP7 DUP9 PUSH2 0x4A13 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x4FC7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x4FC7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x4E3F PUSH2 0x4E1E PUSH1 0x64 DUP7 PUSH2 0x4FC7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x4E31 DUP6 DUP9 PUSH2 0x4FC7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x5A11 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 DUP4 DUP2 PUSH2 0x4E4C JUMPI INVALID JUMPDEST DIV SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x4E63 JUMPI PUSH2 0x4E62 DUP9 DUP3 PUSH2 0x50BE JUMP JUMPDEST JUMPDEST POP POP POP POP JUMPDEST POP POP JUMPDEST PUSH2 0x4E82 JUMP JUMPDEST PUSH1 0x0 DUP2 EQ PUSH2 0x4E81 JUMPI PUSH1 0x0 PUSH1 0xB DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x4FAB JUMPI PUSH1 0x0 PUSH1 0x9 SLOAD PUSH2 0x4EC3 PUSH8 0xDE0B6B3A7640000 DUP7 PUSH2 0x4FC7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH2 0x4ECA JUMPI INVALID JUMPDEST DIV SWAP1 POP PUSH1 0x0 PUSH1 0xA SLOAD PUSH2 0x4EED PUSH8 0xDE0B6B3A7640000 DUP7 PUSH2 0x4FC7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH2 0x4EF4 JUMPI INVALID JUMPDEST DIV SWAP1 POP PUSH1 0x0 PUSH8 0xDE0B6B3A7640000 PUSH2 0x4F15 DUP4 DUP6 PUSH2 0x4FC7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH2 0x4F1C JUMPI INVALID JUMPDEST DIV SWAP1 POP PUSH1 0x0 PUSH2 0x4F7A PUSH8 0xDE0B6B3A7640000 PUSH2 0x4F40 DUP6 DUP7 PUSH2 0x4FC7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH2 0x4F47 JUMPI INVALID JUMPDEST DIV PUSH8 0xDE0B6B3A7640000 PUSH2 0x4F64 DUP8 DUP9 PUSH2 0x4FC7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH2 0x4F6B JUMPI INVALID JUMPDEST DIV PUSH2 0x5A11 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH8 0xDE0B6B3A7640000 PUSH2 0x4F98 DUP3 DUP5 PUSH2 0x4FC7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH2 0x4F9F JUMPI INVALID JUMPDEST DIV SWAP5 POP POP POP POP POP PUSH2 0x4FC1 JUMP JUMPDEST PUSH2 0x4FBE DUP3 DUP5 PUSH2 0x4FC7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 EQ DUP1 PUSH2 0x4FE4 JUMPI POP DUP3 DUP3 DUP4 DUP6 MUL SWAP3 POP DUP3 DUP2 PUSH2 0x4FE1 JUMPI INVALID JUMPDEST DIV EQ JUMPDEST PUSH2 0x5056 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x14 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x64732D6D6174682D6D756C2D6F766572666C6F77000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP3 GT ISZERO PUSH2 0x50AB JUMPI DUP2 SWAP1 POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x2 DUP5 DUP2 PUSH2 0x5078 JUMPI INVALID JUMPDEST DIV ADD SWAP1 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x50A5 JUMPI DUP1 SWAP2 POP PUSH1 0x2 DUP2 DUP3 DUP6 DUP2 PUSH2 0x5094 JUMPI INVALID JUMPDEST DIV ADD DUP2 PUSH2 0x509D JUMPI INVALID JUMPDEST DIV SWAP1 POP PUSH2 0x507D JUMP JUMPDEST POP PUSH2 0x50B9 JUMP JUMPDEST PUSH1 0x0 DUP3 EQ PUSH2 0x50B8 JUMPI PUSH1 0x1 SWAP1 POP JUMPDEST JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x50D3 DUP2 PUSH1 0x0 SLOAD PUSH2 0x5A11 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH2 0x512B DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x5A11 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT PUSH2 0x51E7 JUMPI DUP2 PUSH2 0x51E9 JUMP JUMPDEST DUP3 JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 GT ISZERO DUP1 ISZERO PUSH2 0x5261 JUMPI POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 GT ISZERO JUMPDEST PUSH2 0x52D3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xD DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x31306B3A204F564552464C4F5700000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x8 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x8 PUSH1 0xE PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0x1C411E9A96E071241C2F21F7726B17AE89E3CAB4C78BE50E062B03A9FFFBBAD1 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 DUP4 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH2 0x5412 DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x4A13 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x546A DUP2 PUSH1 0x0 SLOAD PUSH2 0x4A13 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x19 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x7472616E7366657228616464726573732C75696E743235362900000000000000 DUP2 MSTORE POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x5607 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0x55E4 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x5669 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x566E JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x56AE JUMPI POP PUSH1 0x0 DUP2 MLOAD EQ DUP1 PUSH2 0x56AD JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x569B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP JUMPDEST JUMPDEST PUSH2 0x5720 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x14 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x31306B3A205452414E534645525F4641494C4544000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x5930 JUMPI PUSH2 0x576F PUSH3 0x186A0 PUSH2 0x5758 DUP5 DUP10 PUSH2 0x4FC7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH2 0x575F JUMPI INVALID JUMPDEST DIV DUP8 PUSH2 0x4A13 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP6 POP PUSH1 0x0 PUSH2 0x577D DUP6 DUP6 PUSH2 0x4E8C JUMP JUMPDEST SWAP1 POP PUSH1 0x9 SLOAD PUSH8 0xDE0B6B3A7640000 DUP7 MUL DUP2 PUSH2 0x5794 JUMPI INVALID JUMPDEST DIV SWAP5 POP PUSH1 0xA SLOAD PUSH8 0xDE0B6B3A7640000 DUP6 MUL DUP2 PUSH2 0x57AC JUMPI INVALID JUMPDEST DIV SWAP4 POP PUSH1 0x0 DUP1 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x580E JUMPI DUP6 DUP8 PUSH2 0x5811 JUMP JUMPDEST DUP7 DUP7 JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x5885 JUMPI PUSH1 0xA SLOAD PUSH8 0xDE0B6B3A7640000 DUP11 MUL DUP2 PUSH2 0x587F JUMPI INVALID JUMPDEST DIV PUSH2 0x589C JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH8 0xDE0B6B3A7640000 DUP11 MUL DUP2 PUSH2 0x589A JUMPI INVALID JUMPDEST DIV JUMPDEST SWAP9 POP PUSH1 0x0 PUSH2 0x58AD DUP4 DUP12 ADD DUP6 DUP5 PUSH2 0x5A94 JUMP JUMPDEST DUP3 SUB SWAP1 POP PUSH8 0xDE0B6B3A7640000 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x5917 JUMPI PUSH1 0x9 SLOAD PUSH2 0x591B JUMP JUMPDEST PUSH1 0xA SLOAD JUMPDEST DUP3 MUL DUP2 PUSH2 0x5924 JUMPI INVALID JUMPDEST DIV SWAP5 POP POP POP POP POP PUSH2 0x5A08 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x598F JUMPI DUP5 DUP7 PUSH2 0x5992 JUMP JUMPDEST DUP6 DUP6 JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x59BE PUSH2 0x59AF DUP6 PUSH3 0x186A0 PUSH2 0x4A13 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP10 PUSH2 0x4FC7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP8 POP PUSH2 0x59E8 DUP9 PUSH2 0x59DA PUSH3 0x186A0 DUP6 PUSH2 0x4FC7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x5A11 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x59FB DUP3 DUP11 PUSH2 0x4FC7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH2 0x5A02 JUMPI INVALID JUMPDEST DIV SWAP3 POP POP POP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 DUP5 ADD SWAP2 POP DUP2 LT ISZERO PUSH2 0x5A8E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x14 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x64732D6D6174682D6164642D6F766572666C6F77000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0xFF DUP2 LT ISZERO PUSH2 0x5B5F JUMPI PUSH1 0x0 DUP4 SWAP1 POP PUSH1 0x0 PUSH2 0x5AB6 DUP8 DUP7 PUSH2 0x5B6B JUMP JUMPDEST SWAP1 POP DUP6 DUP2 LT ISZERO PUSH2 0x5AEE JUMPI PUSH1 0x0 PUSH2 0x5ACC DUP9 DUP8 PUSH2 0x5BE2 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP4 DUP10 SUB MUL DUP2 PUSH2 0x5AE0 JUMPI INVALID JUMPDEST DIV SWAP1 POP DUP1 DUP7 ADD SWAP6 POP POP PUSH2 0x5B18 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5AFA DUP9 DUP8 PUSH2 0x5BE2 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP9 DUP5 SUB MUL DUP2 PUSH2 0x5B0E JUMPI INVALID JUMPDEST DIV SWAP1 POP DUP1 DUP7 SUB SWAP6 POP POP JUMPDEST DUP2 DUP6 GT ISZERO PUSH2 0x5B3A JUMPI PUSH1 0x1 DUP3 DUP7 SUB GT PUSH2 0x5B35 JUMPI DUP5 SWAP4 POP POP POP POP PUSH2 0x5B64 JUMP JUMPDEST PUSH2 0x5B50 JUMP JUMPDEST PUSH1 0x1 DUP6 DUP4 SUB GT PUSH2 0x5B4F JUMPI DUP5 SWAP4 POP POP POP POP PUSH2 0x5B64 JUMP JUMPDEST JUMPDEST POP POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x5A9C JUMP JUMPDEST POP DUP2 SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xDE0B6B3A7640000 DUP3 PUSH8 0xDE0B6B3A7640000 DUP6 PUSH8 0xDE0B6B3A7640000 DUP8 DUP9 MUL DUP2 PUSH2 0x5B94 JUMPI INVALID JUMPDEST DIV MUL DUP2 PUSH2 0x5B9D JUMPI INVALID JUMPDEST DIV MUL DUP2 PUSH2 0x5BA6 JUMPI INVALID JUMPDEST DIV PUSH8 0xDE0B6B3A7640000 DUP1 DUP5 PUSH8 0xDE0B6B3A7640000 DUP7 DUP8 MUL DUP2 PUSH2 0x5BC5 JUMPI INVALID JUMPDEST DIV MUL DUP2 PUSH2 0x5BCE JUMPI INVALID JUMPDEST DIV DUP6 MUL DUP2 PUSH2 0x5BD8 JUMPI INVALID JUMPDEST DIV ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xDE0B6B3A7640000 DUP4 PUSH8 0xDE0B6B3A7640000 DUP6 DUP7 MUL DUP2 PUSH2 0x5C01 JUMPI INVALID JUMPDEST DIV MUL DUP2 PUSH2 0x5C0A JUMPI INVALID JUMPDEST DIV PUSH8 0xDE0B6B3A7640000 DUP1 DUP5 DUP6 MUL DUP2 PUSH2 0x5C1F JUMPI INVALID JUMPDEST DIV DUP6 PUSH1 0x3 MUL MUL DUP2 PUSH2 0x5C2C JUMPI INVALID JUMPDEST DIV ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP INVALID BALANCE ADDRESS PUSH12 0x3A206F6E6C7920666163746F PUSH19 0x79277320736574537461626C654F776E657231 ADDRESS PUSH12 0x3A206F6E6C7920666163746F PUSH19 0x79277320666565416D6F756E744F776E657231 ADDRESS PUSH12 0x3A2066656550657263656E74 KECCAK256 PUSH14 0x7573746E27742065786365656420 PUSH21 0x6865206D6178696D756D31306B3A20666565506572 PUSH4 0x656E7420 PUSH14 0x7573746E27742065786365656420 PUSH21 0x6865206D696E696D756D31306B3A20494E53554646 0x49 NUMBER 0x49 GASLIMIT 0x4E SLOAD 0x5F 0x4C 0x49 MLOAD SSTORE 0x49 DIFFICULTY 0x49 SLOAD MSIZE 0x5F 0x4D 0x49 0x4E SLOAD GASLIMIT DIFFICULTY BALANCE ADDRESS PUSH12 0x3A206C697175696469747920 PUSH19 0x6174696F206E6F7420696E697469616C697A65 PUSH5 0x31306B3A20 0x49 0x4E MSTORE8 SSTORE CHAINID CHAINID 0x49 NUMBER 0x49 GASLIMIT 0x4E SLOAD 0x5F 0x4C 0x49 MLOAD SSTORE 0x49 DIFFICULTY 0x49 SLOAD MSIZE 0x5F TIMESTAMP SSTORE MSTORE 0x4E GASLIMIT DIFFICULTY LOG2 PUSH6 0x627A7A723158 KECCAK256 0xEE DUP16 EXTCODECOPY PUSH15 0x2F98867D4967AB639C69F698D9AEBD PUSH20 0x707E24E7CA2713A5FB2EF17E64736F6C63430005 LT STOP ORIGIN ",
							"sourceMap": "263:17838:1:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;263:17838:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9279:397;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;9279:397:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;9279:397:1;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;9279:397:1;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;9279:397:1;;;;;;;;;;;;:::i;:::-;;177:42:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;177:42:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1644:280:1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2225:147:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2225:147:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;527:21:1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;581:23;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;316:24:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2527:399;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2527:399:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1180:32:1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1025:36;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;4068:614;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4068:614:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;608:108:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;274:35;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;465:31;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1143:32:1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4688:272;;;:::i;:::-;;2940:376;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2940:376:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3436:626;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3436:626:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;909:36;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;661:43;;;:::i;:::-;;;;;;;;;;;;;;;;;;;6390:1162;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6390:1162:1;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;9784:413;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;9784:413:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;9784:413:1;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;9784:413:1;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;9784:413:1;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;347:41:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;347:41:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1219:17:1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;723:38:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;723:38:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;7660:1305:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7660:1305:1;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;226:41:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;226:41:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1323:22:1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2380:139:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2380:139:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1397:29:1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;352:48;;;:::i;:::-;;;;;;;;;;;;;;;;;;;16932:344;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;16932:344:1;;;;;;;;;;;;;;;;;;;:::i;:::-;;500:22;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;553:21;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2934:674:0;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;2934:674:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;611:45:1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;395:61:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;395:61:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;15507:261:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;15507:261:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;17752:346;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;17752:346:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;17321:310;;;:::i;:::-;;9279:397;9376:28;;:::i;:::-;9407:217;;;;;;;;9435:6;;;;;;;;;;;9407:217;;;;;;9458:6;;;;;;;;;;;9407:217;;;;;;9485:10;9407:217;;;;9516:10;9407:217;;;;9545:1;9407:217;;;;9565:1;9407:217;;;;9590:1;9407:217;;;;9615:1;9407:217;;;9376:248;;9631:39;9637:10;9649:2;9653:4;;9631:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;9631:39:1;;;;;;9667:1;9631:5;:39::i;:::-;9279:397;;;;;;:::o;177:42:0:-;;;;;;;;;;;;;;;;;;;:::o;1644:280:1:-;1688:17;1707;1726:24;1752;1797:8;;;;;;;;;;;1785:20;;1824:8;;;;;;;;;;;1812:20;;1859:16;;;;;;;;;;;1839:36;;1902:16;;;;;;;;;;;1882:36;;1644:280;;;;:::o;2225:147:0:-;2289:4;2306:36;2315:10;2327:7;2336:5;2306:8;:36::i;:::-;2360:4;2353:11;;2225:147;;;;:::o;527:21:1:-;;;;;;;;;;;;;:::o;581:23::-;;;;;;;;;;;;;:::o;316:24:0:-;;;;:::o;2527:399::-;2605:4;2662:2;2626:9;:15;2636:4;2626:15;;;;;;;;;;;;;;;:27;2642:10;2626:27;;;;;;;;;;;;;;;;:39;2622:238;;2682:14;2699:38;2731:5;2699:9;:15;2709:4;2699:15;;;;;;;;;;;;;;;:27;2715:10;2699:27;;;;;;;;;;;;;;;;:31;;:38;;;;:::i;:::-;2682:55;;2782:9;2752;:15;2762:4;2752:15;;;;;;;;;;;;;;;:27;2768:10;2752:27;;;;;;;;;;;;;;;:39;;;;2826:10;2811:37;;2820:4;2811:37;;;2838:9;2811:37;;;;;;;;;;;;;;;;;;2622:238;;2870:26;2880:4;2886:2;2890:5;2870:9;:26::i;:::-;2914:4;2907:11;;2527:399;;;;;:::o;1180:32:1:-;;;;:::o;1025:36::-;;;;;;;;;;;;;:::o;4068:614::-;1569:1;1557:8;;:13;1549:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1604:1;1593:8;:12;;;;4217:7;;;;;;;;;;;4199:41;;;:43;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4199:43:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4199:43:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4199:43:1;;;;;;;;;;;;;;;;4185:57;;:10;:57;;;4177:104;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4297:17;;;;;;;;;;;4296:18;4288:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4360:10;;;;;;;;;;;4350:20;;:6;:20;;;;4342:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4424:8;;;;;;;;;;;4404:28;;:16;:28;;;:60;;;;;4456:8;;;;;;;;;;;4436:28;;:16;:28;;;4404:60;4396:84;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4489:10;4502:28;4511:8;;;;;;;;;;;4521;;;;;;;;;;;4502;:28::i;:::-;4489:41;;4544:33;4558:10;;;;;;;;;;;4570:6;4544:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4597:6;4584:10;;:19;;;;;;;;;;;;;;;;;;4619:6;:15;;;;;4629:5;4619:15;4618:58;;4675:1;4618:58;;;4638:34;4646:8;;;;;;;;;;;4641:14;;4662:8;;;;;;;;;;;4657:14;;4638:2;:34::i;:::-;4618:58;4610:5;:66;;;;1612:1;1631;1620:8;:12;;;;4068:614;;;:::o;608:108:0:-;650:66;608:108;;;:::o;274:35::-;307:2;274:35;:::o;465:31::-;;;;:::o;1143:32:1:-;;;;:::o;4688:272::-;1569:1;1557:8;;:13;1549:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1604:1;1593:8;:12;;;;4781:7;;;;;;;;;;;4763:32;;;:34;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4763:34:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4763:34:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4763:34:1;;;;;;;;;;;;;;;;4749:48;;:10;:48;;;4741:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4843:17;;;;;;;;;;;4842:18;4834:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4916:4;4896:17;;:24;;;;;;;;;;;;;;;;;;4932:22;;;;;;;;;;1631:1;1620:8;:12;;;;4688:272::o;2940:376::-;3032:7;;;;;;;;;;;3018:21;;:10;:21;;;:37;;;;;3044:11;;;;;;;;;;;3043:12;3018:37;3010:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3115:7;3106:6;;:16;;;;;;;;;;;;;;;;;;3138:7;3129:6;;:16;;;;;;;;;;;;;;;;;;3195:7;3188:24;;;:26;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3188:26:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3188:26:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3188:26:1;;;;;;;;;;;;;;;;3183:32;;3177:2;:38;3154:20;:61;;;;3263:7;3256:24;;;:26;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3256:26:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3256:26:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3256:26:1;;;;;;;;;;;;;;;;3251:32;;3245:2;:38;3222:20;:61;;;;3306:4;3292:11;;:18;;;;;;;;;;;;;;;;;;2940:376;;:::o;3436:626::-;1569:1;1557:8;;:13;1549:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1604:1;1593:8;:12;;;;3576:7;;;;;;;;;;;3558:42;;;:44;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3558:44:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3558:44:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3558:44:1;;;;;;;;;;;;;;;;3544:58;;:10;:58;;;3536:105;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;700:4;3656:19;:38;;;;:80;;;;;700:4;3698:19;:38;;;;3656:80;3648:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3820:1;3798:19;:23;;;:50;;;;;3847:1;3825:19;:23;;;3798:50;3790:105;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3921:19;3902:16;;:38;;;;;;;;;;;;;;;;;;3966:19;3947:16;;:38;;;;;;;;;;;;;;;;;;3997:59;4015:19;4036;3997:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1631:1;1620:8;:12;;;;3436:626;;:::o;909:36::-;;;;;;;;;;;;;:::o;661:43::-;700:4;661:43;:::o;6390:1162::-;6439:14;1569:1;1557:8;;:13;1549:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1604:1;1593:8;:12;;;;6463:17;6482;6505:13;:11;:13::i;:::-;6462:56;;;;;;6545:13;6568:6;;;;;;;;;;;6561:24;;;6594:4;6561:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6561:39:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6561:39:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6561:39:1;;;;;;;;;;;;;;;;6545:55;;6607:13;6630:6;;;;;;;;;;;6623:24;;;6656:4;6623:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6623:39:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6623:39:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6623:39:1;;;;;;;;;;;;;;;;6607:55;;6669:12;6684:23;6697:9;6684:23;;:8;:12;;:23;;;;:::i;:::-;6669:38;;6714:12;6729:23;6742:9;6729:23;;:8;:12;;:23;;;;:::i;:::-;6714:38;;6761:10;6774:30;6783:9;6794;6774:8;:30::i;:::-;6761:43;;6811:17;6831:11;;6811:31;;6952:1;6936:12;:17;6932:334;;;6976:54;393:7;6976:31;6986:20;6998:7;6986;:11;;:20;;;;:::i;:::-;6976:9;:31::i;:::-;:35;;:54;;;;:::i;:::-;6964:66;;7039:36;7053:1;393:7;7039:5;:36::i;:::-;6932:334;;;7172:86;7209:9;7181:37;;:25;7193:12;7181:7;:11;;:25;;;;:::i;:::-;:37;;;;;;7248:9;7220:37;;:25;7232:12;7220:7;:11;;:25;;;;:::i;:::-;:37;;;;;;7172:8;:86::i;:::-;7160:98;;6932:334;7292:1;7280:9;:13;7272:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7339:20;7345:2;7349:9;7339:5;:20::i;:::-;7368:27;7376:8;7386;7368:7;:27::i;:::-;7406:5;7402:53;;;7421:34;7429:8;;;;;;;;;;;7424:14;;7445:8;;;;;;;;;;;7440:14;;7421:2;:34::i;:::-;7413:5;:42;;;;7402:53;7517:10;7512:34;;;7529:7;7538;7512:34;;;;;;;;;;;;;;;;;;;;;;;;1612:1;;;;;;;;1631;1620:8;:12;;;;6390:1162;;;:::o;9784:413::-;9899:28;;:::i;:::-;9930:217;;;;;;;;9958:6;;;;;;;;;;;9930:217;;;;;;9981:6;;;;;;;;;;;9930:217;;;;;;10008:10;9930:217;;;;10039:10;9930:217;;;;10068:1;9930:217;;;;10088:1;9930:217;;;;10113:1;9930:217;;;;10138:1;9930:217;;;9899:248;;10154:37;10160:10;10172:2;10176:4;;10154:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;10154:37:1;;;;;;10182:8;10154:5;:37::i;:::-;9784:413;;;;;;;:::o;347:41:0:-;;;;;;;;;;;;;;;;;:::o;1219:17:1:-;;;;:::o;723:38:0:-;;;;;;;;;;;;;;;;;:::o;7660:1305:1:-;7709:12;7723;1569:1;1557:8;;:13;1549:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1604:1;1593:8;:12;;;;7745:17;7764;7787:13;:11;:13::i;:::-;7744:56;;;;;;7822:15;7840:6;;;;;;;;;;;7822:24;;7868:15;7886:6;;;;;;;;;;;7868:24;;7914:13;7937:7;7930:25;;;7964:4;7930:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7930:40:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7930:40:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7930:40:1;;;;;;;;;;;;;;;;7914:56;;7977:13;8000:7;7993:25;;;8027:4;7993:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7993:40:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7993:40:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7993:40:1;;;;;;;;;;;;;;;;7977:56;;8040:14;8057:9;:24;8075:4;8057:24;;;;;;;;;;;;;;;;8040:41;;8090:10;8103:30;8112:9;8123;8103:8;:30::i;:::-;8090:43;;8140:17;8160:11;;8140:31;;8292:12;8266:23;8280:8;8266:9;:13;;:23;;;;:::i;:::-;:38;;;;;;8256:48;;8395:12;8369:23;8383:8;8369:9;:13;;:23;;;;:::i;:::-;:38;;;;;;8359:48;;8480:1;8470:7;:11;:26;;;;;8495:1;8485:7;:11;8470:26;8462:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8542:31;8556:4;8563:9;8542:5;:31::i;:::-;8580:35;8594:7;8603:2;8607:7;8580:13;:35::i;:::-;8622;8636:7;8645:2;8649:7;8622:13;:35::i;:::-;8682:7;8675:25;;;8709:4;8675:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8675:40:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;8675:40:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;8675:40:1;;;;;;;;;;;;;;;;8664:51;;8740:7;8733:25;;;8767:4;8733:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8733:40:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;8733:40:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;8733:40:1;;;;;;;;;;;;;;;;8722:51;;8782:27;8790:8;8800;8782:7;:27::i;:::-;8820:5;8816:53;;;8835:34;8843:8;;;;;;;;;;;8838:14;;8859:8;;;;;;;;;;;8854:14;;8835:2;:34::i;:::-;8827:5;:42;;;;8816:53;8956:2;8921:38;;8926:10;8921:38;;;8938:7;8947;8921:38;;;;;;;;;;;;;;;;;;;;;;;;1612:1;;;;;;;;;1631;1620:8;:12;;;;7660:1305;;;:::o;226:41:0:-;;;;;;;;;;;;;;;;;;;:::o;1323:22:1:-;;;;;;;;;;;;;:::o;2380:139:0:-;2440:4;2457:32;2467:10;2479:2;2483:5;2457:9;:32::i;:::-;2507:4;2500:11;;2380:139;;;;:::o;1397:29:1:-;;;;;;;;;;;;;:::o;352:48::-;393:7;352:48;:::o;16932:344::-;1569:1;1557:8;;:13;1549:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1604:1;1593:8;:12;;;;16979:15;16997:6;;;;;;;;;;;16979:24;;17030:15;17048:6;;;;;;;;;;;17030:24;;17081:82;17095:7;17104:2;17108:54;17153:8;;;;;;;;;;;17108:54;;17115:7;17108:25;;;17142:4;17108:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;17108:40:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;17108:40:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;17108:40:1;;;;;;;;;;;;;;;;:44;;:54;;;;:::i;:::-;17081:13;:82::i;:::-;17170;17184:7;17193:2;17197:54;17242:8;;;;;;;;;;;17197:54;;17204:7;17197:25;;;17231:4;17197:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;17197:40:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;17197:40:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;17197:40:1;;;;;;;;;;;;;;;;:44;;:54;;;;:::i;:::-;17170:13;:82::i;:::-;17264:6;;;;;;;;;;1612:1;;1631;1620:8;:12;;;;16932:344;:::o;500:22::-;;;;;;;;;;;;;:::o;553:21::-;;;;;;;;;;;;;:::o;2934:674:0:-;3080:15;3068:8;:27;;3060:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3129:14;3234:16;;650:66;3290:15;;3307:5;3314:7;3323:5;3330:6;:13;3337:5;3330:13;;;;;;;;;;;;;;;;:15;;;;;;;;;;;;3347:8;3279:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;3279:77:0;;;3269:88;;;;;;3170:202;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;3170:202:0;;;3146:237;;;;;;3129:254;;3394:24;3421:26;3431:6;3439:1;3442;3445;3421:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3421:26:0;;;;;;;;3394:53;;3494:1;3466:30;;:16;:30;;;;:59;;;;;3520:5;3500:25;;:16;:25;;;3466:59;3458:100;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3569:31;3578:5;3585:7;3594:5;3569:8;:31::i;:::-;2934:674;;;;;;;;;:::o;611:45:1:-;650:6;611:45;:::o;395:61:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;15507:261:1:-;15584:4;15597:17;15628:6;;;;;;;;;;;15617:17;;:7;:17;;;:55;;15656:16;;;;;;;;;;;15617:55;;;15637:16;;;;;;;;;;;15617:55;15597:75;;15686:76;15700:8;15710:7;15724:8;;;;;;;;;;;15719:14;;15740:8;;;;;;;;;;;15735:14;;15751:10;15686:76;;:13;:76::i;:::-;15679:83;;;15507:261;;;;:::o;17752:346::-;1569:1;1557:8;;:13;1549:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1604:1;1593:8;:12;;;;17865:7;;;;;;;;;;;17847:32;;;:34;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;17847:34:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;17847:34:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;17847:34:1;;;;;;;;;;;;;;;;17833:48;;:10;:48;;;17825:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17935:6;;;;;;;;;;;17926:15;;:5;:15;;;;:34;;;;;17954:6;;;;;;;;;;;17945:15;;:5;:15;;;;17926:34;17918:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17990:64;18004:5;18011:2;18022:5;18015:23;;;18047:4;18015:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;18015:38:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;18015:38:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;18015:38:1;;;;;;;;;;;;;;;;17990:13;:64::i;:::-;18082:5;18066:26;;;18089:2;18066:26;;;;;;;;;;;;;;;;;;;;;;1631:1;1620:8;:12;;;;17752:346;;:::o;17321:310::-;1569:1;1557:8;;:13;1549:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1604:1;1593:8;:12;;;;17358:18;17386:6;;;;;;;;;;;17379:24;;;17412:4;17379:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;17379:39:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;17379:39:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;17379:39:1;;;;;;;;;;;;;;;;17358:60;;17425:18;17453:6;;;;;;;;;;;17446:24;;;17479:4;17446:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;17446:39:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;17446:39:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;17446:39:1;;;;;;;;;;;;;;;;17425:60;;17517:1;17500:13;:18;;:40;;;;;17539:1;17522:13;:18;;17500:40;17492:89;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17588:37;17596:13;17611;17588:7;:37::i;:::-;1612:1;;1631;1620:8;:12;;;;17321:310::o;10205:4014::-;1569:1;1557:8;;:13;1549:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1604:1;1593:8;:12;;;;10352:1;10328:10;:21;;;:25;:54;;;;10381:1;10357:10;:21;;;:25;10328:54;10320:98;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10428:17;10447;10466:24;10492;10520:13;:11;:13::i;:::-;10427:106;;;;;;;;10572:9;10548:33;;:10;:21;;;:33;:70;;;;;10609:9;10585:33;;:10;:21;;;:33;10548:70;10540:110;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10684:10;:17;;;10678:23;;:2;:23;;;;:50;;;;;10711:10;:17;;;10705:23;;:2;:23;;;;10678:50;10670:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10826:1;10802:10;:21;;;:25;10798:90;;;10829:59;10843:10;:17;;;10862:2;10866:10;:21;;;10829:13;:59::i;:::-;10798:90;10966:1;10942:10;:21;;;:25;10938:90;;;10969:59;10983:10;:17;;;11002:2;11006:10;:21;;;10969:13;:59::i;:::-;10938:90;11055:1;11041:4;:11;:15;11037:119;;;11075:2;11058:34;;;11093:10;11105;:21;;;11128:10;:21;;;11151:4;11058:98;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;11058:98:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11058:98:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11058:98:1;;;;11037:119;11194:10;:17;;;11187:35;;;11231:4;11187:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11187:50:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11187:50:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11187:50:1;;;;;;;;;;;;;;;;11165:10;:19;;:72;;;;;11275:10;:17;;;11268:35;;;11312:4;11268:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11268:50:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11268:50:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11268:50:1;;;;;;;;;;;;;;;;11246:10;:19;;:72;;;;;11334:14;11385:10;:21;;;11373:9;:33;;;11351:10;:19;;;:55;:119;;11469:1;11351:119;;;11444:10;:21;;;11432:9;:33;;;11409:10;:19;;;:57;11351:119;11334:136;;11477:14;11528:10;:21;;;11516:9;:33;;;11494:10;:19;;;:55;:119;;11612:1;11494:119;;;11587:10;:21;;;11575:9;:33;;;11552:10;:19;;;:57;11494:119;11477:136;;11640:1;11628:9;:13;:30;;;;11657:1;11645:9;:13;11628:30;11620:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;650:6;11729:32;11743:17;11729:32;;:9;:13;;:32;;;;:::i;:::-;:50;;;;;;11702:10;:24;;:77;;;;;650:6;11813:32;11827:17;11813:32;;:9;:13;;:32;;;;:::i;:::-;:50;;;;;;11786:10;:24;;:77;;;;;11924:8;11935:1;11924:12;;11947:26;11996:1;11976:22;;:8;:22;;;;:83;;12058:1;11976:83;;;12019:7;;;;;;;;;;;12001:44;;;12046:8;12001:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12001:54:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12001:54:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12001:54:1;;;;;;;;;;;;;;;;11976:83;11947:112;;12096:1;12072:21;:25;12068:595;;;12126:1;12114:9;:13;12110:267;;;12230:1;650:6;12211:20;12148:59;12189:17;12148:59;;:36;12162:21;12148:9;:13;;:36;;;;:::i;:::-;:40;;:59;;;;:::i;:::-;:84;;;;;;12142:90;;12272:33;12301:3;12272:10;:24;;;:28;;:33;;;;:::i;:::-;12245:10;:24;;:60;;;;;12318:47;12332:10;:17;;;12351:8;12361:3;12318:13;:47::i;:::-;12110:267;12403:1;12391:9;:13;12387:267;;;12507:1;650:6;12488:20;12425:59;12466:17;12425:59;;:36;12439:21;12425:9;:13;;:36;;;;:::i;:::-;:40;;:59;;;;:::i;:::-;:84;;;;;;12419:90;;12549:33;12578:3;12549:10;:24;;;:28;;:33;;;;:::i;:::-;12522:10;:24;;:60;;;;;12595:47;12609:10;:17;;;12628:8;12638:3;12595:13;:47::i;:::-;12387:267;12068:595;12676:10;;;;;;;;;;;12673:797;;;12699:18;12719:13;12754:7;;;;;;;;;;;12736:34;;;:36;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12736:36:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12736:36:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12736:36:1;;;;;;;;;;;;;;;;;;;;;;;;;12698:74;;;;12803:1;12786:19;;:5;:19;;;12783:678;;12836:61;12883:13;12836:42;12856:21;650:6;12836:19;;:42;;;;:::i;:::-;:46;;:61;;;;:::i;:::-;12820:77;;12926:1;12914:9;:13;12910:264;;;13024:1;650:6;13005:20;12950:51;12983:17;12950:51;;:28;12964:13;12950:9;:13;;:28;;;;:::i;:::-;:32;;:51;;;;:::i;:::-;:76;;;;;;12944:82;;13068:33;13097:3;13068:10;:24;;;:28;;:33;;;;:::i;:::-;13041:10;:24;;:60;;;;;13116:44;13130:10;:17;;;13149:5;13156:3;13116:13;:44::i;:::-;12910:264;13202:1;13190:9;:13;13186:264;;;13300:1;650:6;13281:20;13226:51;13259:17;13226:51;;:28;13240:13;13226:9;:13;;:28;;;;:::i;:::-;:32;;:51;;;;:::i;:::-;:76;;;;;;13220:82;;13344:33;13373:3;13344:10;:24;;;:28;;:33;;;;:::i;:::-;13317:10;:24;;:60;;;;;13392:44;13406:10;:17;;;13425:5;13432:3;13392:13;:44::i;:::-;13186:264;12783:678;12673:797;;;13528:1;13516:9;:13;13512:91;;;13560:10;:17;;;13553:35;;;13597:4;13553:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;13553:50:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;13553:50:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;13553:50:1;;;;;;;;;;;;;;;;13531:10;:19;;:72;;;;;13512:91;13628:1;13616:9;:13;13612:91;;;13660:10;:17;;;13653:35;;;13697:4;13653:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;13653:50:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;13653:50:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;13653:50:1;;;;;;;;;;;;;;;;13631:10;:19;;:72;;;;;13612:91;1612:1;;13789:21;13813:49;13837:10;:24;;;13813:10;:19;;;:23;;:49;;;;:::i;:::-;13789:73;;13871:21;13895:49;13919:10;:24;;;13895:10;:19;;;:23;;:49;;;;:::i;:::-;13871:73;;14003:36;14011:9;14006:15;;14028:9;14023:15;;14003:2;:36::i;:::-;13961:38;13964:16;13982;13961:2;:38::i;:::-;:78;;13953:97;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1612:1;;14064:49;14072:10;:19;;;14093:10;:19;;;14064:7;:49::i;:::-;14210:2;14125:88;;14130:10;14125:88;;;14142:9;14153;14164:10;:21;;;14187:10;:21;;;14125:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1612:1;;;;;;1631;1620:8;:12;;;;10205:4014;;;;:::o;1820:169:0:-;1929:5;1901:9;:16;1911:5;1901:16;;;;;;;;;;;;;;;:25;1918:7;1901:25;;;;;;;;;;;;;;;:33;;;;1966:7;1950:31;;1959:5;1950:31;;;1975:5;1950:31;;;;;;;;;;;;;;;;;;1820:169;;;:::o;296:129:8:-;348:6;390:1;384;380;:5;376:9;;;375:16;;367:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;296:129;;;;:::o;1997:220:0:-;2091:26;2111:5;2091:9;:15;2101:4;2091:15;;;;;;;;;;;;;;;;:19;;:26;;;;:::i;:::-;2073:9;:15;2083:4;2073:15;;;;;;;;;;;;;;;:44;;;;2144:24;2162:5;2144:9;:13;2154:2;2144:13;;;;;;;;;;;;;;;;:17;;:24;;;;:::i;:::-;2128:9;:13;2138:2;2128:13;;;;;;;;;;;;;;;:40;;;;2199:2;2184:25;;2193:4;2184:25;;;2203:5;2184:25;;;;;;;;;;;;;;;;;;1997:220;;;:::o;5399:883:1:-;5472:10;5494;;;;;;;;;;;5491:27;;;5513:5;5506:12;;;;5491:27;5528:18;5548:13;5583:7;;;;;;;;;;;5565:34;;;:36;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5565:36:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5565:36:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5565:36:1;;;;;;;;;;;;;;;;;;;;;;;;;5527:74;;;;5633:1;5616:19;;:5;:19;;;;5608:27;;5642:11;5656:5;;5642:19;;5692:5;5688:589;;;5722:1;5712:6;:11;5708:513;;5736:10;5749:47;5759:36;5767:9;5762:15;;5784:9;5779:15;;5759:2;:36::i;:::-;5749:9;:47::i;:::-;5736:60;;5807:14;5824:17;5834:6;5824:9;:17::i;:::-;5807:34;;5864:9;5856:5;:17;5852:360;;;5888:6;5897:51;5944:3;5925:13;5898:24;5918:3;650:6;5898:19;;:24;;;;:::i;:::-;:40;;;;;;5897:46;;:51;;;;:::i;:::-;5888:60;;5961:14;5978:46;6020:3;5978:37;5994:20;6004:9;5994:5;:9;;:20;;;;:::i;:::-;5978:11;;:15;;:37;;;;:::i;:::-;:41;;:46;;;;:::i;:::-;5961:63;;6037:16;6056:36;6073:18;6087:3;6073:9;:13;;:18;;;;:::i;:::-;6056:12;6066:1;6056:5;:9;;:12;;;;:::i;:::-;:16;;:36;;;;:::i;:::-;6037:55;;6105:14;6134:11;6122:9;:23;;;;;;6105:40;;6174:1;6162:9;:13;6158:42;;;6177:23;6183:5;6190:9;6177:5;:23::i;:::-;6158:42;5852:360;;;;;5708:513;;;5688:589;;;6248:1;6238:6;:11;6234:43;;6268:1;6260:5;:9;;;;6234:43;5688:589;5399:883;;;;;;;;:::o;14225:412::-;14290:4;14307:10;;;;;;;;;;;14303:293;;;14328:7;14359:20;;14338:18;14351:4;14338:8;:12;;:18;;;;:::i;:::-;:41;;;;;;14328:51;;14388:7;14419:20;;14398:18;14411:4;14398:8;:12;;:18;;;;:::i;:::-;:41;;;;;;14388:51;;14448:7;14473:4;14459:10;14466:2;14459;:6;;:10;;;;:::i;:::-;14458:19;;;;;;14448:29;;14486:7;14496:42;14533:4;14520:10;14527:2;14520;:6;;:10;;;;:::i;:::-;:17;;;;;;14510:4;14497:10;14504:2;14497;:6;;:10;;;;:::i;:::-;:17;;;;;;14496:23;;:42;;;;:::i;:::-;14486:52;;14568:4;14555:10;14562:2;14555;:6;;:10;;;;:::i;:::-;:17;;;;;;14547:25;;;;;;;;14303:293;14609:22;14622:8;14609;:12;;:22;;;;:::i;:::-;14602:29;;14225:412;;;;;:::o;433:142:8:-;485:6;517:1;512;:6;:30;;;;541:1;536;531;527;:5;523:9;;;522:15;;;;;;:20;512:30;504:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;433:142;;;;:::o;317:303:7:-;362:6;389:1;385;:5;381:232;;;411:1;407:5;;427:6;444:1;440;436;:5;;;;;;:9;427:18;;460:92;471:1;467;:5;460:92;;;497:1;493:5;;535:1;530;526;522;:5;;;;;;:9;521:15;;;;;;517:19;;460:92;;;381:232;;;;578:1;573;:6;569:44;;600:1;596:5;;569:44;381:232;317:303;;;:::o;1394:201:0:-;1467:22;1483:5;1467:11;;:15;;:22;;;;:::i;:::-;1453:11;:36;;;;1516:24;1534:5;1516:9;:13;1526:2;1516:13;;;;;;;;;;;;;;;;:17;;:24;;;;:::i;:::-;1500:9;:13;1510:2;1500:13;;;;;;;;;;;;;;;:40;;;;1577:2;1556:31;;1573:1;1556:31;;;1581:5;1556:31;;;;;;;;;;;;;;;;;;1394:201;;:::o;103:96:7:-;155:6;182:1;178;:5;:13;;190:1;178:13;;;186:1;178:13;174:17;;103:96;;;;:::o;4988:272:1:-;5078:3;5058:24;;:8;:24;;:52;;;;;5106:3;5086:24;;:8;:24;;5058:52;5050:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5156:8;5137;;:28;;;;;;;;;;;;;;;;;;5191:8;5172;;:28;;;;;;;;;;;;;;;;;;5212:42;5225:8;5244;5212:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4988:272;;:::o;1603:209:0:-;1682:26;1702:5;1682:9;:15;1692:4;1682:15;;;;;;;;;;;;;;;;:19;;:26;;;;:::i;:::-;1664:9;:15;1674:4;1664:15;;;;;;;;;;;;;;;:44;;;;1733:22;1749:5;1733:11;;:15;;:22;;;;:::i;:::-;1719:11;:36;;;;1794:1;1771:33;;1780:4;1771:33;;;1798:5;1771:33;;;;;;;;;;;;;;;;;;1603:209;;:::o;1930:271:1:-;2008:12;2022:17;2043:5;:10;;457:34;;;;;;;;;;;;;;;;;447:45;;;;;;2087:2;2091:5;2054:43;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;2054:43:1;;;;;;;38:4:-1;29:7;25:18;67:10;61:17;96:58;199:8;192:4;186;182:15;179:29;167:10;160:49;0:215;;;2054:43:1;2043:55;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;2043:55:1;;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;2007:91:1;;;;2113:7;:57;;;;;2140:1;2125:4;:11;:16;:44;;;;2156:4;2145:24;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2145:24:1;;;;;;;;;;;;;;;;2125:44;2113:57;2105:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1930:271;;;;;:::o;15774:1113::-;15901:4;15918:10;;;;;;;;;;;15914:968;;;15950:56;650:6;15963:24;15976:10;15963:8;:12;;:24;;;;:::i;:::-;:42;;;;;;15950:8;:12;;:56;;;;:::i;:::-;15939:67;;16050:7;16060:24;16063:9;16074;16060:2;:24::i;:::-;16050:34;;16124:20;;16117:4;16105:9;:16;:39;;;;;;16093:51;;16184:20;;16177:4;16165:9;:16;:39;;;;;;16153:51;;16216:13;16231;16259:6;;;;;;;;;;;16248:17;;:7;:17;;;:67;;16294:9;16305;16248:67;;;16269:9;16280;16248:67;16215:100;;;;16346:6;;;;;;;;;;;16335:17;;:7;:17;;;:99;;16414:20;;16407:4;16396:8;:15;:38;;;;;;16335:99;;;16373:20;;16366:4;16355:8;:15;:38;;;;;;16335:99;16324:110;;16443:6;16463:41;16481:8;16470;:19;16491:2;16495:8;16463:6;:41::i;:::-;16452:8;:52;16443:61;;16592:4;16536:6;;;;;;;;;;;16525:17;;:7;:17;;;:63;;16568:20;;16525:63;;;16545:20;;16525:63;16520:1;:69;:76;;;;;;16513:83;;;;;;;;15914:968;16622:13;16637;16665:6;;;;;;;;;;;16654:17;;:7;:17;;;:67;;16700:9;16711;16654:67;;;16675:9;16686;16654:67;16621:100;;;;16741:45;16754:31;16774:10;650:6;16754:19;;:31;;;;:::i;:::-;16741:8;:12;;:45;;;;:::i;:::-;16730:56;;16830:43;16864:8;16830:29;650:6;16830:8;:12;;:29;;;;:::i;:::-;:33;;:43;;;;:::i;:::-;16803:22;16816:8;16803;:12;;:22;;;;:::i;:::-;16802:72;;;;;;16795:79;;;;15774:1113;;;;;;;;:::o;160:128:8:-;212:6;254:1;248;244;:5;240:9;;;239:16;;231:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;160:128;;;;:::o;14643:550:1:-;14708:4;14726:6;14735:1;14726:10;;14721:452;14742:3;14738:1;:7;14721:452;;;14761:11;14775:1;14761:15;;14785:6;14794:9;14797:2;14801:1;14794:2;:9::i;:::-;14785:18;;14820:2;14816:1;:6;14812:176;;;14835:7;14863:9;14866:2;14870:1;14863:2;:9::i;:::-;14856:4;14851:1;14846:2;:6;14845:15;:27;;;;;;14835:37;;14891:2;14887:1;:6;14883:10;;14812:176;;;;14920:7;14948:9;14951:2;14955:1;14948:2;:9::i;:::-;14941:4;14935:2;14931:1;:6;14930:15;:27;;;;;;14920:37;;14976:2;14972:1;:6;14968:10;;14812:176;;15004:6;15000:1;:10;14996:170;;;15041:1;15031:6;15027:1;:10;:15;15023:54;;15064:1;15057:8;;;;;;;15023:54;14996:170;;;15121:1;15116;15107:6;:10;:15;15103:54;;15144:1;15137:8;;;;;;;15103:54;14996:170;14721:452;;14747:3;;;;;;;14721:452;;;;15186:1;15179:8;;14643:550;;;;;;:::o;15199:157::-;15251:4;15346;15342:1;15334:4;15329:2;15322:4;15317:2;15312;:7;:14;;;;;;:19;:26;;;;;;15311:32;:39;;;;;;15304:4;15296;15292:1;15285:4;15281:1;15277;:5;:12;;;;;;:16;:23;;;;;;15271:2;:30;:37;;;;;;:79;15264:86;;15199:157;;;;:::o;15362:139::-;15414:4;15490;15485:2;15478:4;15473:2;15468;:7;:14;;;;;;:19;:26;;;;;;15460:4;15452;15448:1;15444;:5;:12;;;;;;15438:2;15434:1;:6;:23;:30;;;;;;:61;15427:68;;15362:139;;;;:::o;263:17838::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "4805600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DOMAIN_SEPARATOR()": "1117",
								"FEE_DENOMINATOR()": "249",
								"MAX_FEE_PERCENT()": "338",
								"MINIMUM_LIQUIDITY()": "250",
								"PERMIT_TYPEHASH()": "279",
								"allowance(address,address)": "1333",
								"approve(address,uint256)": "22521",
								"balanceOf(address)": "1259",
								"burn(address)": "infinite",
								"decimals()": "307",
								"drainWrongToken(address,address)": "infinite",
								"factory()": "1142",
								"getAmountOut(uint256,address)": "infinite",
								"getReserves()": "3948",
								"initialize(address,address)": "infinite",
								"initialized()": "1149",
								"kLast()": "1117",
								"mint(address)": "infinite",
								"name()": "infinite",
								"nonces(address)": "1303",
								"pairTypeImmutable()": "1236",
								"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "infinite",
								"precisionMultiplier0()": "1139",
								"precisionMultiplier1()": "1117",
								"setFeePercent(uint16,uint16)": "infinite",
								"setPairTypeImmutable()": "infinite",
								"setStableSwap(bool,uint112,uint112)": "infinite",
								"skim(address)": "infinite",
								"stableSwap()": "1142",
								"swap(uint256,uint256,address,bytes)": "infinite",
								"swap(uint256,uint256,address,bytes,address)": "infinite",
								"symbol()": "infinite",
								"sync()": "infinite",
								"token0()": "1188",
								"token0FeePercent()": "1214",
								"token1()": "1164",
								"token1FeePercent()": "1237",
								"totalSupply()": "1073",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_d(uint256,uint256)": "176",
								"_f(uint256,uint256)": "234",
								"_getAmountOut(uint256,address,uint256,uint256,uint256)": "infinite",
								"_get_y(uint256,uint256,uint256)": "infinite",
								"_k(uint256,uint256)": "infinite",
								"_mintFee(uint112,uint112)": "infinite",
								"_safeTransfer(address,address,uint256)": "infinite",
								"_swap(struct TenkStablePair.TokensData memory,address,bytes memory,address)": "infinite",
								"_update(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 263,
									"end": 18101,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 263,
									"end": 18101,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 263,
									"end": 18101,
									"name": "MSTORE"
								},
								{
									"begin": 942,
									"end": 945,
									"name": "PUSH",
									"value": "12C"
								},
								{
									"begin": 909,
									"end": 945,
									"name": "PUSH",
									"value": "8"
								},
								{
									"begin": 909,
									"end": 945,
									"name": "PUSH",
									"value": "1C"
								},
								{
									"begin": 909,
									"end": 945,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 909,
									"end": 945,
									"name": "EXP"
								},
								{
									"begin": 909,
									"end": 945,
									"name": "DUP2"
								},
								{
									"begin": 909,
									"end": 945,
									"name": "SLOAD"
								},
								{
									"begin": 909,
									"end": 945,
									"name": "DUP2"
								},
								{
									"begin": 909,
									"end": 945,
									"name": "PUSH",
									"value": "FFFF"
								},
								{
									"begin": 909,
									"end": 945,
									"name": "MUL"
								},
								{
									"begin": 909,
									"end": 945,
									"name": "NOT"
								},
								{
									"begin": 909,
									"end": 945,
									"name": "AND"
								},
								{
									"begin": 909,
									"end": 945,
									"name": "SWAP1"
								},
								{
									"begin": 909,
									"end": 945,
									"name": "DUP4"
								},
								{
									"begin": 909,
									"end": 945,
									"name": "PUSH",
									"value": "FFFF"
								},
								{
									"begin": 909,
									"end": 945,
									"name": "AND"
								},
								{
									"begin": 909,
									"end": 945,
									"name": "MUL"
								},
								{
									"begin": 909,
									"end": 945,
									"name": "OR"
								},
								{
									"begin": 909,
									"end": 945,
									"name": "SWAP1"
								},
								{
									"begin": 909,
									"end": 945,
									"name": "SSTORE"
								},
								{
									"begin": 909,
									"end": 945,
									"name": "POP"
								},
								{
									"begin": 1058,
									"end": 1061,
									"name": "PUSH",
									"value": "12C"
								},
								{
									"begin": 1025,
									"end": 1061,
									"name": "PUSH",
									"value": "8"
								},
								{
									"begin": 1025,
									"end": 1061,
									"name": "PUSH",
									"value": "1E"
								},
								{
									"begin": 1025,
									"end": 1061,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 1025,
									"end": 1061,
									"name": "EXP"
								},
								{
									"begin": 1025,
									"end": 1061,
									"name": "DUP2"
								},
								{
									"begin": 1025,
									"end": 1061,
									"name": "SLOAD"
								},
								{
									"begin": 1025,
									"end": 1061,
									"name": "DUP2"
								},
								{
									"begin": 1025,
									"end": 1061,
									"name": "PUSH",
									"value": "FFFF"
								},
								{
									"begin": 1025,
									"end": 1061,
									"name": "MUL"
								},
								{
									"begin": 1025,
									"end": 1061,
									"name": "NOT"
								},
								{
									"begin": 1025,
									"end": 1061,
									"name": "AND"
								},
								{
									"begin": 1025,
									"end": 1061,
									"name": "SWAP1"
								},
								{
									"begin": 1025,
									"end": 1061,
									"name": "DUP4"
								},
								{
									"begin": 1025,
									"end": 1061,
									"name": "PUSH",
									"value": "FFFF"
								},
								{
									"begin": 1025,
									"end": 1061,
									"name": "AND"
								},
								{
									"begin": 1025,
									"end": 1061,
									"name": "MUL"
								},
								{
									"begin": 1025,
									"end": 1061,
									"name": "OR"
								},
								{
									"begin": 1025,
									"end": 1061,
									"name": "SWAP1"
								},
								{
									"begin": 1025,
									"end": 1061,
									"name": "SSTORE"
								},
								{
									"begin": 1025,
									"end": 1061,
									"name": "POP"
								},
								{
									"begin": 1520,
									"end": 1521,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 1496,
									"end": 1521,
									"name": "PUSH",
									"value": "D"
								},
								{
									"begin": 1496,
									"end": 1521,
									"name": "SSTORE"
								},
								{
									"begin": 2825,
									"end": 2879,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 2825,
									"end": 2879,
									"name": "POP"
								},
								{
									"begin": 960,
									"end": 972,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1018,
									"end": 1025,
									"name": "CHAINID"
								},
								{
									"begin": 1007,
									"end": 1025,
									"name": "SWAP1"
								},
								{
									"begin": 1007,
									"end": 1025,
									"name": "POP"
								},
								{
									"begin": 1118,
									"end": 1213,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1118,
									"end": 1213,
									"name": "MLOAD"
								},
								{
									"begin": 1118,
									"end": 1213,
									"name": "DUP1"
								},
								{
									"begin": 1118,
									"end": 1213,
									"name": "DUP1"
								},
								{
									"begin": 1118,
									"end": 1213,
									"name": "PUSH data",
									"value": "8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F"
								},
								{
									"begin": 1118,
									"end": 1213,
									"name": "PUSH",
									"value": "52"
								},
								{
									"begin": 1118,
									"end": 1213,
									"name": "SWAP2"
								},
								{
									"begin": 1118,
									"end": 1213,
									"name": "CODECOPY"
								},
								{
									"begin": 1118,
									"end": 1213,
									"name": "PUSH",
									"value": "52"
								},
								{
									"begin": 1118,
									"end": 1213,
									"name": "ADD"
								},
								{
									"begin": 1118,
									"end": 1213,
									"name": "SWAP1"
								},
								{
									"begin": 1118,
									"end": 1213,
									"name": "POP"
								},
								{
									"begin": 1118,
									"end": 1213,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1118,
									"end": 1213,
									"name": "MLOAD"
								},
								{
									"begin": 1118,
									"end": 1213,
									"name": "DUP1"
								},
								{
									"begin": 1118,
									"end": 1213,
									"name": "SWAP2"
								},
								{
									"begin": 1118,
									"end": 1213,
									"name": "SUB"
								},
								{
									"begin": 1118,
									"end": 1213,
									"name": "SWAP1"
								},
								{
									"begin": 1118,
									"end": 1213,
									"name": "KECCAK256"
								},
								{
									"begin": 1248,
									"end": 1252,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1248,
									"end": 1252,
									"name": "MLOAD"
								},
								{
									"begin": 1248,
									"end": 1252,
									"name": "DUP1"
								},
								{
									"begin": 1248,
									"end": 1252,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1248,
									"end": 1252,
									"name": "ADD"
								},
								{
									"begin": 1248,
									"end": 1252,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1248,
									"end": 1252,
									"name": "MSTORE"
								},
								{
									"begin": 1248,
									"end": 1252,
									"name": "DUP1"
								},
								{
									"begin": 1248,
									"end": 1252,
									"name": "PUSH",
									"value": "A"
								},
								{
									"begin": 1248,
									"end": 1252,
									"name": "DUP2"
								},
								{
									"begin": 1248,
									"end": 1252,
									"name": "MSTORE"
								},
								{
									"begin": 1248,
									"end": 1252,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1248,
									"end": 1252,
									"name": "ADD"
								},
								{
									"begin": 1248,
									"end": 1252,
									"name": "PUSH",
									"value": "43616D656C6F74204C5000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1248,
									"end": 1252,
									"name": "DUP2"
								},
								{
									"begin": 1248,
									"end": 1252,
									"name": "MSTORE"
								},
								{
									"begin": 1248,
									"end": 1252,
									"name": "POP"
								},
								{
									"begin": 1232,
									"end": 1254,
									"name": "DUP1"
								},
								{
									"begin": 1232,
									"end": 1254,
									"name": "MLOAD"
								},
								{
									"begin": 1232,
									"end": 1254,
									"name": "SWAP1"
								},
								{
									"begin": 1232,
									"end": 1254,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1232,
									"end": 1254,
									"name": "ADD"
								},
								{
									"begin": 1232,
									"end": 1254,
									"name": "KECCAK256"
								},
								{
									"begin": 1283,
									"end": 1293,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1283,
									"end": 1293,
									"name": "MLOAD"
								},
								{
									"begin": 1283,
									"end": 1293,
									"name": "DUP1"
								},
								{
									"begin": 1283,
									"end": 1293,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1283,
									"end": 1293,
									"name": "ADD"
								},
								{
									"begin": 1283,
									"end": 1293,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1283,
									"end": 1293,
									"name": "MSTORE"
								},
								{
									"begin": 1283,
									"end": 1293,
									"name": "DUP1"
								},
								{
									"begin": 1283,
									"end": 1293,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 1283,
									"end": 1293,
									"name": "DUP2"
								},
								{
									"begin": 1283,
									"end": 1293,
									"name": "MSTORE"
								},
								{
									"begin": 1283,
									"end": 1293,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1283,
									"end": 1293,
									"name": "ADD"
								},
								{
									"begin": 1283,
									"end": 1293,
									"name": "PUSH",
									"value": "3100000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1283,
									"end": 1293,
									"name": "DUP2"
								},
								{
									"begin": 1283,
									"end": 1293,
									"name": "MSTORE"
								},
								{
									"begin": 1283,
									"end": 1293,
									"name": "POP"
								},
								{
									"begin": 1273,
									"end": 1294,
									"name": "DUP1"
								},
								{
									"begin": 1273,
									"end": 1294,
									"name": "MLOAD"
								},
								{
									"begin": 1273,
									"end": 1294,
									"name": "SWAP1"
								},
								{
									"begin": 1273,
									"end": 1294,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1273,
									"end": 1294,
									"name": "ADD"
								},
								{
									"begin": 1273,
									"end": 1294,
									"name": "KECCAK256"
								},
								{
									"begin": 1313,
									"end": 1320,
									"name": "DUP4"
								},
								{
									"begin": 1347,
									"end": 1351,
									"name": "ADDRESS"
								},
								{
									"begin": 1089,
									"end": 1367,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1089,
									"end": 1367,
									"name": "MLOAD"
								},
								{
									"begin": 1089,
									"end": 1367,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1089,
									"end": 1367,
									"name": "ADD"
								},
								{
									"begin": 1089,
									"end": 1367,
									"name": "DUP1"
								},
								{
									"begin": 1089,
									"end": 1367,
									"name": "DUP7"
								},
								{
									"begin": 1089,
									"end": 1367,
									"name": "DUP2"
								},
								{
									"begin": 1089,
									"end": 1367,
									"name": "MSTORE"
								},
								{
									"begin": 1089,
									"end": 1367,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1089,
									"end": 1367,
									"name": "ADD"
								},
								{
									"begin": 1089,
									"end": 1367,
									"name": "DUP6"
								},
								{
									"begin": 1089,
									"end": 1367,
									"name": "DUP2"
								},
								{
									"begin": 1089,
									"end": 1367,
									"name": "MSTORE"
								},
								{
									"begin": 1089,
									"end": 1367,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1089,
									"end": 1367,
									"name": "ADD"
								},
								{
									"begin": 1089,
									"end": 1367,
									"name": "DUP5"
								},
								{
									"begin": 1089,
									"end": 1367,
									"name": "DUP2"
								},
								{
									"begin": 1089,
									"end": 1367,
									"name": "MSTORE"
								},
								{
									"begin": 1089,
									"end": 1367,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1089,
									"end": 1367,
									"name": "ADD"
								},
								{
									"begin": 1089,
									"end": 1367,
									"name": "DUP4"
								},
								{
									"begin": 1089,
									"end": 1367,
									"name": "DUP2"
								},
								{
									"begin": 1089,
									"end": 1367,
									"name": "MSTORE"
								},
								{
									"begin": 1089,
									"end": 1367,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1089,
									"end": 1367,
									"name": "ADD"
								},
								{
									"begin": 1089,
									"end": 1367,
									"name": "DUP3"
								},
								{
									"begin": 1089,
									"end": 1367,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1089,
									"end": 1367,
									"name": "AND"
								},
								{
									"begin": 1089,
									"end": 1367,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1089,
									"end": 1367,
									"name": "AND"
								},
								{
									"begin": 1089,
									"end": 1367,
									"name": "DUP2"
								},
								{
									"begin": 1089,
									"end": 1367,
									"name": "MSTORE"
								},
								{
									"begin": 1089,
									"end": 1367,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1089,
									"end": 1367,
									"name": "ADD"
								},
								{
									"begin": 1089,
									"end": 1367,
									"name": "SWAP6"
								},
								{
									"begin": 1089,
									"end": 1367,
									"name": "POP"
								},
								{
									"begin": 1089,
									"end": 1367,
									"name": "POP"
								},
								{
									"begin": 1089,
									"end": 1367,
									"name": "POP"
								},
								{
									"begin": 1089,
									"end": 1367,
									"name": "POP"
								},
								{
									"begin": 1089,
									"end": 1367,
									"name": "POP"
								},
								{
									"begin": 1089,
									"end": 1367,
									"name": "POP"
								},
								{
									"begin": 1089,
									"end": 1367,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1089,
									"end": 1367,
									"name": "MLOAD"
								},
								{
									"begin": 49,
									"end": 53,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 39,
									"end": 46,
									"name": "DUP2"
								},
								{
									"begin": 30,
									"end": 37,
									"name": "DUP4"
								},
								{
									"begin": 26,
									"end": 47,
									"name": "SUB"
								},
								{
									"begin": 22,
									"end": 54,
									"name": "SUB"
								},
								{
									"begin": 13,
									"end": 20,
									"name": "DUP2"
								},
								{
									"begin": 6,
									"end": 55,
									"name": "MSTORE"
								},
								{
									"begin": 1089,
									"end": 1367,
									"name": "SWAP1"
								},
								{
									"begin": 1089,
									"end": 1367,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1089,
									"end": 1367,
									"name": "MSTORE"
								},
								{
									"begin": 1065,
									"end": 1378,
									"name": "DUP1"
								},
								{
									"begin": 1065,
									"end": 1378,
									"name": "MLOAD"
								},
								{
									"begin": 1065,
									"end": 1378,
									"name": "SWAP1"
								},
								{
									"begin": 1065,
									"end": 1378,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1065,
									"end": 1378,
									"name": "ADD"
								},
								{
									"begin": 1065,
									"end": 1378,
									"name": "KECCAK256"
								},
								{
									"begin": 1046,
									"end": 1062,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 1046,
									"end": 1378,
									"name": "DUP2"
								},
								{
									"begin": 1046,
									"end": 1378,
									"name": "SWAP1"
								},
								{
									"begin": 1046,
									"end": 1378,
									"name": "SSTORE"
								},
								{
									"begin": 1046,
									"end": 1378,
									"name": "POP"
								},
								{
									"begin": 928,
									"end": 1386,
									"name": "POP"
								},
								{
									"begin": 2863,
									"end": 2873,
									"name": "CALLER"
								},
								{
									"begin": 2853,
									"end": 2860,
									"name": "PUSH",
									"value": "5"
								},
								{
									"begin": 2853,
									"end": 2860,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 2853,
									"end": 2873,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 2853,
									"end": 2873,
									"name": "EXP"
								},
								{
									"begin": 2853,
									"end": 2873,
									"name": "DUP2"
								},
								{
									"begin": 2853,
									"end": 2873,
									"name": "SLOAD"
								},
								{
									"begin": 2853,
									"end": 2873,
									"name": "DUP2"
								},
								{
									"begin": 2853,
									"end": 2873,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2853,
									"end": 2873,
									"name": "MUL"
								},
								{
									"begin": 2853,
									"end": 2873,
									"name": "NOT"
								},
								{
									"begin": 2853,
									"end": 2873,
									"name": "AND"
								},
								{
									"begin": 2853,
									"end": 2873,
									"name": "SWAP1"
								},
								{
									"begin": 2853,
									"end": 2873,
									"name": "DUP4"
								},
								{
									"begin": 2853,
									"end": 2873,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2853,
									"end": 2873,
									"name": "AND"
								},
								{
									"begin": 2853,
									"end": 2873,
									"name": "MUL"
								},
								{
									"begin": 2853,
									"end": 2873,
									"name": "OR"
								},
								{
									"begin": 2853,
									"end": 2873,
									"name": "SWAP1"
								},
								{
									"begin": 2853,
									"end": 2873,
									"name": "SSTORE"
								},
								{
									"begin": 2853,
									"end": 2873,
									"name": "POP"
								},
								{
									"begin": 263,
									"end": 18101,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 263,
									"end": 18101,
									"name": "DUP1"
								},
								{
									"begin": 263,
									"end": 18101,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 263,
									"end": 18101,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 263,
									"end": 18101,
									"name": "CODECOPY"
								},
								{
									"begin": 263,
									"end": 18101,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 263,
									"end": 18101,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a72315820ee8f3c6e2f98867d4967ab639c69f698d9aebd73707e24e7ca2713a5fb2ef17e64736f6c63430005100032",
									".code": [
										{
											"begin": 263,
											"end": 18101,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "MSTORE"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "POP"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "LT"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "JUMPI"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "SHR"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "DUP1"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "PUSH",
											"value": "6A627842"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "GT"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "JUMPI"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "DUP1"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "PUSH",
											"value": "BA9A7A56"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "GT"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "PUSH [tag]",
											"value": "44"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "JUMPI"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "DUP1"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "PUSH",
											"value": "D73792A9"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "GT"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "PUSH [tag]",
											"value": "45"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "JUMPI"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "DUP1"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "PUSH",
											"value": "D73792A9"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "EQ"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "JUMPI"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "DUP1"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "PUSH",
											"value": "DD62ED3E"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "EQ"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "JUMPI"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "DUP1"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "PUSH",
											"value": "F140A35A"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "EQ"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "PUSH [tag]",
											"value": "40"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "JUMPI"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "DUP1"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "PUSH",
											"value": "F39AC11F"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "EQ"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "JUMPI"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "DUP1"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "PUSH",
											"value": "FFF6CAE9"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "EQ"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "JUMPI"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "JUMP"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "tag",
											"value": "45"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "JUMPDEST"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "DUP1"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "PUSH",
											"value": "BA9A7A56"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "EQ"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "JUMPI"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "DUP1"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "PUSH",
											"value": "BC25CF77"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "EQ"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "JUMPI"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "DUP1"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "PUSH",
											"value": "C45A0155"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "EQ"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "JUMPI"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "DUP1"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "PUSH",
											"value": "D21220A7"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "EQ"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "JUMPI"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "DUP1"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "PUSH",
											"value": "D505ACCF"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "EQ"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "JUMPI"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "JUMP"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "tag",
											"value": "44"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "JUMPDEST"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "DUP1"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "PUSH",
											"value": "89AFCB44"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "GT"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "PUSH [tag]",
											"value": "46"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "JUMPI"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "DUP1"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "PUSH",
											"value": "89AFCB44"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "EQ"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "JUMPI"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "DUP1"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "PUSH",
											"value": "95D89B41"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "EQ"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "JUMPI"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "DUP1"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "PUSH",
											"value": "9E548B7F"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "EQ"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "JUMPI"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "DUP1"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "PUSH",
											"value": "A9059CBB"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "EQ"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "JUMPI"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "DUP1"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "PUSH",
											"value": "B6200B07"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "EQ"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "JUMPI"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "JUMP"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "tag",
											"value": "46"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "JUMPDEST"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "DUP1"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "PUSH",
											"value": "6A627842"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "EQ"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "JUMPI"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "DUP1"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "PUSH",
											"value": "6E1FDD7F"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "EQ"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "JUMPI"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "DUP1"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "EQ"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "JUMPI"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "DUP1"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "PUSH",
											"value": "7464FC3D"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "EQ"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "JUMPI"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "DUP1"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "PUSH",
											"value": "7ECEBE00"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "EQ"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "JUMPI"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "JUMP"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "tag",
											"value": "43"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "JUMPDEST"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "DUP1"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "PUSH",
											"value": "3029E5D4"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "GT"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "PUSH [tag]",
											"value": "47"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "JUMPI"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "DUP1"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "PUSH",
											"value": "3BA17077"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "GT"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "JUMPI"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "DUP1"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "PUSH",
											"value": "3BA17077"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "EQ"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "JUMPI"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "DUP1"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "PUSH",
											"value": "485CC955"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "EQ"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "JUMPI"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "DUP1"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "PUSH",
											"value": "48E5D260"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "EQ"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "JUMPI"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "DUP1"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "PUSH",
											"value": "62ECEC03"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "EQ"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "JUMPI"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "DUP1"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "PUSH",
											"value": "67D81740"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "EQ"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "JUMPI"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "JUMP"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "tag",
											"value": "48"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "JUMPDEST"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "DUP1"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "PUSH",
											"value": "3029E5D4"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "EQ"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "JUMPI"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "DUP1"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "PUSH",
											"value": "30ADF81F"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "EQ"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "JUMPI"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "DUP1"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "PUSH",
											"value": "313CE567"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "EQ"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "JUMPI"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "DUP1"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "PUSH",
											"value": "3644E515"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "EQ"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "JUMPI"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "DUP1"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "PUSH",
											"value": "3B9F1DC0"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "EQ"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "JUMPI"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "JUMP"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "tag",
											"value": "47"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "JUMPDEST"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "DUP1"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "PUSH",
											"value": "158EF93E"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "GT"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "PUSH [tag]",
											"value": "49"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "JUMPI"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "DUP1"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "PUSH",
											"value": "158EF93E"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "EQ"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "JUMPI"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "DUP1"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "PUSH",
											"value": "18160DDD"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "EQ"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "JUMPI"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "DUP1"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "PUSH",
											"value": "23B872DD"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "EQ"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "JUMPI"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "DUP1"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "PUSH",
											"value": "288E5D02"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "EQ"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "JUMPI"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "DUP1"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "PUSH",
											"value": "2FCD1692"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "EQ"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "JUMPI"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "JUMP"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "tag",
											"value": "49"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "JUMPDEST"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "DUP1"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "PUSH",
											"value": "22C0D9F"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "EQ"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "JUMPI"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "DUP1"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "PUSH",
											"value": "6FDDE03"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "EQ"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "JUMPI"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "DUP1"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "PUSH",
											"value": "902F1AC"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "EQ"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "JUMPI"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "DUP1"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "PUSH",
											"value": "95EA7B3"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "EQ"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "JUMPI"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "DUP1"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "PUSH",
											"value": "DFE1681"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "EQ"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "JUMPI"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "JUMPDEST"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "DUP1"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "REVERT"
										},
										{
											"begin": 9279,
											"end": 9676,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 9279,
											"end": 9676,
											"name": "JUMPDEST"
										},
										{
											"begin": 9279,
											"end": 9676,
											"name": "PUSH [tag]",
											"value": "50"
										},
										{
											"begin": 9279,
											"end": 9676,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 9279,
											"end": 9676,
											"name": "DUP1"
										},
										{
											"begin": 9279,
											"end": 9676,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 9279,
											"end": 9676,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 16,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 17,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "51"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 9279,
											"end": 9676,
											"name": "DUP2"
										},
										{
											"begin": 9279,
											"end": 9676,
											"name": "ADD"
										},
										{
											"begin": 9279,
											"end": 9676,
											"name": "SWAP1"
										},
										{
											"begin": 9279,
											"end": 9676,
											"name": "DUP1"
										},
										{
											"begin": 9279,
											"end": 9676,
											"name": "DUP1"
										},
										{
											"begin": 9279,
											"end": 9676,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 9279,
											"end": 9676,
											"name": "SWAP1"
										},
										{
											"begin": 9279,
											"end": 9676,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9279,
											"end": 9676,
											"name": "ADD"
										},
										{
											"begin": 9279,
											"end": 9676,
											"name": "SWAP1"
										},
										{
											"begin": 9279,
											"end": 9676,
											"name": "SWAP3"
										},
										{
											"begin": 9279,
											"end": 9676,
											"name": "SWAP2"
										},
										{
											"begin": 9279,
											"end": 9676,
											"name": "SWAP1"
										},
										{
											"begin": 9279,
											"end": 9676,
											"name": "DUP1"
										},
										{
											"begin": 9279,
											"end": 9676,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 9279,
											"end": 9676,
											"name": "SWAP1"
										},
										{
											"begin": 9279,
											"end": 9676,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9279,
											"end": 9676,
											"name": "ADD"
										},
										{
											"begin": 9279,
											"end": 9676,
											"name": "SWAP1"
										},
										{
											"begin": 9279,
											"end": 9676,
											"name": "SWAP3"
										},
										{
											"begin": 9279,
											"end": 9676,
											"name": "SWAP2"
										},
										{
											"begin": 9279,
											"end": 9676,
											"name": "SWAP1"
										},
										{
											"begin": 9279,
											"end": 9676,
											"name": "DUP1"
										},
										{
											"begin": 9279,
											"end": 9676,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 9279,
											"end": 9676,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9279,
											"end": 9676,
											"name": "AND"
										},
										{
											"begin": 9279,
											"end": 9676,
											"name": "SWAP1"
										},
										{
											"begin": 9279,
											"end": 9676,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9279,
											"end": 9676,
											"name": "ADD"
										},
										{
											"begin": 9279,
											"end": 9676,
											"name": "SWAP1"
										},
										{
											"begin": 9279,
											"end": 9676,
											"name": "SWAP3"
										},
										{
											"begin": 9279,
											"end": 9676,
											"name": "SWAP2"
										},
										{
											"begin": 9279,
											"end": 9676,
											"name": "SWAP1"
										},
										{
											"begin": 9279,
											"end": 9676,
											"name": "DUP1"
										},
										{
											"begin": 9279,
											"end": 9676,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 9279,
											"end": 9676,
											"name": "SWAP1"
										},
										{
											"begin": 9279,
											"end": 9676,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9279,
											"end": 9676,
											"name": "ADD"
										},
										{
											"begin": 9279,
											"end": 9676,
											"name": "SWAP1"
										},
										{
											"begin": 21,
											"end": 32,
											"name": "PUSH",
											"value": "100000000"
										},
										{
											"begin": 8,
											"end": 19,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 33,
											"name": "GT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "52"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 46,
											"end": 47,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 43,
											"end": 44,
											"name": "DUP1"
										},
										{
											"begin": 36,
											"end": 48,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "52"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 9279,
											"end": 9676,
											"name": "DUP3"
										},
										{
											"begin": 9279,
											"end": 9676,
											"name": "ADD"
										},
										{
											"begin": 35,
											"end": 44,
											"name": "DUP4"
										},
										{
											"begin": 28,
											"end": 32,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "DUP3"
										},
										{
											"begin": 8,
											"end": 33,
											"name": "ADD"
										},
										{
											"begin": 5,
											"end": 45,
											"name": "GT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "53"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 58,
											"end": 59,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 55,
											"end": 56,
											"name": "DUP1"
										},
										{
											"begin": 48,
											"end": 60,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "53"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 9279,
											"end": 9676,
											"name": "DUP1"
										},
										{
											"begin": 9279,
											"end": 9676,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 9279,
											"end": 9676,
											"name": "SWAP1"
										},
										{
											"begin": 9279,
											"end": 9676,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9279,
											"end": 9676,
											"name": "ADD"
										},
										{
											"begin": 9279,
											"end": 9676,
											"name": "SWAP2"
										},
										{
											"begin": 100,
											"end": 109,
											"name": "DUP5"
										},
										{
											"begin": 95,
											"end": 96,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 81,
											"end": 93,
											"name": "DUP4"
										},
										{
											"begin": 77,
											"end": 97,
											"name": "MUL"
										},
										{
											"begin": 67,
											"end": 75,
											"name": "DUP5"
										},
										{
											"begin": 63,
											"end": 98,
											"name": "ADD"
										},
										{
											"begin": 60,
											"end": 110,
											"name": "GT"
										},
										{
											"begin": 39,
											"end": 50,
											"name": "PUSH",
											"value": "100000000"
										},
										{
											"begin": 25,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 22,
											"end": 51,
											"name": "GT"
										},
										{
											"begin": 11,
											"end": 118,
											"name": "OR"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPI"
										},
										{
											"begin": 131,
											"end": 132,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 128,
											"end": 129,
											"name": "DUP1"
										},
										{
											"begin": 121,
											"end": 133,
											"name": "REVERT"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "tag",
											"value": "54"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPDEST"
										},
										{
											"begin": 9279,
											"end": 9676,
											"name": "SWAP1"
										},
										{
											"begin": 9279,
											"end": 9676,
											"name": "SWAP2"
										},
										{
											"begin": 9279,
											"end": 9676,
											"name": "SWAP3"
										},
										{
											"begin": 9279,
											"end": 9676,
											"name": "SWAP4"
										},
										{
											"begin": 9279,
											"end": 9676,
											"name": "SWAP2"
										},
										{
											"begin": 9279,
											"end": 9676,
											"name": "SWAP3"
										},
										{
											"begin": 9279,
											"end": 9676,
											"name": "SWAP4"
										},
										{
											"begin": 9279,
											"end": 9676,
											"name": "SWAP1"
										},
										{
											"begin": 9279,
											"end": 9676,
											"name": "POP"
										},
										{
											"begin": 9279,
											"end": 9676,
											"name": "POP"
										},
										{
											"begin": 9279,
											"end": 9676,
											"name": "POP"
										},
										{
											"begin": 9279,
											"end": 9676,
											"name": "PUSH [tag]",
											"value": "55"
										},
										{
											"begin": 9279,
											"end": 9676,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 9279,
											"end": 9676,
											"name": "tag",
											"value": "50"
										},
										{
											"begin": 9279,
											"end": 9676,
											"name": "JUMPDEST"
										},
										{
											"begin": 9279,
											"end": 9676,
											"name": "STOP"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "JUMPDEST"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "PUSH [tag]",
											"value": "56"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "PUSH [tag]",
											"value": "57"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "tag",
											"value": "56"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "JUMPDEST"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "MLOAD"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "DUP1"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "DUP1"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "ADD"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "DUP3"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "DUP2"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "SUB"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "DUP3"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "MSTORE"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "DUP4"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "DUP2"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "DUP2"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "MLOAD"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "DUP2"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "MSTORE"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "ADD"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "SWAP2"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "POP"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "DUP1"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "MLOAD"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "SWAP1"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "ADD"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "SWAP1"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "DUP1"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "DUP4"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "58"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "60"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "58"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "60"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "POP"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "POP"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "POP"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "SWAP1"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "POP"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "SWAP1"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "DUP2"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "ADD"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "SWAP1"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "AND"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "DUP1"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "ISZERO"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "PUSH [tag]",
											"value": "61"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "JUMPI"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "DUP1"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "DUP3"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "SUB"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "DUP1"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "MLOAD"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "DUP4"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "SUB"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "EXP"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "SUB"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "NOT"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "AND"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "DUP2"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "MSTORE"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "ADD"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "SWAP2"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "POP"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "tag",
											"value": "61"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "JUMPDEST"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "POP"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "SWAP3"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "POP"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "POP"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "POP"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "MLOAD"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "DUP1"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "SWAP2"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "SUB"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "SWAP1"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "RETURN"
										},
										{
											"begin": 1644,
											"end": 1924,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 1644,
											"end": 1924,
											"name": "JUMPDEST"
										},
										{
											"begin": 1644,
											"end": 1924,
											"name": "PUSH [tag]",
											"value": "62"
										},
										{
											"begin": 1644,
											"end": 1924,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 1644,
											"end": 1924,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1644,
											"end": 1924,
											"name": "tag",
											"value": "62"
										},
										{
											"begin": 1644,
											"end": 1924,
											"name": "JUMPDEST"
										},
										{
											"begin": 1644,
											"end": 1924,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1644,
											"end": 1924,
											"name": "MLOAD"
										},
										{
											"begin": 1644,
											"end": 1924,
											"name": "DUP1"
										},
										{
											"begin": 1644,
											"end": 1924,
											"name": "DUP6"
										},
										{
											"begin": 1644,
											"end": 1924,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1644,
											"end": 1924,
											"name": "AND"
										},
										{
											"begin": 1644,
											"end": 1924,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1644,
											"end": 1924,
											"name": "AND"
										},
										{
											"begin": 1644,
											"end": 1924,
											"name": "DUP2"
										},
										{
											"begin": 1644,
											"end": 1924,
											"name": "MSTORE"
										},
										{
											"begin": 1644,
											"end": 1924,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1644,
											"end": 1924,
											"name": "ADD"
										},
										{
											"begin": 1644,
											"end": 1924,
											"name": "DUP5"
										},
										{
											"begin": 1644,
											"end": 1924,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1644,
											"end": 1924,
											"name": "AND"
										},
										{
											"begin": 1644,
											"end": 1924,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1644,
											"end": 1924,
											"name": "AND"
										},
										{
											"begin": 1644,
											"end": 1924,
											"name": "DUP2"
										},
										{
											"begin": 1644,
											"end": 1924,
											"name": "MSTORE"
										},
										{
											"begin": 1644,
											"end": 1924,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1644,
											"end": 1924,
											"name": "ADD"
										},
										{
											"begin": 1644,
											"end": 1924,
											"name": "DUP4"
										},
										{
											"begin": 1644,
											"end": 1924,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 1644,
											"end": 1924,
											"name": "AND"
										},
										{
											"begin": 1644,
											"end": 1924,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 1644,
											"end": 1924,
											"name": "AND"
										},
										{
											"begin": 1644,
											"end": 1924,
											"name": "DUP2"
										},
										{
											"begin": 1644,
											"end": 1924,
											"name": "MSTORE"
										},
										{
											"begin": 1644,
											"end": 1924,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1644,
											"end": 1924,
											"name": "ADD"
										},
										{
											"begin": 1644,
											"end": 1924,
											"name": "DUP3"
										},
										{
											"begin": 1644,
											"end": 1924,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 1644,
											"end": 1924,
											"name": "AND"
										},
										{
											"begin": 1644,
											"end": 1924,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 1644,
											"end": 1924,
											"name": "AND"
										},
										{
											"begin": 1644,
											"end": 1924,
											"name": "DUP2"
										},
										{
											"begin": 1644,
											"end": 1924,
											"name": "MSTORE"
										},
										{
											"begin": 1644,
											"end": 1924,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1644,
											"end": 1924,
											"name": "ADD"
										},
										{
											"begin": 1644,
											"end": 1924,
											"name": "SWAP5"
										},
										{
											"begin": 1644,
											"end": 1924,
											"name": "POP"
										},
										{
											"begin": 1644,
											"end": 1924,
											"name": "POP"
										},
										{
											"begin": 1644,
											"end": 1924,
											"name": "POP"
										},
										{
											"begin": 1644,
											"end": 1924,
											"name": "POP"
										},
										{
											"begin": 1644,
											"end": 1924,
											"name": "POP"
										},
										{
											"begin": 1644,
											"end": 1924,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1644,
											"end": 1924,
											"name": "MLOAD"
										},
										{
											"begin": 1644,
											"end": 1924,
											"name": "DUP1"
										},
										{
											"begin": 1644,
											"end": 1924,
											"name": "SWAP2"
										},
										{
											"begin": 1644,
											"end": 1924,
											"name": "SUB"
										},
										{
											"begin": 1644,
											"end": 1924,
											"name": "SWAP1"
										},
										{
											"begin": 1644,
											"end": 1924,
											"name": "RETURN"
										},
										{
											"begin": 2225,
											"end": 2372,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 2225,
											"end": 2372,
											"name": "JUMPDEST"
										},
										{
											"begin": 2225,
											"end": 2372,
											"name": "PUSH [tag]",
											"value": "64"
										},
										{
											"begin": 2225,
											"end": 2372,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2225,
											"end": 2372,
											"name": "DUP1"
										},
										{
											"begin": 2225,
											"end": 2372,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2225,
											"end": 2372,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "65"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "65"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 2225,
											"end": 2372,
											"name": "DUP2"
										},
										{
											"begin": 2225,
											"end": 2372,
											"name": "ADD"
										},
										{
											"begin": 2225,
											"end": 2372,
											"name": "SWAP1"
										},
										{
											"begin": 2225,
											"end": 2372,
											"name": "DUP1"
										},
										{
											"begin": 2225,
											"end": 2372,
											"name": "DUP1"
										},
										{
											"begin": 2225,
											"end": 2372,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2225,
											"end": 2372,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2225,
											"end": 2372,
											"name": "AND"
										},
										{
											"begin": 2225,
											"end": 2372,
											"name": "SWAP1"
										},
										{
											"begin": 2225,
											"end": 2372,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2225,
											"end": 2372,
											"name": "ADD"
										},
										{
											"begin": 2225,
											"end": 2372,
											"name": "SWAP1"
										},
										{
											"begin": 2225,
											"end": 2372,
											"name": "SWAP3"
										},
										{
											"begin": 2225,
											"end": 2372,
											"name": "SWAP2"
										},
										{
											"begin": 2225,
											"end": 2372,
											"name": "SWAP1"
										},
										{
											"begin": 2225,
											"end": 2372,
											"name": "DUP1"
										},
										{
											"begin": 2225,
											"end": 2372,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2225,
											"end": 2372,
											"name": "SWAP1"
										},
										{
											"begin": 2225,
											"end": 2372,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2225,
											"end": 2372,
											"name": "ADD"
										},
										{
											"begin": 2225,
											"end": 2372,
											"name": "SWAP1"
										},
										{
											"begin": 2225,
											"end": 2372,
											"name": "SWAP3"
										},
										{
											"begin": 2225,
											"end": 2372,
											"name": "SWAP2"
										},
										{
											"begin": 2225,
											"end": 2372,
											"name": "SWAP1"
										},
										{
											"begin": 2225,
											"end": 2372,
											"name": "POP"
										},
										{
											"begin": 2225,
											"end": 2372,
											"name": "POP"
										},
										{
											"begin": 2225,
											"end": 2372,
											"name": "POP"
										},
										{
											"begin": 2225,
											"end": 2372,
											"name": "PUSH [tag]",
											"value": "66"
										},
										{
											"begin": 2225,
											"end": 2372,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2225,
											"end": 2372,
											"name": "tag",
											"value": "64"
										},
										{
											"begin": 2225,
											"end": 2372,
											"name": "JUMPDEST"
										},
										{
											"begin": 2225,
											"end": 2372,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2225,
											"end": 2372,
											"name": "MLOAD"
										},
										{
											"begin": 2225,
											"end": 2372,
											"name": "DUP1"
										},
										{
											"begin": 2225,
											"end": 2372,
											"name": "DUP3"
										},
										{
											"begin": 2225,
											"end": 2372,
											"name": "ISZERO"
										},
										{
											"begin": 2225,
											"end": 2372,
											"name": "ISZERO"
										},
										{
											"begin": 2225,
											"end": 2372,
											"name": "ISZERO"
										},
										{
											"begin": 2225,
											"end": 2372,
											"name": "ISZERO"
										},
										{
											"begin": 2225,
											"end": 2372,
											"name": "DUP2"
										},
										{
											"begin": 2225,
											"end": 2372,
											"name": "MSTORE"
										},
										{
											"begin": 2225,
											"end": 2372,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2225,
											"end": 2372,
											"name": "ADD"
										},
										{
											"begin": 2225,
											"end": 2372,
											"name": "SWAP2"
										},
										{
											"begin": 2225,
											"end": 2372,
											"name": "POP"
										},
										{
											"begin": 2225,
											"end": 2372,
											"name": "POP"
										},
										{
											"begin": 2225,
											"end": 2372,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2225,
											"end": 2372,
											"name": "MLOAD"
										},
										{
											"begin": 2225,
											"end": 2372,
											"name": "DUP1"
										},
										{
											"begin": 2225,
											"end": 2372,
											"name": "SWAP2"
										},
										{
											"begin": 2225,
											"end": 2372,
											"name": "SUB"
										},
										{
											"begin": 2225,
											"end": 2372,
											"name": "SWAP1"
										},
										{
											"begin": 2225,
											"end": 2372,
											"name": "RETURN"
										},
										{
											"begin": 527,
											"end": 548,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 527,
											"end": 548,
											"name": "JUMPDEST"
										},
										{
											"begin": 527,
											"end": 548,
											"name": "PUSH [tag]",
											"value": "67"
										},
										{
											"begin": 527,
											"end": 548,
											"name": "PUSH [tag]",
											"value": "68"
										},
										{
											"begin": 527,
											"end": 548,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 527,
											"end": 548,
											"name": "tag",
											"value": "67"
										},
										{
											"begin": 527,
											"end": 548,
											"name": "JUMPDEST"
										},
										{
											"begin": 527,
											"end": 548,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 527,
											"end": 548,
											"name": "MLOAD"
										},
										{
											"begin": 527,
											"end": 548,
											"name": "DUP1"
										},
										{
											"begin": 527,
											"end": 548,
											"name": "DUP3"
										},
										{
											"begin": 527,
											"end": 548,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 527,
											"end": 548,
											"name": "AND"
										},
										{
											"begin": 527,
											"end": 548,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 527,
											"end": 548,
											"name": "AND"
										},
										{
											"begin": 527,
											"end": 548,
											"name": "DUP2"
										},
										{
											"begin": 527,
											"end": 548,
											"name": "MSTORE"
										},
										{
											"begin": 527,
											"end": 548,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 527,
											"end": 548,
											"name": "ADD"
										},
										{
											"begin": 527,
											"end": 548,
											"name": "SWAP2"
										},
										{
											"begin": 527,
											"end": 548,
											"name": "POP"
										},
										{
											"begin": 527,
											"end": 548,
											"name": "POP"
										},
										{
											"begin": 527,
											"end": 548,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 527,
											"end": 548,
											"name": "MLOAD"
										},
										{
											"begin": 527,
											"end": 548,
											"name": "DUP1"
										},
										{
											"begin": 527,
											"end": 548,
											"name": "SWAP2"
										},
										{
											"begin": 527,
											"end": 548,
											"name": "SUB"
										},
										{
											"begin": 527,
											"end": 548,
											"name": "SWAP1"
										},
										{
											"begin": 527,
											"end": 548,
											"name": "RETURN"
										},
										{
											"begin": 581,
											"end": 604,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 581,
											"end": 604,
											"name": "JUMPDEST"
										},
										{
											"begin": 581,
											"end": 604,
											"name": "PUSH [tag]",
											"value": "69"
										},
										{
											"begin": 581,
											"end": 604,
											"name": "PUSH [tag]",
											"value": "70"
										},
										{
											"begin": 581,
											"end": 604,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 581,
											"end": 604,
											"name": "tag",
											"value": "69"
										},
										{
											"begin": 581,
											"end": 604,
											"name": "JUMPDEST"
										},
										{
											"begin": 581,
											"end": 604,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 581,
											"end": 604,
											"name": "MLOAD"
										},
										{
											"begin": 581,
											"end": 604,
											"name": "DUP1"
										},
										{
											"begin": 581,
											"end": 604,
											"name": "DUP3"
										},
										{
											"begin": 581,
											"end": 604,
											"name": "ISZERO"
										},
										{
											"begin": 581,
											"end": 604,
											"name": "ISZERO"
										},
										{
											"begin": 581,
											"end": 604,
											"name": "ISZERO"
										},
										{
											"begin": 581,
											"end": 604,
											"name": "ISZERO"
										},
										{
											"begin": 581,
											"end": 604,
											"name": "DUP2"
										},
										{
											"begin": 581,
											"end": 604,
											"name": "MSTORE"
										},
										{
											"begin": 581,
											"end": 604,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 581,
											"end": 604,
											"name": "ADD"
										},
										{
											"begin": 581,
											"end": 604,
											"name": "SWAP2"
										},
										{
											"begin": 581,
											"end": 604,
											"name": "POP"
										},
										{
											"begin": 581,
											"end": 604,
											"name": "POP"
										},
										{
											"begin": 581,
											"end": 604,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 581,
											"end": 604,
											"name": "MLOAD"
										},
										{
											"begin": 581,
											"end": 604,
											"name": "DUP1"
										},
										{
											"begin": 581,
											"end": 604,
											"name": "SWAP2"
										},
										{
											"begin": 581,
											"end": 604,
											"name": "SUB"
										},
										{
											"begin": 581,
											"end": 604,
											"name": "SWAP1"
										},
										{
											"begin": 581,
											"end": 604,
											"name": "RETURN"
										},
										{
											"begin": 316,
											"end": 340,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 316,
											"end": 340,
											"name": "JUMPDEST"
										},
										{
											"begin": 316,
											"end": 340,
											"name": "PUSH [tag]",
											"value": "71"
										},
										{
											"begin": 316,
											"end": 340,
											"name": "PUSH [tag]",
											"value": "72"
										},
										{
											"begin": 316,
											"end": 340,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 316,
											"end": 340,
											"name": "tag",
											"value": "71"
										},
										{
											"begin": 316,
											"end": 340,
											"name": "JUMPDEST"
										},
										{
											"begin": 316,
											"end": 340,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 316,
											"end": 340,
											"name": "MLOAD"
										},
										{
											"begin": 316,
											"end": 340,
											"name": "DUP1"
										},
										{
											"begin": 316,
											"end": 340,
											"name": "DUP3"
										},
										{
											"begin": 316,
											"end": 340,
											"name": "DUP2"
										},
										{
											"begin": 316,
											"end": 340,
											"name": "MSTORE"
										},
										{
											"begin": 316,
											"end": 340,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 316,
											"end": 340,
											"name": "ADD"
										},
										{
											"begin": 316,
											"end": 340,
											"name": "SWAP2"
										},
										{
											"begin": 316,
											"end": 340,
											"name": "POP"
										},
										{
											"begin": 316,
											"end": 340,
											"name": "POP"
										},
										{
											"begin": 316,
											"end": 340,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 316,
											"end": 340,
											"name": "MLOAD"
										},
										{
											"begin": 316,
											"end": 340,
											"name": "DUP1"
										},
										{
											"begin": 316,
											"end": 340,
											"name": "SWAP2"
										},
										{
											"begin": 316,
											"end": 340,
											"name": "SUB"
										},
										{
											"begin": 316,
											"end": 340,
											"name": "SWAP1"
										},
										{
											"begin": 316,
											"end": 340,
											"name": "RETURN"
										},
										{
											"begin": 2527,
											"end": 2926,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 2527,
											"end": 2926,
											"name": "JUMPDEST"
										},
										{
											"begin": 2527,
											"end": 2926,
											"name": "PUSH [tag]",
											"value": "73"
										},
										{
											"begin": 2527,
											"end": 2926,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2527,
											"end": 2926,
											"name": "DUP1"
										},
										{
											"begin": 2527,
											"end": 2926,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2527,
											"end": 2926,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "74"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "74"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 2527,
											"end": 2926,
											"name": "DUP2"
										},
										{
											"begin": 2527,
											"end": 2926,
											"name": "ADD"
										},
										{
											"begin": 2527,
											"end": 2926,
											"name": "SWAP1"
										},
										{
											"begin": 2527,
											"end": 2926,
											"name": "DUP1"
										},
										{
											"begin": 2527,
											"end": 2926,
											"name": "DUP1"
										},
										{
											"begin": 2527,
											"end": 2926,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2527,
											"end": 2926,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2527,
											"end": 2926,
											"name": "AND"
										},
										{
											"begin": 2527,
											"end": 2926,
											"name": "SWAP1"
										},
										{
											"begin": 2527,
											"end": 2926,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2527,
											"end": 2926,
											"name": "ADD"
										},
										{
											"begin": 2527,
											"end": 2926,
											"name": "SWAP1"
										},
										{
											"begin": 2527,
											"end": 2926,
											"name": "SWAP3"
										},
										{
											"begin": 2527,
											"end": 2926,
											"name": "SWAP2"
										},
										{
											"begin": 2527,
											"end": 2926,
											"name": "SWAP1"
										},
										{
											"begin": 2527,
											"end": 2926,
											"name": "DUP1"
										},
										{
											"begin": 2527,
											"end": 2926,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2527,
											"end": 2926,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2527,
											"end": 2926,
											"name": "AND"
										},
										{
											"begin": 2527,
											"end": 2926,
											"name": "SWAP1"
										},
										{
											"begin": 2527,
											"end": 2926,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2527,
											"end": 2926,
											"name": "ADD"
										},
										{
											"begin": 2527,
											"end": 2926,
											"name": "SWAP1"
										},
										{
											"begin": 2527,
											"end": 2926,
											"name": "SWAP3"
										},
										{
											"begin": 2527,
											"end": 2926,
											"name": "SWAP2"
										},
										{
											"begin": 2527,
											"end": 2926,
											"name": "SWAP1"
										},
										{
											"begin": 2527,
											"end": 2926,
											"name": "DUP1"
										},
										{
											"begin": 2527,
											"end": 2926,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2527,
											"end": 2926,
											"name": "SWAP1"
										},
										{
											"begin": 2527,
											"end": 2926,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2527,
											"end": 2926,
											"name": "ADD"
										},
										{
											"begin": 2527,
											"end": 2926,
											"name": "SWAP1"
										},
										{
											"begin": 2527,
											"end": 2926,
											"name": "SWAP3"
										},
										{
											"begin": 2527,
											"end": 2926,
											"name": "SWAP2"
										},
										{
											"begin": 2527,
											"end": 2926,
											"name": "SWAP1"
										},
										{
											"begin": 2527,
											"end": 2926,
											"name": "POP"
										},
										{
											"begin": 2527,
											"end": 2926,
											"name": "POP"
										},
										{
											"begin": 2527,
											"end": 2926,
											"name": "POP"
										},
										{
											"begin": 2527,
											"end": 2926,
											"name": "PUSH [tag]",
											"value": "75"
										},
										{
											"begin": 2527,
											"end": 2926,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2527,
											"end": 2926,
											"name": "tag",
											"value": "73"
										},
										{
											"begin": 2527,
											"end": 2926,
											"name": "JUMPDEST"
										},
										{
											"begin": 2527,
											"end": 2926,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2527,
											"end": 2926,
											"name": "MLOAD"
										},
										{
											"begin": 2527,
											"end": 2926,
											"name": "DUP1"
										},
										{
											"begin": 2527,
											"end": 2926,
											"name": "DUP3"
										},
										{
											"begin": 2527,
											"end": 2926,
											"name": "ISZERO"
										},
										{
											"begin": 2527,
											"end": 2926,
											"name": "ISZERO"
										},
										{
											"begin": 2527,
											"end": 2926,
											"name": "ISZERO"
										},
										{
											"begin": 2527,
											"end": 2926,
											"name": "ISZERO"
										},
										{
											"begin": 2527,
											"end": 2926,
											"name": "DUP2"
										},
										{
											"begin": 2527,
											"end": 2926,
											"name": "MSTORE"
										},
										{
											"begin": 2527,
											"end": 2926,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2527,
											"end": 2926,
											"name": "ADD"
										},
										{
											"begin": 2527,
											"end": 2926,
											"name": "SWAP2"
										},
										{
											"begin": 2527,
											"end": 2926,
											"name": "POP"
										},
										{
											"begin": 2527,
											"end": 2926,
											"name": "POP"
										},
										{
											"begin": 2527,
											"end": 2926,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2527,
											"end": 2926,
											"name": "MLOAD"
										},
										{
											"begin": 2527,
											"end": 2926,
											"name": "DUP1"
										},
										{
											"begin": 2527,
											"end": 2926,
											"name": "SWAP2"
										},
										{
											"begin": 2527,
											"end": 2926,
											"name": "SUB"
										},
										{
											"begin": 2527,
											"end": 2926,
											"name": "SWAP1"
										},
										{
											"begin": 2527,
											"end": 2926,
											"name": "RETURN"
										},
										{
											"begin": 1180,
											"end": 1212,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 1180,
											"end": 1212,
											"name": "JUMPDEST"
										},
										{
											"begin": 1180,
											"end": 1212,
											"name": "PUSH [tag]",
											"value": "76"
										},
										{
											"begin": 1180,
											"end": 1212,
											"name": "PUSH [tag]",
											"value": "77"
										},
										{
											"begin": 1180,
											"end": 1212,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1180,
											"end": 1212,
											"name": "tag",
											"value": "76"
										},
										{
											"begin": 1180,
											"end": 1212,
											"name": "JUMPDEST"
										},
										{
											"begin": 1180,
											"end": 1212,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1180,
											"end": 1212,
											"name": "MLOAD"
										},
										{
											"begin": 1180,
											"end": 1212,
											"name": "DUP1"
										},
										{
											"begin": 1180,
											"end": 1212,
											"name": "DUP3"
										},
										{
											"begin": 1180,
											"end": 1212,
											"name": "DUP2"
										},
										{
											"begin": 1180,
											"end": 1212,
											"name": "MSTORE"
										},
										{
											"begin": 1180,
											"end": 1212,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1180,
											"end": 1212,
											"name": "ADD"
										},
										{
											"begin": 1180,
											"end": 1212,
											"name": "SWAP2"
										},
										{
											"begin": 1180,
											"end": 1212,
											"name": "POP"
										},
										{
											"begin": 1180,
											"end": 1212,
											"name": "POP"
										},
										{
											"begin": 1180,
											"end": 1212,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1180,
											"end": 1212,
											"name": "MLOAD"
										},
										{
											"begin": 1180,
											"end": 1212,
											"name": "DUP1"
										},
										{
											"begin": 1180,
											"end": 1212,
											"name": "SWAP2"
										},
										{
											"begin": 1180,
											"end": 1212,
											"name": "SUB"
										},
										{
											"begin": 1180,
											"end": 1212,
											"name": "SWAP1"
										},
										{
											"begin": 1180,
											"end": 1212,
											"name": "RETURN"
										},
										{
											"begin": 1025,
											"end": 1061,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 1025,
											"end": 1061,
											"name": "JUMPDEST"
										},
										{
											"begin": 1025,
											"end": 1061,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 1025,
											"end": 1061,
											"name": "PUSH [tag]",
											"value": "79"
										},
										{
											"begin": 1025,
											"end": 1061,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1025,
											"end": 1061,
											"name": "tag",
											"value": "78"
										},
										{
											"begin": 1025,
											"end": 1061,
											"name": "JUMPDEST"
										},
										{
											"begin": 1025,
											"end": 1061,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1025,
											"end": 1061,
											"name": "MLOAD"
										},
										{
											"begin": 1025,
											"end": 1061,
											"name": "DUP1"
										},
										{
											"begin": 1025,
											"end": 1061,
											"name": "DUP3"
										},
										{
											"begin": 1025,
											"end": 1061,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 1025,
											"end": 1061,
											"name": "AND"
										},
										{
											"begin": 1025,
											"end": 1061,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 1025,
											"end": 1061,
											"name": "AND"
										},
										{
											"begin": 1025,
											"end": 1061,
											"name": "DUP2"
										},
										{
											"begin": 1025,
											"end": 1061,
											"name": "MSTORE"
										},
										{
											"begin": 1025,
											"end": 1061,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1025,
											"end": 1061,
											"name": "ADD"
										},
										{
											"begin": 1025,
											"end": 1061,
											"name": "SWAP2"
										},
										{
											"begin": 1025,
											"end": 1061,
											"name": "POP"
										},
										{
											"begin": 1025,
											"end": 1061,
											"name": "POP"
										},
										{
											"begin": 1025,
											"end": 1061,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1025,
											"end": 1061,
											"name": "MLOAD"
										},
										{
											"begin": 1025,
											"end": 1061,
											"name": "DUP1"
										},
										{
											"begin": 1025,
											"end": 1061,
											"name": "SWAP2"
										},
										{
											"begin": 1025,
											"end": 1061,
											"name": "SUB"
										},
										{
											"begin": 1025,
											"end": 1061,
											"name": "SWAP1"
										},
										{
											"begin": 1025,
											"end": 1061,
											"name": "RETURN"
										},
										{
											"begin": 4068,
											"end": 4682,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 4068,
											"end": 4682,
											"name": "JUMPDEST"
										},
										{
											"begin": 4068,
											"end": 4682,
											"name": "PUSH [tag]",
											"value": "80"
										},
										{
											"begin": 4068,
											"end": 4682,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4068,
											"end": 4682,
											"name": "DUP1"
										},
										{
											"begin": 4068,
											"end": 4682,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 4068,
											"end": 4682,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "81"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "81"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 4068,
											"end": 4682,
											"name": "DUP2"
										},
										{
											"begin": 4068,
											"end": 4682,
											"name": "ADD"
										},
										{
											"begin": 4068,
											"end": 4682,
											"name": "SWAP1"
										},
										{
											"begin": 4068,
											"end": 4682,
											"name": "DUP1"
										},
										{
											"begin": 4068,
											"end": 4682,
											"name": "DUP1"
										},
										{
											"begin": 4068,
											"end": 4682,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4068,
											"end": 4682,
											"name": "ISZERO"
										},
										{
											"begin": 4068,
											"end": 4682,
											"name": "ISZERO"
										},
										{
											"begin": 4068,
											"end": 4682,
											"name": "SWAP1"
										},
										{
											"begin": 4068,
											"end": 4682,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4068,
											"end": 4682,
											"name": "ADD"
										},
										{
											"begin": 4068,
											"end": 4682,
											"name": "SWAP1"
										},
										{
											"begin": 4068,
											"end": 4682,
											"name": "SWAP3"
										},
										{
											"begin": 4068,
											"end": 4682,
											"name": "SWAP2"
										},
										{
											"begin": 4068,
											"end": 4682,
											"name": "SWAP1"
										},
										{
											"begin": 4068,
											"end": 4682,
											"name": "DUP1"
										},
										{
											"begin": 4068,
											"end": 4682,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4068,
											"end": 4682,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4068,
											"end": 4682,
											"name": "AND"
										},
										{
											"begin": 4068,
											"end": 4682,
											"name": "SWAP1"
										},
										{
											"begin": 4068,
											"end": 4682,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4068,
											"end": 4682,
											"name": "ADD"
										},
										{
											"begin": 4068,
											"end": 4682,
											"name": "SWAP1"
										},
										{
											"begin": 4068,
											"end": 4682,
											"name": "SWAP3"
										},
										{
											"begin": 4068,
											"end": 4682,
											"name": "SWAP2"
										},
										{
											"begin": 4068,
											"end": 4682,
											"name": "SWAP1"
										},
										{
											"begin": 4068,
											"end": 4682,
											"name": "DUP1"
										},
										{
											"begin": 4068,
											"end": 4682,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4068,
											"end": 4682,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4068,
											"end": 4682,
											"name": "AND"
										},
										{
											"begin": 4068,
											"end": 4682,
											"name": "SWAP1"
										},
										{
											"begin": 4068,
											"end": 4682,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4068,
											"end": 4682,
											"name": "ADD"
										},
										{
											"begin": 4068,
											"end": 4682,
											"name": "SWAP1"
										},
										{
											"begin": 4068,
											"end": 4682,
											"name": "SWAP3"
										},
										{
											"begin": 4068,
											"end": 4682,
											"name": "SWAP2"
										},
										{
											"begin": 4068,
											"end": 4682,
											"name": "SWAP1"
										},
										{
											"begin": 4068,
											"end": 4682,
											"name": "POP"
										},
										{
											"begin": 4068,
											"end": 4682,
											"name": "POP"
										},
										{
											"begin": 4068,
											"end": 4682,
											"name": "POP"
										},
										{
											"begin": 4068,
											"end": 4682,
											"name": "PUSH [tag]",
											"value": "82"
										},
										{
											"begin": 4068,
											"end": 4682,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4068,
											"end": 4682,
											"name": "tag",
											"value": "80"
										},
										{
											"begin": 4068,
											"end": 4682,
											"name": "JUMPDEST"
										},
										{
											"begin": 4068,
											"end": 4682,
											"name": "STOP"
										},
										{
											"begin": 608,
											"end": 716,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 608,
											"end": 716,
											"name": "JUMPDEST"
										},
										{
											"begin": 608,
											"end": 716,
											"name": "PUSH [tag]",
											"value": "83"
										},
										{
											"begin": 608,
											"end": 716,
											"name": "PUSH [tag]",
											"value": "84"
										},
										{
											"begin": 608,
											"end": 716,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 608,
											"end": 716,
											"name": "tag",
											"value": "83"
										},
										{
											"begin": 608,
											"end": 716,
											"name": "JUMPDEST"
										},
										{
											"begin": 608,
											"end": 716,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 608,
											"end": 716,
											"name": "MLOAD"
										},
										{
											"begin": 608,
											"end": 716,
											"name": "DUP1"
										},
										{
											"begin": 608,
											"end": 716,
											"name": "DUP3"
										},
										{
											"begin": 608,
											"end": 716,
											"name": "DUP2"
										},
										{
											"begin": 608,
											"end": 716,
											"name": "MSTORE"
										},
										{
											"begin": 608,
											"end": 716,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 608,
											"end": 716,
											"name": "ADD"
										},
										{
											"begin": 608,
											"end": 716,
											"name": "SWAP2"
										},
										{
											"begin": 608,
											"end": 716,
											"name": "POP"
										},
										{
											"begin": 608,
											"end": 716,
											"name": "POP"
										},
										{
											"begin": 608,
											"end": 716,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 608,
											"end": 716,
											"name": "MLOAD"
										},
										{
											"begin": 608,
											"end": 716,
											"name": "DUP1"
										},
										{
											"begin": 608,
											"end": 716,
											"name": "SWAP2"
										},
										{
											"begin": 608,
											"end": 716,
											"name": "SUB"
										},
										{
											"begin": 608,
											"end": 716,
											"name": "SWAP1"
										},
										{
											"begin": 608,
											"end": 716,
											"name": "RETURN"
										},
										{
											"begin": 274,
											"end": 309,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 274,
											"end": 309,
											"name": "JUMPDEST"
										},
										{
											"begin": 274,
											"end": 309,
											"name": "PUSH [tag]",
											"value": "85"
										},
										{
											"begin": 274,
											"end": 309,
											"name": "PUSH [tag]",
											"value": "86"
										},
										{
											"begin": 274,
											"end": 309,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 274,
											"end": 309,
											"name": "tag",
											"value": "85"
										},
										{
											"begin": 274,
											"end": 309,
											"name": "JUMPDEST"
										},
										{
											"begin": 274,
											"end": 309,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 274,
											"end": 309,
											"name": "MLOAD"
										},
										{
											"begin": 274,
											"end": 309,
											"name": "DUP1"
										},
										{
											"begin": 274,
											"end": 309,
											"name": "DUP3"
										},
										{
											"begin": 274,
											"end": 309,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 274,
											"end": 309,
											"name": "AND"
										},
										{
											"begin": 274,
											"end": 309,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 274,
											"end": 309,
											"name": "AND"
										},
										{
											"begin": 274,
											"end": 309,
											"name": "DUP2"
										},
										{
											"begin": 274,
											"end": 309,
											"name": "MSTORE"
										},
										{
											"begin": 274,
											"end": 309,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 274,
											"end": 309,
											"name": "ADD"
										},
										{
											"begin": 274,
											"end": 309,
											"name": "SWAP2"
										},
										{
											"begin": 274,
											"end": 309,
											"name": "POP"
										},
										{
											"begin": 274,
											"end": 309,
											"name": "POP"
										},
										{
											"begin": 274,
											"end": 309,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 274,
											"end": 309,
											"name": "MLOAD"
										},
										{
											"begin": 274,
											"end": 309,
											"name": "DUP1"
										},
										{
											"begin": 274,
											"end": 309,
											"name": "SWAP2"
										},
										{
											"begin": 274,
											"end": 309,
											"name": "SUB"
										},
										{
											"begin": 274,
											"end": 309,
											"name": "SWAP1"
										},
										{
											"begin": 274,
											"end": 309,
											"name": "RETURN"
										},
										{
											"begin": 465,
											"end": 496,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 465,
											"end": 496,
											"name": "JUMPDEST"
										},
										{
											"begin": 465,
											"end": 496,
											"name": "PUSH [tag]",
											"value": "87"
										},
										{
											"begin": 465,
											"end": 496,
											"name": "PUSH [tag]",
											"value": "88"
										},
										{
											"begin": 465,
											"end": 496,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 465,
											"end": 496,
											"name": "tag",
											"value": "87"
										},
										{
											"begin": 465,
											"end": 496,
											"name": "JUMPDEST"
										},
										{
											"begin": 465,
											"end": 496,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 465,
											"end": 496,
											"name": "MLOAD"
										},
										{
											"begin": 465,
											"end": 496,
											"name": "DUP1"
										},
										{
											"begin": 465,
											"end": 496,
											"name": "DUP3"
										},
										{
											"begin": 465,
											"end": 496,
											"name": "DUP2"
										},
										{
											"begin": 465,
											"end": 496,
											"name": "MSTORE"
										},
										{
											"begin": 465,
											"end": 496,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 465,
											"end": 496,
											"name": "ADD"
										},
										{
											"begin": 465,
											"end": 496,
											"name": "SWAP2"
										},
										{
											"begin": 465,
											"end": 496,
											"name": "POP"
										},
										{
											"begin": 465,
											"end": 496,
											"name": "POP"
										},
										{
											"begin": 465,
											"end": 496,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 465,
											"end": 496,
											"name": "MLOAD"
										},
										{
											"begin": 465,
											"end": 496,
											"name": "DUP1"
										},
										{
											"begin": 465,
											"end": 496,
											"name": "SWAP2"
										},
										{
											"begin": 465,
											"end": 496,
											"name": "SUB"
										},
										{
											"begin": 465,
											"end": 496,
											"name": "SWAP1"
										},
										{
											"begin": 465,
											"end": 496,
											"name": "RETURN"
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "JUMPDEST"
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "PUSH [tag]",
											"value": "89"
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "PUSH [tag]",
											"value": "90"
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "tag",
											"value": "89"
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "JUMPDEST"
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "MLOAD"
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "DUP1"
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "DUP3"
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "DUP2"
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "MSTORE"
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "ADD"
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP2"
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP"
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP"
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "MLOAD"
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "DUP1"
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP2"
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SUB"
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP1"
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "RETURN"
										},
										{
											"begin": 4688,
											"end": 4960,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 4688,
											"end": 4960,
											"name": "JUMPDEST"
										},
										{
											"begin": 4688,
											"end": 4960,
											"name": "PUSH [tag]",
											"value": "91"
										},
										{
											"begin": 4688,
											"end": 4960,
											"name": "PUSH [tag]",
											"value": "92"
										},
										{
											"begin": 4688,
											"end": 4960,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4688,
											"end": 4960,
											"name": "tag",
											"value": "91"
										},
										{
											"begin": 4688,
											"end": 4960,
											"name": "JUMPDEST"
										},
										{
											"begin": 4688,
											"end": 4960,
											"name": "STOP"
										},
										{
											"begin": 2940,
											"end": 3316,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 2940,
											"end": 3316,
											"name": "JUMPDEST"
										},
										{
											"begin": 2940,
											"end": 3316,
											"name": "PUSH [tag]",
											"value": "93"
										},
										{
											"begin": 2940,
											"end": 3316,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2940,
											"end": 3316,
											"name": "DUP1"
										},
										{
											"begin": 2940,
											"end": 3316,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2940,
											"end": 3316,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "94"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "94"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 2940,
											"end": 3316,
											"name": "DUP2"
										},
										{
											"begin": 2940,
											"end": 3316,
											"name": "ADD"
										},
										{
											"begin": 2940,
											"end": 3316,
											"name": "SWAP1"
										},
										{
											"begin": 2940,
											"end": 3316,
											"name": "DUP1"
										},
										{
											"begin": 2940,
											"end": 3316,
											"name": "DUP1"
										},
										{
											"begin": 2940,
											"end": 3316,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2940,
											"end": 3316,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2940,
											"end": 3316,
											"name": "AND"
										},
										{
											"begin": 2940,
											"end": 3316,
											"name": "SWAP1"
										},
										{
											"begin": 2940,
											"end": 3316,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2940,
											"end": 3316,
											"name": "ADD"
										},
										{
											"begin": 2940,
											"end": 3316,
											"name": "SWAP1"
										},
										{
											"begin": 2940,
											"end": 3316,
											"name": "SWAP3"
										},
										{
											"begin": 2940,
											"end": 3316,
											"name": "SWAP2"
										},
										{
											"begin": 2940,
											"end": 3316,
											"name": "SWAP1"
										},
										{
											"begin": 2940,
											"end": 3316,
											"name": "DUP1"
										},
										{
											"begin": 2940,
											"end": 3316,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2940,
											"end": 3316,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2940,
											"end": 3316,
											"name": "AND"
										},
										{
											"begin": 2940,
											"end": 3316,
											"name": "SWAP1"
										},
										{
											"begin": 2940,
											"end": 3316,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2940,
											"end": 3316,
											"name": "ADD"
										},
										{
											"begin": 2940,
											"end": 3316,
											"name": "SWAP1"
										},
										{
											"begin": 2940,
											"end": 3316,
											"name": "SWAP3"
										},
										{
											"begin": 2940,
											"end": 3316,
											"name": "SWAP2"
										},
										{
											"begin": 2940,
											"end": 3316,
											"name": "SWAP1"
										},
										{
											"begin": 2940,
											"end": 3316,
											"name": "POP"
										},
										{
											"begin": 2940,
											"end": 3316,
											"name": "POP"
										},
										{
											"begin": 2940,
											"end": 3316,
											"name": "POP"
										},
										{
											"begin": 2940,
											"end": 3316,
											"name": "PUSH [tag]",
											"value": "95"
										},
										{
											"begin": 2940,
											"end": 3316,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2940,
											"end": 3316,
											"name": "tag",
											"value": "93"
										},
										{
											"begin": 2940,
											"end": 3316,
											"name": "JUMPDEST"
										},
										{
											"begin": 2940,
											"end": 3316,
											"name": "STOP"
										},
										{
											"begin": 3436,
											"end": 4062,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 3436,
											"end": 4062,
											"name": "JUMPDEST"
										},
										{
											"begin": 3436,
											"end": 4062,
											"name": "PUSH [tag]",
											"value": "96"
										},
										{
											"begin": 3436,
											"end": 4062,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3436,
											"end": 4062,
											"name": "DUP1"
										},
										{
											"begin": 3436,
											"end": 4062,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 3436,
											"end": 4062,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "97"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "97"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 3436,
											"end": 4062,
											"name": "DUP2"
										},
										{
											"begin": 3436,
											"end": 4062,
											"name": "ADD"
										},
										{
											"begin": 3436,
											"end": 4062,
											"name": "SWAP1"
										},
										{
											"begin": 3436,
											"end": 4062,
											"name": "DUP1"
										},
										{
											"begin": 3436,
											"end": 4062,
											"name": "DUP1"
										},
										{
											"begin": 3436,
											"end": 4062,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3436,
											"end": 4062,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 3436,
											"end": 4062,
											"name": "AND"
										},
										{
											"begin": 3436,
											"end": 4062,
											"name": "SWAP1"
										},
										{
											"begin": 3436,
											"end": 4062,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3436,
											"end": 4062,
											"name": "ADD"
										},
										{
											"begin": 3436,
											"end": 4062,
											"name": "SWAP1"
										},
										{
											"begin": 3436,
											"end": 4062,
											"name": "SWAP3"
										},
										{
											"begin": 3436,
											"end": 4062,
											"name": "SWAP2"
										},
										{
											"begin": 3436,
											"end": 4062,
											"name": "SWAP1"
										},
										{
											"begin": 3436,
											"end": 4062,
											"name": "DUP1"
										},
										{
											"begin": 3436,
											"end": 4062,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3436,
											"end": 4062,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 3436,
											"end": 4062,
											"name": "AND"
										},
										{
											"begin": 3436,
											"end": 4062,
											"name": "SWAP1"
										},
										{
											"begin": 3436,
											"end": 4062,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3436,
											"end": 4062,
											"name": "ADD"
										},
										{
											"begin": 3436,
											"end": 4062,
											"name": "SWAP1"
										},
										{
											"begin": 3436,
											"end": 4062,
											"name": "SWAP3"
										},
										{
											"begin": 3436,
											"end": 4062,
											"name": "SWAP2"
										},
										{
											"begin": 3436,
											"end": 4062,
											"name": "SWAP1"
										},
										{
											"begin": 3436,
											"end": 4062,
											"name": "POP"
										},
										{
											"begin": 3436,
											"end": 4062,
											"name": "POP"
										},
										{
											"begin": 3436,
											"end": 4062,
											"name": "POP"
										},
										{
											"begin": 3436,
											"end": 4062,
											"name": "PUSH [tag]",
											"value": "98"
										},
										{
											"begin": 3436,
											"end": 4062,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3436,
											"end": 4062,
											"name": "tag",
											"value": "96"
										},
										{
											"begin": 3436,
											"end": 4062,
											"name": "JUMPDEST"
										},
										{
											"begin": 3436,
											"end": 4062,
											"name": "STOP"
										},
										{
											"begin": 909,
											"end": 945,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 909,
											"end": 945,
											"name": "JUMPDEST"
										},
										{
											"begin": 909,
											"end": 945,
											"name": "PUSH [tag]",
											"value": "99"
										},
										{
											"begin": 909,
											"end": 945,
											"name": "PUSH [tag]",
											"value": "100"
										},
										{
											"begin": 909,
											"end": 945,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 909,
											"end": 945,
											"name": "tag",
											"value": "99"
										},
										{
											"begin": 909,
											"end": 945,
											"name": "JUMPDEST"
										},
										{
											"begin": 909,
											"end": 945,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 909,
											"end": 945,
											"name": "MLOAD"
										},
										{
											"begin": 909,
											"end": 945,
											"name": "DUP1"
										},
										{
											"begin": 909,
											"end": 945,
											"name": "DUP3"
										},
										{
											"begin": 909,
											"end": 945,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 909,
											"end": 945,
											"name": "AND"
										},
										{
											"begin": 909,
											"end": 945,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 909,
											"end": 945,
											"name": "AND"
										},
										{
											"begin": 909,
											"end": 945,
											"name": "DUP2"
										},
										{
											"begin": 909,
											"end": 945,
											"name": "MSTORE"
										},
										{
											"begin": 909,
											"end": 945,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 909,
											"end": 945,
											"name": "ADD"
										},
										{
											"begin": 909,
											"end": 945,
											"name": "SWAP2"
										},
										{
											"begin": 909,
											"end": 945,
											"name": "POP"
										},
										{
											"begin": 909,
											"end": 945,
											"name": "POP"
										},
										{
											"begin": 909,
											"end": 945,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 909,
											"end": 945,
											"name": "MLOAD"
										},
										{
											"begin": 909,
											"end": 945,
											"name": "DUP1"
										},
										{
											"begin": 909,
											"end": 945,
											"name": "SWAP2"
										},
										{
											"begin": 909,
											"end": 945,
											"name": "SUB"
										},
										{
											"begin": 909,
											"end": 945,
											"name": "SWAP1"
										},
										{
											"begin": 909,
											"end": 945,
											"name": "RETURN"
										},
										{
											"begin": 661,
											"end": 704,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 661,
											"end": 704,
											"name": "JUMPDEST"
										},
										{
											"begin": 661,
											"end": 704,
											"name": "PUSH [tag]",
											"value": "101"
										},
										{
											"begin": 661,
											"end": 704,
											"name": "PUSH [tag]",
											"value": "102"
										},
										{
											"begin": 661,
											"end": 704,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 661,
											"end": 704,
											"name": "tag",
											"value": "101"
										},
										{
											"begin": 661,
											"end": 704,
											"name": "JUMPDEST"
										},
										{
											"begin": 661,
											"end": 704,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 661,
											"end": 704,
											"name": "MLOAD"
										},
										{
											"begin": 661,
											"end": 704,
											"name": "DUP1"
										},
										{
											"begin": 661,
											"end": 704,
											"name": "DUP3"
										},
										{
											"begin": 661,
											"end": 704,
											"name": "DUP2"
										},
										{
											"begin": 661,
											"end": 704,
											"name": "MSTORE"
										},
										{
											"begin": 661,
											"end": 704,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 661,
											"end": 704,
											"name": "ADD"
										},
										{
											"begin": 661,
											"end": 704,
											"name": "SWAP2"
										},
										{
											"begin": 661,
											"end": 704,
											"name": "POP"
										},
										{
											"begin": 661,
											"end": 704,
											"name": "POP"
										},
										{
											"begin": 661,
											"end": 704,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 661,
											"end": 704,
											"name": "MLOAD"
										},
										{
											"begin": 661,
											"end": 704,
											"name": "DUP1"
										},
										{
											"begin": 661,
											"end": 704,
											"name": "SWAP2"
										},
										{
											"begin": 661,
											"end": 704,
											"name": "SUB"
										},
										{
											"begin": 661,
											"end": 704,
											"name": "SWAP1"
										},
										{
											"begin": 661,
											"end": 704,
											"name": "RETURN"
										},
										{
											"begin": 6390,
											"end": 7552,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 6390,
											"end": 7552,
											"name": "JUMPDEST"
										},
										{
											"begin": 6390,
											"end": 7552,
											"name": "PUSH [tag]",
											"value": "103"
										},
										{
											"begin": 6390,
											"end": 7552,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 6390,
											"end": 7552,
											"name": "DUP1"
										},
										{
											"begin": 6390,
											"end": 7552,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 6390,
											"end": 7552,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "104"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "104"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 6390,
											"end": 7552,
											"name": "DUP2"
										},
										{
											"begin": 6390,
											"end": 7552,
											"name": "ADD"
										},
										{
											"begin": 6390,
											"end": 7552,
											"name": "SWAP1"
										},
										{
											"begin": 6390,
											"end": 7552,
											"name": "DUP1"
										},
										{
											"begin": 6390,
											"end": 7552,
											"name": "DUP1"
										},
										{
											"begin": 6390,
											"end": 7552,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 6390,
											"end": 7552,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6390,
											"end": 7552,
											"name": "AND"
										},
										{
											"begin": 6390,
											"end": 7552,
											"name": "SWAP1"
										},
										{
											"begin": 6390,
											"end": 7552,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6390,
											"end": 7552,
											"name": "ADD"
										},
										{
											"begin": 6390,
											"end": 7552,
											"name": "SWAP1"
										},
										{
											"begin": 6390,
											"end": 7552,
											"name": "SWAP3"
										},
										{
											"begin": 6390,
											"end": 7552,
											"name": "SWAP2"
										},
										{
											"begin": 6390,
											"end": 7552,
											"name": "SWAP1"
										},
										{
											"begin": 6390,
											"end": 7552,
											"name": "POP"
										},
										{
											"begin": 6390,
											"end": 7552,
											"name": "POP"
										},
										{
											"begin": 6390,
											"end": 7552,
											"name": "POP"
										},
										{
											"begin": 6390,
											"end": 7552,
											"name": "PUSH [tag]",
											"value": "105"
										},
										{
											"begin": 6390,
											"end": 7552,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6390,
											"end": 7552,
											"name": "tag",
											"value": "103"
										},
										{
											"begin": 6390,
											"end": 7552,
											"name": "JUMPDEST"
										},
										{
											"begin": 6390,
											"end": 7552,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6390,
											"end": 7552,
											"name": "MLOAD"
										},
										{
											"begin": 6390,
											"end": 7552,
											"name": "DUP1"
										},
										{
											"begin": 6390,
											"end": 7552,
											"name": "DUP3"
										},
										{
											"begin": 6390,
											"end": 7552,
											"name": "DUP2"
										},
										{
											"begin": 6390,
											"end": 7552,
											"name": "MSTORE"
										},
										{
											"begin": 6390,
											"end": 7552,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6390,
											"end": 7552,
											"name": "ADD"
										},
										{
											"begin": 6390,
											"end": 7552,
											"name": "SWAP2"
										},
										{
											"begin": 6390,
											"end": 7552,
											"name": "POP"
										},
										{
											"begin": 6390,
											"end": 7552,
											"name": "POP"
										},
										{
											"begin": 6390,
											"end": 7552,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6390,
											"end": 7552,
											"name": "MLOAD"
										},
										{
											"begin": 6390,
											"end": 7552,
											"name": "DUP1"
										},
										{
											"begin": 6390,
											"end": 7552,
											"name": "SWAP2"
										},
										{
											"begin": 6390,
											"end": 7552,
											"name": "SUB"
										},
										{
											"begin": 6390,
											"end": 7552,
											"name": "SWAP1"
										},
										{
											"begin": 6390,
											"end": 7552,
											"name": "RETURN"
										},
										{
											"begin": 9784,
											"end": 10197,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 9784,
											"end": 10197,
											"name": "JUMPDEST"
										},
										{
											"begin": 9784,
											"end": 10197,
											"name": "PUSH [tag]",
											"value": "106"
										},
										{
											"begin": 9784,
											"end": 10197,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 9784,
											"end": 10197,
											"name": "DUP1"
										},
										{
											"begin": 9784,
											"end": 10197,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 9784,
											"end": 10197,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 16,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 17,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "107"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "107"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 9784,
											"end": 10197,
											"name": "DUP2"
										},
										{
											"begin": 9784,
											"end": 10197,
											"name": "ADD"
										},
										{
											"begin": 9784,
											"end": 10197,
											"name": "SWAP1"
										},
										{
											"begin": 9784,
											"end": 10197,
											"name": "DUP1"
										},
										{
											"begin": 9784,
											"end": 10197,
											"name": "DUP1"
										},
										{
											"begin": 9784,
											"end": 10197,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 9784,
											"end": 10197,
											"name": "SWAP1"
										},
										{
											"begin": 9784,
											"end": 10197,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9784,
											"end": 10197,
											"name": "ADD"
										},
										{
											"begin": 9784,
											"end": 10197,
											"name": "SWAP1"
										},
										{
											"begin": 9784,
											"end": 10197,
											"name": "SWAP3"
										},
										{
											"begin": 9784,
											"end": 10197,
											"name": "SWAP2"
										},
										{
											"begin": 9784,
											"end": 10197,
											"name": "SWAP1"
										},
										{
											"begin": 9784,
											"end": 10197,
											"name": "DUP1"
										},
										{
											"begin": 9784,
											"end": 10197,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 9784,
											"end": 10197,
											"name": "SWAP1"
										},
										{
											"begin": 9784,
											"end": 10197,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9784,
											"end": 10197,
											"name": "ADD"
										},
										{
											"begin": 9784,
											"end": 10197,
											"name": "SWAP1"
										},
										{
											"begin": 9784,
											"end": 10197,
											"name": "SWAP3"
										},
										{
											"begin": 9784,
											"end": 10197,
											"name": "SWAP2"
										},
										{
											"begin": 9784,
											"end": 10197,
											"name": "SWAP1"
										},
										{
											"begin": 9784,
											"end": 10197,
											"name": "DUP1"
										},
										{
											"begin": 9784,
											"end": 10197,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 9784,
											"end": 10197,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9784,
											"end": 10197,
											"name": "AND"
										},
										{
											"begin": 9784,
											"end": 10197,
											"name": "SWAP1"
										},
										{
											"begin": 9784,
											"end": 10197,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9784,
											"end": 10197,
											"name": "ADD"
										},
										{
											"begin": 9784,
											"end": 10197,
											"name": "SWAP1"
										},
										{
											"begin": 9784,
											"end": 10197,
											"name": "SWAP3"
										},
										{
											"begin": 9784,
											"end": 10197,
											"name": "SWAP2"
										},
										{
											"begin": 9784,
											"end": 10197,
											"name": "SWAP1"
										},
										{
											"begin": 9784,
											"end": 10197,
											"name": "DUP1"
										},
										{
											"begin": 9784,
											"end": 10197,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 9784,
											"end": 10197,
											"name": "SWAP1"
										},
										{
											"begin": 9784,
											"end": 10197,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9784,
											"end": 10197,
											"name": "ADD"
										},
										{
											"begin": 9784,
											"end": 10197,
											"name": "SWAP1"
										},
										{
											"begin": 21,
											"end": 32,
											"name": "PUSH",
											"value": "100000000"
										},
										{
											"begin": 8,
											"end": 19,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 33,
											"name": "GT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "108"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 46,
											"end": 47,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 43,
											"end": 44,
											"name": "DUP1"
										},
										{
											"begin": 36,
											"end": 48,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "108"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 9784,
											"end": 10197,
											"name": "DUP3"
										},
										{
											"begin": 9784,
											"end": 10197,
											"name": "ADD"
										},
										{
											"begin": 35,
											"end": 44,
											"name": "DUP4"
										},
										{
											"begin": 28,
											"end": 32,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "DUP3"
										},
										{
											"begin": 8,
											"end": 33,
											"name": "ADD"
										},
										{
											"begin": 5,
											"end": 45,
											"name": "GT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "109"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 58,
											"end": 59,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 55,
											"end": 56,
											"name": "DUP1"
										},
										{
											"begin": 48,
											"end": 60,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "109"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 9784,
											"end": 10197,
											"name": "DUP1"
										},
										{
											"begin": 9784,
											"end": 10197,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 9784,
											"end": 10197,
											"name": "SWAP1"
										},
										{
											"begin": 9784,
											"end": 10197,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9784,
											"end": 10197,
											"name": "ADD"
										},
										{
											"begin": 9784,
											"end": 10197,
											"name": "SWAP2"
										},
										{
											"begin": 100,
											"end": 109,
											"name": "DUP5"
										},
										{
											"begin": 95,
											"end": 96,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 81,
											"end": 93,
											"name": "DUP4"
										},
										{
											"begin": 77,
											"end": 97,
											"name": "MUL"
										},
										{
											"begin": 67,
											"end": 75,
											"name": "DUP5"
										},
										{
											"begin": 63,
											"end": 98,
											"name": "ADD"
										},
										{
											"begin": 60,
											"end": 110,
											"name": "GT"
										},
										{
											"begin": 39,
											"end": 50,
											"name": "PUSH",
											"value": "100000000"
										},
										{
											"begin": 25,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 22,
											"end": 51,
											"name": "GT"
										},
										{
											"begin": 11,
											"end": 118,
											"name": "OR"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "PUSH [tag]",
											"value": "110"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPI"
										},
										{
											"begin": 131,
											"end": 132,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 128,
											"end": 129,
											"name": "DUP1"
										},
										{
											"begin": 121,
											"end": 133,
											"name": "REVERT"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "tag",
											"value": "110"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPDEST"
										},
										{
											"begin": 9784,
											"end": 10197,
											"name": "SWAP1"
										},
										{
											"begin": 9784,
											"end": 10197,
											"name": "SWAP2"
										},
										{
											"begin": 9784,
											"end": 10197,
											"name": "SWAP3"
										},
										{
											"begin": 9784,
											"end": 10197,
											"name": "SWAP4"
										},
										{
											"begin": 9784,
											"end": 10197,
											"name": "SWAP2"
										},
										{
											"begin": 9784,
											"end": 10197,
											"name": "SWAP3"
										},
										{
											"begin": 9784,
											"end": 10197,
											"name": "SWAP4"
										},
										{
											"begin": 9784,
											"end": 10197,
											"name": "SWAP1"
										},
										{
											"begin": 9784,
											"end": 10197,
											"name": "DUP1"
										},
										{
											"begin": 9784,
											"end": 10197,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 9784,
											"end": 10197,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9784,
											"end": 10197,
											"name": "AND"
										},
										{
											"begin": 9784,
											"end": 10197,
											"name": "SWAP1"
										},
										{
											"begin": 9784,
											"end": 10197,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9784,
											"end": 10197,
											"name": "ADD"
										},
										{
											"begin": 9784,
											"end": 10197,
											"name": "SWAP1"
										},
										{
											"begin": 9784,
											"end": 10197,
											"name": "SWAP3"
										},
										{
											"begin": 9784,
											"end": 10197,
											"name": "SWAP2"
										},
										{
											"begin": 9784,
											"end": 10197,
											"name": "SWAP1"
										},
										{
											"begin": 9784,
											"end": 10197,
											"name": "POP"
										},
										{
											"begin": 9784,
											"end": 10197,
											"name": "POP"
										},
										{
											"begin": 9784,
											"end": 10197,
											"name": "POP"
										},
										{
											"begin": 9784,
											"end": 10197,
											"name": "PUSH [tag]",
											"value": "111"
										},
										{
											"begin": 9784,
											"end": 10197,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 9784,
											"end": 10197,
											"name": "tag",
											"value": "106"
										},
										{
											"begin": 9784,
											"end": 10197,
											"name": "JUMPDEST"
										},
										{
											"begin": 9784,
											"end": 10197,
											"name": "STOP"
										},
										{
											"begin": 347,
											"end": 388,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 347,
											"end": 388,
											"name": "JUMPDEST"
										},
										{
											"begin": 347,
											"end": 388,
											"name": "PUSH [tag]",
											"value": "112"
										},
										{
											"begin": 347,
											"end": 388,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 347,
											"end": 388,
											"name": "DUP1"
										},
										{
											"begin": 347,
											"end": 388,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 347,
											"end": 388,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "113"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "113"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 347,
											"end": 388,
											"name": "DUP2"
										},
										{
											"begin": 347,
											"end": 388,
											"name": "ADD"
										},
										{
											"begin": 347,
											"end": 388,
											"name": "SWAP1"
										},
										{
											"begin": 347,
											"end": 388,
											"name": "DUP1"
										},
										{
											"begin": 347,
											"end": 388,
											"name": "DUP1"
										},
										{
											"begin": 347,
											"end": 388,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 347,
											"end": 388,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 347,
											"end": 388,
											"name": "AND"
										},
										{
											"begin": 347,
											"end": 388,
											"name": "SWAP1"
										},
										{
											"begin": 347,
											"end": 388,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 347,
											"end": 388,
											"name": "ADD"
										},
										{
											"begin": 347,
											"end": 388,
											"name": "SWAP1"
										},
										{
											"begin": 347,
											"end": 388,
											"name": "SWAP3"
										},
										{
											"begin": 347,
											"end": 388,
											"name": "SWAP2"
										},
										{
											"begin": 347,
											"end": 388,
											"name": "SWAP1"
										},
										{
											"begin": 347,
											"end": 388,
											"name": "POP"
										},
										{
											"begin": 347,
											"end": 388,
											"name": "POP"
										},
										{
											"begin": 347,
											"end": 388,
											"name": "POP"
										},
										{
											"begin": 347,
											"end": 388,
											"name": "PUSH [tag]",
											"value": "114"
										},
										{
											"begin": 347,
											"end": 388,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 347,
											"end": 388,
											"name": "tag",
											"value": "112"
										},
										{
											"begin": 347,
											"end": 388,
											"name": "JUMPDEST"
										},
										{
											"begin": 347,
											"end": 388,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 347,
											"end": 388,
											"name": "MLOAD"
										},
										{
											"begin": 347,
											"end": 388,
											"name": "DUP1"
										},
										{
											"begin": 347,
											"end": 388,
											"name": "DUP3"
										},
										{
											"begin": 347,
											"end": 388,
											"name": "DUP2"
										},
										{
											"begin": 347,
											"end": 388,
											"name": "MSTORE"
										},
										{
											"begin": 347,
											"end": 388,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 347,
											"end": 388,
											"name": "ADD"
										},
										{
											"begin": 347,
											"end": 388,
											"name": "SWAP2"
										},
										{
											"begin": 347,
											"end": 388,
											"name": "POP"
										},
										{
											"begin": 347,
											"end": 388,
											"name": "POP"
										},
										{
											"begin": 347,
											"end": 388,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 347,
											"end": 388,
											"name": "MLOAD"
										},
										{
											"begin": 347,
											"end": 388,
											"name": "DUP1"
										},
										{
											"begin": 347,
											"end": 388,
											"name": "SWAP2"
										},
										{
											"begin": 347,
											"end": 388,
											"name": "SUB"
										},
										{
											"begin": 347,
											"end": 388,
											"name": "SWAP1"
										},
										{
											"begin": 347,
											"end": 388,
											"name": "RETURN"
										},
										{
											"begin": 1219,
											"end": 1236,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 1219,
											"end": 1236,
											"name": "JUMPDEST"
										},
										{
											"begin": 1219,
											"end": 1236,
											"name": "PUSH [tag]",
											"value": "115"
										},
										{
											"begin": 1219,
											"end": 1236,
											"name": "PUSH [tag]",
											"value": "116"
										},
										{
											"begin": 1219,
											"end": 1236,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1219,
											"end": 1236,
											"name": "tag",
											"value": "115"
										},
										{
											"begin": 1219,
											"end": 1236,
											"name": "JUMPDEST"
										},
										{
											"begin": 1219,
											"end": 1236,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1219,
											"end": 1236,
											"name": "MLOAD"
										},
										{
											"begin": 1219,
											"end": 1236,
											"name": "DUP1"
										},
										{
											"begin": 1219,
											"end": 1236,
											"name": "DUP3"
										},
										{
											"begin": 1219,
											"end": 1236,
											"name": "DUP2"
										},
										{
											"begin": 1219,
											"end": 1236,
											"name": "MSTORE"
										},
										{
											"begin": 1219,
											"end": 1236,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1219,
											"end": 1236,
											"name": "ADD"
										},
										{
											"begin": 1219,
											"end": 1236,
											"name": "SWAP2"
										},
										{
											"begin": 1219,
											"end": 1236,
											"name": "POP"
										},
										{
											"begin": 1219,
											"end": 1236,
											"name": "POP"
										},
										{
											"begin": 1219,
											"end": 1236,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1219,
											"end": 1236,
											"name": "MLOAD"
										},
										{
											"begin": 1219,
											"end": 1236,
											"name": "DUP1"
										},
										{
											"begin": 1219,
											"end": 1236,
											"name": "SWAP2"
										},
										{
											"begin": 1219,
											"end": 1236,
											"name": "SUB"
										},
										{
											"begin": 1219,
											"end": 1236,
											"name": "SWAP1"
										},
										{
											"begin": 1219,
											"end": 1236,
											"name": "RETURN"
										},
										{
											"begin": 723,
											"end": 761,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 723,
											"end": 761,
											"name": "JUMPDEST"
										},
										{
											"begin": 723,
											"end": 761,
											"name": "PUSH [tag]",
											"value": "117"
										},
										{
											"begin": 723,
											"end": 761,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 723,
											"end": 761,
											"name": "DUP1"
										},
										{
											"begin": 723,
											"end": 761,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 723,
											"end": 761,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "118"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "118"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 723,
											"end": 761,
											"name": "DUP2"
										},
										{
											"begin": 723,
											"end": 761,
											"name": "ADD"
										},
										{
											"begin": 723,
											"end": 761,
											"name": "SWAP1"
										},
										{
											"begin": 723,
											"end": 761,
											"name": "DUP1"
										},
										{
											"begin": 723,
											"end": 761,
											"name": "DUP1"
										},
										{
											"begin": 723,
											"end": 761,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 723,
											"end": 761,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 723,
											"end": 761,
											"name": "AND"
										},
										{
											"begin": 723,
											"end": 761,
											"name": "SWAP1"
										},
										{
											"begin": 723,
											"end": 761,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 723,
											"end": 761,
											"name": "ADD"
										},
										{
											"begin": 723,
											"end": 761,
											"name": "SWAP1"
										},
										{
											"begin": 723,
											"end": 761,
											"name": "SWAP3"
										},
										{
											"begin": 723,
											"end": 761,
											"name": "SWAP2"
										},
										{
											"begin": 723,
											"end": 761,
											"name": "SWAP1"
										},
										{
											"begin": 723,
											"end": 761,
											"name": "POP"
										},
										{
											"begin": 723,
											"end": 761,
											"name": "POP"
										},
										{
											"begin": 723,
											"end": 761,
											"name": "POP"
										},
										{
											"begin": 723,
											"end": 761,
											"name": "PUSH [tag]",
											"value": "119"
										},
										{
											"begin": 723,
											"end": 761,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 723,
											"end": 761,
											"name": "tag",
											"value": "117"
										},
										{
											"begin": 723,
											"end": 761,
											"name": "JUMPDEST"
										},
										{
											"begin": 723,
											"end": 761,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 723,
											"end": 761,
											"name": "MLOAD"
										},
										{
											"begin": 723,
											"end": 761,
											"name": "DUP1"
										},
										{
											"begin": 723,
											"end": 761,
											"name": "DUP3"
										},
										{
											"begin": 723,
											"end": 761,
											"name": "DUP2"
										},
										{
											"begin": 723,
											"end": 761,
											"name": "MSTORE"
										},
										{
											"begin": 723,
											"end": 761,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 723,
											"end": 761,
											"name": "ADD"
										},
										{
											"begin": 723,
											"end": 761,
											"name": "SWAP2"
										},
										{
											"begin": 723,
											"end": 761,
											"name": "POP"
										},
										{
											"begin": 723,
											"end": 761,
											"name": "POP"
										},
										{
											"begin": 723,
											"end": 761,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 723,
											"end": 761,
											"name": "MLOAD"
										},
										{
											"begin": 723,
											"end": 761,
											"name": "DUP1"
										},
										{
											"begin": 723,
											"end": 761,
											"name": "SWAP2"
										},
										{
											"begin": 723,
											"end": 761,
											"name": "SUB"
										},
										{
											"begin": 723,
											"end": 761,
											"name": "SWAP1"
										},
										{
											"begin": 723,
											"end": 761,
											"name": "RETURN"
										},
										{
											"begin": 7660,
											"end": 8965,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 7660,
											"end": 8965,
											"name": "JUMPDEST"
										},
										{
											"begin": 7660,
											"end": 8965,
											"name": "PUSH [tag]",
											"value": "120"
										},
										{
											"begin": 7660,
											"end": 8965,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 7660,
											"end": 8965,
											"name": "DUP1"
										},
										{
											"begin": 7660,
											"end": 8965,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 7660,
											"end": 8965,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "121"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "121"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 7660,
											"end": 8965,
											"name": "DUP2"
										},
										{
											"begin": 7660,
											"end": 8965,
											"name": "ADD"
										},
										{
											"begin": 7660,
											"end": 8965,
											"name": "SWAP1"
										},
										{
											"begin": 7660,
											"end": 8965,
											"name": "DUP1"
										},
										{
											"begin": 7660,
											"end": 8965,
											"name": "DUP1"
										},
										{
											"begin": 7660,
											"end": 8965,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 7660,
											"end": 8965,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7660,
											"end": 8965,
											"name": "AND"
										},
										{
											"begin": 7660,
											"end": 8965,
											"name": "SWAP1"
										},
										{
											"begin": 7660,
											"end": 8965,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7660,
											"end": 8965,
											"name": "ADD"
										},
										{
											"begin": 7660,
											"end": 8965,
											"name": "SWAP1"
										},
										{
											"begin": 7660,
											"end": 8965,
											"name": "SWAP3"
										},
										{
											"begin": 7660,
											"end": 8965,
											"name": "SWAP2"
										},
										{
											"begin": 7660,
											"end": 8965,
											"name": "SWAP1"
										},
										{
											"begin": 7660,
											"end": 8965,
											"name": "POP"
										},
										{
											"begin": 7660,
											"end": 8965,
											"name": "POP"
										},
										{
											"begin": 7660,
											"end": 8965,
											"name": "POP"
										},
										{
											"begin": 7660,
											"end": 8965,
											"name": "PUSH [tag]",
											"value": "122"
										},
										{
											"begin": 7660,
											"end": 8965,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7660,
											"end": 8965,
											"name": "tag",
											"value": "120"
										},
										{
											"begin": 7660,
											"end": 8965,
											"name": "JUMPDEST"
										},
										{
											"begin": 7660,
											"end": 8965,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7660,
											"end": 8965,
											"name": "MLOAD"
										},
										{
											"begin": 7660,
											"end": 8965,
											"name": "DUP1"
										},
										{
											"begin": 7660,
											"end": 8965,
											"name": "DUP4"
										},
										{
											"begin": 7660,
											"end": 8965,
											"name": "DUP2"
										},
										{
											"begin": 7660,
											"end": 8965,
											"name": "MSTORE"
										},
										{
											"begin": 7660,
											"end": 8965,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7660,
											"end": 8965,
											"name": "ADD"
										},
										{
											"begin": 7660,
											"end": 8965,
											"name": "DUP3"
										},
										{
											"begin": 7660,
											"end": 8965,
											"name": "DUP2"
										},
										{
											"begin": 7660,
											"end": 8965,
											"name": "MSTORE"
										},
										{
											"begin": 7660,
											"end": 8965,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7660,
											"end": 8965,
											"name": "ADD"
										},
										{
											"begin": 7660,
											"end": 8965,
											"name": "SWAP3"
										},
										{
											"begin": 7660,
											"end": 8965,
											"name": "POP"
										},
										{
											"begin": 7660,
											"end": 8965,
											"name": "POP"
										},
										{
											"begin": 7660,
											"end": 8965,
											"name": "POP"
										},
										{
											"begin": 7660,
											"end": 8965,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7660,
											"end": 8965,
											"name": "MLOAD"
										},
										{
											"begin": 7660,
											"end": 8965,
											"name": "DUP1"
										},
										{
											"begin": 7660,
											"end": 8965,
											"name": "SWAP2"
										},
										{
											"begin": 7660,
											"end": 8965,
											"name": "SUB"
										},
										{
											"begin": 7660,
											"end": 8965,
											"name": "SWAP1"
										},
										{
											"begin": 7660,
											"end": 8965,
											"name": "RETURN"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "JUMPDEST"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "PUSH [tag]",
											"value": "123"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "PUSH [tag]",
											"value": "124"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "tag",
											"value": "123"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "JUMPDEST"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "MLOAD"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "DUP1"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "DUP1"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "ADD"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "DUP3"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "DUP2"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "SUB"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "DUP3"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "MSTORE"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "DUP4"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "DUP2"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "DUP2"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "MLOAD"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "DUP2"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "MSTORE"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "ADD"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "SWAP2"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "POP"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "DUP1"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "MLOAD"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "SWAP1"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "ADD"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "SWAP1"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "DUP1"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "DUP4"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "125"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "127"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "125"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "127"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "POP"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "POP"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "POP"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "SWAP1"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "POP"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "SWAP1"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "DUP2"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "ADD"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "SWAP1"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "AND"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "DUP1"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "ISZERO"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "PUSH [tag]",
											"value": "128"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "JUMPI"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "DUP1"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "DUP3"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "SUB"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "DUP1"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "MLOAD"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "DUP4"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "SUB"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "EXP"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "SUB"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "NOT"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "AND"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "DUP2"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "MSTORE"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "ADD"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "SWAP2"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "POP"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "tag",
											"value": "128"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "JUMPDEST"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "POP"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "SWAP3"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "POP"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "POP"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "POP"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "MLOAD"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "DUP1"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "SWAP2"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "SUB"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "SWAP1"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "RETURN"
										},
										{
											"begin": 1323,
											"end": 1345,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 1323,
											"end": 1345,
											"name": "JUMPDEST"
										},
										{
											"begin": 1323,
											"end": 1345,
											"name": "PUSH [tag]",
											"value": "129"
										},
										{
											"begin": 1323,
											"end": 1345,
											"name": "PUSH [tag]",
											"value": "130"
										},
										{
											"begin": 1323,
											"end": 1345,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1323,
											"end": 1345,
											"name": "tag",
											"value": "129"
										},
										{
											"begin": 1323,
											"end": 1345,
											"name": "JUMPDEST"
										},
										{
											"begin": 1323,
											"end": 1345,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1323,
											"end": 1345,
											"name": "MLOAD"
										},
										{
											"begin": 1323,
											"end": 1345,
											"name": "DUP1"
										},
										{
											"begin": 1323,
											"end": 1345,
											"name": "DUP3"
										},
										{
											"begin": 1323,
											"end": 1345,
											"name": "ISZERO"
										},
										{
											"begin": 1323,
											"end": 1345,
											"name": "ISZERO"
										},
										{
											"begin": 1323,
											"end": 1345,
											"name": "ISZERO"
										},
										{
											"begin": 1323,
											"end": 1345,
											"name": "ISZERO"
										},
										{
											"begin": 1323,
											"end": 1345,
											"name": "DUP2"
										},
										{
											"begin": 1323,
											"end": 1345,
											"name": "MSTORE"
										},
										{
											"begin": 1323,
											"end": 1345,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1323,
											"end": 1345,
											"name": "ADD"
										},
										{
											"begin": 1323,
											"end": 1345,
											"name": "SWAP2"
										},
										{
											"begin": 1323,
											"end": 1345,
											"name": "POP"
										},
										{
											"begin": 1323,
											"end": 1345,
											"name": "POP"
										},
										{
											"begin": 1323,
											"end": 1345,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1323,
											"end": 1345,
											"name": "MLOAD"
										},
										{
											"begin": 1323,
											"end": 1345,
											"name": "DUP1"
										},
										{
											"begin": 1323,
											"end": 1345,
											"name": "SWAP2"
										},
										{
											"begin": 1323,
											"end": 1345,
											"name": "SUB"
										},
										{
											"begin": 1323,
											"end": 1345,
											"name": "SWAP1"
										},
										{
											"begin": 1323,
											"end": 1345,
											"name": "RETURN"
										},
										{
											"begin": 2380,
											"end": 2519,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 2380,
											"end": 2519,
											"name": "JUMPDEST"
										},
										{
											"begin": 2380,
											"end": 2519,
											"name": "PUSH [tag]",
											"value": "131"
										},
										{
											"begin": 2380,
											"end": 2519,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2380,
											"end": 2519,
											"name": "DUP1"
										},
										{
											"begin": 2380,
											"end": 2519,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2380,
											"end": 2519,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "132"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "132"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 2380,
											"end": 2519,
											"name": "DUP2"
										},
										{
											"begin": 2380,
											"end": 2519,
											"name": "ADD"
										},
										{
											"begin": 2380,
											"end": 2519,
											"name": "SWAP1"
										},
										{
											"begin": 2380,
											"end": 2519,
											"name": "DUP1"
										},
										{
											"begin": 2380,
											"end": 2519,
											"name": "DUP1"
										},
										{
											"begin": 2380,
											"end": 2519,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2380,
											"end": 2519,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2380,
											"end": 2519,
											"name": "AND"
										},
										{
											"begin": 2380,
											"end": 2519,
											"name": "SWAP1"
										},
										{
											"begin": 2380,
											"end": 2519,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2380,
											"end": 2519,
											"name": "ADD"
										},
										{
											"begin": 2380,
											"end": 2519,
											"name": "SWAP1"
										},
										{
											"begin": 2380,
											"end": 2519,
											"name": "SWAP3"
										},
										{
											"begin": 2380,
											"end": 2519,
											"name": "SWAP2"
										},
										{
											"begin": 2380,
											"end": 2519,
											"name": "SWAP1"
										},
										{
											"begin": 2380,
											"end": 2519,
											"name": "DUP1"
										},
										{
											"begin": 2380,
											"end": 2519,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2380,
											"end": 2519,
											"name": "SWAP1"
										},
										{
											"begin": 2380,
											"end": 2519,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2380,
											"end": 2519,
											"name": "ADD"
										},
										{
											"begin": 2380,
											"end": 2519,
											"name": "SWAP1"
										},
										{
											"begin": 2380,
											"end": 2519,
											"name": "SWAP3"
										},
										{
											"begin": 2380,
											"end": 2519,
											"name": "SWAP2"
										},
										{
											"begin": 2380,
											"end": 2519,
											"name": "SWAP1"
										},
										{
											"begin": 2380,
											"end": 2519,
											"name": "POP"
										},
										{
											"begin": 2380,
											"end": 2519,
											"name": "POP"
										},
										{
											"begin": 2380,
											"end": 2519,
											"name": "POP"
										},
										{
											"begin": 2380,
											"end": 2519,
											"name": "PUSH [tag]",
											"value": "133"
										},
										{
											"begin": 2380,
											"end": 2519,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2380,
											"end": 2519,
											"name": "tag",
											"value": "131"
										},
										{
											"begin": 2380,
											"end": 2519,
											"name": "JUMPDEST"
										},
										{
											"begin": 2380,
											"end": 2519,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2380,
											"end": 2519,
											"name": "MLOAD"
										},
										{
											"begin": 2380,
											"end": 2519,
											"name": "DUP1"
										},
										{
											"begin": 2380,
											"end": 2519,
											"name": "DUP3"
										},
										{
											"begin": 2380,
											"end": 2519,
											"name": "ISZERO"
										},
										{
											"begin": 2380,
											"end": 2519,
											"name": "ISZERO"
										},
										{
											"begin": 2380,
											"end": 2519,
											"name": "ISZERO"
										},
										{
											"begin": 2380,
											"end": 2519,
											"name": "ISZERO"
										},
										{
											"begin": 2380,
											"end": 2519,
											"name": "DUP2"
										},
										{
											"begin": 2380,
											"end": 2519,
											"name": "MSTORE"
										},
										{
											"begin": 2380,
											"end": 2519,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2380,
											"end": 2519,
											"name": "ADD"
										},
										{
											"begin": 2380,
											"end": 2519,
											"name": "SWAP2"
										},
										{
											"begin": 2380,
											"end": 2519,
											"name": "POP"
										},
										{
											"begin": 2380,
											"end": 2519,
											"name": "POP"
										},
										{
											"begin": 2380,
											"end": 2519,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2380,
											"end": 2519,
											"name": "MLOAD"
										},
										{
											"begin": 2380,
											"end": 2519,
											"name": "DUP1"
										},
										{
											"begin": 2380,
											"end": 2519,
											"name": "SWAP2"
										},
										{
											"begin": 2380,
											"end": 2519,
											"name": "SUB"
										},
										{
											"begin": 2380,
											"end": 2519,
											"name": "SWAP1"
										},
										{
											"begin": 2380,
											"end": 2519,
											"name": "RETURN"
										},
										{
											"begin": 1397,
											"end": 1426,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 1397,
											"end": 1426,
											"name": "JUMPDEST"
										},
										{
											"begin": 1397,
											"end": 1426,
											"name": "PUSH [tag]",
											"value": "134"
										},
										{
											"begin": 1397,
											"end": 1426,
											"name": "PUSH [tag]",
											"value": "135"
										},
										{
											"begin": 1397,
											"end": 1426,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1397,
											"end": 1426,
											"name": "tag",
											"value": "134"
										},
										{
											"begin": 1397,
											"end": 1426,
											"name": "JUMPDEST"
										},
										{
											"begin": 1397,
											"end": 1426,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1397,
											"end": 1426,
											"name": "MLOAD"
										},
										{
											"begin": 1397,
											"end": 1426,
											"name": "DUP1"
										},
										{
											"begin": 1397,
											"end": 1426,
											"name": "DUP3"
										},
										{
											"begin": 1397,
											"end": 1426,
											"name": "ISZERO"
										},
										{
											"begin": 1397,
											"end": 1426,
											"name": "ISZERO"
										},
										{
											"begin": 1397,
											"end": 1426,
											"name": "ISZERO"
										},
										{
											"begin": 1397,
											"end": 1426,
											"name": "ISZERO"
										},
										{
											"begin": 1397,
											"end": 1426,
											"name": "DUP2"
										},
										{
											"begin": 1397,
											"end": 1426,
											"name": "MSTORE"
										},
										{
											"begin": 1397,
											"end": 1426,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1397,
											"end": 1426,
											"name": "ADD"
										},
										{
											"begin": 1397,
											"end": 1426,
											"name": "SWAP2"
										},
										{
											"begin": 1397,
											"end": 1426,
											"name": "POP"
										},
										{
											"begin": 1397,
											"end": 1426,
											"name": "POP"
										},
										{
											"begin": 1397,
											"end": 1426,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1397,
											"end": 1426,
											"name": "MLOAD"
										},
										{
											"begin": 1397,
											"end": 1426,
											"name": "DUP1"
										},
										{
											"begin": 1397,
											"end": 1426,
											"name": "SWAP2"
										},
										{
											"begin": 1397,
											"end": 1426,
											"name": "SUB"
										},
										{
											"begin": 1397,
											"end": 1426,
											"name": "SWAP1"
										},
										{
											"begin": 1397,
											"end": 1426,
											"name": "RETURN"
										},
										{
											"begin": 352,
											"end": 400,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 352,
											"end": 400,
											"name": "JUMPDEST"
										},
										{
											"begin": 352,
											"end": 400,
											"name": "PUSH [tag]",
											"value": "136"
										},
										{
											"begin": 352,
											"end": 400,
											"name": "PUSH [tag]",
											"value": "137"
										},
										{
											"begin": 352,
											"end": 400,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 352,
											"end": 400,
											"name": "tag",
											"value": "136"
										},
										{
											"begin": 352,
											"end": 400,
											"name": "JUMPDEST"
										},
										{
											"begin": 352,
											"end": 400,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 352,
											"end": 400,
											"name": "MLOAD"
										},
										{
											"begin": 352,
											"end": 400,
											"name": "DUP1"
										},
										{
											"begin": 352,
											"end": 400,
											"name": "DUP3"
										},
										{
											"begin": 352,
											"end": 400,
											"name": "DUP2"
										},
										{
											"begin": 352,
											"end": 400,
											"name": "MSTORE"
										},
										{
											"begin": 352,
											"end": 400,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 352,
											"end": 400,
											"name": "ADD"
										},
										{
											"begin": 352,
											"end": 400,
											"name": "SWAP2"
										},
										{
											"begin": 352,
											"end": 400,
											"name": "POP"
										},
										{
											"begin": 352,
											"end": 400,
											"name": "POP"
										},
										{
											"begin": 352,
											"end": 400,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 352,
											"end": 400,
											"name": "MLOAD"
										},
										{
											"begin": 352,
											"end": 400,
											"name": "DUP1"
										},
										{
											"begin": 352,
											"end": 400,
											"name": "SWAP2"
										},
										{
											"begin": 352,
											"end": 400,
											"name": "SUB"
										},
										{
											"begin": 352,
											"end": 400,
											"name": "SWAP1"
										},
										{
											"begin": 352,
											"end": 400,
											"name": "RETURN"
										},
										{
											"begin": 16932,
											"end": 17276,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 16932,
											"end": 17276,
											"name": "JUMPDEST"
										},
										{
											"begin": 16932,
											"end": 17276,
											"name": "PUSH [tag]",
											"value": "138"
										},
										{
											"begin": 16932,
											"end": 17276,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 16932,
											"end": 17276,
											"name": "DUP1"
										},
										{
											"begin": 16932,
											"end": 17276,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 16932,
											"end": 17276,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "139"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "139"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 16932,
											"end": 17276,
											"name": "DUP2"
										},
										{
											"begin": 16932,
											"end": 17276,
											"name": "ADD"
										},
										{
											"begin": 16932,
											"end": 17276,
											"name": "SWAP1"
										},
										{
											"begin": 16932,
											"end": 17276,
											"name": "DUP1"
										},
										{
											"begin": 16932,
											"end": 17276,
											"name": "DUP1"
										},
										{
											"begin": 16932,
											"end": 17276,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 16932,
											"end": 17276,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16932,
											"end": 17276,
											"name": "AND"
										},
										{
											"begin": 16932,
											"end": 17276,
											"name": "SWAP1"
										},
										{
											"begin": 16932,
											"end": 17276,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16932,
											"end": 17276,
											"name": "ADD"
										},
										{
											"begin": 16932,
											"end": 17276,
											"name": "SWAP1"
										},
										{
											"begin": 16932,
											"end": 17276,
											"name": "SWAP3"
										},
										{
											"begin": 16932,
											"end": 17276,
											"name": "SWAP2"
										},
										{
											"begin": 16932,
											"end": 17276,
											"name": "SWAP1"
										},
										{
											"begin": 16932,
											"end": 17276,
											"name": "POP"
										},
										{
											"begin": 16932,
											"end": 17276,
											"name": "POP"
										},
										{
											"begin": 16932,
											"end": 17276,
											"name": "POP"
										},
										{
											"begin": 16932,
											"end": 17276,
											"name": "PUSH [tag]",
											"value": "140"
										},
										{
											"begin": 16932,
											"end": 17276,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 16932,
											"end": 17276,
											"name": "tag",
											"value": "138"
										},
										{
											"begin": 16932,
											"end": 17276,
											"name": "JUMPDEST"
										},
										{
											"begin": 16932,
											"end": 17276,
											"name": "STOP"
										},
										{
											"begin": 500,
											"end": 522,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 500,
											"end": 522,
											"name": "JUMPDEST"
										},
										{
											"begin": 500,
											"end": 522,
											"name": "PUSH [tag]",
											"value": "141"
										},
										{
											"begin": 500,
											"end": 522,
											"name": "PUSH [tag]",
											"value": "142"
										},
										{
											"begin": 500,
											"end": 522,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 500,
											"end": 522,
											"name": "tag",
											"value": "141"
										},
										{
											"begin": 500,
											"end": 522,
											"name": "JUMPDEST"
										},
										{
											"begin": 500,
											"end": 522,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 500,
											"end": 522,
											"name": "MLOAD"
										},
										{
											"begin": 500,
											"end": 522,
											"name": "DUP1"
										},
										{
											"begin": 500,
											"end": 522,
											"name": "DUP3"
										},
										{
											"begin": 500,
											"end": 522,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 500,
											"end": 522,
											"name": "AND"
										},
										{
											"begin": 500,
											"end": 522,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 500,
											"end": 522,
											"name": "AND"
										},
										{
											"begin": 500,
											"end": 522,
											"name": "DUP2"
										},
										{
											"begin": 500,
											"end": 522,
											"name": "MSTORE"
										},
										{
											"begin": 500,
											"end": 522,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 500,
											"end": 522,
											"name": "ADD"
										},
										{
											"begin": 500,
											"end": 522,
											"name": "SWAP2"
										},
										{
											"begin": 500,
											"end": 522,
											"name": "POP"
										},
										{
											"begin": 500,
											"end": 522,
											"name": "POP"
										},
										{
											"begin": 500,
											"end": 522,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 500,
											"end": 522,
											"name": "MLOAD"
										},
										{
											"begin": 500,
											"end": 522,
											"name": "DUP1"
										},
										{
											"begin": 500,
											"end": 522,
											"name": "SWAP2"
										},
										{
											"begin": 500,
											"end": 522,
											"name": "SUB"
										},
										{
											"begin": 500,
											"end": 522,
											"name": "SWAP1"
										},
										{
											"begin": 500,
											"end": 522,
											"name": "RETURN"
										},
										{
											"begin": 553,
											"end": 574,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 553,
											"end": 574,
											"name": "JUMPDEST"
										},
										{
											"begin": 553,
											"end": 574,
											"name": "PUSH [tag]",
											"value": "143"
										},
										{
											"begin": 553,
											"end": 574,
											"name": "PUSH [tag]",
											"value": "144"
										},
										{
											"begin": 553,
											"end": 574,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 553,
											"end": 574,
											"name": "tag",
											"value": "143"
										},
										{
											"begin": 553,
											"end": 574,
											"name": "JUMPDEST"
										},
										{
											"begin": 553,
											"end": 574,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 553,
											"end": 574,
											"name": "MLOAD"
										},
										{
											"begin": 553,
											"end": 574,
											"name": "DUP1"
										},
										{
											"begin": 553,
											"end": 574,
											"name": "DUP3"
										},
										{
											"begin": 553,
											"end": 574,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 553,
											"end": 574,
											"name": "AND"
										},
										{
											"begin": 553,
											"end": 574,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 553,
											"end": 574,
											"name": "AND"
										},
										{
											"begin": 553,
											"end": 574,
											"name": "DUP2"
										},
										{
											"begin": 553,
											"end": 574,
											"name": "MSTORE"
										},
										{
											"begin": 553,
											"end": 574,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 553,
											"end": 574,
											"name": "ADD"
										},
										{
											"begin": 553,
											"end": 574,
											"name": "SWAP2"
										},
										{
											"begin": 553,
											"end": 574,
											"name": "POP"
										},
										{
											"begin": 553,
											"end": 574,
											"name": "POP"
										},
										{
											"begin": 553,
											"end": 574,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 553,
											"end": 574,
											"name": "MLOAD"
										},
										{
											"begin": 553,
											"end": 574,
											"name": "DUP1"
										},
										{
											"begin": 553,
											"end": 574,
											"name": "SWAP2"
										},
										{
											"begin": 553,
											"end": 574,
											"name": "SUB"
										},
										{
											"begin": 553,
											"end": 574,
											"name": "SWAP1"
										},
										{
											"begin": 553,
											"end": 574,
											"name": "RETURN"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "JUMPDEST"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "PUSH [tag]",
											"value": "145"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "DUP1"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 16,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 17,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "146"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "146"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "DUP2"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "ADD"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "SWAP1"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "DUP1"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "DUP1"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "AND"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "SWAP1"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "ADD"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "SWAP1"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "SWAP3"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "SWAP2"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "SWAP1"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "DUP1"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "AND"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "SWAP1"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "ADD"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "SWAP1"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "SWAP3"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "SWAP2"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "SWAP1"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "DUP1"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "SWAP1"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "ADD"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "SWAP1"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "SWAP3"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "SWAP2"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "SWAP1"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "DUP1"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "SWAP1"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "ADD"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "SWAP1"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "SWAP3"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "SWAP2"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "SWAP1"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "DUP1"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "AND"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "SWAP1"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "ADD"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "SWAP1"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "SWAP3"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "SWAP2"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "SWAP1"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "DUP1"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "SWAP1"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "ADD"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "SWAP1"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "SWAP3"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "SWAP2"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "SWAP1"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "DUP1"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "SWAP1"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "ADD"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "SWAP1"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "SWAP3"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "SWAP2"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "SWAP1"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "POP"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "POP"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "POP"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "PUSH [tag]",
											"value": "147"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "tag",
											"value": "145"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "JUMPDEST"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "STOP"
										},
										{
											"begin": 611,
											"end": 656,
											"name": "tag",
											"value": "38"
										},
										{
											"begin": 611,
											"end": 656,
											"name": "JUMPDEST"
										},
										{
											"begin": 611,
											"end": 656,
											"name": "PUSH [tag]",
											"value": "148"
										},
										{
											"begin": 611,
											"end": 656,
											"name": "PUSH [tag]",
											"value": "149"
										},
										{
											"begin": 611,
											"end": 656,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 611,
											"end": 656,
											"name": "tag",
											"value": "148"
										},
										{
											"begin": 611,
											"end": 656,
											"name": "JUMPDEST"
										},
										{
											"begin": 611,
											"end": 656,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 611,
											"end": 656,
											"name": "MLOAD"
										},
										{
											"begin": 611,
											"end": 656,
											"name": "DUP1"
										},
										{
											"begin": 611,
											"end": 656,
											"name": "DUP3"
										},
										{
											"begin": 611,
											"end": 656,
											"name": "DUP2"
										},
										{
											"begin": 611,
											"end": 656,
											"name": "MSTORE"
										},
										{
											"begin": 611,
											"end": 656,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 611,
											"end": 656,
											"name": "ADD"
										},
										{
											"begin": 611,
											"end": 656,
											"name": "SWAP2"
										},
										{
											"begin": 611,
											"end": 656,
											"name": "POP"
										},
										{
											"begin": 611,
											"end": 656,
											"name": "POP"
										},
										{
											"begin": 611,
											"end": 656,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 611,
											"end": 656,
											"name": "MLOAD"
										},
										{
											"begin": 611,
											"end": 656,
											"name": "DUP1"
										},
										{
											"begin": 611,
											"end": 656,
											"name": "SWAP2"
										},
										{
											"begin": 611,
											"end": 656,
											"name": "SUB"
										},
										{
											"begin": 611,
											"end": 656,
											"name": "SWAP1"
										},
										{
											"begin": 611,
											"end": 656,
											"name": "RETURN"
										},
										{
											"begin": 395,
											"end": 456,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 395,
											"end": 456,
											"name": "JUMPDEST"
										},
										{
											"begin": 395,
											"end": 456,
											"name": "PUSH [tag]",
											"value": "150"
										},
										{
											"begin": 395,
											"end": 456,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 395,
											"end": 456,
											"name": "DUP1"
										},
										{
											"begin": 395,
											"end": 456,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 395,
											"end": 456,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "151"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "151"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 395,
											"end": 456,
											"name": "DUP2"
										},
										{
											"begin": 395,
											"end": 456,
											"name": "ADD"
										},
										{
											"begin": 395,
											"end": 456,
											"name": "SWAP1"
										},
										{
											"begin": 395,
											"end": 456,
											"name": "DUP1"
										},
										{
											"begin": 395,
											"end": 456,
											"name": "DUP1"
										},
										{
											"begin": 395,
											"end": 456,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 395,
											"end": 456,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 395,
											"end": 456,
											"name": "AND"
										},
										{
											"begin": 395,
											"end": 456,
											"name": "SWAP1"
										},
										{
											"begin": 395,
											"end": 456,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 395,
											"end": 456,
											"name": "ADD"
										},
										{
											"begin": 395,
											"end": 456,
											"name": "SWAP1"
										},
										{
											"begin": 395,
											"end": 456,
											"name": "SWAP3"
										},
										{
											"begin": 395,
											"end": 456,
											"name": "SWAP2"
										},
										{
											"begin": 395,
											"end": 456,
											"name": "SWAP1"
										},
										{
											"begin": 395,
											"end": 456,
											"name": "DUP1"
										},
										{
											"begin": 395,
											"end": 456,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 395,
											"end": 456,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 395,
											"end": 456,
											"name": "AND"
										},
										{
											"begin": 395,
											"end": 456,
											"name": "SWAP1"
										},
										{
											"begin": 395,
											"end": 456,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 395,
											"end": 456,
											"name": "ADD"
										},
										{
											"begin": 395,
											"end": 456,
											"name": "SWAP1"
										},
										{
											"begin": 395,
											"end": 456,
											"name": "SWAP3"
										},
										{
											"begin": 395,
											"end": 456,
											"name": "SWAP2"
										},
										{
											"begin": 395,
											"end": 456,
											"name": "SWAP1"
										},
										{
											"begin": 395,
											"end": 456,
											"name": "POP"
										},
										{
											"begin": 395,
											"end": 456,
											"name": "POP"
										},
										{
											"begin": 395,
											"end": 456,
											"name": "POP"
										},
										{
											"begin": 395,
											"end": 456,
											"name": "PUSH [tag]",
											"value": "152"
										},
										{
											"begin": 395,
											"end": 456,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 395,
											"end": 456,
											"name": "tag",
											"value": "150"
										},
										{
											"begin": 395,
											"end": 456,
											"name": "JUMPDEST"
										},
										{
											"begin": 395,
											"end": 456,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 395,
											"end": 456,
											"name": "MLOAD"
										},
										{
											"begin": 395,
											"end": 456,
											"name": "DUP1"
										},
										{
											"begin": 395,
											"end": 456,
											"name": "DUP3"
										},
										{
											"begin": 395,
											"end": 456,
											"name": "DUP2"
										},
										{
											"begin": 395,
											"end": 456,
											"name": "MSTORE"
										},
										{
											"begin": 395,
											"end": 456,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 395,
											"end": 456,
											"name": "ADD"
										},
										{
											"begin": 395,
											"end": 456,
											"name": "SWAP2"
										},
										{
											"begin": 395,
											"end": 456,
											"name": "POP"
										},
										{
											"begin": 395,
											"end": 456,
											"name": "POP"
										},
										{
											"begin": 395,
											"end": 456,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 395,
											"end": 456,
											"name": "MLOAD"
										},
										{
											"begin": 395,
											"end": 456,
											"name": "DUP1"
										},
										{
											"begin": 395,
											"end": 456,
											"name": "SWAP2"
										},
										{
											"begin": 395,
											"end": 456,
											"name": "SUB"
										},
										{
											"begin": 395,
											"end": 456,
											"name": "SWAP1"
										},
										{
											"begin": 395,
											"end": 456,
											"name": "RETURN"
										},
										{
											"begin": 15507,
											"end": 15768,
											"name": "tag",
											"value": "40"
										},
										{
											"begin": 15507,
											"end": 15768,
											"name": "JUMPDEST"
										},
										{
											"begin": 15507,
											"end": 15768,
											"name": "PUSH [tag]",
											"value": "153"
										},
										{
											"begin": 15507,
											"end": 15768,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 15507,
											"end": 15768,
											"name": "DUP1"
										},
										{
											"begin": 15507,
											"end": 15768,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 15507,
											"end": 15768,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "154"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "154"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 15507,
											"end": 15768,
											"name": "DUP2"
										},
										{
											"begin": 15507,
											"end": 15768,
											"name": "ADD"
										},
										{
											"begin": 15507,
											"end": 15768,
											"name": "SWAP1"
										},
										{
											"begin": 15507,
											"end": 15768,
											"name": "DUP1"
										},
										{
											"begin": 15507,
											"end": 15768,
											"name": "DUP1"
										},
										{
											"begin": 15507,
											"end": 15768,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 15507,
											"end": 15768,
											"name": "SWAP1"
										},
										{
											"begin": 15507,
											"end": 15768,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15507,
											"end": 15768,
											"name": "ADD"
										},
										{
											"begin": 15507,
											"end": 15768,
											"name": "SWAP1"
										},
										{
											"begin": 15507,
											"end": 15768,
											"name": "SWAP3"
										},
										{
											"begin": 15507,
											"end": 15768,
											"name": "SWAP2"
										},
										{
											"begin": 15507,
											"end": 15768,
											"name": "SWAP1"
										},
										{
											"begin": 15507,
											"end": 15768,
											"name": "DUP1"
										},
										{
											"begin": 15507,
											"end": 15768,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 15507,
											"end": 15768,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15507,
											"end": 15768,
											"name": "AND"
										},
										{
											"begin": 15507,
											"end": 15768,
											"name": "SWAP1"
										},
										{
											"begin": 15507,
											"end": 15768,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15507,
											"end": 15768,
											"name": "ADD"
										},
										{
											"begin": 15507,
											"end": 15768,
											"name": "SWAP1"
										},
										{
											"begin": 15507,
											"end": 15768,
											"name": "SWAP3"
										},
										{
											"begin": 15507,
											"end": 15768,
											"name": "SWAP2"
										},
										{
											"begin": 15507,
											"end": 15768,
											"name": "SWAP1"
										},
										{
											"begin": 15507,
											"end": 15768,
											"name": "POP"
										},
										{
											"begin": 15507,
											"end": 15768,
											"name": "POP"
										},
										{
											"begin": 15507,
											"end": 15768,
											"name": "POP"
										},
										{
											"begin": 15507,
											"end": 15768,
											"name": "PUSH [tag]",
											"value": "155"
										},
										{
											"begin": 15507,
											"end": 15768,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 15507,
											"end": 15768,
											"name": "tag",
											"value": "153"
										},
										{
											"begin": 15507,
											"end": 15768,
											"name": "JUMPDEST"
										},
										{
											"begin": 15507,
											"end": 15768,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15507,
											"end": 15768,
											"name": "MLOAD"
										},
										{
											"begin": 15507,
											"end": 15768,
											"name": "DUP1"
										},
										{
											"begin": 15507,
											"end": 15768,
											"name": "DUP3"
										},
										{
											"begin": 15507,
											"end": 15768,
											"name": "DUP2"
										},
										{
											"begin": 15507,
											"end": 15768,
											"name": "MSTORE"
										},
										{
											"begin": 15507,
											"end": 15768,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15507,
											"end": 15768,
											"name": "ADD"
										},
										{
											"begin": 15507,
											"end": 15768,
											"name": "SWAP2"
										},
										{
											"begin": 15507,
											"end": 15768,
											"name": "POP"
										},
										{
											"begin": 15507,
											"end": 15768,
											"name": "POP"
										},
										{
											"begin": 15507,
											"end": 15768,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15507,
											"end": 15768,
											"name": "MLOAD"
										},
										{
											"begin": 15507,
											"end": 15768,
											"name": "DUP1"
										},
										{
											"begin": 15507,
											"end": 15768,
											"name": "SWAP2"
										},
										{
											"begin": 15507,
											"end": 15768,
											"name": "SUB"
										},
										{
											"begin": 15507,
											"end": 15768,
											"name": "SWAP1"
										},
										{
											"begin": 15507,
											"end": 15768,
											"name": "RETURN"
										},
										{
											"begin": 17752,
											"end": 18098,
											"name": "tag",
											"value": "41"
										},
										{
											"begin": 17752,
											"end": 18098,
											"name": "JUMPDEST"
										},
										{
											"begin": 17752,
											"end": 18098,
											"name": "PUSH [tag]",
											"value": "156"
										},
										{
											"begin": 17752,
											"end": 18098,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 17752,
											"end": 18098,
											"name": "DUP1"
										},
										{
											"begin": 17752,
											"end": 18098,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 17752,
											"end": 18098,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "157"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "157"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 17752,
											"end": 18098,
											"name": "DUP2"
										},
										{
											"begin": 17752,
											"end": 18098,
											"name": "ADD"
										},
										{
											"begin": 17752,
											"end": 18098,
											"name": "SWAP1"
										},
										{
											"begin": 17752,
											"end": 18098,
											"name": "DUP1"
										},
										{
											"begin": 17752,
											"end": 18098,
											"name": "DUP1"
										},
										{
											"begin": 17752,
											"end": 18098,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 17752,
											"end": 18098,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17752,
											"end": 18098,
											"name": "AND"
										},
										{
											"begin": 17752,
											"end": 18098,
											"name": "SWAP1"
										},
										{
											"begin": 17752,
											"end": 18098,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17752,
											"end": 18098,
											"name": "ADD"
										},
										{
											"begin": 17752,
											"end": 18098,
											"name": "SWAP1"
										},
										{
											"begin": 17752,
											"end": 18098,
											"name": "SWAP3"
										},
										{
											"begin": 17752,
											"end": 18098,
											"name": "SWAP2"
										},
										{
											"begin": 17752,
											"end": 18098,
											"name": "SWAP1"
										},
										{
											"begin": 17752,
											"end": 18098,
											"name": "DUP1"
										},
										{
											"begin": 17752,
											"end": 18098,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 17752,
											"end": 18098,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17752,
											"end": 18098,
											"name": "AND"
										},
										{
											"begin": 17752,
											"end": 18098,
											"name": "SWAP1"
										},
										{
											"begin": 17752,
											"end": 18098,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17752,
											"end": 18098,
											"name": "ADD"
										},
										{
											"begin": 17752,
											"end": 18098,
											"name": "SWAP1"
										},
										{
											"begin": 17752,
											"end": 18098,
											"name": "SWAP3"
										},
										{
											"begin": 17752,
											"end": 18098,
											"name": "SWAP2"
										},
										{
											"begin": 17752,
											"end": 18098,
											"name": "SWAP1"
										},
										{
											"begin": 17752,
											"end": 18098,
											"name": "POP"
										},
										{
											"begin": 17752,
											"end": 18098,
											"name": "POP"
										},
										{
											"begin": 17752,
											"end": 18098,
											"name": "POP"
										},
										{
											"begin": 17752,
											"end": 18098,
											"name": "PUSH [tag]",
											"value": "158"
										},
										{
											"begin": 17752,
											"end": 18098,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 17752,
											"end": 18098,
											"name": "tag",
											"value": "156"
										},
										{
											"begin": 17752,
											"end": 18098,
											"name": "JUMPDEST"
										},
										{
											"begin": 17752,
											"end": 18098,
											"name": "STOP"
										},
										{
											"begin": 17321,
											"end": 17631,
											"name": "tag",
											"value": "42"
										},
										{
											"begin": 17321,
											"end": 17631,
											"name": "JUMPDEST"
										},
										{
											"begin": 17321,
											"end": 17631,
											"name": "PUSH [tag]",
											"value": "159"
										},
										{
											"begin": 17321,
											"end": 17631,
											"name": "PUSH [tag]",
											"value": "160"
										},
										{
											"begin": 17321,
											"end": 17631,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 17321,
											"end": 17631,
											"name": "tag",
											"value": "159"
										},
										{
											"begin": 17321,
											"end": 17631,
											"name": "JUMPDEST"
										},
										{
											"begin": 17321,
											"end": 17631,
											"name": "STOP"
										},
										{
											"begin": 9279,
											"end": 9676,
											"name": "tag",
											"value": "55"
										},
										{
											"begin": 9279,
											"end": 9676,
											"name": "JUMPDEST"
										},
										{
											"begin": 9376,
											"end": 9404,
											"name": "PUSH [tag]",
											"value": "162"
										},
										{
											"begin": 9376,
											"end": 9404,
											"name": "PUSH [tag]",
											"value": "163"
										},
										{
											"begin": 9376,
											"end": 9404,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 9376,
											"end": 9404,
											"name": "tag",
											"value": "162"
										},
										{
											"begin": 9376,
											"end": 9404,
											"name": "JUMPDEST"
										},
										{
											"begin": 9407,
											"end": 9624,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9407,
											"end": 9624,
											"name": "MLOAD"
										},
										{
											"begin": 9407,
											"end": 9624,
											"name": "DUP1"
										},
										{
											"begin": 9407,
											"end": 9624,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 9407,
											"end": 9624,
											"name": "ADD"
										},
										{
											"begin": 9407,
											"end": 9624,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9407,
											"end": 9624,
											"name": "MSTORE"
										},
										{
											"begin": 9407,
											"end": 9624,
											"name": "DUP1"
										},
										{
											"begin": 9435,
											"end": 9441,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 9435,
											"end": 9441,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9435,
											"end": 9441,
											"name": "SWAP1"
										},
										{
											"begin": 9435,
											"end": 9441,
											"name": "SLOAD"
										},
										{
											"begin": 9435,
											"end": 9441,
											"name": "SWAP1"
										},
										{
											"begin": 9435,
											"end": 9441,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 9435,
											"end": 9441,
											"name": "EXP"
										},
										{
											"begin": 9435,
											"end": 9441,
											"name": "SWAP1"
										},
										{
											"begin": 9435,
											"end": 9441,
											"name": "DIV"
										},
										{
											"begin": 9435,
											"end": 9441,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9435,
											"end": 9441,
											"name": "AND"
										},
										{
											"begin": 9407,
											"end": 9624,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9407,
											"end": 9624,
											"name": "AND"
										},
										{
											"begin": 9407,
											"end": 9624,
											"name": "DUP2"
										},
										{
											"begin": 9407,
											"end": 9624,
											"name": "MSTORE"
										},
										{
											"begin": 9407,
											"end": 9624,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9407,
											"end": 9624,
											"name": "ADD"
										},
										{
											"begin": 9458,
											"end": 9464,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 9458,
											"end": 9464,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9458,
											"end": 9464,
											"name": "SWAP1"
										},
										{
											"begin": 9458,
											"end": 9464,
											"name": "SLOAD"
										},
										{
											"begin": 9458,
											"end": 9464,
											"name": "SWAP1"
										},
										{
											"begin": 9458,
											"end": 9464,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 9458,
											"end": 9464,
											"name": "EXP"
										},
										{
											"begin": 9458,
											"end": 9464,
											"name": "SWAP1"
										},
										{
											"begin": 9458,
											"end": 9464,
											"name": "DIV"
										},
										{
											"begin": 9458,
											"end": 9464,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9458,
											"end": 9464,
											"name": "AND"
										},
										{
											"begin": 9407,
											"end": 9624,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9407,
											"end": 9624,
											"name": "AND"
										},
										{
											"begin": 9407,
											"end": 9624,
											"name": "DUP2"
										},
										{
											"begin": 9407,
											"end": 9624,
											"name": "MSTORE"
										},
										{
											"begin": 9407,
											"end": 9624,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9407,
											"end": 9624,
											"name": "ADD"
										},
										{
											"begin": 9485,
											"end": 9495,
											"name": "DUP8"
										},
										{
											"begin": 9407,
											"end": 9624,
											"name": "DUP2"
										},
										{
											"begin": 9407,
											"end": 9624,
											"name": "MSTORE"
										},
										{
											"begin": 9407,
											"end": 9624,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9407,
											"end": 9624,
											"name": "ADD"
										},
										{
											"begin": 9516,
											"end": 9526,
											"name": "DUP7"
										},
										{
											"begin": 9407,
											"end": 9624,
											"name": "DUP2"
										},
										{
											"begin": 9407,
											"end": 9624,
											"name": "MSTORE"
										},
										{
											"begin": 9407,
											"end": 9624,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9407,
											"end": 9624,
											"name": "ADD"
										},
										{
											"begin": 9545,
											"end": 9546,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9407,
											"end": 9624,
											"name": "DUP2"
										},
										{
											"begin": 9407,
											"end": 9624,
											"name": "MSTORE"
										},
										{
											"begin": 9407,
											"end": 9624,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9407,
											"end": 9624,
											"name": "ADD"
										},
										{
											"begin": 9565,
											"end": 9566,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9407,
											"end": 9624,
											"name": "DUP2"
										},
										{
											"begin": 9407,
											"end": 9624,
											"name": "MSTORE"
										},
										{
											"begin": 9407,
											"end": 9624,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9407,
											"end": 9624,
											"name": "ADD"
										},
										{
											"begin": 9590,
											"end": 9591,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9407,
											"end": 9624,
											"name": "DUP2"
										},
										{
											"begin": 9407,
											"end": 9624,
											"name": "MSTORE"
										},
										{
											"begin": 9407,
											"end": 9624,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9407,
											"end": 9624,
											"name": "ADD"
										},
										{
											"begin": 9615,
											"end": 9616,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9407,
											"end": 9624,
											"name": "DUP2"
										},
										{
											"begin": 9407,
											"end": 9624,
											"name": "MSTORE"
										},
										{
											"begin": 9407,
											"end": 9624,
											"name": "POP"
										},
										{
											"begin": 9376,
											"end": 9624,
											"name": "SWAP1"
										},
										{
											"begin": 9376,
											"end": 9624,
											"name": "POP"
										},
										{
											"begin": 9631,
											"end": 9670,
											"name": "PUSH [tag]",
											"value": "164"
										},
										{
											"begin": 9637,
											"end": 9647,
											"name": "DUP2"
										},
										{
											"begin": 9649,
											"end": 9651,
											"name": "DUP6"
										},
										{
											"begin": 9653,
											"end": 9657,
											"name": "DUP6"
										},
										{
											"begin": 9653,
											"end": 9657,
											"name": "DUP6"
										},
										{
											"begin": 9631,
											"end": 9670,
											"name": "DUP1"
										},
										{
											"begin": 9631,
											"end": 9670,
											"name": "DUP1"
										},
										{
											"begin": 9631,
											"end": 9670,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 9631,
											"end": 9670,
											"name": "ADD"
										},
										{
											"begin": 9631,
											"end": 9670,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9631,
											"end": 9670,
											"name": "DUP1"
										},
										{
											"begin": 9631,
											"end": 9670,
											"name": "SWAP2"
										},
										{
											"begin": 9631,
											"end": 9670,
											"name": "DIV"
										},
										{
											"begin": 9631,
											"end": 9670,
											"name": "MUL"
										},
										{
											"begin": 9631,
											"end": 9670,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9631,
											"end": 9670,
											"name": "ADD"
										},
										{
											"begin": 9631,
											"end": 9670,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9631,
											"end": 9670,
											"name": "MLOAD"
										},
										{
											"begin": 9631,
											"end": 9670,
											"name": "SWAP1"
										},
										{
											"begin": 9631,
											"end": 9670,
											"name": "DUP2"
										},
										{
											"begin": 9631,
											"end": 9670,
											"name": "ADD"
										},
										{
											"begin": 9631,
											"end": 9670,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9631,
											"end": 9670,
											"name": "MSTORE"
										},
										{
											"begin": 9631,
											"end": 9670,
											"name": "DUP1"
										},
										{
											"begin": 9631,
											"end": 9670,
											"name": "SWAP4"
										},
										{
											"begin": 9631,
											"end": 9670,
											"name": "SWAP3"
										},
										{
											"begin": 9631,
											"end": 9670,
											"name": "SWAP2"
										},
										{
											"begin": 9631,
											"end": 9670,
											"name": "SWAP1"
										},
										{
											"begin": 9631,
											"end": 9670,
											"name": "DUP2"
										},
										{
											"begin": 9631,
											"end": 9670,
											"name": "DUP2"
										},
										{
											"begin": 9631,
											"end": 9670,
											"name": "MSTORE"
										},
										{
											"begin": 9631,
											"end": 9670,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9631,
											"end": 9670,
											"name": "ADD"
										},
										{
											"begin": 9631,
											"end": 9670,
											"name": "DUP4"
										},
										{
											"begin": 9631,
											"end": 9670,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 33,
											"name": "DUP1"
										},
										{
											"begin": 22,
											"end": 28,
											"name": "DUP3"
										},
										{
											"begin": 14,
											"end": 20,
											"name": "DUP5"
										},
										{
											"begin": 1,
											"end": 34,
											"name": "CALLDATACOPY"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 93,
											"end": 96,
											"name": "DUP2"
										},
										{
											"begin": 85,
											"end": 91,
											"name": "DUP5"
										},
										{
											"begin": 81,
											"end": 97,
											"name": "ADD"
										},
										{
											"begin": 74,
											"end": 101,
											"name": "MSTORE"
										},
										{
											"begin": 137,
											"end": 141,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 133,
											"end": 142,
											"name": "NOT"
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 121,
											"end": 124,
											"name": "DUP3"
										},
										{
											"begin": 117,
											"end": 131,
											"name": "ADD"
										},
										{
											"begin": 113,
											"end": 143,
											"name": "AND"
										},
										{
											"begin": 106,
											"end": 143,
											"name": "SWAP1"
										},
										{
											"begin": 106,
											"end": 143,
											"name": "POP"
										},
										{
											"begin": 169,
											"end": 172,
											"name": "DUP1"
										},
										{
											"begin": 161,
											"end": 167,
											"name": "DUP4"
										},
										{
											"begin": 157,
											"end": 173,
											"name": "ADD"
										},
										{
											"begin": 147,
											"end": 173,
											"name": "SWAP3"
										},
										{
											"begin": 147,
											"end": 173,
											"name": "POP"
										},
										{
											"begin": 9631,
											"end": 9670,
											"name": "POP"
										},
										{
											"begin": 9631,
											"end": 9670,
											"name": "POP"
										},
										{
											"begin": 9631,
											"end": 9670,
											"name": "POP"
										},
										{
											"begin": 9631,
											"end": 9670,
											"name": "POP"
										},
										{
											"begin": 9631,
											"end": 9670,
											"name": "POP"
										},
										{
											"begin": 9631,
											"end": 9670,
											"name": "POP"
										},
										{
											"begin": 9667,
											"end": 9668,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9631,
											"end": 9636,
											"name": "PUSH [tag]",
											"value": "165"
										},
										{
											"begin": 9631,
											"end": 9670,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 9631,
											"end": 9670,
											"name": "tag",
											"value": "164"
										},
										{
											"begin": 9631,
											"end": 9670,
											"name": "JUMPDEST"
										},
										{
											"begin": 9279,
											"end": 9676,
											"name": "POP"
										},
										{
											"begin": 9279,
											"end": 9676,
											"name": "POP"
										},
										{
											"begin": 9279,
											"end": 9676,
											"name": "POP"
										},
										{
											"begin": 9279,
											"end": 9676,
											"name": "POP"
										},
										{
											"begin": 9279,
											"end": 9676,
											"name": "POP"
										},
										{
											"begin": 9279,
											"end": 9676,
											"name": "POP"
										},
										{
											"begin": 9279,
											"end": 9676,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "tag",
											"value": "57"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "JUMPDEST"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "MLOAD"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "DUP1"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "ADD"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "MSTORE"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "DUP1"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "DUP2"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "MSTORE"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "ADD"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "PUSH",
											"value": "43616D656C6F74204C5000000000000000000000000000000000000000000000"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "DUP2"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "MSTORE"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "POP"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "DUP2"
										},
										{
											"begin": 177,
											"end": 219,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1644,
											"end": 1924,
											"name": "tag",
											"value": "63"
										},
										{
											"begin": 1644,
											"end": 1924,
											"name": "JUMPDEST"
										},
										{
											"begin": 1688,
											"end": 1705,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1707,
											"end": 1724,
											"name": "DUP1"
										},
										{
											"begin": 1726,
											"end": 1750,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1752,
											"end": 1776,
											"name": "DUP1"
										},
										{
											"begin": 1797,
											"end": 1805,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 1797,
											"end": 1805,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1797,
											"end": 1805,
											"name": "SWAP1"
										},
										{
											"begin": 1797,
											"end": 1805,
											"name": "SLOAD"
										},
										{
											"begin": 1797,
											"end": 1805,
											"name": "SWAP1"
										},
										{
											"begin": 1797,
											"end": 1805,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1797,
											"end": 1805,
											"name": "EXP"
										},
										{
											"begin": 1797,
											"end": 1805,
											"name": "SWAP1"
										},
										{
											"begin": 1797,
											"end": 1805,
											"name": "DIV"
										},
										{
											"begin": 1797,
											"end": 1805,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1797,
											"end": 1805,
											"name": "AND"
										},
										{
											"begin": 1785,
											"end": 1805,
											"name": "SWAP4"
										},
										{
											"begin": 1785,
											"end": 1805,
											"name": "POP"
										},
										{
											"begin": 1824,
											"end": 1832,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 1824,
											"end": 1832,
											"name": "PUSH",
											"value": "E"
										},
										{
											"begin": 1824,
											"end": 1832,
											"name": "SWAP1"
										},
										{
											"begin": 1824,
											"end": 1832,
											"name": "SLOAD"
										},
										{
											"begin": 1824,
											"end": 1832,
											"name": "SWAP1"
										},
										{
											"begin": 1824,
											"end": 1832,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1824,
											"end": 1832,
											"name": "EXP"
										},
										{
											"begin": 1824,
											"end": 1832,
											"name": "SWAP1"
										},
										{
											"begin": 1824,
											"end": 1832,
											"name": "DIV"
										},
										{
											"begin": 1824,
											"end": 1832,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1824,
											"end": 1832,
											"name": "AND"
										},
										{
											"begin": 1812,
											"end": 1832,
											"name": "SWAP3"
										},
										{
											"begin": 1812,
											"end": 1832,
											"name": "POP"
										},
										{
											"begin": 1859,
											"end": 1875,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 1859,
											"end": 1875,
											"name": "PUSH",
											"value": "1C"
										},
										{
											"begin": 1859,
											"end": 1875,
											"name": "SWAP1"
										},
										{
											"begin": 1859,
											"end": 1875,
											"name": "SLOAD"
										},
										{
											"begin": 1859,
											"end": 1875,
											"name": "SWAP1"
										},
										{
											"begin": 1859,
											"end": 1875,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1859,
											"end": 1875,
											"name": "EXP"
										},
										{
											"begin": 1859,
											"end": 1875,
											"name": "SWAP1"
										},
										{
											"begin": 1859,
											"end": 1875,
											"name": "DIV"
										},
										{
											"begin": 1859,
											"end": 1875,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 1859,
											"end": 1875,
											"name": "AND"
										},
										{
											"begin": 1839,
											"end": 1875,
											"name": "SWAP2"
										},
										{
											"begin": 1839,
											"end": 1875,
											"name": "POP"
										},
										{
											"begin": 1902,
											"end": 1918,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 1902,
											"end": 1918,
											"name": "PUSH",
											"value": "1E"
										},
										{
											"begin": 1902,
											"end": 1918,
											"name": "SWAP1"
										},
										{
											"begin": 1902,
											"end": 1918,
											"name": "SLOAD"
										},
										{
											"begin": 1902,
											"end": 1918,
											"name": "SWAP1"
										},
										{
											"begin": 1902,
											"end": 1918,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1902,
											"end": 1918,
											"name": "EXP"
										},
										{
											"begin": 1902,
											"end": 1918,
											"name": "SWAP1"
										},
										{
											"begin": 1902,
											"end": 1918,
											"name": "DIV"
										},
										{
											"begin": 1902,
											"end": 1918,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 1902,
											"end": 1918,
											"name": "AND"
										},
										{
											"begin": 1882,
											"end": 1918,
											"name": "SWAP1"
										},
										{
											"begin": 1882,
											"end": 1918,
											"name": "POP"
										},
										{
											"begin": 1644,
											"end": 1924,
											"name": "SWAP1"
										},
										{
											"begin": 1644,
											"end": 1924,
											"name": "SWAP2"
										},
										{
											"begin": 1644,
											"end": 1924,
											"name": "SWAP3"
										},
										{
											"begin": 1644,
											"end": 1924,
											"name": "SWAP4"
										},
										{
											"begin": 1644,
											"end": 1924,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2225,
											"end": 2372,
											"name": "tag",
											"value": "66"
										},
										{
											"begin": 2225,
											"end": 2372,
											"name": "JUMPDEST"
										},
										{
											"begin": 2289,
											"end": 2293,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2306,
											"end": 2342,
											"name": "PUSH [tag]",
											"value": "168"
										},
										{
											"begin": 2315,
											"end": 2325,
											"name": "CALLER"
										},
										{
											"begin": 2327,
											"end": 2334,
											"name": "DUP5"
										},
										{
											"begin": 2336,
											"end": 2341,
											"name": "DUP5"
										},
										{
											"begin": 2306,
											"end": 2314,
											"name": "PUSH [tag]",
											"value": "169"
										},
										{
											"begin": 2306,
											"end": 2342,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2306,
											"end": 2342,
											"name": "tag",
											"value": "168"
										},
										{
											"begin": 2306,
											"end": 2342,
											"name": "JUMPDEST"
										},
										{
											"begin": 2360,
											"end": 2364,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2353,
											"end": 2364,
											"name": "SWAP1"
										},
										{
											"begin": 2353,
											"end": 2364,
											"name": "POP"
										},
										{
											"begin": 2225,
											"end": 2372,
											"name": "SWAP3"
										},
										{
											"begin": 2225,
											"end": 2372,
											"name": "SWAP2"
										},
										{
											"begin": 2225,
											"end": 2372,
											"name": "POP"
										},
										{
											"begin": 2225,
											"end": 2372,
											"name": "POP"
										},
										{
											"begin": 2225,
											"end": 2372,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 527,
											"end": 548,
											"name": "tag",
											"value": "68"
										},
										{
											"begin": 527,
											"end": 548,
											"name": "JUMPDEST"
										},
										{
											"begin": 527,
											"end": 548,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 527,
											"end": 548,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 527,
											"end": 548,
											"name": "SWAP1"
										},
										{
											"begin": 527,
											"end": 548,
											"name": "SLOAD"
										},
										{
											"begin": 527,
											"end": 548,
											"name": "SWAP1"
										},
										{
											"begin": 527,
											"end": 548,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 527,
											"end": 548,
											"name": "EXP"
										},
										{
											"begin": 527,
											"end": 548,
											"name": "SWAP1"
										},
										{
											"begin": 527,
											"end": 548,
											"name": "DIV"
										},
										{
											"begin": 527,
											"end": 548,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 527,
											"end": 548,
											"name": "AND"
										},
										{
											"begin": 527,
											"end": 548,
											"name": "DUP2"
										},
										{
											"begin": 527,
											"end": 548,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 581,
											"end": 604,
											"name": "tag",
											"value": "70"
										},
										{
											"begin": 581,
											"end": 604,
											"name": "JUMPDEST"
										},
										{
											"begin": 581,
											"end": 604,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 581,
											"end": 604,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 581,
											"end": 604,
											"name": "SWAP1"
										},
										{
											"begin": 581,
											"end": 604,
											"name": "SLOAD"
										},
										{
											"begin": 581,
											"end": 604,
											"name": "SWAP1"
										},
										{
											"begin": 581,
											"end": 604,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 581,
											"end": 604,
											"name": "EXP"
										},
										{
											"begin": 581,
											"end": 604,
											"name": "SWAP1"
										},
										{
											"begin": 581,
											"end": 604,
											"name": "DIV"
										},
										{
											"begin": 581,
											"end": 604,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 581,
											"end": 604,
											"name": "AND"
										},
										{
											"begin": 581,
											"end": 604,
											"name": "DUP2"
										},
										{
											"begin": 581,
											"end": 604,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 316,
											"end": 340,
											"name": "tag",
											"value": "72"
										},
										{
											"begin": 316,
											"end": 340,
											"name": "JUMPDEST"
										},
										{
											"begin": 316,
											"end": 340,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 316,
											"end": 340,
											"name": "SLOAD"
										},
										{
											"begin": 316,
											"end": 340,
											"name": "DUP2"
										},
										{
											"begin": 316,
											"end": 340,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2527,
											"end": 2926,
											"name": "tag",
											"value": "75"
										},
										{
											"begin": 2527,
											"end": 2926,
											"name": "JUMPDEST"
										},
										{
											"begin": 2605,
											"end": 2609,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2662,
											"end": 2664,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2626,
											"end": 2635,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2626,
											"end": 2641,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2636,
											"end": 2640,
											"name": "DUP7"
										},
										{
											"begin": 2626,
											"end": 2641,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2626,
											"end": 2641,
											"name": "AND"
										},
										{
											"begin": 2626,
											"end": 2641,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2626,
											"end": 2641,
											"name": "AND"
										},
										{
											"begin": 2626,
											"end": 2641,
											"name": "DUP2"
										},
										{
											"begin": 2626,
											"end": 2641,
											"name": "MSTORE"
										},
										{
											"begin": 2626,
											"end": 2641,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2626,
											"end": 2641,
											"name": "ADD"
										},
										{
											"begin": 2626,
											"end": 2641,
											"name": "SWAP1"
										},
										{
											"begin": 2626,
											"end": 2641,
											"name": "DUP2"
										},
										{
											"begin": 2626,
											"end": 2641,
											"name": "MSTORE"
										},
										{
											"begin": 2626,
											"end": 2641,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2626,
											"end": 2641,
											"name": "ADD"
										},
										{
											"begin": 2626,
											"end": 2641,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2626,
											"end": 2641,
											"name": "KECCAK256"
										},
										{
											"begin": 2626,
											"end": 2653,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2642,
											"end": 2652,
											"name": "CALLER"
										},
										{
											"begin": 2626,
											"end": 2653,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2626,
											"end": 2653,
											"name": "AND"
										},
										{
											"begin": 2626,
											"end": 2653,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2626,
											"end": 2653,
											"name": "AND"
										},
										{
											"begin": 2626,
											"end": 2653,
											"name": "DUP2"
										},
										{
											"begin": 2626,
											"end": 2653,
											"name": "MSTORE"
										},
										{
											"begin": 2626,
											"end": 2653,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2626,
											"end": 2653,
											"name": "ADD"
										},
										{
											"begin": 2626,
											"end": 2653,
											"name": "SWAP1"
										},
										{
											"begin": 2626,
											"end": 2653,
											"name": "DUP2"
										},
										{
											"begin": 2626,
											"end": 2653,
											"name": "MSTORE"
										},
										{
											"begin": 2626,
											"end": 2653,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2626,
											"end": 2653,
											"name": "ADD"
										},
										{
											"begin": 2626,
											"end": 2653,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2626,
											"end": 2653,
											"name": "KECCAK256"
										},
										{
											"begin": 2626,
											"end": 2653,
											"name": "SLOAD"
										},
										{
											"begin": 2626,
											"end": 2665,
											"name": "EQ"
										},
										{
											"begin": 2622,
											"end": 2860,
											"name": "PUSH [tag]",
											"value": "171"
										},
										{
											"begin": 2622,
											"end": 2860,
											"name": "JUMPI"
										},
										{
											"begin": 2682,
											"end": 2696,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2699,
											"end": 2737,
											"name": "PUSH [tag]",
											"value": "172"
										},
										{
											"begin": 2731,
											"end": 2736,
											"name": "DUP4"
										},
										{
											"begin": 2699,
											"end": 2708,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2699,
											"end": 2714,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2709,
											"end": 2713,
											"name": "DUP9"
										},
										{
											"begin": 2699,
											"end": 2714,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2699,
											"end": 2714,
											"name": "AND"
										},
										{
											"begin": 2699,
											"end": 2714,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2699,
											"end": 2714,
											"name": "AND"
										},
										{
											"begin": 2699,
											"end": 2714,
											"name": "DUP2"
										},
										{
											"begin": 2699,
											"end": 2714,
											"name": "MSTORE"
										},
										{
											"begin": 2699,
											"end": 2714,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2699,
											"end": 2714,
											"name": "ADD"
										},
										{
											"begin": 2699,
											"end": 2714,
											"name": "SWAP1"
										},
										{
											"begin": 2699,
											"end": 2714,
											"name": "DUP2"
										},
										{
											"begin": 2699,
											"end": 2714,
											"name": "MSTORE"
										},
										{
											"begin": 2699,
											"end": 2714,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2699,
											"end": 2714,
											"name": "ADD"
										},
										{
											"begin": 2699,
											"end": 2714,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2699,
											"end": 2714,
											"name": "KECCAK256"
										},
										{
											"begin": 2699,
											"end": 2726,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2715,
											"end": 2725,
											"name": "CALLER"
										},
										{
											"begin": 2699,
											"end": 2726,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2699,
											"end": 2726,
											"name": "AND"
										},
										{
											"begin": 2699,
											"end": 2726,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2699,
											"end": 2726,
											"name": "AND"
										},
										{
											"begin": 2699,
											"end": 2726,
											"name": "DUP2"
										},
										{
											"begin": 2699,
											"end": 2726,
											"name": "MSTORE"
										},
										{
											"begin": 2699,
											"end": 2726,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2699,
											"end": 2726,
											"name": "ADD"
										},
										{
											"begin": 2699,
											"end": 2726,
											"name": "SWAP1"
										},
										{
											"begin": 2699,
											"end": 2726,
											"name": "DUP2"
										},
										{
											"begin": 2699,
											"end": 2726,
											"name": "MSTORE"
										},
										{
											"begin": 2699,
											"end": 2726,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2699,
											"end": 2726,
											"name": "ADD"
										},
										{
											"begin": 2699,
											"end": 2726,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2699,
											"end": 2726,
											"name": "KECCAK256"
										},
										{
											"begin": 2699,
											"end": 2726,
											"name": "SLOAD"
										},
										{
											"begin": 2699,
											"end": 2730,
											"name": "PUSH [tag]",
											"value": "173"
										},
										{
											"begin": 2699,
											"end": 2730,
											"name": "SWAP1"
										},
										{
											"begin": 2699,
											"end": 2737,
											"name": "SWAP2"
										},
										{
											"begin": 2699,
											"end": 2737,
											"name": "SWAP1"
										},
										{
											"begin": 2699,
											"end": 2737,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 2699,
											"end": 2737,
											"name": "AND"
										},
										{
											"begin": 2699,
											"end": 2737,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2699,
											"end": 2737,
											"name": "tag",
											"value": "172"
										},
										{
											"begin": 2699,
											"end": 2737,
											"name": "JUMPDEST"
										},
										{
											"begin": 2682,
											"end": 2737,
											"name": "SWAP1"
										},
										{
											"begin": 2682,
											"end": 2737,
											"name": "POP"
										},
										{
											"begin": 2782,
											"end": 2791,
											"name": "DUP1"
										},
										{
											"begin": 2752,
											"end": 2761,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2752,
											"end": 2767,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2762,
											"end": 2766,
											"name": "DUP8"
										},
										{
											"begin": 2752,
											"end": 2767,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2752,
											"end": 2767,
											"name": "AND"
										},
										{
											"begin": 2752,
											"end": 2767,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2752,
											"end": 2767,
											"name": "AND"
										},
										{
											"begin": 2752,
											"end": 2767,
											"name": "DUP2"
										},
										{
											"begin": 2752,
											"end": 2767,
											"name": "MSTORE"
										},
										{
											"begin": 2752,
											"end": 2767,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2752,
											"end": 2767,
											"name": "ADD"
										},
										{
											"begin": 2752,
											"end": 2767,
											"name": "SWAP1"
										},
										{
											"begin": 2752,
											"end": 2767,
											"name": "DUP2"
										},
										{
											"begin": 2752,
											"end": 2767,
											"name": "MSTORE"
										},
										{
											"begin": 2752,
											"end": 2767,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2752,
											"end": 2767,
											"name": "ADD"
										},
										{
											"begin": 2752,
											"end": 2767,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2752,
											"end": 2767,
											"name": "KECCAK256"
										},
										{
											"begin": 2752,
											"end": 2779,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2768,
											"end": 2778,
											"name": "CALLER"
										},
										{
											"begin": 2752,
											"end": 2779,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2752,
											"end": 2779,
											"name": "AND"
										},
										{
											"begin": 2752,
											"end": 2779,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2752,
											"end": 2779,
											"name": "AND"
										},
										{
											"begin": 2752,
											"end": 2779,
											"name": "DUP2"
										},
										{
											"begin": 2752,
											"end": 2779,
											"name": "MSTORE"
										},
										{
											"begin": 2752,
											"end": 2779,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2752,
											"end": 2779,
											"name": "ADD"
										},
										{
											"begin": 2752,
											"end": 2779,
											"name": "SWAP1"
										},
										{
											"begin": 2752,
											"end": 2779,
											"name": "DUP2"
										},
										{
											"begin": 2752,
											"end": 2779,
											"name": "MSTORE"
										},
										{
											"begin": 2752,
											"end": 2779,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2752,
											"end": 2779,
											"name": "ADD"
										},
										{
											"begin": 2752,
											"end": 2779,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2752,
											"end": 2779,
											"name": "KECCAK256"
										},
										{
											"begin": 2752,
											"end": 2791,
											"name": "DUP2"
										},
										{
											"begin": 2752,
											"end": 2791,
											"name": "SWAP1"
										},
										{
											"begin": 2752,
											"end": 2791,
											"name": "SSTORE"
										},
										{
											"begin": 2752,
											"end": 2791,
											"name": "POP"
										},
										{
											"begin": 2826,
											"end": 2836,
											"name": "CALLER"
										},
										{
											"begin": 2811,
											"end": 2848,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2811,
											"end": 2848,
											"name": "AND"
										},
										{
											"begin": 2820,
											"end": 2824,
											"name": "DUP6"
										},
										{
											"begin": 2811,
											"end": 2848,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2811,
											"end": 2848,
											"name": "AND"
										},
										{
											"begin": 2811,
											"end": 2848,
											"name": "PUSH",
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 2838,
											"end": 2847,
											"name": "DUP4"
										},
										{
											"begin": 2811,
											"end": 2848,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2811,
											"end": 2848,
											"name": "MLOAD"
										},
										{
											"begin": 2811,
											"end": 2848,
											"name": "DUP1"
										},
										{
											"begin": 2811,
											"end": 2848,
											"name": "DUP3"
										},
										{
											"begin": 2811,
											"end": 2848,
											"name": "DUP2"
										},
										{
											"begin": 2811,
											"end": 2848,
											"name": "MSTORE"
										},
										{
											"begin": 2811,
											"end": 2848,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2811,
											"end": 2848,
											"name": "ADD"
										},
										{
											"begin": 2811,
											"end": 2848,
											"name": "SWAP2"
										},
										{
											"begin": 2811,
											"end": 2848,
											"name": "POP"
										},
										{
											"begin": 2811,
											"end": 2848,
											"name": "POP"
										},
										{
											"begin": 2811,
											"end": 2848,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2811,
											"end": 2848,
											"name": "MLOAD"
										},
										{
											"begin": 2811,
											"end": 2848,
											"name": "DUP1"
										},
										{
											"begin": 2811,
											"end": 2848,
											"name": "SWAP2"
										},
										{
											"begin": 2811,
											"end": 2848,
											"name": "SUB"
										},
										{
											"begin": 2811,
											"end": 2848,
											"name": "SWAP1"
										},
										{
											"begin": 2811,
											"end": 2848,
											"name": "LOG3"
										},
										{
											"begin": 2622,
											"end": 2860,
											"name": "POP"
										},
										{
											"begin": 2622,
											"end": 2860,
											"name": "tag",
											"value": "171"
										},
										{
											"begin": 2622,
											"end": 2860,
											"name": "JUMPDEST"
										},
										{
											"begin": 2870,
											"end": 2896,
											"name": "PUSH [tag]",
											"value": "174"
										},
										{
											"begin": 2880,
											"end": 2884,
											"name": "DUP5"
										},
										{
											"begin": 2886,
											"end": 2888,
											"name": "DUP5"
										},
										{
											"begin": 2890,
											"end": 2895,
											"name": "DUP5"
										},
										{
											"begin": 2870,
											"end": 2879,
											"name": "PUSH [tag]",
											"value": "175"
										},
										{
											"begin": 2870,
											"end": 2896,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2870,
											"end": 2896,
											"name": "tag",
											"value": "174"
										},
										{
											"begin": 2870,
											"end": 2896,
											"name": "JUMPDEST"
										},
										{
											"begin": 2914,
											"end": 2918,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2907,
											"end": 2918,
											"name": "SWAP1"
										},
										{
											"begin": 2907,
											"end": 2918,
											"name": "POP"
										},
										{
											"begin": 2527,
											"end": 2926,
											"name": "SWAP4"
										},
										{
											"begin": 2527,
											"end": 2926,
											"name": "SWAP3"
										},
										{
											"begin": 2527,
											"end": 2926,
											"name": "POP"
										},
										{
											"begin": 2527,
											"end": 2926,
											"name": "POP"
										},
										{
											"begin": 2527,
											"end": 2926,
											"name": "POP"
										},
										{
											"begin": 2527,
											"end": 2926,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1180,
											"end": 1212,
											"name": "tag",
											"value": "77"
										},
										{
											"begin": 1180,
											"end": 1212,
											"name": "JUMPDEST"
										},
										{
											"begin": 1180,
											"end": 1212,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 1180,
											"end": 1212,
											"name": "SLOAD"
										},
										{
											"begin": 1180,
											"end": 1212,
											"name": "DUP2"
										},
										{
											"begin": 1180,
											"end": 1212,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1025,
											"end": 1061,
											"name": "tag",
											"value": "79"
										},
										{
											"begin": 1025,
											"end": 1061,
											"name": "JUMPDEST"
										},
										{
											"begin": 1025,
											"end": 1061,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 1025,
											"end": 1061,
											"name": "PUSH",
											"value": "1E"
										},
										{
											"begin": 1025,
											"end": 1061,
											"name": "SWAP1"
										},
										{
											"begin": 1025,
											"end": 1061,
											"name": "SLOAD"
										},
										{
											"begin": 1025,
											"end": 1061,
											"name": "SWAP1"
										},
										{
											"begin": 1025,
											"end": 1061,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1025,
											"end": 1061,
											"name": "EXP"
										},
										{
											"begin": 1025,
											"end": 1061,
											"name": "SWAP1"
										},
										{
											"begin": 1025,
											"end": 1061,
											"name": "DIV"
										},
										{
											"begin": 1025,
											"end": 1061,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 1025,
											"end": 1061,
											"name": "AND"
										},
										{
											"begin": 1025,
											"end": 1061,
											"name": "DUP2"
										},
										{
											"begin": 1025,
											"end": 1061,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4068,
											"end": 4682,
											"name": "tag",
											"value": "82"
										},
										{
											"begin": 4068,
											"end": 4682,
											"name": "JUMPDEST"
										},
										{
											"begin": 1569,
											"end": 1570,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1557,
											"end": 1565,
											"name": "PUSH",
											"value": "D"
										},
										{
											"begin": 1557,
											"end": 1565,
											"name": "SLOAD"
										},
										{
											"begin": 1557,
											"end": 1570,
											"name": "EQ"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "PUSH [tag]",
											"value": "177"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "JUMPI"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "MLOAD"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "DUP2"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "MSTORE"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "ADD"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "DUP1"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "DUP1"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "ADD"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "DUP3"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "DUP2"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "SUB"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "DUP3"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "MSTORE"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "PUSH",
											"value": "B"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "DUP2"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "MSTORE"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "ADD"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "DUP1"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "PUSH",
											"value": "31306B3A204C4F434B4544000000000000000000000000000000000000000000"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "DUP2"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "MSTORE"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "POP"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "ADD"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "SWAP2"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "POP"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "POP"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "MLOAD"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "DUP1"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "SWAP2"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "SUB"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "SWAP1"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "REVERT"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "tag",
											"value": "177"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "JUMPDEST"
										},
										{
											"begin": 1604,
											"end": 1605,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1593,
											"end": 1601,
											"name": "PUSH",
											"value": "D"
										},
										{
											"begin": 1593,
											"end": 1605,
											"name": "DUP2"
										},
										{
											"begin": 1593,
											"end": 1605,
											"name": "SWAP1"
										},
										{
											"begin": 1593,
											"end": 1605,
											"name": "SSTORE"
										},
										{
											"begin": 1593,
											"end": 1605,
											"name": "POP"
										},
										{
											"begin": 4217,
											"end": 4224,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 4217,
											"end": 4224,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4217,
											"end": 4224,
											"name": "SWAP1"
										},
										{
											"begin": 4217,
											"end": 4224,
											"name": "SLOAD"
										},
										{
											"begin": 4217,
											"end": 4224,
											"name": "SWAP1"
										},
										{
											"begin": 4217,
											"end": 4224,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 4217,
											"end": 4224,
											"name": "EXP"
										},
										{
											"begin": 4217,
											"end": 4224,
											"name": "SWAP1"
										},
										{
											"begin": 4217,
											"end": 4224,
											"name": "DIV"
										},
										{
											"begin": 4217,
											"end": 4224,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4217,
											"end": 4224,
											"name": "AND"
										},
										{
											"begin": 4199,
											"end": 4240,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4199,
											"end": 4240,
											"name": "AND"
										},
										{
											"begin": 4199,
											"end": 4240,
											"name": "PUSH",
											"value": "FC39026A"
										},
										{
											"begin": 4199,
											"end": 4242,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4199,
											"end": 4242,
											"name": "MLOAD"
										},
										{
											"begin": 4199,
											"end": 4242,
											"name": "DUP2"
										},
										{
											"begin": 4199,
											"end": 4242,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 4199,
											"end": 4242,
											"name": "AND"
										},
										{
											"begin": 4199,
											"end": 4242,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 4199,
											"end": 4242,
											"name": "SHL"
										},
										{
											"begin": 4199,
											"end": 4242,
											"name": "DUP2"
										},
										{
											"begin": 4199,
											"end": 4242,
											"name": "MSTORE"
										},
										{
											"begin": 4199,
											"end": 4242,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4199,
											"end": 4242,
											"name": "ADD"
										},
										{
											"begin": 4199,
											"end": 4242,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4199,
											"end": 4242,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4199,
											"end": 4242,
											"name": "MLOAD"
										},
										{
											"begin": 4199,
											"end": 4242,
											"name": "DUP1"
										},
										{
											"begin": 4199,
											"end": 4242,
											"name": "DUP4"
										},
										{
											"begin": 4199,
											"end": 4242,
											"name": "SUB"
										},
										{
											"begin": 4199,
											"end": 4242,
											"name": "DUP2"
										},
										{
											"begin": 4199,
											"end": 4242,
											"name": "DUP7"
										},
										{
											"begin": 4199,
											"end": 4242,
											"name": "DUP1"
										},
										{
											"begin": 4199,
											"end": 4242,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 4199,
											"end": 4242,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "179"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "179"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 4199,
											"end": 4242,
											"name": "POP"
										},
										{
											"begin": 4199,
											"end": 4242,
											"name": "GAS"
										},
										{
											"begin": 4199,
											"end": 4242,
											"name": "STATICCALL"
										},
										{
											"begin": 4199,
											"end": 4242,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "180"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "180"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 4199,
											"end": 4242,
											"name": "POP"
										},
										{
											"begin": 4199,
											"end": 4242,
											"name": "POP"
										},
										{
											"begin": 4199,
											"end": 4242,
											"name": "POP"
										},
										{
											"begin": 4199,
											"end": 4242,
											"name": "POP"
										},
										{
											"begin": 4199,
											"end": 4242,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4199,
											"end": 4242,
											"name": "MLOAD"
										},
										{
											"begin": 4199,
											"end": 4242,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "181"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "181"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 4199,
											"end": 4242,
											"name": "DUP2"
										},
										{
											"begin": 4199,
											"end": 4242,
											"name": "ADD"
										},
										{
											"begin": 4199,
											"end": 4242,
											"name": "SWAP1"
										},
										{
											"begin": 4199,
											"end": 4242,
											"name": "DUP1"
										},
										{
											"begin": 4199,
											"end": 4242,
											"name": "DUP1"
										},
										{
											"begin": 4199,
											"end": 4242,
											"name": "MLOAD"
										},
										{
											"begin": 4199,
											"end": 4242,
											"name": "SWAP1"
										},
										{
											"begin": 4199,
											"end": 4242,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4199,
											"end": 4242,
											"name": "ADD"
										},
										{
											"begin": 4199,
											"end": 4242,
											"name": "SWAP1"
										},
										{
											"begin": 4199,
											"end": 4242,
											"name": "SWAP3"
										},
										{
											"begin": 4199,
											"end": 4242,
											"name": "SWAP2"
										},
										{
											"begin": 4199,
											"end": 4242,
											"name": "SWAP1"
										},
										{
											"begin": 4199,
											"end": 4242,
											"name": "POP"
										},
										{
											"begin": 4199,
											"end": 4242,
											"name": "POP"
										},
										{
											"begin": 4199,
											"end": 4242,
											"name": "POP"
										},
										{
											"begin": 4185,
											"end": 4242,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4185,
											"end": 4242,
											"name": "AND"
										},
										{
											"begin": 4185,
											"end": 4195,
											"name": "CALLER"
										},
										{
											"begin": 4185,
											"end": 4242,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4185,
											"end": 4242,
											"name": "AND"
										},
										{
											"begin": 4185,
											"end": 4242,
											"name": "EQ"
										},
										{
											"begin": 4177,
											"end": 4281,
											"name": "PUSH [tag]",
											"value": "182"
										},
										{
											"begin": 4177,
											"end": 4281,
											"name": "JUMPI"
										},
										{
											"begin": 4177,
											"end": 4281,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4177,
											"end": 4281,
											"name": "MLOAD"
										},
										{
											"begin": 4177,
											"end": 4281,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4177,
											"end": 4281,
											"name": "DUP2"
										},
										{
											"begin": 4177,
											"end": 4281,
											"name": "MSTORE"
										},
										{
											"begin": 4177,
											"end": 4281,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4177,
											"end": 4281,
											"name": "ADD"
										},
										{
											"begin": 4177,
											"end": 4281,
											"name": "DUP1"
										},
										{
											"begin": 4177,
											"end": 4281,
											"name": "DUP1"
										},
										{
											"begin": 4177,
											"end": 4281,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4177,
											"end": 4281,
											"name": "ADD"
										},
										{
											"begin": 4177,
											"end": 4281,
											"name": "DUP3"
										},
										{
											"begin": 4177,
											"end": 4281,
											"name": "DUP2"
										},
										{
											"begin": 4177,
											"end": 4281,
											"name": "SUB"
										},
										{
											"begin": 4177,
											"end": 4281,
											"name": "DUP3"
										},
										{
											"begin": 4177,
											"end": 4281,
											"name": "MSTORE"
										},
										{
											"begin": 4177,
											"end": 4281,
											"name": "PUSH",
											"value": "22"
										},
										{
											"begin": 4177,
											"end": 4281,
											"name": "DUP2"
										},
										{
											"begin": 4177,
											"end": 4281,
											"name": "MSTORE"
										},
										{
											"begin": 4177,
											"end": 4281,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4177,
											"end": 4281,
											"name": "ADD"
										},
										{
											"begin": 4177,
											"end": 4281,
											"name": "DUP1"
										},
										{
											"begin": 4177,
											"end": 4281,
											"name": "PUSH data",
											"value": "E37380231C63DD542C3187103D43BF3DC8FEEC0B6338E70E8209C96CBA47625"
										},
										{
											"begin": 4177,
											"end": 4281,
											"name": "PUSH",
											"value": "22"
										},
										{
											"begin": 4177,
											"end": 4281,
											"name": "SWAP2"
										},
										{
											"begin": 4177,
											"end": 4281,
											"name": "CODECOPY"
										},
										{
											"begin": 4177,
											"end": 4281,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4177,
											"end": 4281,
											"name": "ADD"
										},
										{
											"begin": 4177,
											"end": 4281,
											"name": "SWAP2"
										},
										{
											"begin": 4177,
											"end": 4281,
											"name": "POP"
										},
										{
											"begin": 4177,
											"end": 4281,
											"name": "POP"
										},
										{
											"begin": 4177,
											"end": 4281,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4177,
											"end": 4281,
											"name": "MLOAD"
										},
										{
											"begin": 4177,
											"end": 4281,
											"name": "DUP1"
										},
										{
											"begin": 4177,
											"end": 4281,
											"name": "SWAP2"
										},
										{
											"begin": 4177,
											"end": 4281,
											"name": "SUB"
										},
										{
											"begin": 4177,
											"end": 4281,
											"name": "SWAP1"
										},
										{
											"begin": 4177,
											"end": 4281,
											"name": "REVERT"
										},
										{
											"begin": 4177,
											"end": 4281,
											"name": "tag",
											"value": "182"
										},
										{
											"begin": 4177,
											"end": 4281,
											"name": "JUMPDEST"
										},
										{
											"begin": 4297,
											"end": 4314,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 4297,
											"end": 4314,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4297,
											"end": 4314,
											"name": "SWAP1"
										},
										{
											"begin": 4297,
											"end": 4314,
											"name": "SLOAD"
										},
										{
											"begin": 4297,
											"end": 4314,
											"name": "SWAP1"
										},
										{
											"begin": 4297,
											"end": 4314,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 4297,
											"end": 4314,
											"name": "EXP"
										},
										{
											"begin": 4297,
											"end": 4314,
											"name": "SWAP1"
										},
										{
											"begin": 4297,
											"end": 4314,
											"name": "DIV"
										},
										{
											"begin": 4297,
											"end": 4314,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 4297,
											"end": 4314,
											"name": "AND"
										},
										{
											"begin": 4296,
											"end": 4314,
											"name": "ISZERO"
										},
										{
											"begin": 4288,
											"end": 4333,
											"name": "PUSH [tag]",
											"value": "183"
										},
										{
											"begin": 4288,
											"end": 4333,
											"name": "JUMPI"
										},
										{
											"begin": 4288,
											"end": 4333,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4288,
											"end": 4333,
											"name": "MLOAD"
										},
										{
											"begin": 4288,
											"end": 4333,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4288,
											"end": 4333,
											"name": "DUP2"
										},
										{
											"begin": 4288,
											"end": 4333,
											"name": "MSTORE"
										},
										{
											"begin": 4288,
											"end": 4333,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4288,
											"end": 4333,
											"name": "ADD"
										},
										{
											"begin": 4288,
											"end": 4333,
											"name": "DUP1"
										},
										{
											"begin": 4288,
											"end": 4333,
											"name": "DUP1"
										},
										{
											"begin": 4288,
											"end": 4333,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4288,
											"end": 4333,
											"name": "ADD"
										},
										{
											"begin": 4288,
											"end": 4333,
											"name": "DUP3"
										},
										{
											"begin": 4288,
											"end": 4333,
											"name": "DUP2"
										},
										{
											"begin": 4288,
											"end": 4333,
											"name": "SUB"
										},
										{
											"begin": 4288,
											"end": 4333,
											"name": "DUP3"
										},
										{
											"begin": 4288,
											"end": 4333,
											"name": "MSTORE"
										},
										{
											"begin": 4288,
											"end": 4333,
											"name": "PUSH",
											"value": "E"
										},
										{
											"begin": 4288,
											"end": 4333,
											"name": "DUP2"
										},
										{
											"begin": 4288,
											"end": 4333,
											"name": "MSTORE"
										},
										{
											"begin": 4288,
											"end": 4333,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4288,
											"end": 4333,
											"name": "ADD"
										},
										{
											"begin": 4288,
											"end": 4333,
											"name": "DUP1"
										},
										{
											"begin": 4288,
											"end": 4333,
											"name": "PUSH",
											"value": "31306B3A20696D6D757461626C65000000000000000000000000000000000000"
										},
										{
											"begin": 4288,
											"end": 4333,
											"name": "DUP2"
										},
										{
											"begin": 4288,
											"end": 4333,
											"name": "MSTORE"
										},
										{
											"begin": 4288,
											"end": 4333,
											"name": "POP"
										},
										{
											"begin": 4288,
											"end": 4333,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4288,
											"end": 4333,
											"name": "ADD"
										},
										{
											"begin": 4288,
											"end": 4333,
											"name": "SWAP2"
										},
										{
											"begin": 4288,
											"end": 4333,
											"name": "POP"
										},
										{
											"begin": 4288,
											"end": 4333,
											"name": "POP"
										},
										{
											"begin": 4288,
											"end": 4333,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4288,
											"end": 4333,
											"name": "MLOAD"
										},
										{
											"begin": 4288,
											"end": 4333,
											"name": "DUP1"
										},
										{
											"begin": 4288,
											"end": 4333,
											"name": "SWAP2"
										},
										{
											"begin": 4288,
											"end": 4333,
											"name": "SUB"
										},
										{
											"begin": 4288,
											"end": 4333,
											"name": "SWAP1"
										},
										{
											"begin": 4288,
											"end": 4333,
											"name": "REVERT"
										},
										{
											"begin": 4288,
											"end": 4333,
											"name": "tag",
											"value": "183"
										},
										{
											"begin": 4288,
											"end": 4333,
											"name": "JUMPDEST"
										},
										{
											"begin": 4360,
											"end": 4370,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 4360,
											"end": 4370,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4360,
											"end": 4370,
											"name": "SWAP1"
										},
										{
											"begin": 4360,
											"end": 4370,
											"name": "SLOAD"
										},
										{
											"begin": 4360,
											"end": 4370,
											"name": "SWAP1"
										},
										{
											"begin": 4360,
											"end": 4370,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 4360,
											"end": 4370,
											"name": "EXP"
										},
										{
											"begin": 4360,
											"end": 4370,
											"name": "SWAP1"
										},
										{
											"begin": 4360,
											"end": 4370,
											"name": "DIV"
										},
										{
											"begin": 4360,
											"end": 4370,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 4360,
											"end": 4370,
											"name": "AND"
										},
										{
											"begin": 4350,
											"end": 4370,
											"name": "ISZERO"
										},
										{
											"begin": 4350,
											"end": 4370,
											"name": "ISZERO"
										},
										{
											"begin": 4350,
											"end": 4356,
											"name": "DUP4"
										},
										{
											"begin": 4350,
											"end": 4370,
											"name": "ISZERO"
										},
										{
											"begin": 4350,
											"end": 4370,
											"name": "ISZERO"
										},
										{
											"begin": 4350,
											"end": 4370,
											"name": "EQ"
										},
										{
											"begin": 4350,
											"end": 4370,
											"name": "ISZERO"
										},
										{
											"begin": 4342,
											"end": 4389,
											"name": "PUSH [tag]",
											"value": "184"
										},
										{
											"begin": 4342,
											"end": 4389,
											"name": "JUMPI"
										},
										{
											"begin": 4342,
											"end": 4389,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4342,
											"end": 4389,
											"name": "MLOAD"
										},
										{
											"begin": 4342,
											"end": 4389,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4342,
											"end": 4389,
											"name": "DUP2"
										},
										{
											"begin": 4342,
											"end": 4389,
											"name": "MSTORE"
										},
										{
											"begin": 4342,
											"end": 4389,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4342,
											"end": 4389,
											"name": "ADD"
										},
										{
											"begin": 4342,
											"end": 4389,
											"name": "DUP1"
										},
										{
											"begin": 4342,
											"end": 4389,
											"name": "DUP1"
										},
										{
											"begin": 4342,
											"end": 4389,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4342,
											"end": 4389,
											"name": "ADD"
										},
										{
											"begin": 4342,
											"end": 4389,
											"name": "DUP3"
										},
										{
											"begin": 4342,
											"end": 4389,
											"name": "DUP2"
										},
										{
											"begin": 4342,
											"end": 4389,
											"name": "SUB"
										},
										{
											"begin": 4342,
											"end": 4389,
											"name": "DUP3"
										},
										{
											"begin": 4342,
											"end": 4389,
											"name": "MSTORE"
										},
										{
											"begin": 4342,
											"end": 4389,
											"name": "PUSH",
											"value": "E"
										},
										{
											"begin": 4342,
											"end": 4389,
											"name": "DUP2"
										},
										{
											"begin": 4342,
											"end": 4389,
											"name": "MSTORE"
										},
										{
											"begin": 4342,
											"end": 4389,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4342,
											"end": 4389,
											"name": "ADD"
										},
										{
											"begin": 4342,
											"end": 4389,
											"name": "DUP1"
										},
										{
											"begin": 4342,
											"end": 4389,
											"name": "PUSH",
											"value": "31306B3A206E6F20757064617465000000000000000000000000000000000000"
										},
										{
											"begin": 4342,
											"end": 4389,
											"name": "DUP2"
										},
										{
											"begin": 4342,
											"end": 4389,
											"name": "MSTORE"
										},
										{
											"begin": 4342,
											"end": 4389,
											"name": "POP"
										},
										{
											"begin": 4342,
											"end": 4389,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4342,
											"end": 4389,
											"name": "ADD"
										},
										{
											"begin": 4342,
											"end": 4389,
											"name": "SWAP2"
										},
										{
											"begin": 4342,
											"end": 4389,
											"name": "POP"
										},
										{
											"begin": 4342,
											"end": 4389,
											"name": "POP"
										},
										{
											"begin": 4342,
											"end": 4389,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4342,
											"end": 4389,
											"name": "MLOAD"
										},
										{
											"begin": 4342,
											"end": 4389,
											"name": "DUP1"
										},
										{
											"begin": 4342,
											"end": 4389,
											"name": "SWAP2"
										},
										{
											"begin": 4342,
											"end": 4389,
											"name": "SUB"
										},
										{
											"begin": 4342,
											"end": 4389,
											"name": "SWAP1"
										},
										{
											"begin": 4342,
											"end": 4389,
											"name": "REVERT"
										},
										{
											"begin": 4342,
											"end": 4389,
											"name": "tag",
											"value": "184"
										},
										{
											"begin": 4342,
											"end": 4389,
											"name": "JUMPDEST"
										},
										{
											"begin": 4424,
											"end": 4432,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 4424,
											"end": 4432,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4424,
											"end": 4432,
											"name": "SWAP1"
										},
										{
											"begin": 4424,
											"end": 4432,
											"name": "SLOAD"
										},
										{
											"begin": 4424,
											"end": 4432,
											"name": "SWAP1"
										},
										{
											"begin": 4424,
											"end": 4432,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 4424,
											"end": 4432,
											"name": "EXP"
										},
										{
											"begin": 4424,
											"end": 4432,
											"name": "SWAP1"
										},
										{
											"begin": 4424,
											"end": 4432,
											"name": "DIV"
										},
										{
											"begin": 4424,
											"end": 4432,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4424,
											"end": 4432,
											"name": "AND"
										},
										{
											"begin": 4404,
											"end": 4432,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4404,
											"end": 4432,
											"name": "AND"
										},
										{
											"begin": 4404,
											"end": 4420,
											"name": "DUP3"
										},
										{
											"begin": 4404,
											"end": 4432,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4404,
											"end": 4432,
											"name": "AND"
										},
										{
											"begin": 4404,
											"end": 4432,
											"name": "EQ"
										},
										{
											"begin": 4404,
											"end": 4464,
											"name": "DUP1"
										},
										{
											"begin": 4404,
											"end": 4464,
											"name": "ISZERO"
										},
										{
											"begin": 4404,
											"end": 4464,
											"name": "PUSH [tag]",
											"value": "185"
										},
										{
											"begin": 4404,
											"end": 4464,
											"name": "JUMPI"
										},
										{
											"begin": 4404,
											"end": 4464,
											"name": "POP"
										},
										{
											"begin": 4456,
											"end": 4464,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 4456,
											"end": 4464,
											"name": "PUSH",
											"value": "E"
										},
										{
											"begin": 4456,
											"end": 4464,
											"name": "SWAP1"
										},
										{
											"begin": 4456,
											"end": 4464,
											"name": "SLOAD"
										},
										{
											"begin": 4456,
											"end": 4464,
											"name": "SWAP1"
										},
										{
											"begin": 4456,
											"end": 4464,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 4456,
											"end": 4464,
											"name": "EXP"
										},
										{
											"begin": 4456,
											"end": 4464,
											"name": "SWAP1"
										},
										{
											"begin": 4456,
											"end": 4464,
											"name": "DIV"
										},
										{
											"begin": 4456,
											"end": 4464,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4456,
											"end": 4464,
											"name": "AND"
										},
										{
											"begin": 4436,
											"end": 4464,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4436,
											"end": 4464,
											"name": "AND"
										},
										{
											"begin": 4436,
											"end": 4452,
											"name": "DUP2"
										},
										{
											"begin": 4436,
											"end": 4464,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4436,
											"end": 4464,
											"name": "AND"
										},
										{
											"begin": 4436,
											"end": 4464,
											"name": "EQ"
										},
										{
											"begin": 4404,
											"end": 4464,
											"name": "tag",
											"value": "185"
										},
										{
											"begin": 4404,
											"end": 4464,
											"name": "JUMPDEST"
										},
										{
											"begin": 4396,
											"end": 4480,
											"name": "PUSH [tag]",
											"value": "186"
										},
										{
											"begin": 4396,
											"end": 4480,
											"name": "JUMPI"
										},
										{
											"begin": 4396,
											"end": 4480,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4396,
											"end": 4480,
											"name": "MLOAD"
										},
										{
											"begin": 4396,
											"end": 4480,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4396,
											"end": 4480,
											"name": "DUP2"
										},
										{
											"begin": 4396,
											"end": 4480,
											"name": "MSTORE"
										},
										{
											"begin": 4396,
											"end": 4480,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4396,
											"end": 4480,
											"name": "ADD"
										},
										{
											"begin": 4396,
											"end": 4480,
											"name": "DUP1"
										},
										{
											"begin": 4396,
											"end": 4480,
											"name": "DUP1"
										},
										{
											"begin": 4396,
											"end": 4480,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4396,
											"end": 4480,
											"name": "ADD"
										},
										{
											"begin": 4396,
											"end": 4480,
											"name": "DUP3"
										},
										{
											"begin": 4396,
											"end": 4480,
											"name": "DUP2"
										},
										{
											"begin": 4396,
											"end": 4480,
											"name": "SUB"
										},
										{
											"begin": 4396,
											"end": 4480,
											"name": "DUP3"
										},
										{
											"begin": 4396,
											"end": 4480,
											"name": "MSTORE"
										},
										{
											"begin": 4396,
											"end": 4480,
											"name": "PUSH",
											"value": "B"
										},
										{
											"begin": 4396,
											"end": 4480,
											"name": "DUP2"
										},
										{
											"begin": 4396,
											"end": 4480,
											"name": "MSTORE"
										},
										{
											"begin": 4396,
											"end": 4480,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4396,
											"end": 4480,
											"name": "ADD"
										},
										{
											"begin": 4396,
											"end": 4480,
											"name": "DUP1"
										},
										{
											"begin": 4396,
											"end": 4480,
											"name": "PUSH",
											"value": "31306B3A206661696C6564000000000000000000000000000000000000000000"
										},
										{
											"begin": 4396,
											"end": 4480,
											"name": "DUP2"
										},
										{
											"begin": 4396,
											"end": 4480,
											"name": "MSTORE"
										},
										{
											"begin": 4396,
											"end": 4480,
											"name": "POP"
										},
										{
											"begin": 4396,
											"end": 4480,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4396,
											"end": 4480,
											"name": "ADD"
										},
										{
											"begin": 4396,
											"end": 4480,
											"name": "SWAP2"
										},
										{
											"begin": 4396,
											"end": 4480,
											"name": "POP"
										},
										{
											"begin": 4396,
											"end": 4480,
											"name": "POP"
										},
										{
											"begin": 4396,
											"end": 4480,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4396,
											"end": 4480,
											"name": "MLOAD"
										},
										{
											"begin": 4396,
											"end": 4480,
											"name": "DUP1"
										},
										{
											"begin": 4396,
											"end": 4480,
											"name": "SWAP2"
										},
										{
											"begin": 4396,
											"end": 4480,
											"name": "SUB"
										},
										{
											"begin": 4396,
											"end": 4480,
											"name": "SWAP1"
										},
										{
											"begin": 4396,
											"end": 4480,
											"name": "REVERT"
										},
										{
											"begin": 4396,
											"end": 4480,
											"name": "tag",
											"value": "186"
										},
										{
											"begin": 4396,
											"end": 4480,
											"name": "JUMPDEST"
										},
										{
											"begin": 4489,
											"end": 4499,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4502,
											"end": 4530,
											"name": "PUSH [tag]",
											"value": "187"
										},
										{
											"begin": 4511,
											"end": 4519,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 4511,
											"end": 4519,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4511,
											"end": 4519,
											"name": "SWAP1"
										},
										{
											"begin": 4511,
											"end": 4519,
											"name": "SLOAD"
										},
										{
											"begin": 4511,
											"end": 4519,
											"name": "SWAP1"
										},
										{
											"begin": 4511,
											"end": 4519,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 4511,
											"end": 4519,
											"name": "EXP"
										},
										{
											"begin": 4511,
											"end": 4519,
											"name": "SWAP1"
										},
										{
											"begin": 4511,
											"end": 4519,
											"name": "DIV"
										},
										{
											"begin": 4511,
											"end": 4519,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4511,
											"end": 4519,
											"name": "AND"
										},
										{
											"begin": 4521,
											"end": 4529,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 4521,
											"end": 4529,
											"name": "PUSH",
											"value": "E"
										},
										{
											"begin": 4521,
											"end": 4529,
											"name": "SWAP1"
										},
										{
											"begin": 4521,
											"end": 4529,
											"name": "SLOAD"
										},
										{
											"begin": 4521,
											"end": 4529,
											"name": "SWAP1"
										},
										{
											"begin": 4521,
											"end": 4529,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 4521,
											"end": 4529,
											"name": "EXP"
										},
										{
											"begin": 4521,
											"end": 4529,
											"name": "SWAP1"
										},
										{
											"begin": 4521,
											"end": 4529,
											"name": "DIV"
										},
										{
											"begin": 4521,
											"end": 4529,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4521,
											"end": 4529,
											"name": "AND"
										},
										{
											"begin": 4502,
											"end": 4510,
											"name": "PUSH [tag]",
											"value": "188"
										},
										{
											"begin": 4502,
											"end": 4530,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4502,
											"end": 4530,
											"name": "tag",
											"value": "187"
										},
										{
											"begin": 4502,
											"end": 4530,
											"name": "JUMPDEST"
										},
										{
											"begin": 4489,
											"end": 4530,
											"name": "SWAP1"
										},
										{
											"begin": 4489,
											"end": 4530,
											"name": "POP"
										},
										{
											"begin": 4544,
											"end": 4577,
											"name": "PUSH",
											"value": "B6A86710BDE53AA7FB1B3856279E2AF5B476D53E2DD0902CF17A0911B5A43A8B"
										},
										{
											"begin": 4558,
											"end": 4568,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 4558,
											"end": 4568,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4558,
											"end": 4568,
											"name": "SWAP1"
										},
										{
											"begin": 4558,
											"end": 4568,
											"name": "SLOAD"
										},
										{
											"begin": 4558,
											"end": 4568,
											"name": "SWAP1"
										},
										{
											"begin": 4558,
											"end": 4568,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 4558,
											"end": 4568,
											"name": "EXP"
										},
										{
											"begin": 4558,
											"end": 4568,
											"name": "SWAP1"
										},
										{
											"begin": 4558,
											"end": 4568,
											"name": "DIV"
										},
										{
											"begin": 4558,
											"end": 4568,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 4558,
											"end": 4568,
											"name": "AND"
										},
										{
											"begin": 4570,
											"end": 4576,
											"name": "DUP6"
										},
										{
											"begin": 4544,
											"end": 4577,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4544,
											"end": 4577,
											"name": "MLOAD"
										},
										{
											"begin": 4544,
											"end": 4577,
											"name": "DUP1"
										},
										{
											"begin": 4544,
											"end": 4577,
											"name": "DUP4"
										},
										{
											"begin": 4544,
											"end": 4577,
											"name": "ISZERO"
										},
										{
											"begin": 4544,
											"end": 4577,
											"name": "ISZERO"
										},
										{
											"begin": 4544,
											"end": 4577,
											"name": "ISZERO"
										},
										{
											"begin": 4544,
											"end": 4577,
											"name": "ISZERO"
										},
										{
											"begin": 4544,
											"end": 4577,
											"name": "DUP2"
										},
										{
											"begin": 4544,
											"end": 4577,
											"name": "MSTORE"
										},
										{
											"begin": 4544,
											"end": 4577,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4544,
											"end": 4577,
											"name": "ADD"
										},
										{
											"begin": 4544,
											"end": 4577,
											"name": "DUP3"
										},
										{
											"begin": 4544,
											"end": 4577,
											"name": "ISZERO"
										},
										{
											"begin": 4544,
											"end": 4577,
											"name": "ISZERO"
										},
										{
											"begin": 4544,
											"end": 4577,
											"name": "ISZERO"
										},
										{
											"begin": 4544,
											"end": 4577,
											"name": "ISZERO"
										},
										{
											"begin": 4544,
											"end": 4577,
											"name": "DUP2"
										},
										{
											"begin": 4544,
											"end": 4577,
											"name": "MSTORE"
										},
										{
											"begin": 4544,
											"end": 4577,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4544,
											"end": 4577,
											"name": "ADD"
										},
										{
											"begin": 4544,
											"end": 4577,
											"name": "SWAP3"
										},
										{
											"begin": 4544,
											"end": 4577,
											"name": "POP"
										},
										{
											"begin": 4544,
											"end": 4577,
											"name": "POP"
										},
										{
											"begin": 4544,
											"end": 4577,
											"name": "POP"
										},
										{
											"begin": 4544,
											"end": 4577,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4544,
											"end": 4577,
											"name": "MLOAD"
										},
										{
											"begin": 4544,
											"end": 4577,
											"name": "DUP1"
										},
										{
											"begin": 4544,
											"end": 4577,
											"name": "SWAP2"
										},
										{
											"begin": 4544,
											"end": 4577,
											"name": "SUB"
										},
										{
											"begin": 4544,
											"end": 4577,
											"name": "SWAP1"
										},
										{
											"begin": 4544,
											"end": 4577,
											"name": "LOG1"
										},
										{
											"begin": 4597,
											"end": 4603,
											"name": "DUP4"
										},
										{
											"begin": 4584,
											"end": 4594,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 4584,
											"end": 4594,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4584,
											"end": 4603,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 4584,
											"end": 4603,
											"name": "EXP"
										},
										{
											"begin": 4584,
											"end": 4603,
											"name": "DUP2"
										},
										{
											"begin": 4584,
											"end": 4603,
											"name": "SLOAD"
										},
										{
											"begin": 4584,
											"end": 4603,
											"name": "DUP2"
										},
										{
											"begin": 4584,
											"end": 4603,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 4584,
											"end": 4603,
											"name": "MUL"
										},
										{
											"begin": 4584,
											"end": 4603,
											"name": "NOT"
										},
										{
											"begin": 4584,
											"end": 4603,
											"name": "AND"
										},
										{
											"begin": 4584,
											"end": 4603,
											"name": "SWAP1"
										},
										{
											"begin": 4584,
											"end": 4603,
											"name": "DUP4"
										},
										{
											"begin": 4584,
											"end": 4603,
											"name": "ISZERO"
										},
										{
											"begin": 4584,
											"end": 4603,
											"name": "ISZERO"
										},
										{
											"begin": 4584,
											"end": 4603,
											"name": "MUL"
										},
										{
											"begin": 4584,
											"end": 4603,
											"name": "OR"
										},
										{
											"begin": 4584,
											"end": 4603,
											"name": "SWAP1"
										},
										{
											"begin": 4584,
											"end": 4603,
											"name": "SSTORE"
										},
										{
											"begin": 4584,
											"end": 4603,
											"name": "POP"
										},
										{
											"begin": 4619,
											"end": 4625,
											"name": "DUP4"
										},
										{
											"begin": 4619,
											"end": 4634,
											"name": "DUP1"
										},
										{
											"begin": 4619,
											"end": 4634,
											"name": "ISZERO"
										},
										{
											"begin": 4619,
											"end": 4634,
											"name": "PUSH [tag]",
											"value": "189"
										},
										{
											"begin": 4619,
											"end": 4634,
											"name": "JUMPI"
										},
										{
											"begin": 4619,
											"end": 4634,
											"name": "POP"
										},
										{
											"begin": 4629,
											"end": 4634,
											"name": "DUP1"
										},
										{
											"begin": 4619,
											"end": 4634,
											"name": "tag",
											"value": "189"
										},
										{
											"begin": 4619,
											"end": 4634,
											"name": "JUMPDEST"
										},
										{
											"begin": 4618,
											"end": 4676,
											"name": "PUSH [tag]",
											"value": "190"
										},
										{
											"begin": 4618,
											"end": 4676,
											"name": "JUMPI"
										},
										{
											"begin": 4675,
											"end": 4676,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4618,
											"end": 4676,
											"name": "PUSH [tag]",
											"value": "191"
										},
										{
											"begin": 4618,
											"end": 4676,
											"name": "JUMP"
										},
										{
											"begin": 4618,
											"end": 4676,
											"name": "tag",
											"value": "190"
										},
										{
											"begin": 4618,
											"end": 4676,
											"name": "JUMPDEST"
										},
										{
											"begin": 4638,
											"end": 4672,
											"name": "PUSH [tag]",
											"value": "192"
										},
										{
											"begin": 4646,
											"end": 4654,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 4646,
											"end": 4654,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4646,
											"end": 4654,
											"name": "SWAP1"
										},
										{
											"begin": 4646,
											"end": 4654,
											"name": "SLOAD"
										},
										{
											"begin": 4646,
											"end": 4654,
											"name": "SWAP1"
										},
										{
											"begin": 4646,
											"end": 4654,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 4646,
											"end": 4654,
											"name": "EXP"
										},
										{
											"begin": 4646,
											"end": 4654,
											"name": "SWAP1"
										},
										{
											"begin": 4646,
											"end": 4654,
											"name": "DIV"
										},
										{
											"begin": 4646,
											"end": 4654,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4646,
											"end": 4654,
											"name": "AND"
										},
										{
											"begin": 4641,
											"end": 4655,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4641,
											"end": 4655,
											"name": "AND"
										},
										{
											"begin": 4662,
											"end": 4670,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 4662,
											"end": 4670,
											"name": "PUSH",
											"value": "E"
										},
										{
											"begin": 4662,
											"end": 4670,
											"name": "SWAP1"
										},
										{
											"begin": 4662,
											"end": 4670,
											"name": "SLOAD"
										},
										{
											"begin": 4662,
											"end": 4670,
											"name": "SWAP1"
										},
										{
											"begin": 4662,
											"end": 4670,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 4662,
											"end": 4670,
											"name": "EXP"
										},
										{
											"begin": 4662,
											"end": 4670,
											"name": "SWAP1"
										},
										{
											"begin": 4662,
											"end": 4670,
											"name": "DIV"
										},
										{
											"begin": 4662,
											"end": 4670,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4662,
											"end": 4670,
											"name": "AND"
										},
										{
											"begin": 4657,
											"end": 4671,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4657,
											"end": 4671,
											"name": "AND"
										},
										{
											"begin": 4638,
											"end": 4640,
											"name": "PUSH [tag]",
											"value": "193"
										},
										{
											"begin": 4638,
											"end": 4672,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4638,
											"end": 4672,
											"name": "tag",
											"value": "192"
										},
										{
											"begin": 4638,
											"end": 4672,
											"name": "JUMPDEST"
										},
										{
											"begin": 4618,
											"end": 4676,
											"name": "tag",
											"value": "191"
										},
										{
											"begin": 4618,
											"end": 4676,
											"name": "JUMPDEST"
										},
										{
											"begin": 4610,
											"end": 4615,
											"name": "PUSH",
											"value": "B"
										},
										{
											"begin": 4610,
											"end": 4676,
											"name": "DUP2"
										},
										{
											"begin": 4610,
											"end": 4676,
											"name": "SWAP1"
										},
										{
											"begin": 4610,
											"end": 4676,
											"name": "SSTORE"
										},
										{
											"begin": 4610,
											"end": 4676,
											"name": "POP"
										},
										{
											"begin": 1612,
											"end": 1613,
											"name": "POP"
										},
										{
											"begin": 1631,
											"end": 1632,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1620,
											"end": 1628,
											"name": "PUSH",
											"value": "D"
										},
										{
											"begin": 1620,
											"end": 1632,
											"name": "DUP2"
										},
										{
											"begin": 1620,
											"end": 1632,
											"name": "SWAP1"
										},
										{
											"begin": 1620,
											"end": 1632,
											"name": "SSTORE"
										},
										{
											"begin": 1620,
											"end": 1632,
											"name": "POP"
										},
										{
											"begin": 4068,
											"end": 4682,
											"name": "POP"
										},
										{
											"begin": 4068,
											"end": 4682,
											"name": "POP"
										},
										{
											"begin": 4068,
											"end": 4682,
											"name": "POP"
										},
										{
											"begin": 4068,
											"end": 4682,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 608,
											"end": 716,
											"name": "tag",
											"value": "84"
										},
										{
											"begin": 608,
											"end": 716,
											"name": "JUMPDEST"
										},
										{
											"begin": 650,
											"end": 716,
											"name": "PUSH",
											"value": "6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9"
										},
										{
											"begin": 608,
											"end": 716,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 608,
											"end": 716,
											"name": "SHL"
										},
										{
											"begin": 608,
											"end": 716,
											"name": "DUP2"
										},
										{
											"begin": 608,
											"end": 716,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 274,
											"end": 309,
											"name": "tag",
											"value": "86"
										},
										{
											"begin": 274,
											"end": 309,
											"name": "JUMPDEST"
										},
										{
											"begin": 307,
											"end": 309,
											"name": "PUSH",
											"value": "12"
										},
										{
											"begin": 274,
											"end": 309,
											"name": "DUP2"
										},
										{
											"begin": 274,
											"end": 309,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 465,
											"end": 496,
											"name": "tag",
											"value": "88"
										},
										{
											"begin": 465,
											"end": 496,
											"name": "JUMPDEST"
										},
										{
											"begin": 465,
											"end": 496,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 465,
											"end": 496,
											"name": "SLOAD"
										},
										{
											"begin": 465,
											"end": 496,
											"name": "DUP2"
										},
										{
											"begin": 465,
											"end": 496,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "tag",
											"value": "90"
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "JUMPDEST"
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "PUSH",
											"value": "9"
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SLOAD"
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "DUP2"
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4688,
											"end": 4960,
											"name": "tag",
											"value": "92"
										},
										{
											"begin": 4688,
											"end": 4960,
											"name": "JUMPDEST"
										},
										{
											"begin": 1569,
											"end": 1570,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1557,
											"end": 1565,
											"name": "PUSH",
											"value": "D"
										},
										{
											"begin": 1557,
											"end": 1565,
											"name": "SLOAD"
										},
										{
											"begin": 1557,
											"end": 1570,
											"name": "EQ"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "PUSH [tag]",
											"value": "195"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "JUMPI"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "MLOAD"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "DUP2"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "MSTORE"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "ADD"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "DUP1"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "DUP1"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "ADD"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "DUP3"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "DUP2"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "SUB"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "DUP3"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "MSTORE"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "PUSH",
											"value": "B"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "DUP2"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "MSTORE"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "ADD"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "DUP1"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "PUSH",
											"value": "31306B3A204C4F434B4544000000000000000000000000000000000000000000"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "DUP2"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "MSTORE"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "POP"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "ADD"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "SWAP2"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "POP"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "POP"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "MLOAD"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "DUP1"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "SWAP2"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "SUB"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "SWAP1"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "REVERT"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "tag",
											"value": "195"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "JUMPDEST"
										},
										{
											"begin": 1604,
											"end": 1605,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1593,
											"end": 1601,
											"name": "PUSH",
											"value": "D"
										},
										{
											"begin": 1593,
											"end": 1605,
											"name": "DUP2"
										},
										{
											"begin": 1593,
											"end": 1605,
											"name": "SWAP1"
										},
										{
											"begin": 1593,
											"end": 1605,
											"name": "SSTORE"
										},
										{
											"begin": 1593,
											"end": 1605,
											"name": "POP"
										},
										{
											"begin": 4781,
											"end": 4788,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 4781,
											"end": 4788,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4781,
											"end": 4788,
											"name": "SWAP1"
										},
										{
											"begin": 4781,
											"end": 4788,
											"name": "SLOAD"
										},
										{
											"begin": 4781,
											"end": 4788,
											"name": "SWAP1"
										},
										{
											"begin": 4781,
											"end": 4788,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 4781,
											"end": 4788,
											"name": "EXP"
										},
										{
											"begin": 4781,
											"end": 4788,
											"name": "SWAP1"
										},
										{
											"begin": 4781,
											"end": 4788,
											"name": "DIV"
										},
										{
											"begin": 4781,
											"end": 4788,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4781,
											"end": 4788,
											"name": "AND"
										},
										{
											"begin": 4763,
											"end": 4795,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4763,
											"end": 4795,
											"name": "AND"
										},
										{
											"begin": 4763,
											"end": 4795,
											"name": "PUSH",
											"value": "8DA5CB5B"
										},
										{
											"begin": 4763,
											"end": 4797,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4763,
											"end": 4797,
											"name": "MLOAD"
										},
										{
											"begin": 4763,
											"end": 4797,
											"name": "DUP2"
										},
										{
											"begin": 4763,
											"end": 4797,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 4763,
											"end": 4797,
											"name": "AND"
										},
										{
											"begin": 4763,
											"end": 4797,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 4763,
											"end": 4797,
											"name": "SHL"
										},
										{
											"begin": 4763,
											"end": 4797,
											"name": "DUP2"
										},
										{
											"begin": 4763,
											"end": 4797,
											"name": "MSTORE"
										},
										{
											"begin": 4763,
											"end": 4797,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4763,
											"end": 4797,
											"name": "ADD"
										},
										{
											"begin": 4763,
											"end": 4797,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4763,
											"end": 4797,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4763,
											"end": 4797,
											"name": "MLOAD"
										},
										{
											"begin": 4763,
											"end": 4797,
											"name": "DUP1"
										},
										{
											"begin": 4763,
											"end": 4797,
											"name": "DUP4"
										},
										{
											"begin": 4763,
											"end": 4797,
											"name": "SUB"
										},
										{
											"begin": 4763,
											"end": 4797,
											"name": "DUP2"
										},
										{
											"begin": 4763,
											"end": 4797,
											"name": "DUP7"
										},
										{
											"begin": 4763,
											"end": 4797,
											"name": "DUP1"
										},
										{
											"begin": 4763,
											"end": 4797,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 4763,
											"end": 4797,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "197"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "197"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 4763,
											"end": 4797,
											"name": "POP"
										},
										{
											"begin": 4763,
											"end": 4797,
											"name": "GAS"
										},
										{
											"begin": 4763,
											"end": 4797,
											"name": "STATICCALL"
										},
										{
											"begin": 4763,
											"end": 4797,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "198"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "198"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 4763,
											"end": 4797,
											"name": "POP"
										},
										{
											"begin": 4763,
											"end": 4797,
											"name": "POP"
										},
										{
											"begin": 4763,
											"end": 4797,
											"name": "POP"
										},
										{
											"begin": 4763,
											"end": 4797,
											"name": "POP"
										},
										{
											"begin": 4763,
											"end": 4797,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4763,
											"end": 4797,
											"name": "MLOAD"
										},
										{
											"begin": 4763,
											"end": 4797,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "199"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "199"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 4763,
											"end": 4797,
											"name": "DUP2"
										},
										{
											"begin": 4763,
											"end": 4797,
											"name": "ADD"
										},
										{
											"begin": 4763,
											"end": 4797,
											"name": "SWAP1"
										},
										{
											"begin": 4763,
											"end": 4797,
											"name": "DUP1"
										},
										{
											"begin": 4763,
											"end": 4797,
											"name": "DUP1"
										},
										{
											"begin": 4763,
											"end": 4797,
											"name": "MLOAD"
										},
										{
											"begin": 4763,
											"end": 4797,
											"name": "SWAP1"
										},
										{
											"begin": 4763,
											"end": 4797,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4763,
											"end": 4797,
											"name": "ADD"
										},
										{
											"begin": 4763,
											"end": 4797,
											"name": "SWAP1"
										},
										{
											"begin": 4763,
											"end": 4797,
											"name": "SWAP3"
										},
										{
											"begin": 4763,
											"end": 4797,
											"name": "SWAP2"
										},
										{
											"begin": 4763,
											"end": 4797,
											"name": "SWAP1"
										},
										{
											"begin": 4763,
											"end": 4797,
											"name": "POP"
										},
										{
											"begin": 4763,
											"end": 4797,
											"name": "POP"
										},
										{
											"begin": 4763,
											"end": 4797,
											"name": "POP"
										},
										{
											"begin": 4749,
											"end": 4797,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4749,
											"end": 4797,
											"name": "AND"
										},
										{
											"begin": 4749,
											"end": 4759,
											"name": "CALLER"
										},
										{
											"begin": 4749,
											"end": 4797,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4749,
											"end": 4797,
											"name": "AND"
										},
										{
											"begin": 4749,
											"end": 4797,
											"name": "EQ"
										},
										{
											"begin": 4741,
											"end": 4827,
											"name": "PUSH [tag]",
											"value": "200"
										},
										{
											"begin": 4741,
											"end": 4827,
											"name": "JUMPI"
										},
										{
											"begin": 4741,
											"end": 4827,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4741,
											"end": 4827,
											"name": "MLOAD"
										},
										{
											"begin": 4741,
											"end": 4827,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4741,
											"end": 4827,
											"name": "DUP2"
										},
										{
											"begin": 4741,
											"end": 4827,
											"name": "MSTORE"
										},
										{
											"begin": 4741,
											"end": 4827,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4741,
											"end": 4827,
											"name": "ADD"
										},
										{
											"begin": 4741,
											"end": 4827,
											"name": "DUP1"
										},
										{
											"begin": 4741,
											"end": 4827,
											"name": "DUP1"
										},
										{
											"begin": 4741,
											"end": 4827,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4741,
											"end": 4827,
											"name": "ADD"
										},
										{
											"begin": 4741,
											"end": 4827,
											"name": "DUP3"
										},
										{
											"begin": 4741,
											"end": 4827,
											"name": "DUP2"
										},
										{
											"begin": 4741,
											"end": 4827,
											"name": "SUB"
										},
										{
											"begin": 4741,
											"end": 4827,
											"name": "DUP3"
										},
										{
											"begin": 4741,
											"end": 4827,
											"name": "MSTORE"
										},
										{
											"begin": 4741,
											"end": 4827,
											"name": "PUSH",
											"value": "19"
										},
										{
											"begin": 4741,
											"end": 4827,
											"name": "DUP2"
										},
										{
											"begin": 4741,
											"end": 4827,
											"name": "MSTORE"
										},
										{
											"begin": 4741,
											"end": 4827,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4741,
											"end": 4827,
											"name": "ADD"
										},
										{
											"begin": 4741,
											"end": 4827,
											"name": "DUP1"
										},
										{
											"begin": 4741,
											"end": 4827,
											"name": "PUSH",
											"value": "31306B3A206F6E6C7920666163746F72792773206F776E657200000000000000"
										},
										{
											"begin": 4741,
											"end": 4827,
											"name": "DUP2"
										},
										{
											"begin": 4741,
											"end": 4827,
											"name": "MSTORE"
										},
										{
											"begin": 4741,
											"end": 4827,
											"name": "POP"
										},
										{
											"begin": 4741,
											"end": 4827,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4741,
											"end": 4827,
											"name": "ADD"
										},
										{
											"begin": 4741,
											"end": 4827,
											"name": "SWAP2"
										},
										{
											"begin": 4741,
											"end": 4827,
											"name": "POP"
										},
										{
											"begin": 4741,
											"end": 4827,
											"name": "POP"
										},
										{
											"begin": 4741,
											"end": 4827,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4741,
											"end": 4827,
											"name": "MLOAD"
										},
										{
											"begin": 4741,
											"end": 4827,
											"name": "DUP1"
										},
										{
											"begin": 4741,
											"end": 4827,
											"name": "SWAP2"
										},
										{
											"begin": 4741,
											"end": 4827,
											"name": "SUB"
										},
										{
											"begin": 4741,
											"end": 4827,
											"name": "SWAP1"
										},
										{
											"begin": 4741,
											"end": 4827,
											"name": "REVERT"
										},
										{
											"begin": 4741,
											"end": 4827,
											"name": "tag",
											"value": "200"
										},
										{
											"begin": 4741,
											"end": 4827,
											"name": "JUMPDEST"
										},
										{
											"begin": 4843,
											"end": 4860,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 4843,
											"end": 4860,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4843,
											"end": 4860,
											"name": "SWAP1"
										},
										{
											"begin": 4843,
											"end": 4860,
											"name": "SLOAD"
										},
										{
											"begin": 4843,
											"end": 4860,
											"name": "SWAP1"
										},
										{
											"begin": 4843,
											"end": 4860,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 4843,
											"end": 4860,
											"name": "EXP"
										},
										{
											"begin": 4843,
											"end": 4860,
											"name": "SWAP1"
										},
										{
											"begin": 4843,
											"end": 4860,
											"name": "DIV"
										},
										{
											"begin": 4843,
											"end": 4860,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 4843,
											"end": 4860,
											"name": "AND"
										},
										{
											"begin": 4842,
											"end": 4860,
											"name": "ISZERO"
										},
										{
											"begin": 4834,
											"end": 4887,
											"name": "PUSH [tag]",
											"value": "201"
										},
										{
											"begin": 4834,
											"end": 4887,
											"name": "JUMPI"
										},
										{
											"begin": 4834,
											"end": 4887,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4834,
											"end": 4887,
											"name": "MLOAD"
										},
										{
											"begin": 4834,
											"end": 4887,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4834,
											"end": 4887,
											"name": "DUP2"
										},
										{
											"begin": 4834,
											"end": 4887,
											"name": "MSTORE"
										},
										{
											"begin": 4834,
											"end": 4887,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4834,
											"end": 4887,
											"name": "ADD"
										},
										{
											"begin": 4834,
											"end": 4887,
											"name": "DUP1"
										},
										{
											"begin": 4834,
											"end": 4887,
											"name": "DUP1"
										},
										{
											"begin": 4834,
											"end": 4887,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4834,
											"end": 4887,
											"name": "ADD"
										},
										{
											"begin": 4834,
											"end": 4887,
											"name": "DUP3"
										},
										{
											"begin": 4834,
											"end": 4887,
											"name": "DUP2"
										},
										{
											"begin": 4834,
											"end": 4887,
											"name": "SUB"
										},
										{
											"begin": 4834,
											"end": 4887,
											"name": "DUP3"
										},
										{
											"begin": 4834,
											"end": 4887,
											"name": "MSTORE"
										},
										{
											"begin": 4834,
											"end": 4887,
											"name": "PUSH",
											"value": "16"
										},
										{
											"begin": 4834,
											"end": 4887,
											"name": "DUP2"
										},
										{
											"begin": 4834,
											"end": 4887,
											"name": "MSTORE"
										},
										{
											"begin": 4834,
											"end": 4887,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4834,
											"end": 4887,
											"name": "ADD"
										},
										{
											"begin": 4834,
											"end": 4887,
											"name": "DUP1"
										},
										{
											"begin": 4834,
											"end": 4887,
											"name": "PUSH",
											"value": "31306B3A20616C726561647920696D6D757461626C6500000000000000000000"
										},
										{
											"begin": 4834,
											"end": 4887,
											"name": "DUP2"
										},
										{
											"begin": 4834,
											"end": 4887,
											"name": "MSTORE"
										},
										{
											"begin": 4834,
											"end": 4887,
											"name": "POP"
										},
										{
											"begin": 4834,
											"end": 4887,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4834,
											"end": 4887,
											"name": "ADD"
										},
										{
											"begin": 4834,
											"end": 4887,
											"name": "SWAP2"
										},
										{
											"begin": 4834,
											"end": 4887,
											"name": "POP"
										},
										{
											"begin": 4834,
											"end": 4887,
											"name": "POP"
										},
										{
											"begin": 4834,
											"end": 4887,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4834,
											"end": 4887,
											"name": "MLOAD"
										},
										{
											"begin": 4834,
											"end": 4887,
											"name": "DUP1"
										},
										{
											"begin": 4834,
											"end": 4887,
											"name": "SWAP2"
										},
										{
											"begin": 4834,
											"end": 4887,
											"name": "SUB"
										},
										{
											"begin": 4834,
											"end": 4887,
											"name": "SWAP1"
										},
										{
											"begin": 4834,
											"end": 4887,
											"name": "REVERT"
										},
										{
											"begin": 4834,
											"end": 4887,
											"name": "tag",
											"value": "201"
										},
										{
											"begin": 4834,
											"end": 4887,
											"name": "JUMPDEST"
										},
										{
											"begin": 4916,
											"end": 4920,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4896,
											"end": 4913,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 4896,
											"end": 4913,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4896,
											"end": 4920,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 4896,
											"end": 4920,
											"name": "EXP"
										},
										{
											"begin": 4896,
											"end": 4920,
											"name": "DUP2"
										},
										{
											"begin": 4896,
											"end": 4920,
											"name": "SLOAD"
										},
										{
											"begin": 4896,
											"end": 4920,
											"name": "DUP2"
										},
										{
											"begin": 4896,
											"end": 4920,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 4896,
											"end": 4920,
											"name": "MUL"
										},
										{
											"begin": 4896,
											"end": 4920,
											"name": "NOT"
										},
										{
											"begin": 4896,
											"end": 4920,
											"name": "AND"
										},
										{
											"begin": 4896,
											"end": 4920,
											"name": "SWAP1"
										},
										{
											"begin": 4896,
											"end": 4920,
											"name": "DUP4"
										},
										{
											"begin": 4896,
											"end": 4920,
											"name": "ISZERO"
										},
										{
											"begin": 4896,
											"end": 4920,
											"name": "ISZERO"
										},
										{
											"begin": 4896,
											"end": 4920,
											"name": "MUL"
										},
										{
											"begin": 4896,
											"end": 4920,
											"name": "OR"
										},
										{
											"begin": 4896,
											"end": 4920,
											"name": "SWAP1"
										},
										{
											"begin": 4896,
											"end": 4920,
											"name": "SSTORE"
										},
										{
											"begin": 4896,
											"end": 4920,
											"name": "POP"
										},
										{
											"begin": 4932,
											"end": 4954,
											"name": "PUSH",
											"value": "9122C41AE733A4D7740324D50E35FBD6EE85BE3C1312A45596D8045150AB2F2"
										},
										{
											"begin": 4932,
											"end": 4954,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4932,
											"end": 4954,
											"name": "MLOAD"
										},
										{
											"begin": 4932,
											"end": 4954,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4932,
											"end": 4954,
											"name": "MLOAD"
										},
										{
											"begin": 4932,
											"end": 4954,
											"name": "DUP1"
										},
										{
											"begin": 4932,
											"end": 4954,
											"name": "SWAP2"
										},
										{
											"begin": 4932,
											"end": 4954,
											"name": "SUB"
										},
										{
											"begin": 4932,
											"end": 4954,
											"name": "SWAP1"
										},
										{
											"begin": 4932,
											"end": 4954,
											"name": "LOG1"
										},
										{
											"begin": 1631,
											"end": 1632,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1620,
											"end": 1628,
											"name": "PUSH",
											"value": "D"
										},
										{
											"begin": 1620,
											"end": 1632,
											"name": "DUP2"
										},
										{
											"begin": 1620,
											"end": 1632,
											"name": "SWAP1"
										},
										{
											"begin": 1620,
											"end": 1632,
											"name": "SSTORE"
										},
										{
											"begin": 1620,
											"end": 1632,
											"name": "POP"
										},
										{
											"begin": 4688,
											"end": 4960,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2940,
											"end": 3316,
											"name": "tag",
											"value": "95"
										},
										{
											"begin": 2940,
											"end": 3316,
											"name": "JUMPDEST"
										},
										{
											"begin": 3032,
											"end": 3039,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 3032,
											"end": 3039,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3032,
											"end": 3039,
											"name": "SWAP1"
										},
										{
											"begin": 3032,
											"end": 3039,
											"name": "SLOAD"
										},
										{
											"begin": 3032,
											"end": 3039,
											"name": "SWAP1"
										},
										{
											"begin": 3032,
											"end": 3039,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3032,
											"end": 3039,
											"name": "EXP"
										},
										{
											"begin": 3032,
											"end": 3039,
											"name": "SWAP1"
										},
										{
											"begin": 3032,
											"end": 3039,
											"name": "DIV"
										},
										{
											"begin": 3032,
											"end": 3039,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3032,
											"end": 3039,
											"name": "AND"
										},
										{
											"begin": 3018,
											"end": 3039,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3018,
											"end": 3039,
											"name": "AND"
										},
										{
											"begin": 3018,
											"end": 3028,
											"name": "CALLER"
										},
										{
											"begin": 3018,
											"end": 3039,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3018,
											"end": 3039,
											"name": "AND"
										},
										{
											"begin": 3018,
											"end": 3039,
											"name": "EQ"
										},
										{
											"begin": 3018,
											"end": 3055,
											"name": "DUP1"
										},
										{
											"begin": 3018,
											"end": 3055,
											"name": "ISZERO"
										},
										{
											"begin": 3018,
											"end": 3055,
											"name": "PUSH [tag]",
											"value": "203"
										},
										{
											"begin": 3018,
											"end": 3055,
											"name": "JUMPI"
										},
										{
											"begin": 3018,
											"end": 3055,
											"name": "POP"
										},
										{
											"begin": 3044,
											"end": 3055,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 3044,
											"end": 3055,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 3044,
											"end": 3055,
											"name": "SWAP1"
										},
										{
											"begin": 3044,
											"end": 3055,
											"name": "SLOAD"
										},
										{
											"begin": 3044,
											"end": 3055,
											"name": "SWAP1"
										},
										{
											"begin": 3044,
											"end": 3055,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3044,
											"end": 3055,
											"name": "EXP"
										},
										{
											"begin": 3044,
											"end": 3055,
											"name": "SWAP1"
										},
										{
											"begin": 3044,
											"end": 3055,
											"name": "DIV"
										},
										{
											"begin": 3044,
											"end": 3055,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 3044,
											"end": 3055,
											"name": "AND"
										},
										{
											"begin": 3043,
											"end": 3055,
											"name": "ISZERO"
										},
										{
											"begin": 3018,
											"end": 3055,
											"name": "tag",
											"value": "203"
										},
										{
											"begin": 3018,
											"end": 3055,
											"name": "JUMPDEST"
										},
										{
											"begin": 3010,
											"end": 3074,
											"name": "PUSH [tag]",
											"value": "204"
										},
										{
											"begin": 3010,
											"end": 3074,
											"name": "JUMPI"
										},
										{
											"begin": 3010,
											"end": 3074,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3010,
											"end": 3074,
											"name": "MLOAD"
										},
										{
											"begin": 3010,
											"end": 3074,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3010,
											"end": 3074,
											"name": "DUP2"
										},
										{
											"begin": 3010,
											"end": 3074,
											"name": "MSTORE"
										},
										{
											"begin": 3010,
											"end": 3074,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3010,
											"end": 3074,
											"name": "ADD"
										},
										{
											"begin": 3010,
											"end": 3074,
											"name": "DUP1"
										},
										{
											"begin": 3010,
											"end": 3074,
											"name": "DUP1"
										},
										{
											"begin": 3010,
											"end": 3074,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3010,
											"end": 3074,
											"name": "ADD"
										},
										{
											"begin": 3010,
											"end": 3074,
											"name": "DUP3"
										},
										{
											"begin": 3010,
											"end": 3074,
											"name": "DUP2"
										},
										{
											"begin": 3010,
											"end": 3074,
											"name": "SUB"
										},
										{
											"begin": 3010,
											"end": 3074,
											"name": "DUP3"
										},
										{
											"begin": 3010,
											"end": 3074,
											"name": "MSTORE"
										},
										{
											"begin": 3010,
											"end": 3074,
											"name": "PUSH",
											"value": "E"
										},
										{
											"begin": 3010,
											"end": 3074,
											"name": "DUP2"
										},
										{
											"begin": 3010,
											"end": 3074,
											"name": "MSTORE"
										},
										{
											"begin": 3010,
											"end": 3074,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3010,
											"end": 3074,
											"name": "ADD"
										},
										{
											"begin": 3010,
											"end": 3074,
											"name": "DUP1"
										},
										{
											"begin": 3010,
											"end": 3074,
											"name": "PUSH",
											"value": "31306B3A20464F5242494444454E000000000000000000000000000000000000"
										},
										{
											"begin": 3010,
											"end": 3074,
											"name": "DUP2"
										},
										{
											"begin": 3010,
											"end": 3074,
											"name": "MSTORE"
										},
										{
											"begin": 3010,
											"end": 3074,
											"name": "POP"
										},
										{
											"begin": 3010,
											"end": 3074,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3010,
											"end": 3074,
											"name": "ADD"
										},
										{
											"begin": 3010,
											"end": 3074,
											"name": "SWAP2"
										},
										{
											"begin": 3010,
											"end": 3074,
											"name": "POP"
										},
										{
											"begin": 3010,
											"end": 3074,
											"name": "POP"
										},
										{
											"begin": 3010,
											"end": 3074,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3010,
											"end": 3074,
											"name": "MLOAD"
										},
										{
											"begin": 3010,
											"end": 3074,
											"name": "DUP1"
										},
										{
											"begin": 3010,
											"end": 3074,
											"name": "SWAP2"
										},
										{
											"begin": 3010,
											"end": 3074,
											"name": "SUB"
										},
										{
											"begin": 3010,
											"end": 3074,
											"name": "SWAP1"
										},
										{
											"begin": 3010,
											"end": 3074,
											"name": "REVERT"
										},
										{
											"begin": 3010,
											"end": 3074,
											"name": "tag",
											"value": "204"
										},
										{
											"begin": 3010,
											"end": 3074,
											"name": "JUMPDEST"
										},
										{
											"begin": 3115,
											"end": 3122,
											"name": "DUP2"
										},
										{
											"begin": 3106,
											"end": 3112,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 3106,
											"end": 3112,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3106,
											"end": 3122,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3106,
											"end": 3122,
											"name": "EXP"
										},
										{
											"begin": 3106,
											"end": 3122,
											"name": "DUP2"
										},
										{
											"begin": 3106,
											"end": 3122,
											"name": "SLOAD"
										},
										{
											"begin": 3106,
											"end": 3122,
											"name": "DUP2"
										},
										{
											"begin": 3106,
											"end": 3122,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3106,
											"end": 3122,
											"name": "MUL"
										},
										{
											"begin": 3106,
											"end": 3122,
											"name": "NOT"
										},
										{
											"begin": 3106,
											"end": 3122,
											"name": "AND"
										},
										{
											"begin": 3106,
											"end": 3122,
											"name": "SWAP1"
										},
										{
											"begin": 3106,
											"end": 3122,
											"name": "DUP4"
										},
										{
											"begin": 3106,
											"end": 3122,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3106,
											"end": 3122,
											"name": "AND"
										},
										{
											"begin": 3106,
											"end": 3122,
											"name": "MUL"
										},
										{
											"begin": 3106,
											"end": 3122,
											"name": "OR"
										},
										{
											"begin": 3106,
											"end": 3122,
											"name": "SWAP1"
										},
										{
											"begin": 3106,
											"end": 3122,
											"name": "SSTORE"
										},
										{
											"begin": 3106,
											"end": 3122,
											"name": "POP"
										},
										{
											"begin": 3138,
											"end": 3145,
											"name": "DUP1"
										},
										{
											"begin": 3129,
											"end": 3135,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 3129,
											"end": 3135,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3129,
											"end": 3145,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3129,
											"end": 3145,
											"name": "EXP"
										},
										{
											"begin": 3129,
											"end": 3145,
											"name": "DUP2"
										},
										{
											"begin": 3129,
											"end": 3145,
											"name": "SLOAD"
										},
										{
											"begin": 3129,
											"end": 3145,
											"name": "DUP2"
										},
										{
											"begin": 3129,
											"end": 3145,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3129,
											"end": 3145,
											"name": "MUL"
										},
										{
											"begin": 3129,
											"end": 3145,
											"name": "NOT"
										},
										{
											"begin": 3129,
											"end": 3145,
											"name": "AND"
										},
										{
											"begin": 3129,
											"end": 3145,
											"name": "SWAP1"
										},
										{
											"begin": 3129,
											"end": 3145,
											"name": "DUP4"
										},
										{
											"begin": 3129,
											"end": 3145,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3129,
											"end": 3145,
											"name": "AND"
										},
										{
											"begin": 3129,
											"end": 3145,
											"name": "MUL"
										},
										{
											"begin": 3129,
											"end": 3145,
											"name": "OR"
										},
										{
											"begin": 3129,
											"end": 3145,
											"name": "SWAP1"
										},
										{
											"begin": 3129,
											"end": 3145,
											"name": "SSTORE"
										},
										{
											"begin": 3129,
											"end": 3145,
											"name": "POP"
										},
										{
											"begin": 3195,
											"end": 3202,
											"name": "DUP2"
										},
										{
											"begin": 3188,
											"end": 3212,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3188,
											"end": 3212,
											"name": "AND"
										},
										{
											"begin": 3188,
											"end": 3212,
											"name": "PUSH",
											"value": "313CE567"
										},
										{
											"begin": 3188,
											"end": 3214,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3188,
											"end": 3214,
											"name": "MLOAD"
										},
										{
											"begin": 3188,
											"end": 3214,
											"name": "DUP2"
										},
										{
											"begin": 3188,
											"end": 3214,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3188,
											"end": 3214,
											"name": "AND"
										},
										{
											"begin": 3188,
											"end": 3214,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 3188,
											"end": 3214,
											"name": "SHL"
										},
										{
											"begin": 3188,
											"end": 3214,
											"name": "DUP2"
										},
										{
											"begin": 3188,
											"end": 3214,
											"name": "MSTORE"
										},
										{
											"begin": 3188,
											"end": 3214,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3188,
											"end": 3214,
											"name": "ADD"
										},
										{
											"begin": 3188,
											"end": 3214,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3188,
											"end": 3214,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3188,
											"end": 3214,
											"name": "MLOAD"
										},
										{
											"begin": 3188,
											"end": 3214,
											"name": "DUP1"
										},
										{
											"begin": 3188,
											"end": 3214,
											"name": "DUP4"
										},
										{
											"begin": 3188,
											"end": 3214,
											"name": "SUB"
										},
										{
											"begin": 3188,
											"end": 3214,
											"name": "DUP2"
										},
										{
											"begin": 3188,
											"end": 3214,
											"name": "DUP7"
										},
										{
											"begin": 3188,
											"end": 3214,
											"name": "DUP1"
										},
										{
											"begin": 3188,
											"end": 3214,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 3188,
											"end": 3214,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "205"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "205"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 3188,
											"end": 3214,
											"name": "POP"
										},
										{
											"begin": 3188,
											"end": 3214,
											"name": "GAS"
										},
										{
											"begin": 3188,
											"end": 3214,
											"name": "STATICCALL"
										},
										{
											"begin": 3188,
											"end": 3214,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "206"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "206"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 3188,
											"end": 3214,
											"name": "POP"
										},
										{
											"begin": 3188,
											"end": 3214,
											"name": "POP"
										},
										{
											"begin": 3188,
											"end": 3214,
											"name": "POP"
										},
										{
											"begin": 3188,
											"end": 3214,
											"name": "POP"
										},
										{
											"begin": 3188,
											"end": 3214,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3188,
											"end": 3214,
											"name": "MLOAD"
										},
										{
											"begin": 3188,
											"end": 3214,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "207"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "207"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 3188,
											"end": 3214,
											"name": "DUP2"
										},
										{
											"begin": 3188,
											"end": 3214,
											"name": "ADD"
										},
										{
											"begin": 3188,
											"end": 3214,
											"name": "SWAP1"
										},
										{
											"begin": 3188,
											"end": 3214,
											"name": "DUP1"
										},
										{
											"begin": 3188,
											"end": 3214,
											"name": "DUP1"
										},
										{
											"begin": 3188,
											"end": 3214,
											"name": "MLOAD"
										},
										{
											"begin": 3188,
											"end": 3214,
											"name": "SWAP1"
										},
										{
											"begin": 3188,
											"end": 3214,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3188,
											"end": 3214,
											"name": "ADD"
										},
										{
											"begin": 3188,
											"end": 3214,
											"name": "SWAP1"
										},
										{
											"begin": 3188,
											"end": 3214,
											"name": "SWAP3"
										},
										{
											"begin": 3188,
											"end": 3214,
											"name": "SWAP2"
										},
										{
											"begin": 3188,
											"end": 3214,
											"name": "SWAP1"
										},
										{
											"begin": 3188,
											"end": 3214,
											"name": "POP"
										},
										{
											"begin": 3188,
											"end": 3214,
											"name": "POP"
										},
										{
											"begin": 3188,
											"end": 3214,
											"name": "POP"
										},
										{
											"begin": 3183,
											"end": 3215,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 3183,
											"end": 3215,
											"name": "AND"
										},
										{
											"begin": 3177,
											"end": 3179,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 3177,
											"end": 3215,
											"name": "EXP"
										},
										{
											"begin": 3154,
											"end": 3174,
											"name": "PUSH",
											"value": "9"
										},
										{
											"begin": 3154,
											"end": 3215,
											"name": "DUP2"
										},
										{
											"begin": 3154,
											"end": 3215,
											"name": "SWAP1"
										},
										{
											"begin": 3154,
											"end": 3215,
											"name": "SSTORE"
										},
										{
											"begin": 3154,
											"end": 3215,
											"name": "POP"
										},
										{
											"begin": 3263,
											"end": 3270,
											"name": "DUP1"
										},
										{
											"begin": 3256,
											"end": 3280,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3256,
											"end": 3280,
											"name": "AND"
										},
										{
											"begin": 3256,
											"end": 3280,
											"name": "PUSH",
											"value": "313CE567"
										},
										{
											"begin": 3256,
											"end": 3282,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3256,
											"end": 3282,
											"name": "MLOAD"
										},
										{
											"begin": 3256,
											"end": 3282,
											"name": "DUP2"
										},
										{
											"begin": 3256,
											"end": 3282,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3256,
											"end": 3282,
											"name": "AND"
										},
										{
											"begin": 3256,
											"end": 3282,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 3256,
											"end": 3282,
											"name": "SHL"
										},
										{
											"begin": 3256,
											"end": 3282,
											"name": "DUP2"
										},
										{
											"begin": 3256,
											"end": 3282,
											"name": "MSTORE"
										},
										{
											"begin": 3256,
											"end": 3282,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3256,
											"end": 3282,
											"name": "ADD"
										},
										{
											"begin": 3256,
											"end": 3282,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3256,
											"end": 3282,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3256,
											"end": 3282,
											"name": "MLOAD"
										},
										{
											"begin": 3256,
											"end": 3282,
											"name": "DUP1"
										},
										{
											"begin": 3256,
											"end": 3282,
											"name": "DUP4"
										},
										{
											"begin": 3256,
											"end": 3282,
											"name": "SUB"
										},
										{
											"begin": 3256,
											"end": 3282,
											"name": "DUP2"
										},
										{
											"begin": 3256,
											"end": 3282,
											"name": "DUP7"
										},
										{
											"begin": 3256,
											"end": 3282,
											"name": "DUP1"
										},
										{
											"begin": 3256,
											"end": 3282,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 3256,
											"end": 3282,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "208"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "208"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 3256,
											"end": 3282,
											"name": "POP"
										},
										{
											"begin": 3256,
											"end": 3282,
											"name": "GAS"
										},
										{
											"begin": 3256,
											"end": 3282,
											"name": "STATICCALL"
										},
										{
											"begin": 3256,
											"end": 3282,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "209"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "209"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 3256,
											"end": 3282,
											"name": "POP"
										},
										{
											"begin": 3256,
											"end": 3282,
											"name": "POP"
										},
										{
											"begin": 3256,
											"end": 3282,
											"name": "POP"
										},
										{
											"begin": 3256,
											"end": 3282,
											"name": "POP"
										},
										{
											"begin": 3256,
											"end": 3282,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3256,
											"end": 3282,
											"name": "MLOAD"
										},
										{
											"begin": 3256,
											"end": 3282,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "210"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "210"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 3256,
											"end": 3282,
											"name": "DUP2"
										},
										{
											"begin": 3256,
											"end": 3282,
											"name": "ADD"
										},
										{
											"begin": 3256,
											"end": 3282,
											"name": "SWAP1"
										},
										{
											"begin": 3256,
											"end": 3282,
											"name": "DUP1"
										},
										{
											"begin": 3256,
											"end": 3282,
											"name": "DUP1"
										},
										{
											"begin": 3256,
											"end": 3282,
											"name": "MLOAD"
										},
										{
											"begin": 3256,
											"end": 3282,
											"name": "SWAP1"
										},
										{
											"begin": 3256,
											"end": 3282,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3256,
											"end": 3282,
											"name": "ADD"
										},
										{
											"begin": 3256,
											"end": 3282,
											"name": "SWAP1"
										},
										{
											"begin": 3256,
											"end": 3282,
											"name": "SWAP3"
										},
										{
											"begin": 3256,
											"end": 3282,
											"name": "SWAP2"
										},
										{
											"begin": 3256,
											"end": 3282,
											"name": "SWAP1"
										},
										{
											"begin": 3256,
											"end": 3282,
											"name": "POP"
										},
										{
											"begin": 3256,
											"end": 3282,
											"name": "POP"
										},
										{
											"begin": 3256,
											"end": 3282,
											"name": "POP"
										},
										{
											"begin": 3251,
											"end": 3283,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 3251,
											"end": 3283,
											"name": "AND"
										},
										{
											"begin": 3245,
											"end": 3247,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 3245,
											"end": 3283,
											"name": "EXP"
										},
										{
											"begin": 3222,
											"end": 3242,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 3222,
											"end": 3283,
											"name": "DUP2"
										},
										{
											"begin": 3222,
											"end": 3283,
											"name": "SWAP1"
										},
										{
											"begin": 3222,
											"end": 3283,
											"name": "SSTORE"
										},
										{
											"begin": 3222,
											"end": 3283,
											"name": "POP"
										},
										{
											"begin": 3306,
											"end": 3310,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3292,
											"end": 3303,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 3292,
											"end": 3303,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 3292,
											"end": 3310,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3292,
											"end": 3310,
											"name": "EXP"
										},
										{
											"begin": 3292,
											"end": 3310,
											"name": "DUP2"
										},
										{
											"begin": 3292,
											"end": 3310,
											"name": "SLOAD"
										},
										{
											"begin": 3292,
											"end": 3310,
											"name": "DUP2"
										},
										{
											"begin": 3292,
											"end": 3310,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 3292,
											"end": 3310,
											"name": "MUL"
										},
										{
											"begin": 3292,
											"end": 3310,
											"name": "NOT"
										},
										{
											"begin": 3292,
											"end": 3310,
											"name": "AND"
										},
										{
											"begin": 3292,
											"end": 3310,
											"name": "SWAP1"
										},
										{
											"begin": 3292,
											"end": 3310,
											"name": "DUP4"
										},
										{
											"begin": 3292,
											"end": 3310,
											"name": "ISZERO"
										},
										{
											"begin": 3292,
											"end": 3310,
											"name": "ISZERO"
										},
										{
											"begin": 3292,
											"end": 3310,
											"name": "MUL"
										},
										{
											"begin": 3292,
											"end": 3310,
											"name": "OR"
										},
										{
											"begin": 3292,
											"end": 3310,
											"name": "SWAP1"
										},
										{
											"begin": 3292,
											"end": 3310,
											"name": "SSTORE"
										},
										{
											"begin": 3292,
											"end": 3310,
											"name": "POP"
										},
										{
											"begin": 2940,
											"end": 3316,
											"name": "POP"
										},
										{
											"begin": 2940,
											"end": 3316,
											"name": "POP"
										},
										{
											"begin": 2940,
											"end": 3316,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3436,
											"end": 4062,
											"name": "tag",
											"value": "98"
										},
										{
											"begin": 3436,
											"end": 4062,
											"name": "JUMPDEST"
										},
										{
											"begin": 1569,
											"end": 1570,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1557,
											"end": 1565,
											"name": "PUSH",
											"value": "D"
										},
										{
											"begin": 1557,
											"end": 1565,
											"name": "SLOAD"
										},
										{
											"begin": 1557,
											"end": 1570,
											"name": "EQ"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "PUSH [tag]",
											"value": "212"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "JUMPI"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "MLOAD"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "DUP2"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "MSTORE"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "ADD"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "DUP1"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "DUP1"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "ADD"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "DUP3"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "DUP2"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "SUB"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "DUP3"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "MSTORE"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "PUSH",
											"value": "B"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "DUP2"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "MSTORE"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "ADD"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "DUP1"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "PUSH",
											"value": "31306B3A204C4F434B4544000000000000000000000000000000000000000000"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "DUP2"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "MSTORE"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "POP"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "ADD"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "SWAP2"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "POP"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "POP"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "MLOAD"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "DUP1"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "SWAP2"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "SUB"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "SWAP1"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "REVERT"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "tag",
											"value": "212"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "JUMPDEST"
										},
										{
											"begin": 1604,
											"end": 1605,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1593,
											"end": 1601,
											"name": "PUSH",
											"value": "D"
										},
										{
											"begin": 1593,
											"end": 1605,
											"name": "DUP2"
										},
										{
											"begin": 1593,
											"end": 1605,
											"name": "SWAP1"
										},
										{
											"begin": 1593,
											"end": 1605,
											"name": "SSTORE"
										},
										{
											"begin": 1593,
											"end": 1605,
											"name": "POP"
										},
										{
											"begin": 3576,
											"end": 3583,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 3576,
											"end": 3583,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3576,
											"end": 3583,
											"name": "SWAP1"
										},
										{
											"begin": 3576,
											"end": 3583,
											"name": "SLOAD"
										},
										{
											"begin": 3576,
											"end": 3583,
											"name": "SWAP1"
										},
										{
											"begin": 3576,
											"end": 3583,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3576,
											"end": 3583,
											"name": "EXP"
										},
										{
											"begin": 3576,
											"end": 3583,
											"name": "SWAP1"
										},
										{
											"begin": 3576,
											"end": 3583,
											"name": "DIV"
										},
										{
											"begin": 3576,
											"end": 3583,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3576,
											"end": 3583,
											"name": "AND"
										},
										{
											"begin": 3558,
											"end": 3600,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3558,
											"end": 3600,
											"name": "AND"
										},
										{
											"begin": 3558,
											"end": 3600,
											"name": "PUSH",
											"value": "4C217715"
										},
										{
											"begin": 3558,
											"end": 3602,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3558,
											"end": 3602,
											"name": "MLOAD"
										},
										{
											"begin": 3558,
											"end": 3602,
											"name": "DUP2"
										},
										{
											"begin": 3558,
											"end": 3602,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3558,
											"end": 3602,
											"name": "AND"
										},
										{
											"begin": 3558,
											"end": 3602,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 3558,
											"end": 3602,
											"name": "SHL"
										},
										{
											"begin": 3558,
											"end": 3602,
											"name": "DUP2"
										},
										{
											"begin": 3558,
											"end": 3602,
											"name": "MSTORE"
										},
										{
											"begin": 3558,
											"end": 3602,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3558,
											"end": 3602,
											"name": "ADD"
										},
										{
											"begin": 3558,
											"end": 3602,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3558,
											"end": 3602,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3558,
											"end": 3602,
											"name": "MLOAD"
										},
										{
											"begin": 3558,
											"end": 3602,
											"name": "DUP1"
										},
										{
											"begin": 3558,
											"end": 3602,
											"name": "DUP4"
										},
										{
											"begin": 3558,
											"end": 3602,
											"name": "SUB"
										},
										{
											"begin": 3558,
											"end": 3602,
											"name": "DUP2"
										},
										{
											"begin": 3558,
											"end": 3602,
											"name": "DUP7"
										},
										{
											"begin": 3558,
											"end": 3602,
											"name": "DUP1"
										},
										{
											"begin": 3558,
											"end": 3602,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 3558,
											"end": 3602,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "214"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "214"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 3558,
											"end": 3602,
											"name": "POP"
										},
										{
											"begin": 3558,
											"end": 3602,
											"name": "GAS"
										},
										{
											"begin": 3558,
											"end": 3602,
											"name": "STATICCALL"
										},
										{
											"begin": 3558,
											"end": 3602,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "215"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "215"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 3558,
											"end": 3602,
											"name": "POP"
										},
										{
											"begin": 3558,
											"end": 3602,
											"name": "POP"
										},
										{
											"begin": 3558,
											"end": 3602,
											"name": "POP"
										},
										{
											"begin": 3558,
											"end": 3602,
											"name": "POP"
										},
										{
											"begin": 3558,
											"end": 3602,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3558,
											"end": 3602,
											"name": "MLOAD"
										},
										{
											"begin": 3558,
											"end": 3602,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "216"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "216"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 3558,
											"end": 3602,
											"name": "DUP2"
										},
										{
											"begin": 3558,
											"end": 3602,
											"name": "ADD"
										},
										{
											"begin": 3558,
											"end": 3602,
											"name": "SWAP1"
										},
										{
											"begin": 3558,
											"end": 3602,
											"name": "DUP1"
										},
										{
											"begin": 3558,
											"end": 3602,
											"name": "DUP1"
										},
										{
											"begin": 3558,
											"end": 3602,
											"name": "MLOAD"
										},
										{
											"begin": 3558,
											"end": 3602,
											"name": "SWAP1"
										},
										{
											"begin": 3558,
											"end": 3602,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3558,
											"end": 3602,
											"name": "ADD"
										},
										{
											"begin": 3558,
											"end": 3602,
											"name": "SWAP1"
										},
										{
											"begin": 3558,
											"end": 3602,
											"name": "SWAP3"
										},
										{
											"begin": 3558,
											"end": 3602,
											"name": "SWAP2"
										},
										{
											"begin": 3558,
											"end": 3602,
											"name": "SWAP1"
										},
										{
											"begin": 3558,
											"end": 3602,
											"name": "POP"
										},
										{
											"begin": 3558,
											"end": 3602,
											"name": "POP"
										},
										{
											"begin": 3558,
											"end": 3602,
											"name": "POP"
										},
										{
											"begin": 3544,
											"end": 3602,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3544,
											"end": 3602,
											"name": "AND"
										},
										{
											"begin": 3544,
											"end": 3554,
											"name": "CALLER"
										},
										{
											"begin": 3544,
											"end": 3602,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3544,
											"end": 3602,
											"name": "AND"
										},
										{
											"begin": 3544,
											"end": 3602,
											"name": "EQ"
										},
										{
											"begin": 3536,
											"end": 3641,
											"name": "PUSH [tag]",
											"value": "217"
										},
										{
											"begin": 3536,
											"end": 3641,
											"name": "JUMPI"
										},
										{
											"begin": 3536,
											"end": 3641,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3536,
											"end": 3641,
											"name": "MLOAD"
										},
										{
											"begin": 3536,
											"end": 3641,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3536,
											"end": 3641,
											"name": "DUP2"
										},
										{
											"begin": 3536,
											"end": 3641,
											"name": "MSTORE"
										},
										{
											"begin": 3536,
											"end": 3641,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3536,
											"end": 3641,
											"name": "ADD"
										},
										{
											"begin": 3536,
											"end": 3641,
											"name": "DUP1"
										},
										{
											"begin": 3536,
											"end": 3641,
											"name": "DUP1"
										},
										{
											"begin": 3536,
											"end": 3641,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3536,
											"end": 3641,
											"name": "ADD"
										},
										{
											"begin": 3536,
											"end": 3641,
											"name": "DUP3"
										},
										{
											"begin": 3536,
											"end": 3641,
											"name": "DUP2"
										},
										{
											"begin": 3536,
											"end": 3641,
											"name": "SUB"
										},
										{
											"begin": 3536,
											"end": 3641,
											"name": "DUP3"
										},
										{
											"begin": 3536,
											"end": 3641,
											"name": "MSTORE"
										},
										{
											"begin": 3536,
											"end": 3641,
											"name": "PUSH",
											"value": "22"
										},
										{
											"begin": 3536,
											"end": 3641,
											"name": "DUP2"
										},
										{
											"begin": 3536,
											"end": 3641,
											"name": "MSTORE"
										},
										{
											"begin": 3536,
											"end": 3641,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3536,
											"end": 3641,
											"name": "ADD"
										},
										{
											"begin": 3536,
											"end": 3641,
											"name": "DUP1"
										},
										{
											"begin": 3536,
											"end": 3641,
											"name": "PUSH data",
											"value": "34FFD81D2BF0B96ACAE486668FC9D6475667930DF09E9039EE8381F9CC8EF0B1"
										},
										{
											"begin": 3536,
											"end": 3641,
											"name": "PUSH",
											"value": "22"
										},
										{
											"begin": 3536,
											"end": 3641,
											"name": "SWAP2"
										},
										{
											"begin": 3536,
											"end": 3641,
											"name": "CODECOPY"
										},
										{
											"begin": 3536,
											"end": 3641,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3536,
											"end": 3641,
											"name": "ADD"
										},
										{
											"begin": 3536,
											"end": 3641,
											"name": "SWAP2"
										},
										{
											"begin": 3536,
											"end": 3641,
											"name": "POP"
										},
										{
											"begin": 3536,
											"end": 3641,
											"name": "POP"
										},
										{
											"begin": 3536,
											"end": 3641,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3536,
											"end": 3641,
											"name": "MLOAD"
										},
										{
											"begin": 3536,
											"end": 3641,
											"name": "DUP1"
										},
										{
											"begin": 3536,
											"end": 3641,
											"name": "SWAP2"
										},
										{
											"begin": 3536,
											"end": 3641,
											"name": "SUB"
										},
										{
											"begin": 3536,
											"end": 3641,
											"name": "SWAP1"
										},
										{
											"begin": 3536,
											"end": 3641,
											"name": "REVERT"
										},
										{
											"begin": 3536,
											"end": 3641,
											"name": "tag",
											"value": "217"
										},
										{
											"begin": 3536,
											"end": 3641,
											"name": "JUMPDEST"
										},
										{
											"begin": 700,
											"end": 704,
											"name": "PUSH",
											"value": "7D0"
										},
										{
											"begin": 3656,
											"end": 3675,
											"name": "DUP3"
										},
										{
											"begin": 3656,
											"end": 3694,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 3656,
											"end": 3694,
											"name": "AND"
										},
										{
											"begin": 3656,
											"end": 3694,
											"name": "GT"
										},
										{
											"begin": 3656,
											"end": 3694,
											"name": "ISZERO"
										},
										{
											"begin": 3656,
											"end": 3736,
											"name": "DUP1"
										},
										{
											"begin": 3656,
											"end": 3736,
											"name": "ISZERO"
										},
										{
											"begin": 3656,
											"end": 3736,
											"name": "PUSH [tag]",
											"value": "218"
										},
										{
											"begin": 3656,
											"end": 3736,
											"name": "JUMPI"
										},
										{
											"begin": 3656,
											"end": 3736,
											"name": "POP"
										},
										{
											"begin": 700,
											"end": 704,
											"name": "PUSH",
											"value": "7D0"
										},
										{
											"begin": 3698,
											"end": 3717,
											"name": "DUP2"
										},
										{
											"begin": 3698,
											"end": 3736,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 3698,
											"end": 3736,
											"name": "AND"
										},
										{
											"begin": 3698,
											"end": 3736,
											"name": "GT"
										},
										{
											"begin": 3698,
											"end": 3736,
											"name": "ISZERO"
										},
										{
											"begin": 3656,
											"end": 3736,
											"name": "tag",
											"value": "218"
										},
										{
											"begin": 3656,
											"end": 3736,
											"name": "JUMPDEST"
										},
										{
											"begin": 3648,
											"end": 3783,
											"name": "PUSH [tag]",
											"value": "219"
										},
										{
											"begin": 3648,
											"end": 3783,
											"name": "JUMPI"
										},
										{
											"begin": 3648,
											"end": 3783,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3648,
											"end": 3783,
											"name": "MLOAD"
										},
										{
											"begin": 3648,
											"end": 3783,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3648,
											"end": 3783,
											"name": "DUP2"
										},
										{
											"begin": 3648,
											"end": 3783,
											"name": "MSTORE"
										},
										{
											"begin": 3648,
											"end": 3783,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3648,
											"end": 3783,
											"name": "ADD"
										},
										{
											"begin": 3648,
											"end": 3783,
											"name": "DUP1"
										},
										{
											"begin": 3648,
											"end": 3783,
											"name": "DUP1"
										},
										{
											"begin": 3648,
											"end": 3783,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3648,
											"end": 3783,
											"name": "ADD"
										},
										{
											"begin": 3648,
											"end": 3783,
											"name": "DUP3"
										},
										{
											"begin": 3648,
											"end": 3783,
											"name": "DUP2"
										},
										{
											"begin": 3648,
											"end": 3783,
											"name": "SUB"
										},
										{
											"begin": 3648,
											"end": 3783,
											"name": "DUP3"
										},
										{
											"begin": 3648,
											"end": 3783,
											"name": "MSTORE"
										},
										{
											"begin": 3648,
											"end": 3783,
											"name": "PUSH",
											"value": "2A"
										},
										{
											"begin": 3648,
											"end": 3783,
											"name": "DUP2"
										},
										{
											"begin": 3648,
											"end": 3783,
											"name": "MSTORE"
										},
										{
											"begin": 3648,
											"end": 3783,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3648,
											"end": 3783,
											"name": "ADD"
										},
										{
											"begin": 3648,
											"end": 3783,
											"name": "DUP1"
										},
										{
											"begin": 3648,
											"end": 3783,
											"name": "PUSH data",
											"value": "45BAAF65170B7D96AB118754B668EEAD3E0F148D8A45A6C0A60AEC311CFCEE2F"
										},
										{
											"begin": 3648,
											"end": 3783,
											"name": "PUSH",
											"value": "2A"
										},
										{
											"begin": 3648,
											"end": 3783,
											"name": "SWAP2"
										},
										{
											"begin": 3648,
											"end": 3783,
											"name": "CODECOPY"
										},
										{
											"begin": 3648,
											"end": 3783,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3648,
											"end": 3783,
											"name": "ADD"
										},
										{
											"begin": 3648,
											"end": 3783,
											"name": "SWAP2"
										},
										{
											"begin": 3648,
											"end": 3783,
											"name": "POP"
										},
										{
											"begin": 3648,
											"end": 3783,
											"name": "POP"
										},
										{
											"begin": 3648,
											"end": 3783,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3648,
											"end": 3783,
											"name": "MLOAD"
										},
										{
											"begin": 3648,
											"end": 3783,
											"name": "DUP1"
										},
										{
											"begin": 3648,
											"end": 3783,
											"name": "SWAP2"
										},
										{
											"begin": 3648,
											"end": 3783,
											"name": "SUB"
										},
										{
											"begin": 3648,
											"end": 3783,
											"name": "SWAP1"
										},
										{
											"begin": 3648,
											"end": 3783,
											"name": "REVERT"
										},
										{
											"begin": 3648,
											"end": 3783,
											"name": "tag",
											"value": "219"
										},
										{
											"begin": 3648,
											"end": 3783,
											"name": "JUMPDEST"
										},
										{
											"begin": 3820,
											"end": 3821,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3798,
											"end": 3817,
											"name": "DUP3"
										},
										{
											"begin": 3798,
											"end": 3821,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 3798,
											"end": 3821,
											"name": "AND"
										},
										{
											"begin": 3798,
											"end": 3821,
											"name": "GT"
										},
										{
											"begin": 3798,
											"end": 3848,
											"name": "DUP1"
										},
										{
											"begin": 3798,
											"end": 3848,
											"name": "ISZERO"
										},
										{
											"begin": 3798,
											"end": 3848,
											"name": "PUSH [tag]",
											"value": "220"
										},
										{
											"begin": 3798,
											"end": 3848,
											"name": "JUMPI"
										},
										{
											"begin": 3798,
											"end": 3848,
											"name": "POP"
										},
										{
											"begin": 3847,
											"end": 3848,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3825,
											"end": 3844,
											"name": "DUP2"
										},
										{
											"begin": 3825,
											"end": 3848,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 3825,
											"end": 3848,
											"name": "AND"
										},
										{
											"begin": 3825,
											"end": 3848,
											"name": "GT"
										},
										{
											"begin": 3798,
											"end": 3848,
											"name": "tag",
											"value": "220"
										},
										{
											"begin": 3798,
											"end": 3848,
											"name": "JUMPDEST"
										},
										{
											"begin": 3790,
											"end": 3895,
											"name": "PUSH [tag]",
											"value": "221"
										},
										{
											"begin": 3790,
											"end": 3895,
											"name": "JUMPI"
										},
										{
											"begin": 3790,
											"end": 3895,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3790,
											"end": 3895,
											"name": "MLOAD"
										},
										{
											"begin": 3790,
											"end": 3895,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3790,
											"end": 3895,
											"name": "DUP2"
										},
										{
											"begin": 3790,
											"end": 3895,
											"name": "MSTORE"
										},
										{
											"begin": 3790,
											"end": 3895,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3790,
											"end": 3895,
											"name": "ADD"
										},
										{
											"begin": 3790,
											"end": 3895,
											"name": "DUP1"
										},
										{
											"begin": 3790,
											"end": 3895,
											"name": "DUP1"
										},
										{
											"begin": 3790,
											"end": 3895,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3790,
											"end": 3895,
											"name": "ADD"
										},
										{
											"begin": 3790,
											"end": 3895,
											"name": "DUP3"
										},
										{
											"begin": 3790,
											"end": 3895,
											"name": "DUP2"
										},
										{
											"begin": 3790,
											"end": 3895,
											"name": "SUB"
										},
										{
											"begin": 3790,
											"end": 3895,
											"name": "DUP3"
										},
										{
											"begin": 3790,
											"end": 3895,
											"name": "MSTORE"
										},
										{
											"begin": 3790,
											"end": 3895,
											"name": "PUSH",
											"value": "2A"
										},
										{
											"begin": 3790,
											"end": 3895,
											"name": "DUP2"
										},
										{
											"begin": 3790,
											"end": 3895,
											"name": "MSTORE"
										},
										{
											"begin": 3790,
											"end": 3895,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3790,
											"end": 3895,
											"name": "ADD"
										},
										{
											"begin": 3790,
											"end": 3895,
											"name": "DUP1"
										},
										{
											"begin": 3790,
											"end": 3895,
											"name": "PUSH data",
											"value": "640C1A2BCB4B0E819D290BE36FFB74FFF17DD4659141AE0E8778F67D9638BA4C"
										},
										{
											"begin": 3790,
											"end": 3895,
											"name": "PUSH",
											"value": "2A"
										},
										{
											"begin": 3790,
											"end": 3895,
											"name": "SWAP2"
										},
										{
											"begin": 3790,
											"end": 3895,
											"name": "CODECOPY"
										},
										{
											"begin": 3790,
											"end": 3895,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3790,
											"end": 3895,
											"name": "ADD"
										},
										{
											"begin": 3790,
											"end": 3895,
											"name": "SWAP2"
										},
										{
											"begin": 3790,
											"end": 3895,
											"name": "POP"
										},
										{
											"begin": 3790,
											"end": 3895,
											"name": "POP"
										},
										{
											"begin": 3790,
											"end": 3895,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3790,
											"end": 3895,
											"name": "MLOAD"
										},
										{
											"begin": 3790,
											"end": 3895,
											"name": "DUP1"
										},
										{
											"begin": 3790,
											"end": 3895,
											"name": "SWAP2"
										},
										{
											"begin": 3790,
											"end": 3895,
											"name": "SUB"
										},
										{
											"begin": 3790,
											"end": 3895,
											"name": "SWAP1"
										},
										{
											"begin": 3790,
											"end": 3895,
											"name": "REVERT"
										},
										{
											"begin": 3790,
											"end": 3895,
											"name": "tag",
											"value": "221"
										},
										{
											"begin": 3790,
											"end": 3895,
											"name": "JUMPDEST"
										},
										{
											"begin": 3921,
											"end": 3940,
											"name": "DUP2"
										},
										{
											"begin": 3902,
											"end": 3918,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 3902,
											"end": 3918,
											"name": "PUSH",
											"value": "1C"
										},
										{
											"begin": 3902,
											"end": 3940,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3902,
											"end": 3940,
											"name": "EXP"
										},
										{
											"begin": 3902,
											"end": 3940,
											"name": "DUP2"
										},
										{
											"begin": 3902,
											"end": 3940,
											"name": "SLOAD"
										},
										{
											"begin": 3902,
											"end": 3940,
											"name": "DUP2"
										},
										{
											"begin": 3902,
											"end": 3940,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 3902,
											"end": 3940,
											"name": "MUL"
										},
										{
											"begin": 3902,
											"end": 3940,
											"name": "NOT"
										},
										{
											"begin": 3902,
											"end": 3940,
											"name": "AND"
										},
										{
											"begin": 3902,
											"end": 3940,
											"name": "SWAP1"
										},
										{
											"begin": 3902,
											"end": 3940,
											"name": "DUP4"
										},
										{
											"begin": 3902,
											"end": 3940,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 3902,
											"end": 3940,
											"name": "AND"
										},
										{
											"begin": 3902,
											"end": 3940,
											"name": "MUL"
										},
										{
											"begin": 3902,
											"end": 3940,
											"name": "OR"
										},
										{
											"begin": 3902,
											"end": 3940,
											"name": "SWAP1"
										},
										{
											"begin": 3902,
											"end": 3940,
											"name": "SSTORE"
										},
										{
											"begin": 3902,
											"end": 3940,
											"name": "POP"
										},
										{
											"begin": 3966,
											"end": 3985,
											"name": "DUP1"
										},
										{
											"begin": 3947,
											"end": 3963,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 3947,
											"end": 3963,
											"name": "PUSH",
											"value": "1E"
										},
										{
											"begin": 3947,
											"end": 3985,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3947,
											"end": 3985,
											"name": "EXP"
										},
										{
											"begin": 3947,
											"end": 3985,
											"name": "DUP2"
										},
										{
											"begin": 3947,
											"end": 3985,
											"name": "SLOAD"
										},
										{
											"begin": 3947,
											"end": 3985,
											"name": "DUP2"
										},
										{
											"begin": 3947,
											"end": 3985,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 3947,
											"end": 3985,
											"name": "MUL"
										},
										{
											"begin": 3947,
											"end": 3985,
											"name": "NOT"
										},
										{
											"begin": 3947,
											"end": 3985,
											"name": "AND"
										},
										{
											"begin": 3947,
											"end": 3985,
											"name": "SWAP1"
										},
										{
											"begin": 3947,
											"end": 3985,
											"name": "DUP4"
										},
										{
											"begin": 3947,
											"end": 3985,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 3947,
											"end": 3985,
											"name": "AND"
										},
										{
											"begin": 3947,
											"end": 3985,
											"name": "MUL"
										},
										{
											"begin": 3947,
											"end": 3985,
											"name": "OR"
										},
										{
											"begin": 3947,
											"end": 3985,
											"name": "SWAP1"
										},
										{
											"begin": 3947,
											"end": 3985,
											"name": "SSTORE"
										},
										{
											"begin": 3947,
											"end": 3985,
											"name": "POP"
										},
										{
											"begin": 3997,
											"end": 4056,
											"name": "PUSH",
											"value": "A4877B8ECB5A00BA277E4BCEEEB187A669E7113649774DFBEA05C259CE27F17B"
										},
										{
											"begin": 4015,
											"end": 4034,
											"name": "DUP3"
										},
										{
											"begin": 4036,
											"end": 4055,
											"name": "DUP3"
										},
										{
											"begin": 3997,
											"end": 4056,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3997,
											"end": 4056,
											"name": "MLOAD"
										},
										{
											"begin": 3997,
											"end": 4056,
											"name": "DUP1"
										},
										{
											"begin": 3997,
											"end": 4056,
											"name": "DUP4"
										},
										{
											"begin": 3997,
											"end": 4056,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 3997,
											"end": 4056,
											"name": "AND"
										},
										{
											"begin": 3997,
											"end": 4056,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 3997,
											"end": 4056,
											"name": "AND"
										},
										{
											"begin": 3997,
											"end": 4056,
											"name": "DUP2"
										},
										{
											"begin": 3997,
											"end": 4056,
											"name": "MSTORE"
										},
										{
											"begin": 3997,
											"end": 4056,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3997,
											"end": 4056,
											"name": "ADD"
										},
										{
											"begin": 3997,
											"end": 4056,
											"name": "DUP3"
										},
										{
											"begin": 3997,
											"end": 4056,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 3997,
											"end": 4056,
											"name": "AND"
										},
										{
											"begin": 3997,
											"end": 4056,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 3997,
											"end": 4056,
											"name": "AND"
										},
										{
											"begin": 3997,
											"end": 4056,
											"name": "DUP2"
										},
										{
											"begin": 3997,
											"end": 4056,
											"name": "MSTORE"
										},
										{
											"begin": 3997,
											"end": 4056,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3997,
											"end": 4056,
											"name": "ADD"
										},
										{
											"begin": 3997,
											"end": 4056,
											"name": "SWAP3"
										},
										{
											"begin": 3997,
											"end": 4056,
											"name": "POP"
										},
										{
											"begin": 3997,
											"end": 4056,
											"name": "POP"
										},
										{
											"begin": 3997,
											"end": 4056,
											"name": "POP"
										},
										{
											"begin": 3997,
											"end": 4056,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3997,
											"end": 4056,
											"name": "MLOAD"
										},
										{
											"begin": 3997,
											"end": 4056,
											"name": "DUP1"
										},
										{
											"begin": 3997,
											"end": 4056,
											"name": "SWAP2"
										},
										{
											"begin": 3997,
											"end": 4056,
											"name": "SUB"
										},
										{
											"begin": 3997,
											"end": 4056,
											"name": "SWAP1"
										},
										{
											"begin": 3997,
											"end": 4056,
											"name": "LOG1"
										},
										{
											"begin": 1631,
											"end": 1632,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1620,
											"end": 1628,
											"name": "PUSH",
											"value": "D"
										},
										{
											"begin": 1620,
											"end": 1632,
											"name": "DUP2"
										},
										{
											"begin": 1620,
											"end": 1632,
											"name": "SWAP1"
										},
										{
											"begin": 1620,
											"end": 1632,
											"name": "SSTORE"
										},
										{
											"begin": 1620,
											"end": 1632,
											"name": "POP"
										},
										{
											"begin": 3436,
											"end": 4062,
											"name": "POP"
										},
										{
											"begin": 3436,
											"end": 4062,
											"name": "POP"
										},
										{
											"begin": 3436,
											"end": 4062,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 909,
											"end": 945,
											"name": "tag",
											"value": "100"
										},
										{
											"begin": 909,
											"end": 945,
											"name": "JUMPDEST"
										},
										{
											"begin": 909,
											"end": 945,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 909,
											"end": 945,
											"name": "PUSH",
											"value": "1C"
										},
										{
											"begin": 909,
											"end": 945,
											"name": "SWAP1"
										},
										{
											"begin": 909,
											"end": 945,
											"name": "SLOAD"
										},
										{
											"begin": 909,
											"end": 945,
											"name": "SWAP1"
										},
										{
											"begin": 909,
											"end": 945,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 909,
											"end": 945,
											"name": "EXP"
										},
										{
											"begin": 909,
											"end": 945,
											"name": "SWAP1"
										},
										{
											"begin": 909,
											"end": 945,
											"name": "DIV"
										},
										{
											"begin": 909,
											"end": 945,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 909,
											"end": 945,
											"name": "AND"
										},
										{
											"begin": 909,
											"end": 945,
											"name": "DUP2"
										},
										{
											"begin": 909,
											"end": 945,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 661,
											"end": 704,
											"name": "tag",
											"value": "102"
										},
										{
											"begin": 661,
											"end": 704,
											"name": "JUMPDEST"
										},
										{
											"begin": 700,
											"end": 704,
											"name": "PUSH",
											"value": "7D0"
										},
										{
											"begin": 661,
											"end": 704,
											"name": "DUP2"
										},
										{
											"begin": 661,
											"end": 704,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 6390,
											"end": 7552,
											"name": "tag",
											"value": "105"
										},
										{
											"begin": 6390,
											"end": 7552,
											"name": "JUMPDEST"
										},
										{
											"begin": 6439,
											"end": 6453,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1569,
											"end": 1570,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1557,
											"end": 1565,
											"name": "PUSH",
											"value": "D"
										},
										{
											"begin": 1557,
											"end": 1565,
											"name": "SLOAD"
										},
										{
											"begin": 1557,
											"end": 1570,
											"name": "EQ"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "PUSH [tag]",
											"value": "223"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "JUMPI"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "MLOAD"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "DUP2"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "MSTORE"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "ADD"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "DUP1"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "DUP1"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "ADD"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "DUP3"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "DUP2"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "SUB"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "DUP3"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "MSTORE"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "PUSH",
											"value": "B"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "DUP2"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "MSTORE"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "ADD"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "DUP1"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "PUSH",
											"value": "31306B3A204C4F434B4544000000000000000000000000000000000000000000"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "DUP2"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "MSTORE"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "POP"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "ADD"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "SWAP2"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "POP"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "POP"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "MLOAD"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "DUP1"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "SWAP2"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "SUB"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "SWAP1"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "REVERT"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "tag",
											"value": "223"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "JUMPDEST"
										},
										{
											"begin": 1604,
											"end": 1605,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1593,
											"end": 1601,
											"name": "PUSH",
											"value": "D"
										},
										{
											"begin": 1593,
											"end": 1605,
											"name": "DUP2"
										},
										{
											"begin": 1593,
											"end": 1605,
											"name": "SWAP1"
										},
										{
											"begin": 1593,
											"end": 1605,
											"name": "SSTORE"
										},
										{
											"begin": 1593,
											"end": 1605,
											"name": "POP"
										},
										{
											"begin": 6463,
											"end": 6480,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6482,
											"end": 6499,
											"name": "DUP1"
										},
										{
											"begin": 6505,
											"end": 6518,
											"name": "PUSH [tag]",
											"value": "225"
										},
										{
											"begin": 6505,
											"end": 6516,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 6505,
											"end": 6518,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6505,
											"end": 6518,
											"name": "tag",
											"value": "225"
										},
										{
											"begin": 6505,
											"end": 6518,
											"name": "JUMPDEST"
										},
										{
											"begin": 6462,
											"end": 6518,
											"name": "POP"
										},
										{
											"begin": 6462,
											"end": 6518,
											"name": "POP"
										},
										{
											"begin": 6462,
											"end": 6518,
											"name": "SWAP2"
										},
										{
											"begin": 6462,
											"end": 6518,
											"name": "POP"
										},
										{
											"begin": 6462,
											"end": 6518,
											"name": "SWAP2"
										},
										{
											"begin": 6462,
											"end": 6518,
											"name": "POP"
										},
										{
											"begin": 6545,
											"end": 6558,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6568,
											"end": 6574,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 6568,
											"end": 6574,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6568,
											"end": 6574,
											"name": "SWAP1"
										},
										{
											"begin": 6568,
											"end": 6574,
											"name": "SLOAD"
										},
										{
											"begin": 6568,
											"end": 6574,
											"name": "SWAP1"
										},
										{
											"begin": 6568,
											"end": 6574,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 6568,
											"end": 6574,
											"name": "EXP"
										},
										{
											"begin": 6568,
											"end": 6574,
											"name": "SWAP1"
										},
										{
											"begin": 6568,
											"end": 6574,
											"name": "DIV"
										},
										{
											"begin": 6568,
											"end": 6574,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6568,
											"end": 6574,
											"name": "AND"
										},
										{
											"begin": 6561,
											"end": 6585,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6561,
											"end": 6585,
											"name": "AND"
										},
										{
											"begin": 6561,
											"end": 6585,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 6594,
											"end": 6598,
											"name": "ADDRESS"
										},
										{
											"begin": 6561,
											"end": 6600,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6561,
											"end": 6600,
											"name": "MLOAD"
										},
										{
											"begin": 6561,
											"end": 6600,
											"name": "DUP3"
										},
										{
											"begin": 6561,
											"end": 6600,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 6561,
											"end": 6600,
											"name": "AND"
										},
										{
											"begin": 6561,
											"end": 6600,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 6561,
											"end": 6600,
											"name": "SHL"
										},
										{
											"begin": 6561,
											"end": 6600,
											"name": "DUP2"
										},
										{
											"begin": 6561,
											"end": 6600,
											"name": "MSTORE"
										},
										{
											"begin": 6561,
											"end": 6600,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 6561,
											"end": 6600,
											"name": "ADD"
										},
										{
											"begin": 6561,
											"end": 6600,
											"name": "DUP1"
										},
										{
											"begin": 6561,
											"end": 6600,
											"name": "DUP3"
										},
										{
											"begin": 6561,
											"end": 6600,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6561,
											"end": 6600,
											"name": "AND"
										},
										{
											"begin": 6561,
											"end": 6600,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6561,
											"end": 6600,
											"name": "AND"
										},
										{
											"begin": 6561,
											"end": 6600,
											"name": "DUP2"
										},
										{
											"begin": 6561,
											"end": 6600,
											"name": "MSTORE"
										},
										{
											"begin": 6561,
											"end": 6600,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6561,
											"end": 6600,
											"name": "ADD"
										},
										{
											"begin": 6561,
											"end": 6600,
											"name": "SWAP2"
										},
										{
											"begin": 6561,
											"end": 6600,
											"name": "POP"
										},
										{
											"begin": 6561,
											"end": 6600,
											"name": "POP"
										},
										{
											"begin": 6561,
											"end": 6600,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6561,
											"end": 6600,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6561,
											"end": 6600,
											"name": "MLOAD"
										},
										{
											"begin": 6561,
											"end": 6600,
											"name": "DUP1"
										},
										{
											"begin": 6561,
											"end": 6600,
											"name": "DUP4"
										},
										{
											"begin": 6561,
											"end": 6600,
											"name": "SUB"
										},
										{
											"begin": 6561,
											"end": 6600,
											"name": "DUP2"
										},
										{
											"begin": 6561,
											"end": 6600,
											"name": "DUP7"
										},
										{
											"begin": 6561,
											"end": 6600,
											"name": "DUP1"
										},
										{
											"begin": 6561,
											"end": 6600,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 6561,
											"end": 6600,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "226"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "226"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 6561,
											"end": 6600,
											"name": "POP"
										},
										{
											"begin": 6561,
											"end": 6600,
											"name": "GAS"
										},
										{
											"begin": 6561,
											"end": 6600,
											"name": "STATICCALL"
										},
										{
											"begin": 6561,
											"end": 6600,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "227"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "227"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 6561,
											"end": 6600,
											"name": "POP"
										},
										{
											"begin": 6561,
											"end": 6600,
											"name": "POP"
										},
										{
											"begin": 6561,
											"end": 6600,
											"name": "POP"
										},
										{
											"begin": 6561,
											"end": 6600,
											"name": "POP"
										},
										{
											"begin": 6561,
											"end": 6600,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6561,
											"end": 6600,
											"name": "MLOAD"
										},
										{
											"begin": 6561,
											"end": 6600,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "228"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "228"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 6561,
											"end": 6600,
											"name": "DUP2"
										},
										{
											"begin": 6561,
											"end": 6600,
											"name": "ADD"
										},
										{
											"begin": 6561,
											"end": 6600,
											"name": "SWAP1"
										},
										{
											"begin": 6561,
											"end": 6600,
											"name": "DUP1"
										},
										{
											"begin": 6561,
											"end": 6600,
											"name": "DUP1"
										},
										{
											"begin": 6561,
											"end": 6600,
											"name": "MLOAD"
										},
										{
											"begin": 6561,
											"end": 6600,
											"name": "SWAP1"
										},
										{
											"begin": 6561,
											"end": 6600,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6561,
											"end": 6600,
											"name": "ADD"
										},
										{
											"begin": 6561,
											"end": 6600,
											"name": "SWAP1"
										},
										{
											"begin": 6561,
											"end": 6600,
											"name": "SWAP3"
										},
										{
											"begin": 6561,
											"end": 6600,
											"name": "SWAP2"
										},
										{
											"begin": 6561,
											"end": 6600,
											"name": "SWAP1"
										},
										{
											"begin": 6561,
											"end": 6600,
											"name": "POP"
										},
										{
											"begin": 6561,
											"end": 6600,
											"name": "POP"
										},
										{
											"begin": 6561,
											"end": 6600,
											"name": "POP"
										},
										{
											"begin": 6545,
											"end": 6600,
											"name": "SWAP1"
										},
										{
											"begin": 6545,
											"end": 6600,
											"name": "POP"
										},
										{
											"begin": 6607,
											"end": 6620,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6630,
											"end": 6636,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 6630,
											"end": 6636,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6630,
											"end": 6636,
											"name": "SWAP1"
										},
										{
											"begin": 6630,
											"end": 6636,
											"name": "SLOAD"
										},
										{
											"begin": 6630,
											"end": 6636,
											"name": "SWAP1"
										},
										{
											"begin": 6630,
											"end": 6636,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 6630,
											"end": 6636,
											"name": "EXP"
										},
										{
											"begin": 6630,
											"end": 6636,
											"name": "SWAP1"
										},
										{
											"begin": 6630,
											"end": 6636,
											"name": "DIV"
										},
										{
											"begin": 6630,
											"end": 6636,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6630,
											"end": 6636,
											"name": "AND"
										},
										{
											"begin": 6623,
											"end": 6647,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6623,
											"end": 6647,
											"name": "AND"
										},
										{
											"begin": 6623,
											"end": 6647,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 6656,
											"end": 6660,
											"name": "ADDRESS"
										},
										{
											"begin": 6623,
											"end": 6662,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6623,
											"end": 6662,
											"name": "MLOAD"
										},
										{
											"begin": 6623,
											"end": 6662,
											"name": "DUP3"
										},
										{
											"begin": 6623,
											"end": 6662,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 6623,
											"end": 6662,
											"name": "AND"
										},
										{
											"begin": 6623,
											"end": 6662,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 6623,
											"end": 6662,
											"name": "SHL"
										},
										{
											"begin": 6623,
											"end": 6662,
											"name": "DUP2"
										},
										{
											"begin": 6623,
											"end": 6662,
											"name": "MSTORE"
										},
										{
											"begin": 6623,
											"end": 6662,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 6623,
											"end": 6662,
											"name": "ADD"
										},
										{
											"begin": 6623,
											"end": 6662,
											"name": "DUP1"
										},
										{
											"begin": 6623,
											"end": 6662,
											"name": "DUP3"
										},
										{
											"begin": 6623,
											"end": 6662,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6623,
											"end": 6662,
											"name": "AND"
										},
										{
											"begin": 6623,
											"end": 6662,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6623,
											"end": 6662,
											"name": "AND"
										},
										{
											"begin": 6623,
											"end": 6662,
											"name": "DUP2"
										},
										{
											"begin": 6623,
											"end": 6662,
											"name": "MSTORE"
										},
										{
											"begin": 6623,
											"end": 6662,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6623,
											"end": 6662,
											"name": "ADD"
										},
										{
											"begin": 6623,
											"end": 6662,
											"name": "SWAP2"
										},
										{
											"begin": 6623,
											"end": 6662,
											"name": "POP"
										},
										{
											"begin": 6623,
											"end": 6662,
											"name": "POP"
										},
										{
											"begin": 6623,
											"end": 6662,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6623,
											"end": 6662,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6623,
											"end": 6662,
											"name": "MLOAD"
										},
										{
											"begin": 6623,
											"end": 6662,
											"name": "DUP1"
										},
										{
											"begin": 6623,
											"end": 6662,
											"name": "DUP4"
										},
										{
											"begin": 6623,
											"end": 6662,
											"name": "SUB"
										},
										{
											"begin": 6623,
											"end": 6662,
											"name": "DUP2"
										},
										{
											"begin": 6623,
											"end": 6662,
											"name": "DUP7"
										},
										{
											"begin": 6623,
											"end": 6662,
											"name": "DUP1"
										},
										{
											"begin": 6623,
											"end": 6662,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 6623,
											"end": 6662,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "229"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "229"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 6623,
											"end": 6662,
											"name": "POP"
										},
										{
											"begin": 6623,
											"end": 6662,
											"name": "GAS"
										},
										{
											"begin": 6623,
											"end": 6662,
											"name": "STATICCALL"
										},
										{
											"begin": 6623,
											"end": 6662,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "230"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "230"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 6623,
											"end": 6662,
											"name": "POP"
										},
										{
											"begin": 6623,
											"end": 6662,
											"name": "POP"
										},
										{
											"begin": 6623,
											"end": 6662,
											"name": "POP"
										},
										{
											"begin": 6623,
											"end": 6662,
											"name": "POP"
										},
										{
											"begin": 6623,
											"end": 6662,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6623,
											"end": 6662,
											"name": "MLOAD"
										},
										{
											"begin": 6623,
											"end": 6662,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "231"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "231"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 6623,
											"end": 6662,
											"name": "DUP2"
										},
										{
											"begin": 6623,
											"end": 6662,
											"name": "ADD"
										},
										{
											"begin": 6623,
											"end": 6662,
											"name": "SWAP1"
										},
										{
											"begin": 6623,
											"end": 6662,
											"name": "DUP1"
										},
										{
											"begin": 6623,
											"end": 6662,
											"name": "DUP1"
										},
										{
											"begin": 6623,
											"end": 6662,
											"name": "MLOAD"
										},
										{
											"begin": 6623,
											"end": 6662,
											"name": "SWAP1"
										},
										{
											"begin": 6623,
											"end": 6662,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6623,
											"end": 6662,
											"name": "ADD"
										},
										{
											"begin": 6623,
											"end": 6662,
											"name": "SWAP1"
										},
										{
											"begin": 6623,
											"end": 6662,
											"name": "SWAP3"
										},
										{
											"begin": 6623,
											"end": 6662,
											"name": "SWAP2"
										},
										{
											"begin": 6623,
											"end": 6662,
											"name": "SWAP1"
										},
										{
											"begin": 6623,
											"end": 6662,
											"name": "POP"
										},
										{
											"begin": 6623,
											"end": 6662,
											"name": "POP"
										},
										{
											"begin": 6623,
											"end": 6662,
											"name": "POP"
										},
										{
											"begin": 6607,
											"end": 6662,
											"name": "SWAP1"
										},
										{
											"begin": 6607,
											"end": 6662,
											"name": "POP"
										},
										{
											"begin": 6669,
											"end": 6681,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6684,
											"end": 6707,
											"name": "PUSH [tag]",
											"value": "232"
										},
										{
											"begin": 6697,
											"end": 6706,
											"name": "DUP6"
										},
										{
											"begin": 6684,
											"end": 6707,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6684,
											"end": 6707,
											"name": "AND"
										},
										{
											"begin": 6684,
											"end": 6692,
											"name": "DUP5"
										},
										{
											"begin": 6684,
											"end": 6696,
											"name": "PUSH [tag]",
											"value": "173"
										},
										{
											"begin": 6684,
											"end": 6696,
											"name": "SWAP1"
										},
										{
											"begin": 6684,
											"end": 6707,
											"name": "SWAP2"
										},
										{
											"begin": 6684,
											"end": 6707,
											"name": "SWAP1"
										},
										{
											"begin": 6684,
											"end": 6707,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 6684,
											"end": 6707,
											"name": "AND"
										},
										{
											"begin": 6684,
											"end": 6707,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6684,
											"end": 6707,
											"name": "tag",
											"value": "232"
										},
										{
											"begin": 6684,
											"end": 6707,
											"name": "JUMPDEST"
										},
										{
											"begin": 6669,
											"end": 6707,
											"name": "SWAP1"
										},
										{
											"begin": 6669,
											"end": 6707,
											"name": "POP"
										},
										{
											"begin": 6714,
											"end": 6726,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6729,
											"end": 6752,
											"name": "PUSH [tag]",
											"value": "233"
										},
										{
											"begin": 6742,
											"end": 6751,
											"name": "DUP6"
										},
										{
											"begin": 6729,
											"end": 6752,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6729,
											"end": 6752,
											"name": "AND"
										},
										{
											"begin": 6729,
											"end": 6737,
											"name": "DUP5"
										},
										{
											"begin": 6729,
											"end": 6741,
											"name": "PUSH [tag]",
											"value": "173"
										},
										{
											"begin": 6729,
											"end": 6741,
											"name": "SWAP1"
										},
										{
											"begin": 6729,
											"end": 6752,
											"name": "SWAP2"
										},
										{
											"begin": 6729,
											"end": 6752,
											"name": "SWAP1"
										},
										{
											"begin": 6729,
											"end": 6752,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 6729,
											"end": 6752,
											"name": "AND"
										},
										{
											"begin": 6729,
											"end": 6752,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6729,
											"end": 6752,
											"name": "tag",
											"value": "233"
										},
										{
											"begin": 6729,
											"end": 6752,
											"name": "JUMPDEST"
										},
										{
											"begin": 6714,
											"end": 6752,
											"name": "SWAP1"
										},
										{
											"begin": 6714,
											"end": 6752,
											"name": "POP"
										},
										{
											"begin": 6761,
											"end": 6771,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6774,
											"end": 6804,
											"name": "PUSH [tag]",
											"value": "234"
										},
										{
											"begin": 6783,
											"end": 6792,
											"name": "DUP8"
										},
										{
											"begin": 6794,
											"end": 6803,
											"name": "DUP8"
										},
										{
											"begin": 6774,
											"end": 6782,
											"name": "PUSH [tag]",
											"value": "188"
										},
										{
											"begin": 6774,
											"end": 6804,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6774,
											"end": 6804,
											"name": "tag",
											"value": "234"
										},
										{
											"begin": 6774,
											"end": 6804,
											"name": "JUMPDEST"
										},
										{
											"begin": 6761,
											"end": 6804,
											"name": "SWAP1"
										},
										{
											"begin": 6761,
											"end": 6804,
											"name": "POP"
										},
										{
											"begin": 6811,
											"end": 6828,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6831,
											"end": 6842,
											"name": "DUP1"
										},
										{
											"begin": 6831,
											"end": 6842,
											"name": "SLOAD"
										},
										{
											"begin": 6811,
											"end": 6842,
											"name": "SWAP1"
										},
										{
											"begin": 6811,
											"end": 6842,
											"name": "POP"
										},
										{
											"begin": 6952,
											"end": 6953,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6936,
											"end": 6948,
											"name": "DUP2"
										},
										{
											"begin": 6936,
											"end": 6953,
											"name": "EQ"
										},
										{
											"begin": 6932,
											"end": 7266,
											"name": "ISZERO"
										},
										{
											"begin": 6932,
											"end": 7266,
											"name": "PUSH [tag]",
											"value": "235"
										},
										{
											"begin": 6932,
											"end": 7266,
											"name": "JUMPI"
										},
										{
											"begin": 6976,
											"end": 7030,
											"name": "PUSH [tag]",
											"value": "236"
										},
										{
											"begin": 393,
											"end": 400,
											"name": "PUSH",
											"value": "3E8"
										},
										{
											"begin": 6976,
											"end": 7007,
											"name": "PUSH [tag]",
											"value": "237"
										},
										{
											"begin": 6986,
											"end": 7006,
											"name": "PUSH [tag]",
											"value": "238"
										},
										{
											"begin": 6998,
											"end": 7005,
											"name": "DUP7"
										},
										{
											"begin": 6986,
											"end": 6993,
											"name": "DUP9"
										},
										{
											"begin": 6986,
											"end": 6997,
											"name": "PUSH [tag]",
											"value": "239"
										},
										{
											"begin": 6986,
											"end": 6997,
											"name": "SWAP1"
										},
										{
											"begin": 6986,
											"end": 7006,
											"name": "SWAP2"
										},
										{
											"begin": 6986,
											"end": 7006,
											"name": "SWAP1"
										},
										{
											"begin": 6986,
											"end": 7006,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 6986,
											"end": 7006,
											"name": "AND"
										},
										{
											"begin": 6986,
											"end": 7006,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6986,
											"end": 7006,
											"name": "tag",
											"value": "238"
										},
										{
											"begin": 6986,
											"end": 7006,
											"name": "JUMPDEST"
										},
										{
											"begin": 6976,
											"end": 6985,
											"name": "PUSH [tag]",
											"value": "240"
										},
										{
											"begin": 6976,
											"end": 7007,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6976,
											"end": 7007,
											"name": "tag",
											"value": "237"
										},
										{
											"begin": 6976,
											"end": 7007,
											"name": "JUMPDEST"
										},
										{
											"begin": 6976,
											"end": 7011,
											"name": "PUSH [tag]",
											"value": "173"
										},
										{
											"begin": 6976,
											"end": 7011,
											"name": "SWAP1"
										},
										{
											"begin": 6976,
											"end": 7030,
											"name": "SWAP2"
										},
										{
											"begin": 6976,
											"end": 7030,
											"name": "SWAP1"
										},
										{
											"begin": 6976,
											"end": 7030,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 6976,
											"end": 7030,
											"name": "AND"
										},
										{
											"begin": 6976,
											"end": 7030,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6976,
											"end": 7030,
											"name": "tag",
											"value": "236"
										},
										{
											"begin": 6976,
											"end": 7030,
											"name": "JUMPDEST"
										},
										{
											"begin": 6964,
											"end": 7030,
											"name": "SWAP9"
										},
										{
											"begin": 6964,
											"end": 7030,
											"name": "POP"
										},
										{
											"begin": 7039,
											"end": 7075,
											"name": "PUSH [tag]",
											"value": "241"
										},
										{
											"begin": 7053,
											"end": 7054,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 393,
											"end": 400,
											"name": "PUSH",
											"value": "3E8"
										},
										{
											"begin": 7039,
											"end": 7044,
											"name": "PUSH [tag]",
											"value": "242"
										},
										{
											"begin": 7039,
											"end": 7075,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7039,
											"end": 7075,
											"name": "tag",
											"value": "241"
										},
										{
											"begin": 7039,
											"end": 7075,
											"name": "JUMPDEST"
										},
										{
											"begin": 6932,
											"end": 7266,
											"name": "PUSH [tag]",
											"value": "243"
										},
										{
											"begin": 6932,
											"end": 7266,
											"name": "JUMP"
										},
										{
											"begin": 6932,
											"end": 7266,
											"name": "tag",
											"value": "235"
										},
										{
											"begin": 6932,
											"end": 7266,
											"name": "JUMPDEST"
										},
										{
											"begin": 7172,
											"end": 7258,
											"name": "PUSH [tag]",
											"value": "244"
										},
										{
											"begin": 7209,
											"end": 7218,
											"name": "DUP9"
										},
										{
											"begin": 7181,
											"end": 7218,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7181,
											"end": 7218,
											"name": "AND"
										},
										{
											"begin": 7181,
											"end": 7206,
											"name": "PUSH [tag]",
											"value": "245"
										},
										{
											"begin": 7193,
											"end": 7205,
											"name": "DUP4"
										},
										{
											"begin": 7181,
											"end": 7188,
											"name": "DUP8"
										},
										{
											"begin": 7181,
											"end": 7192,
											"name": "PUSH [tag]",
											"value": "239"
										},
										{
											"begin": 7181,
											"end": 7192,
											"name": "SWAP1"
										},
										{
											"begin": 7181,
											"end": 7206,
											"name": "SWAP2"
										},
										{
											"begin": 7181,
											"end": 7206,
											"name": "SWAP1"
										},
										{
											"begin": 7181,
											"end": 7206,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 7181,
											"end": 7206,
											"name": "AND"
										},
										{
											"begin": 7181,
											"end": 7206,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7181,
											"end": 7206,
											"name": "tag",
											"value": "245"
										},
										{
											"begin": 7181,
											"end": 7206,
											"name": "JUMPDEST"
										},
										{
											"begin": 7181,
											"end": 7218,
											"name": "DUP2"
										},
										{
											"begin": 7181,
											"end": 7218,
											"name": "PUSH [tag]",
											"value": "246"
										},
										{
											"begin": 7181,
											"end": 7218,
											"name": "JUMPI"
										},
										{
											"begin": 7181,
											"end": 7218,
											"name": "INVALID"
										},
										{
											"begin": 7181,
											"end": 7218,
											"name": "tag",
											"value": "246"
										},
										{
											"begin": 7181,
											"end": 7218,
											"name": "JUMPDEST"
										},
										{
											"begin": 7181,
											"end": 7218,
											"name": "DIV"
										},
										{
											"begin": 7248,
											"end": 7257,
											"name": "DUP9"
										},
										{
											"begin": 7220,
											"end": 7257,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7220,
											"end": 7257,
											"name": "AND"
										},
										{
											"begin": 7220,
											"end": 7245,
											"name": "PUSH [tag]",
											"value": "247"
										},
										{
											"begin": 7232,
											"end": 7244,
											"name": "DUP5"
										},
										{
											"begin": 7220,
											"end": 7227,
											"name": "DUP8"
										},
										{
											"begin": 7220,
											"end": 7231,
											"name": "PUSH [tag]",
											"value": "239"
										},
										{
											"begin": 7220,
											"end": 7231,
											"name": "SWAP1"
										},
										{
											"begin": 7220,
											"end": 7245,
											"name": "SWAP2"
										},
										{
											"begin": 7220,
											"end": 7245,
											"name": "SWAP1"
										},
										{
											"begin": 7220,
											"end": 7245,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 7220,
											"end": 7245,
											"name": "AND"
										},
										{
											"begin": 7220,
											"end": 7245,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7220,
											"end": 7245,
											"name": "tag",
											"value": "247"
										},
										{
											"begin": 7220,
											"end": 7245,
											"name": "JUMPDEST"
										},
										{
											"begin": 7220,
											"end": 7257,
											"name": "DUP2"
										},
										{
											"begin": 7220,
											"end": 7257,
											"name": "PUSH [tag]",
											"value": "248"
										},
										{
											"begin": 7220,
											"end": 7257,
											"name": "JUMPI"
										},
										{
											"begin": 7220,
											"end": 7257,
											"name": "INVALID"
										},
										{
											"begin": 7220,
											"end": 7257,
											"name": "tag",
											"value": "248"
										},
										{
											"begin": 7220,
											"end": 7257,
											"name": "JUMPDEST"
										},
										{
											"begin": 7220,
											"end": 7257,
											"name": "DIV"
										},
										{
											"begin": 7172,
											"end": 7180,
											"name": "PUSH [tag]",
											"value": "249"
										},
										{
											"begin": 7172,
											"end": 7258,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7172,
											"end": 7258,
											"name": "tag",
											"value": "244"
										},
										{
											"begin": 7172,
											"end": 7258,
											"name": "JUMPDEST"
										},
										{
											"begin": 7160,
											"end": 7258,
											"name": "SWAP9"
										},
										{
											"begin": 7160,
											"end": 7258,
											"name": "POP"
										},
										{
											"begin": 6932,
											"end": 7266,
											"name": "tag",
											"value": "243"
										},
										{
											"begin": 6932,
											"end": 7266,
											"name": "JUMPDEST"
										},
										{
											"begin": 7292,
											"end": 7293,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7280,
											"end": 7289,
											"name": "DUP10"
										},
										{
											"begin": 7280,
											"end": 7293,
											"name": "GT"
										},
										{
											"begin": 7272,
											"end": 7332,
											"name": "PUSH [tag]",
											"value": "250"
										},
										{
											"begin": 7272,
											"end": 7332,
											"name": "JUMPI"
										},
										{
											"begin": 7272,
											"end": 7332,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7272,
											"end": 7332,
											"name": "MLOAD"
										},
										{
											"begin": 7272,
											"end": 7332,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7272,
											"end": 7332,
											"name": "DUP2"
										},
										{
											"begin": 7272,
											"end": 7332,
											"name": "MSTORE"
										},
										{
											"begin": 7272,
											"end": 7332,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 7272,
											"end": 7332,
											"name": "ADD"
										},
										{
											"begin": 7272,
											"end": 7332,
											"name": "DUP1"
										},
										{
											"begin": 7272,
											"end": 7332,
											"name": "DUP1"
										},
										{
											"begin": 7272,
											"end": 7332,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7272,
											"end": 7332,
											"name": "ADD"
										},
										{
											"begin": 7272,
											"end": 7332,
											"name": "DUP3"
										},
										{
											"begin": 7272,
											"end": 7332,
											"name": "DUP2"
										},
										{
											"begin": 7272,
											"end": 7332,
											"name": "SUB"
										},
										{
											"begin": 7272,
											"end": 7332,
											"name": "DUP3"
										},
										{
											"begin": 7272,
											"end": 7332,
											"name": "MSTORE"
										},
										{
											"begin": 7272,
											"end": 7332,
											"name": "PUSH",
											"value": "22"
										},
										{
											"begin": 7272,
											"end": 7332,
											"name": "DUP2"
										},
										{
											"begin": 7272,
											"end": 7332,
											"name": "MSTORE"
										},
										{
											"begin": 7272,
											"end": 7332,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7272,
											"end": 7332,
											"name": "ADD"
										},
										{
											"begin": 7272,
											"end": 7332,
											"name": "DUP1"
										},
										{
											"begin": 7272,
											"end": 7332,
											"name": "PUSH data",
											"value": "8A472E50EC0B760C580C3DC8C62CDCF0FE39BAB372EAF2D9E07261F1B72DF71D"
										},
										{
											"begin": 7272,
											"end": 7332,
											"name": "PUSH",
											"value": "22"
										},
										{
											"begin": 7272,
											"end": 7332,
											"name": "SWAP2"
										},
										{
											"begin": 7272,
											"end": 7332,
											"name": "CODECOPY"
										},
										{
											"begin": 7272,
											"end": 7332,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7272,
											"end": 7332,
											"name": "ADD"
										},
										{
											"begin": 7272,
											"end": 7332,
											"name": "SWAP2"
										},
										{
											"begin": 7272,
											"end": 7332,
											"name": "POP"
										},
										{
											"begin": 7272,
											"end": 7332,
											"name": "POP"
										},
										{
											"begin": 7272,
											"end": 7332,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7272,
											"end": 7332,
											"name": "MLOAD"
										},
										{
											"begin": 7272,
											"end": 7332,
											"name": "DUP1"
										},
										{
											"begin": 7272,
											"end": 7332,
											"name": "SWAP2"
										},
										{
											"begin": 7272,
											"end": 7332,
											"name": "SUB"
										},
										{
											"begin": 7272,
											"end": 7332,
											"name": "SWAP1"
										},
										{
											"begin": 7272,
											"end": 7332,
											"name": "REVERT"
										},
										{
											"begin": 7272,
											"end": 7332,
											"name": "tag",
											"value": "250"
										},
										{
											"begin": 7272,
											"end": 7332,
											"name": "JUMPDEST"
										},
										{
											"begin": 7339,
											"end": 7359,
											"name": "PUSH [tag]",
											"value": "251"
										},
										{
											"begin": 7345,
											"end": 7347,
											"name": "DUP11"
										},
										{
											"begin": 7349,
											"end": 7358,
											"name": "DUP11"
										},
										{
											"begin": 7339,
											"end": 7344,
											"name": "PUSH [tag]",
											"value": "242"
										},
										{
											"begin": 7339,
											"end": 7359,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7339,
											"end": 7359,
											"name": "tag",
											"value": "251"
										},
										{
											"begin": 7339,
											"end": 7359,
											"name": "JUMPDEST"
										},
										{
											"begin": 7368,
											"end": 7395,
											"name": "PUSH [tag]",
											"value": "252"
										},
										{
											"begin": 7376,
											"end": 7384,
											"name": "DUP7"
										},
										{
											"begin": 7386,
											"end": 7394,
											"name": "DUP7"
										},
										{
											"begin": 7368,
											"end": 7375,
											"name": "PUSH [tag]",
											"value": "253"
										},
										{
											"begin": 7368,
											"end": 7395,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7368,
											"end": 7395,
											"name": "tag",
											"value": "252"
										},
										{
											"begin": 7368,
											"end": 7395,
											"name": "JUMPDEST"
										},
										{
											"begin": 7406,
											"end": 7411,
											"name": "DUP2"
										},
										{
											"begin": 7402,
											"end": 7455,
											"name": "ISZERO"
										},
										{
											"begin": 7402,
											"end": 7455,
											"name": "PUSH [tag]",
											"value": "254"
										},
										{
											"begin": 7402,
											"end": 7455,
											"name": "JUMPI"
										},
										{
											"begin": 7421,
											"end": 7455,
											"name": "PUSH [tag]",
											"value": "255"
										},
										{
											"begin": 7429,
											"end": 7437,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 7429,
											"end": 7437,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7429,
											"end": 7437,
											"name": "SWAP1"
										},
										{
											"begin": 7429,
											"end": 7437,
											"name": "SLOAD"
										},
										{
											"begin": 7429,
											"end": 7437,
											"name": "SWAP1"
										},
										{
											"begin": 7429,
											"end": 7437,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 7429,
											"end": 7437,
											"name": "EXP"
										},
										{
											"begin": 7429,
											"end": 7437,
											"name": "SWAP1"
										},
										{
											"begin": 7429,
											"end": 7437,
											"name": "DIV"
										},
										{
											"begin": 7429,
											"end": 7437,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7429,
											"end": 7437,
											"name": "AND"
										},
										{
											"begin": 7424,
											"end": 7438,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7424,
											"end": 7438,
											"name": "AND"
										},
										{
											"begin": 7445,
											"end": 7453,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 7445,
											"end": 7453,
											"name": "PUSH",
											"value": "E"
										},
										{
											"begin": 7445,
											"end": 7453,
											"name": "SWAP1"
										},
										{
											"begin": 7445,
											"end": 7453,
											"name": "SLOAD"
										},
										{
											"begin": 7445,
											"end": 7453,
											"name": "SWAP1"
										},
										{
											"begin": 7445,
											"end": 7453,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 7445,
											"end": 7453,
											"name": "EXP"
										},
										{
											"begin": 7445,
											"end": 7453,
											"name": "SWAP1"
										},
										{
											"begin": 7445,
											"end": 7453,
											"name": "DIV"
										},
										{
											"begin": 7445,
											"end": 7453,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7445,
											"end": 7453,
											"name": "AND"
										},
										{
											"begin": 7440,
											"end": 7454,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7440,
											"end": 7454,
											"name": "AND"
										},
										{
											"begin": 7421,
											"end": 7423,
											"name": "PUSH [tag]",
											"value": "193"
										},
										{
											"begin": 7421,
											"end": 7455,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7421,
											"end": 7455,
											"name": "tag",
											"value": "255"
										},
										{
											"begin": 7421,
											"end": 7455,
											"name": "JUMPDEST"
										},
										{
											"begin": 7413,
											"end": 7418,
											"name": "PUSH",
											"value": "B"
										},
										{
											"begin": 7413,
											"end": 7455,
											"name": "DUP2"
										},
										{
											"begin": 7413,
											"end": 7455,
											"name": "SWAP1"
										},
										{
											"begin": 7413,
											"end": 7455,
											"name": "SSTORE"
										},
										{
											"begin": 7413,
											"end": 7455,
											"name": "POP"
										},
										{
											"begin": 7402,
											"end": 7455,
											"name": "tag",
											"value": "254"
										},
										{
											"begin": 7402,
											"end": 7455,
											"name": "JUMPDEST"
										},
										{
											"begin": 7517,
											"end": 7527,
											"name": "CALLER"
										},
										{
											"begin": 7512,
											"end": 7546,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7512,
											"end": 7546,
											"name": "AND"
										},
										{
											"begin": 7512,
											"end": 7546,
											"name": "PUSH",
											"value": "4C209B5FC8AD50758F13E2E1088BA56A560DFF690A1C6FEF26394F4C03821C4F"
										},
										{
											"begin": 7529,
											"end": 7536,
											"name": "DUP6"
										},
										{
											"begin": 7538,
											"end": 7545,
											"name": "DUP6"
										},
										{
											"begin": 7512,
											"end": 7546,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7512,
											"end": 7546,
											"name": "MLOAD"
										},
										{
											"begin": 7512,
											"end": 7546,
											"name": "DUP1"
										},
										{
											"begin": 7512,
											"end": 7546,
											"name": "DUP4"
										},
										{
											"begin": 7512,
											"end": 7546,
											"name": "DUP2"
										},
										{
											"begin": 7512,
											"end": 7546,
											"name": "MSTORE"
										},
										{
											"begin": 7512,
											"end": 7546,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7512,
											"end": 7546,
											"name": "ADD"
										},
										{
											"begin": 7512,
											"end": 7546,
											"name": "DUP3"
										},
										{
											"begin": 7512,
											"end": 7546,
											"name": "DUP2"
										},
										{
											"begin": 7512,
											"end": 7546,
											"name": "MSTORE"
										},
										{
											"begin": 7512,
											"end": 7546,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7512,
											"end": 7546,
											"name": "ADD"
										},
										{
											"begin": 7512,
											"end": 7546,
											"name": "SWAP3"
										},
										{
											"begin": 7512,
											"end": 7546,
											"name": "POP"
										},
										{
											"begin": 7512,
											"end": 7546,
											"name": "POP"
										},
										{
											"begin": 7512,
											"end": 7546,
											"name": "POP"
										},
										{
											"begin": 7512,
											"end": 7546,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7512,
											"end": 7546,
											"name": "MLOAD"
										},
										{
											"begin": 7512,
											"end": 7546,
											"name": "DUP1"
										},
										{
											"begin": 7512,
											"end": 7546,
											"name": "SWAP2"
										},
										{
											"begin": 7512,
											"end": 7546,
											"name": "SUB"
										},
										{
											"begin": 7512,
											"end": 7546,
											"name": "SWAP1"
										},
										{
											"begin": 7512,
											"end": 7546,
											"name": "LOG2"
										},
										{
											"begin": 1612,
											"end": 1613,
											"name": "POP"
										},
										{
											"begin": 1612,
											"end": 1613,
											"name": "POP"
										},
										{
											"begin": 1612,
											"end": 1613,
											"name": "POP"
										},
										{
											"begin": 1612,
											"end": 1613,
											"name": "POP"
										},
										{
											"begin": 1612,
											"end": 1613,
											"name": "POP"
										},
										{
											"begin": 1612,
											"end": 1613,
											"name": "POP"
										},
										{
											"begin": 1612,
											"end": 1613,
											"name": "POP"
										},
										{
											"begin": 1612,
											"end": 1613,
											"name": "POP"
										},
										{
											"begin": 1631,
											"end": 1632,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1620,
											"end": 1628,
											"name": "PUSH",
											"value": "D"
										},
										{
											"begin": 1620,
											"end": 1632,
											"name": "DUP2"
										},
										{
											"begin": 1620,
											"end": 1632,
											"name": "SWAP1"
										},
										{
											"begin": 1620,
											"end": 1632,
											"name": "SSTORE"
										},
										{
											"begin": 1620,
											"end": 1632,
											"name": "POP"
										},
										{
											"begin": 6390,
											"end": 7552,
											"name": "SWAP2"
										},
										{
											"begin": 6390,
											"end": 7552,
											"name": "SWAP1"
										},
										{
											"begin": 6390,
											"end": 7552,
											"name": "POP"
										},
										{
											"begin": 6390,
											"end": 7552,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 9784,
											"end": 10197,
											"name": "tag",
											"value": "111"
										},
										{
											"begin": 9784,
											"end": 10197,
											"name": "JUMPDEST"
										},
										{
											"begin": 9899,
											"end": 9927,
											"name": "PUSH [tag]",
											"value": "257"
										},
										{
											"begin": 9899,
											"end": 9927,
											"name": "PUSH [tag]",
											"value": "163"
										},
										{
											"begin": 9899,
											"end": 9927,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 9899,
											"end": 9927,
											"name": "tag",
											"value": "257"
										},
										{
											"begin": 9899,
											"end": 9927,
											"name": "JUMPDEST"
										},
										{
											"begin": 9930,
											"end": 10147,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9930,
											"end": 10147,
											"name": "MLOAD"
										},
										{
											"begin": 9930,
											"end": 10147,
											"name": "DUP1"
										},
										{
											"begin": 9930,
											"end": 10147,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 9930,
											"end": 10147,
											"name": "ADD"
										},
										{
											"begin": 9930,
											"end": 10147,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9930,
											"end": 10147,
											"name": "MSTORE"
										},
										{
											"begin": 9930,
											"end": 10147,
											"name": "DUP1"
										},
										{
											"begin": 9958,
											"end": 9964,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 9958,
											"end": 9964,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9958,
											"end": 9964,
											"name": "SWAP1"
										},
										{
											"begin": 9958,
											"end": 9964,
											"name": "SLOAD"
										},
										{
											"begin": 9958,
											"end": 9964,
											"name": "SWAP1"
										},
										{
											"begin": 9958,
											"end": 9964,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 9958,
											"end": 9964,
											"name": "EXP"
										},
										{
											"begin": 9958,
											"end": 9964,
											"name": "SWAP1"
										},
										{
											"begin": 9958,
											"end": 9964,
											"name": "DIV"
										},
										{
											"begin": 9958,
											"end": 9964,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9958,
											"end": 9964,
											"name": "AND"
										},
										{
											"begin": 9930,
											"end": 10147,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9930,
											"end": 10147,
											"name": "AND"
										},
										{
											"begin": 9930,
											"end": 10147,
											"name": "DUP2"
										},
										{
											"begin": 9930,
											"end": 10147,
											"name": "MSTORE"
										},
										{
											"begin": 9930,
											"end": 10147,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9930,
											"end": 10147,
											"name": "ADD"
										},
										{
											"begin": 9981,
											"end": 9987,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 9981,
											"end": 9987,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9981,
											"end": 9987,
											"name": "SWAP1"
										},
										{
											"begin": 9981,
											"end": 9987,
											"name": "SLOAD"
										},
										{
											"begin": 9981,
											"end": 9987,
											"name": "SWAP1"
										},
										{
											"begin": 9981,
											"end": 9987,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 9981,
											"end": 9987,
											"name": "EXP"
										},
										{
											"begin": 9981,
											"end": 9987,
											"name": "SWAP1"
										},
										{
											"begin": 9981,
											"end": 9987,
											"name": "DIV"
										},
										{
											"begin": 9981,
											"end": 9987,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9981,
											"end": 9987,
											"name": "AND"
										},
										{
											"begin": 9930,
											"end": 10147,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9930,
											"end": 10147,
											"name": "AND"
										},
										{
											"begin": 9930,
											"end": 10147,
											"name": "DUP2"
										},
										{
											"begin": 9930,
											"end": 10147,
											"name": "MSTORE"
										},
										{
											"begin": 9930,
											"end": 10147,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9930,
											"end": 10147,
											"name": "ADD"
										},
										{
											"begin": 10008,
											"end": 10018,
											"name": "DUP9"
										},
										{
											"begin": 9930,
											"end": 10147,
											"name": "DUP2"
										},
										{
											"begin": 9930,
											"end": 10147,
											"name": "MSTORE"
										},
										{
											"begin": 9930,
											"end": 10147,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9930,
											"end": 10147,
											"name": "ADD"
										},
										{
											"begin": 10039,
											"end": 10049,
											"name": "DUP8"
										},
										{
											"begin": 9930,
											"end": 10147,
											"name": "DUP2"
										},
										{
											"begin": 9930,
											"end": 10147,
											"name": "MSTORE"
										},
										{
											"begin": 9930,
											"end": 10147,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9930,
											"end": 10147,
											"name": "ADD"
										},
										{
											"begin": 10068,
											"end": 10069,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9930,
											"end": 10147,
											"name": "DUP2"
										},
										{
											"begin": 9930,
											"end": 10147,
											"name": "MSTORE"
										},
										{
											"begin": 9930,
											"end": 10147,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9930,
											"end": 10147,
											"name": "ADD"
										},
										{
											"begin": 10088,
											"end": 10089,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9930,
											"end": 10147,
											"name": "DUP2"
										},
										{
											"begin": 9930,
											"end": 10147,
											"name": "MSTORE"
										},
										{
											"begin": 9930,
											"end": 10147,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9930,
											"end": 10147,
											"name": "ADD"
										},
										{
											"begin": 10113,
											"end": 10114,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9930,
											"end": 10147,
											"name": "DUP2"
										},
										{
											"begin": 9930,
											"end": 10147,
											"name": "MSTORE"
										},
										{
											"begin": 9930,
											"end": 10147,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9930,
											"end": 10147,
											"name": "ADD"
										},
										{
											"begin": 10138,
											"end": 10139,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9930,
											"end": 10147,
											"name": "DUP2"
										},
										{
											"begin": 9930,
											"end": 10147,
											"name": "MSTORE"
										},
										{
											"begin": 9930,
											"end": 10147,
											"name": "POP"
										},
										{
											"begin": 9899,
											"end": 10147,
											"name": "SWAP1"
										},
										{
											"begin": 9899,
											"end": 10147,
											"name": "POP"
										},
										{
											"begin": 10154,
											"end": 10191,
											"name": "PUSH [tag]",
											"value": "258"
										},
										{
											"begin": 10160,
											"end": 10170,
											"name": "DUP2"
										},
										{
											"begin": 10172,
											"end": 10174,
											"name": "DUP7"
										},
										{
											"begin": 10176,
											"end": 10180,
											"name": "DUP7"
										},
										{
											"begin": 10176,
											"end": 10180,
											"name": "DUP7"
										},
										{
											"begin": 10154,
											"end": 10191,
											"name": "DUP1"
										},
										{
											"begin": 10154,
											"end": 10191,
											"name": "DUP1"
										},
										{
											"begin": 10154,
											"end": 10191,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 10154,
											"end": 10191,
											"name": "ADD"
										},
										{
											"begin": 10154,
											"end": 10191,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10154,
											"end": 10191,
											"name": "DUP1"
										},
										{
											"begin": 10154,
											"end": 10191,
											"name": "SWAP2"
										},
										{
											"begin": 10154,
											"end": 10191,
											"name": "DIV"
										},
										{
											"begin": 10154,
											"end": 10191,
											"name": "MUL"
										},
										{
											"begin": 10154,
											"end": 10191,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10154,
											"end": 10191,
											"name": "ADD"
										},
										{
											"begin": 10154,
											"end": 10191,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10154,
											"end": 10191,
											"name": "MLOAD"
										},
										{
											"begin": 10154,
											"end": 10191,
											"name": "SWAP1"
										},
										{
											"begin": 10154,
											"end": 10191,
											"name": "DUP2"
										},
										{
											"begin": 10154,
											"end": 10191,
											"name": "ADD"
										},
										{
											"begin": 10154,
											"end": 10191,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10154,
											"end": 10191,
											"name": "MSTORE"
										},
										{
											"begin": 10154,
											"end": 10191,
											"name": "DUP1"
										},
										{
											"begin": 10154,
											"end": 10191,
											"name": "SWAP4"
										},
										{
											"begin": 10154,
											"end": 10191,
											"name": "SWAP3"
										},
										{
											"begin": 10154,
											"end": 10191,
											"name": "SWAP2"
										},
										{
											"begin": 10154,
											"end": 10191,
											"name": "SWAP1"
										},
										{
											"begin": 10154,
											"end": 10191,
											"name": "DUP2"
										},
										{
											"begin": 10154,
											"end": 10191,
											"name": "DUP2"
										},
										{
											"begin": 10154,
											"end": 10191,
											"name": "MSTORE"
										},
										{
											"begin": 10154,
											"end": 10191,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10154,
											"end": 10191,
											"name": "ADD"
										},
										{
											"begin": 10154,
											"end": 10191,
											"name": "DUP4"
										},
										{
											"begin": 10154,
											"end": 10191,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 33,
											"name": "DUP1"
										},
										{
											"begin": 22,
											"end": 28,
											"name": "DUP3"
										},
										{
											"begin": 14,
											"end": 20,
											"name": "DUP5"
										},
										{
											"begin": 1,
											"end": 34,
											"name": "CALLDATACOPY"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 93,
											"end": 96,
											"name": "DUP2"
										},
										{
											"begin": 85,
											"end": 91,
											"name": "DUP5"
										},
										{
											"begin": 81,
											"end": 97,
											"name": "ADD"
										},
										{
											"begin": 74,
											"end": 101,
											"name": "MSTORE"
										},
										{
											"begin": 137,
											"end": 141,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 133,
											"end": 142,
											"name": "NOT"
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 121,
											"end": 124,
											"name": "DUP3"
										},
										{
											"begin": 117,
											"end": 131,
											"name": "ADD"
										},
										{
											"begin": 113,
											"end": 143,
											"name": "AND"
										},
										{
											"begin": 106,
											"end": 143,
											"name": "SWAP1"
										},
										{
											"begin": 106,
											"end": 143,
											"name": "POP"
										},
										{
											"begin": 169,
											"end": 172,
											"name": "DUP1"
										},
										{
											"begin": 161,
											"end": 167,
											"name": "DUP4"
										},
										{
											"begin": 157,
											"end": 173,
											"name": "ADD"
										},
										{
											"begin": 147,
											"end": 173,
											"name": "SWAP3"
										},
										{
											"begin": 147,
											"end": 173,
											"name": "POP"
										},
										{
											"begin": 10154,
											"end": 10191,
											"name": "POP"
										},
										{
											"begin": 10154,
											"end": 10191,
											"name": "POP"
										},
										{
											"begin": 10154,
											"end": 10191,
											"name": "POP"
										},
										{
											"begin": 10154,
											"end": 10191,
											"name": "POP"
										},
										{
											"begin": 10154,
											"end": 10191,
											"name": "POP"
										},
										{
											"begin": 10154,
											"end": 10191,
											"name": "POP"
										},
										{
											"begin": 10182,
											"end": 10190,
											"name": "DUP6"
										},
										{
											"begin": 10154,
											"end": 10159,
											"name": "PUSH [tag]",
											"value": "165"
										},
										{
											"begin": 10154,
											"end": 10191,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 10154,
											"end": 10191,
											"name": "tag",
											"value": "258"
										},
										{
											"begin": 10154,
											"end": 10191,
											"name": "JUMPDEST"
										},
										{
											"begin": 9784,
											"end": 10197,
											"name": "POP"
										},
										{
											"begin": 9784,
											"end": 10197,
											"name": "POP"
										},
										{
											"begin": 9784,
											"end": 10197,
											"name": "POP"
										},
										{
											"begin": 9784,
											"end": 10197,
											"name": "POP"
										},
										{
											"begin": 9784,
											"end": 10197,
											"name": "POP"
										},
										{
											"begin": 9784,
											"end": 10197,
											"name": "POP"
										},
										{
											"begin": 9784,
											"end": 10197,
											"name": "POP"
										},
										{
											"begin": 9784,
											"end": 10197,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 347,
											"end": 388,
											"name": "tag",
											"value": "114"
										},
										{
											"begin": 347,
											"end": 388,
											"name": "JUMPDEST"
										},
										{
											"begin": 347,
											"end": 388,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 347,
											"end": 388,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 347,
											"end": 388,
											"name": "MSTORE"
										},
										{
											"begin": 347,
											"end": 388,
											"name": "DUP1"
										},
										{
											"begin": 347,
											"end": 388,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 347,
											"end": 388,
											"name": "MSTORE"
										},
										{
											"begin": 347,
											"end": 388,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 347,
											"end": 388,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 347,
											"end": 388,
											"name": "KECCAK256"
										},
										{
											"begin": 347,
											"end": 388,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 347,
											"end": 388,
											"name": "SWAP2"
										},
										{
											"begin": 347,
											"end": 388,
											"name": "POP"
										},
										{
											"begin": 347,
											"end": 388,
											"name": "SWAP1"
										},
										{
											"begin": 347,
											"end": 388,
											"name": "POP"
										},
										{
											"begin": 347,
											"end": 388,
											"name": "SLOAD"
										},
										{
											"begin": 347,
											"end": 388,
											"name": "DUP2"
										},
										{
											"begin": 347,
											"end": 388,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1219,
											"end": 1236,
											"name": "tag",
											"value": "116"
										},
										{
											"begin": 1219,
											"end": 1236,
											"name": "JUMPDEST"
										},
										{
											"begin": 1219,
											"end": 1236,
											"name": "PUSH",
											"value": "B"
										},
										{
											"begin": 1219,
											"end": 1236,
											"name": "SLOAD"
										},
										{
											"begin": 1219,
											"end": 1236,
											"name": "DUP2"
										},
										{
											"begin": 1219,
											"end": 1236,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 723,
											"end": 761,
											"name": "tag",
											"value": "119"
										},
										{
											"begin": 723,
											"end": 761,
											"name": "JUMPDEST"
										},
										{
											"begin": 723,
											"end": 761,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 723,
											"end": 761,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 723,
											"end": 761,
											"name": "MSTORE"
										},
										{
											"begin": 723,
											"end": 761,
											"name": "DUP1"
										},
										{
											"begin": 723,
											"end": 761,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 723,
											"end": 761,
											"name": "MSTORE"
										},
										{
											"begin": 723,
											"end": 761,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 723,
											"end": 761,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 723,
											"end": 761,
											"name": "KECCAK256"
										},
										{
											"begin": 723,
											"end": 761,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 723,
											"end": 761,
											"name": "SWAP2"
										},
										{
											"begin": 723,
											"end": 761,
											"name": "POP"
										},
										{
											"begin": 723,
											"end": 761,
											"name": "SWAP1"
										},
										{
											"begin": 723,
											"end": 761,
											"name": "POP"
										},
										{
											"begin": 723,
											"end": 761,
											"name": "SLOAD"
										},
										{
											"begin": 723,
											"end": 761,
											"name": "DUP2"
										},
										{
											"begin": 723,
											"end": 761,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 7660,
											"end": 8965,
											"name": "tag",
											"value": "122"
										},
										{
											"begin": 7660,
											"end": 8965,
											"name": "JUMPDEST"
										},
										{
											"begin": 7709,
											"end": 7721,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7723,
											"end": 7735,
											"name": "DUP1"
										},
										{
											"begin": 1569,
											"end": 1570,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1557,
											"end": 1565,
											"name": "PUSH",
											"value": "D"
										},
										{
											"begin": 1557,
											"end": 1565,
											"name": "SLOAD"
										},
										{
											"begin": 1557,
											"end": 1570,
											"name": "EQ"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "PUSH [tag]",
											"value": "260"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "JUMPI"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "MLOAD"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "DUP2"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "MSTORE"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "ADD"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "DUP1"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "DUP1"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "ADD"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "DUP3"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "DUP2"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "SUB"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "DUP3"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "MSTORE"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "PUSH",
											"value": "B"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "DUP2"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "MSTORE"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "ADD"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "DUP1"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "PUSH",
											"value": "31306B3A204C4F434B4544000000000000000000000000000000000000000000"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "DUP2"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "MSTORE"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "POP"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "ADD"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "SWAP2"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "POP"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "POP"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "MLOAD"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "DUP1"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "SWAP2"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "SUB"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "SWAP1"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "REVERT"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "tag",
											"value": "260"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "JUMPDEST"
										},
										{
											"begin": 1604,
											"end": 1605,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1593,
											"end": 1601,
											"name": "PUSH",
											"value": "D"
										},
										{
											"begin": 1593,
											"end": 1605,
											"name": "DUP2"
										},
										{
											"begin": 1593,
											"end": 1605,
											"name": "SWAP1"
										},
										{
											"begin": 1593,
											"end": 1605,
											"name": "SSTORE"
										},
										{
											"begin": 1593,
											"end": 1605,
											"name": "POP"
										},
										{
											"begin": 7745,
											"end": 7762,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7764,
											"end": 7781,
											"name": "DUP1"
										},
										{
											"begin": 7787,
											"end": 7800,
											"name": "PUSH [tag]",
											"value": "262"
										},
										{
											"begin": 7787,
											"end": 7798,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 7787,
											"end": 7800,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7787,
											"end": 7800,
											"name": "tag",
											"value": "262"
										},
										{
											"begin": 7787,
											"end": 7800,
											"name": "JUMPDEST"
										},
										{
											"begin": 7744,
											"end": 7800,
											"name": "POP"
										},
										{
											"begin": 7744,
											"end": 7800,
											"name": "POP"
										},
										{
											"begin": 7744,
											"end": 7800,
											"name": "SWAP2"
										},
										{
											"begin": 7744,
											"end": 7800,
											"name": "POP"
										},
										{
											"begin": 7744,
											"end": 7800,
											"name": "SWAP2"
										},
										{
											"begin": 7744,
											"end": 7800,
											"name": "POP"
										},
										{
											"begin": 7822,
											"end": 7837,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7840,
											"end": 7846,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 7840,
											"end": 7846,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7840,
											"end": 7846,
											"name": "SWAP1"
										},
										{
											"begin": 7840,
											"end": 7846,
											"name": "SLOAD"
										},
										{
											"begin": 7840,
											"end": 7846,
											"name": "SWAP1"
										},
										{
											"begin": 7840,
											"end": 7846,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 7840,
											"end": 7846,
											"name": "EXP"
										},
										{
											"begin": 7840,
											"end": 7846,
											"name": "SWAP1"
										},
										{
											"begin": 7840,
											"end": 7846,
											"name": "DIV"
										},
										{
											"begin": 7840,
											"end": 7846,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7840,
											"end": 7846,
											"name": "AND"
										},
										{
											"begin": 7822,
											"end": 7846,
											"name": "SWAP1"
										},
										{
											"begin": 7822,
											"end": 7846,
											"name": "POP"
										},
										{
											"begin": 7868,
											"end": 7883,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7886,
											"end": 7892,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 7886,
											"end": 7892,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7886,
											"end": 7892,
											"name": "SWAP1"
										},
										{
											"begin": 7886,
											"end": 7892,
											"name": "SLOAD"
										},
										{
											"begin": 7886,
											"end": 7892,
											"name": "SWAP1"
										},
										{
											"begin": 7886,
											"end": 7892,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 7886,
											"end": 7892,
											"name": "EXP"
										},
										{
											"begin": 7886,
											"end": 7892,
											"name": "SWAP1"
										},
										{
											"begin": 7886,
											"end": 7892,
											"name": "DIV"
										},
										{
											"begin": 7886,
											"end": 7892,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7886,
											"end": 7892,
											"name": "AND"
										},
										{
											"begin": 7868,
											"end": 7892,
											"name": "SWAP1"
										},
										{
											"begin": 7868,
											"end": 7892,
											"name": "POP"
										},
										{
											"begin": 7914,
											"end": 7927,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7937,
											"end": 7944,
											"name": "DUP3"
										},
										{
											"begin": 7930,
											"end": 7955,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7930,
											"end": 7955,
											"name": "AND"
										},
										{
											"begin": 7930,
											"end": 7955,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 7964,
											"end": 7968,
											"name": "ADDRESS"
										},
										{
											"begin": 7930,
											"end": 7970,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7930,
											"end": 7970,
											"name": "MLOAD"
										},
										{
											"begin": 7930,
											"end": 7970,
											"name": "DUP3"
										},
										{
											"begin": 7930,
											"end": 7970,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 7930,
											"end": 7970,
											"name": "AND"
										},
										{
											"begin": 7930,
											"end": 7970,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 7930,
											"end": 7970,
											"name": "SHL"
										},
										{
											"begin": 7930,
											"end": 7970,
											"name": "DUP2"
										},
										{
											"begin": 7930,
											"end": 7970,
											"name": "MSTORE"
										},
										{
											"begin": 7930,
											"end": 7970,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 7930,
											"end": 7970,
											"name": "ADD"
										},
										{
											"begin": 7930,
											"end": 7970,
											"name": "DUP1"
										},
										{
											"begin": 7930,
											"end": 7970,
											"name": "DUP3"
										},
										{
											"begin": 7930,
											"end": 7970,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7930,
											"end": 7970,
											"name": "AND"
										},
										{
											"begin": 7930,
											"end": 7970,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7930,
											"end": 7970,
											"name": "AND"
										},
										{
											"begin": 7930,
											"end": 7970,
											"name": "DUP2"
										},
										{
											"begin": 7930,
											"end": 7970,
											"name": "MSTORE"
										},
										{
											"begin": 7930,
											"end": 7970,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7930,
											"end": 7970,
											"name": "ADD"
										},
										{
											"begin": 7930,
											"end": 7970,
											"name": "SWAP2"
										},
										{
											"begin": 7930,
											"end": 7970,
											"name": "POP"
										},
										{
											"begin": 7930,
											"end": 7970,
											"name": "POP"
										},
										{
											"begin": 7930,
											"end": 7970,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7930,
											"end": 7970,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7930,
											"end": 7970,
											"name": "MLOAD"
										},
										{
											"begin": 7930,
											"end": 7970,
											"name": "DUP1"
										},
										{
											"begin": 7930,
											"end": 7970,
											"name": "DUP4"
										},
										{
											"begin": 7930,
											"end": 7970,
											"name": "SUB"
										},
										{
											"begin": 7930,
											"end": 7970,
											"name": "DUP2"
										},
										{
											"begin": 7930,
											"end": 7970,
											"name": "DUP7"
										},
										{
											"begin": 7930,
											"end": 7970,
											"name": "DUP1"
										},
										{
											"begin": 7930,
											"end": 7970,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 7930,
											"end": 7970,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "263"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "263"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 7930,
											"end": 7970,
											"name": "POP"
										},
										{
											"begin": 7930,
											"end": 7970,
											"name": "GAS"
										},
										{
											"begin": 7930,
											"end": 7970,
											"name": "STATICCALL"
										},
										{
											"begin": 7930,
											"end": 7970,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "264"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "264"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 7930,
											"end": 7970,
											"name": "POP"
										},
										{
											"begin": 7930,
											"end": 7970,
											"name": "POP"
										},
										{
											"begin": 7930,
											"end": 7970,
											"name": "POP"
										},
										{
											"begin": 7930,
											"end": 7970,
											"name": "POP"
										},
										{
											"begin": 7930,
											"end": 7970,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7930,
											"end": 7970,
											"name": "MLOAD"
										},
										{
											"begin": 7930,
											"end": 7970,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "265"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "265"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 7930,
											"end": 7970,
											"name": "DUP2"
										},
										{
											"begin": 7930,
											"end": 7970,
											"name": "ADD"
										},
										{
											"begin": 7930,
											"end": 7970,
											"name": "SWAP1"
										},
										{
											"begin": 7930,
											"end": 7970,
											"name": "DUP1"
										},
										{
											"begin": 7930,
											"end": 7970,
											"name": "DUP1"
										},
										{
											"begin": 7930,
											"end": 7970,
											"name": "MLOAD"
										},
										{
											"begin": 7930,
											"end": 7970,
											"name": "SWAP1"
										},
										{
											"begin": 7930,
											"end": 7970,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7930,
											"end": 7970,
											"name": "ADD"
										},
										{
											"begin": 7930,
											"end": 7970,
											"name": "SWAP1"
										},
										{
											"begin": 7930,
											"end": 7970,
											"name": "SWAP3"
										},
										{
											"begin": 7930,
											"end": 7970,
											"name": "SWAP2"
										},
										{
											"begin": 7930,
											"end": 7970,
											"name": "SWAP1"
										},
										{
											"begin": 7930,
											"end": 7970,
											"name": "POP"
										},
										{
											"begin": 7930,
											"end": 7970,
											"name": "POP"
										},
										{
											"begin": 7930,
											"end": 7970,
											"name": "POP"
										},
										{
											"begin": 7914,
											"end": 7970,
											"name": "SWAP1"
										},
										{
											"begin": 7914,
											"end": 7970,
											"name": "POP"
										},
										{
											"begin": 7977,
											"end": 7990,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8000,
											"end": 8007,
											"name": "DUP3"
										},
										{
											"begin": 7993,
											"end": 8018,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7993,
											"end": 8018,
											"name": "AND"
										},
										{
											"begin": 7993,
											"end": 8018,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 8027,
											"end": 8031,
											"name": "ADDRESS"
										},
										{
											"begin": 7993,
											"end": 8033,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7993,
											"end": 8033,
											"name": "MLOAD"
										},
										{
											"begin": 7993,
											"end": 8033,
											"name": "DUP3"
										},
										{
											"begin": 7993,
											"end": 8033,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 7993,
											"end": 8033,
											"name": "AND"
										},
										{
											"begin": 7993,
											"end": 8033,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 7993,
											"end": 8033,
											"name": "SHL"
										},
										{
											"begin": 7993,
											"end": 8033,
											"name": "DUP2"
										},
										{
											"begin": 7993,
											"end": 8033,
											"name": "MSTORE"
										},
										{
											"begin": 7993,
											"end": 8033,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 7993,
											"end": 8033,
											"name": "ADD"
										},
										{
											"begin": 7993,
											"end": 8033,
											"name": "DUP1"
										},
										{
											"begin": 7993,
											"end": 8033,
											"name": "DUP3"
										},
										{
											"begin": 7993,
											"end": 8033,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7993,
											"end": 8033,
											"name": "AND"
										},
										{
											"begin": 7993,
											"end": 8033,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7993,
											"end": 8033,
											"name": "AND"
										},
										{
											"begin": 7993,
											"end": 8033,
											"name": "DUP2"
										},
										{
											"begin": 7993,
											"end": 8033,
											"name": "MSTORE"
										},
										{
											"begin": 7993,
											"end": 8033,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7993,
											"end": 8033,
											"name": "ADD"
										},
										{
											"begin": 7993,
											"end": 8033,
											"name": "SWAP2"
										},
										{
											"begin": 7993,
											"end": 8033,
											"name": "POP"
										},
										{
											"begin": 7993,
											"end": 8033,
											"name": "POP"
										},
										{
											"begin": 7993,
											"end": 8033,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7993,
											"end": 8033,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7993,
											"end": 8033,
											"name": "MLOAD"
										},
										{
											"begin": 7993,
											"end": 8033,
											"name": "DUP1"
										},
										{
											"begin": 7993,
											"end": 8033,
											"name": "DUP4"
										},
										{
											"begin": 7993,
											"end": 8033,
											"name": "SUB"
										},
										{
											"begin": 7993,
											"end": 8033,
											"name": "DUP2"
										},
										{
											"begin": 7993,
											"end": 8033,
											"name": "DUP7"
										},
										{
											"begin": 7993,
											"end": 8033,
											"name": "DUP1"
										},
										{
											"begin": 7993,
											"end": 8033,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 7993,
											"end": 8033,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "266"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "266"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 7993,
											"end": 8033,
											"name": "POP"
										},
										{
											"begin": 7993,
											"end": 8033,
											"name": "GAS"
										},
										{
											"begin": 7993,
											"end": 8033,
											"name": "STATICCALL"
										},
										{
											"begin": 7993,
											"end": 8033,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "267"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "267"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 7993,
											"end": 8033,
											"name": "POP"
										},
										{
											"begin": 7993,
											"end": 8033,
											"name": "POP"
										},
										{
											"begin": 7993,
											"end": 8033,
											"name": "POP"
										},
										{
											"begin": 7993,
											"end": 8033,
											"name": "POP"
										},
										{
											"begin": 7993,
											"end": 8033,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7993,
											"end": 8033,
											"name": "MLOAD"
										},
										{
											"begin": 7993,
											"end": 8033,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "268"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "268"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 7993,
											"end": 8033,
											"name": "DUP2"
										},
										{
											"begin": 7993,
											"end": 8033,
											"name": "ADD"
										},
										{
											"begin": 7993,
											"end": 8033,
											"name": "SWAP1"
										},
										{
											"begin": 7993,
											"end": 8033,
											"name": "DUP1"
										},
										{
											"begin": 7993,
											"end": 8033,
											"name": "DUP1"
										},
										{
											"begin": 7993,
											"end": 8033,
											"name": "MLOAD"
										},
										{
											"begin": 7993,
											"end": 8033,
											"name": "SWAP1"
										},
										{
											"begin": 7993,
											"end": 8033,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7993,
											"end": 8033,
											"name": "ADD"
										},
										{
											"begin": 7993,
											"end": 8033,
											"name": "SWAP1"
										},
										{
											"begin": 7993,
											"end": 8033,
											"name": "SWAP3"
										},
										{
											"begin": 7993,
											"end": 8033,
											"name": "SWAP2"
										},
										{
											"begin": 7993,
											"end": 8033,
											"name": "SWAP1"
										},
										{
											"begin": 7993,
											"end": 8033,
											"name": "POP"
										},
										{
											"begin": 7993,
											"end": 8033,
											"name": "POP"
										},
										{
											"begin": 7993,
											"end": 8033,
											"name": "POP"
										},
										{
											"begin": 7977,
											"end": 8033,
											"name": "SWAP1"
										},
										{
											"begin": 7977,
											"end": 8033,
											"name": "POP"
										},
										{
											"begin": 8040,
											"end": 8054,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8057,
											"end": 8066,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 8057,
											"end": 8081,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8075,
											"end": 8079,
											"name": "ADDRESS"
										},
										{
											"begin": 8057,
											"end": 8081,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8057,
											"end": 8081,
											"name": "AND"
										},
										{
											"begin": 8057,
											"end": 8081,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8057,
											"end": 8081,
											"name": "AND"
										},
										{
											"begin": 8057,
											"end": 8081,
											"name": "DUP2"
										},
										{
											"begin": 8057,
											"end": 8081,
											"name": "MSTORE"
										},
										{
											"begin": 8057,
											"end": 8081,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8057,
											"end": 8081,
											"name": "ADD"
										},
										{
											"begin": 8057,
											"end": 8081,
											"name": "SWAP1"
										},
										{
											"begin": 8057,
											"end": 8081,
											"name": "DUP2"
										},
										{
											"begin": 8057,
											"end": 8081,
											"name": "MSTORE"
										},
										{
											"begin": 8057,
											"end": 8081,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8057,
											"end": 8081,
											"name": "ADD"
										},
										{
											"begin": 8057,
											"end": 8081,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8057,
											"end": 8081,
											"name": "KECCAK256"
										},
										{
											"begin": 8057,
											"end": 8081,
											"name": "SLOAD"
										},
										{
											"begin": 8040,
											"end": 8081,
											"name": "SWAP1"
										},
										{
											"begin": 8040,
											"end": 8081,
											"name": "POP"
										},
										{
											"begin": 8090,
											"end": 8100,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8103,
											"end": 8133,
											"name": "PUSH [tag]",
											"value": "269"
										},
										{
											"begin": 8112,
											"end": 8121,
											"name": "DUP9"
										},
										{
											"begin": 8123,
											"end": 8132,
											"name": "DUP9"
										},
										{
											"begin": 8103,
											"end": 8111,
											"name": "PUSH [tag]",
											"value": "188"
										},
										{
											"begin": 8103,
											"end": 8133,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 8103,
											"end": 8133,
											"name": "tag",
											"value": "269"
										},
										{
											"begin": 8103,
											"end": 8133,
											"name": "JUMPDEST"
										},
										{
											"begin": 8090,
											"end": 8133,
											"name": "SWAP1"
										},
										{
											"begin": 8090,
											"end": 8133,
											"name": "POP"
										},
										{
											"begin": 8140,
											"end": 8157,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8160,
											"end": 8171,
											"name": "DUP1"
										},
										{
											"begin": 8160,
											"end": 8171,
											"name": "SLOAD"
										},
										{
											"begin": 8140,
											"end": 8171,
											"name": "SWAP1"
										},
										{
											"begin": 8140,
											"end": 8171,
											"name": "POP"
										},
										{
											"begin": 8292,
											"end": 8304,
											"name": "DUP1"
										},
										{
											"begin": 8266,
											"end": 8289,
											"name": "PUSH [tag]",
											"value": "270"
										},
										{
											"begin": 8280,
											"end": 8288,
											"name": "DUP7"
										},
										{
											"begin": 8266,
											"end": 8275,
											"name": "DUP6"
										},
										{
											"begin": 8266,
											"end": 8279,
											"name": "PUSH [tag]",
											"value": "239"
										},
										{
											"begin": 8266,
											"end": 8279,
											"name": "SWAP1"
										},
										{
											"begin": 8266,
											"end": 8289,
											"name": "SWAP2"
										},
										{
											"begin": 8266,
											"end": 8289,
											"name": "SWAP1"
										},
										{
											"begin": 8266,
											"end": 8289,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 8266,
											"end": 8289,
											"name": "AND"
										},
										{
											"begin": 8266,
											"end": 8289,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 8266,
											"end": 8289,
											"name": "tag",
											"value": "270"
										},
										{
											"begin": 8266,
											"end": 8289,
											"name": "JUMPDEST"
										},
										{
											"begin": 8266,
											"end": 8304,
											"name": "DUP2"
										},
										{
											"begin": 8266,
											"end": 8304,
											"name": "PUSH [tag]",
											"value": "271"
										},
										{
											"begin": 8266,
											"end": 8304,
											"name": "JUMPI"
										},
										{
											"begin": 8266,
											"end": 8304,
											"name": "INVALID"
										},
										{
											"begin": 8266,
											"end": 8304,
											"name": "tag",
											"value": "271"
										},
										{
											"begin": 8266,
											"end": 8304,
											"name": "JUMPDEST"
										},
										{
											"begin": 8266,
											"end": 8304,
											"name": "DIV"
										},
										{
											"begin": 8256,
											"end": 8304,
											"name": "SWAP11"
										},
										{
											"begin": 8256,
											"end": 8304,
											"name": "POP"
										},
										{
											"begin": 8395,
											"end": 8407,
											"name": "DUP1"
										},
										{
											"begin": 8369,
											"end": 8392,
											"name": "PUSH [tag]",
											"value": "272"
										},
										{
											"begin": 8383,
											"end": 8391,
											"name": "DUP6"
										},
										{
											"begin": 8369,
											"end": 8378,
											"name": "DUP6"
										},
										{
											"begin": 8369,
											"end": 8382,
											"name": "PUSH [tag]",
											"value": "239"
										},
										{
											"begin": 8369,
											"end": 8382,
											"name": "SWAP1"
										},
										{
											"begin": 8369,
											"end": 8392,
											"name": "SWAP2"
										},
										{
											"begin": 8369,
											"end": 8392,
											"name": "SWAP1"
										},
										{
											"begin": 8369,
											"end": 8392,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 8369,
											"end": 8392,
											"name": "AND"
										},
										{
											"begin": 8369,
											"end": 8392,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 8369,
											"end": 8392,
											"name": "tag",
											"value": "272"
										},
										{
											"begin": 8369,
											"end": 8392,
											"name": "JUMPDEST"
										},
										{
											"begin": 8369,
											"end": 8407,
											"name": "DUP2"
										},
										{
											"begin": 8369,
											"end": 8407,
											"name": "PUSH [tag]",
											"value": "273"
										},
										{
											"begin": 8369,
											"end": 8407,
											"name": "JUMPI"
										},
										{
											"begin": 8369,
											"end": 8407,
											"name": "INVALID"
										},
										{
											"begin": 8369,
											"end": 8407,
											"name": "tag",
											"value": "273"
										},
										{
											"begin": 8369,
											"end": 8407,
											"name": "JUMPDEST"
										},
										{
											"begin": 8369,
											"end": 8407,
											"name": "DIV"
										},
										{
											"begin": 8359,
											"end": 8407,
											"name": "SWAP10"
										},
										{
											"begin": 8359,
											"end": 8407,
											"name": "POP"
										},
										{
											"begin": 8480,
											"end": 8481,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8470,
											"end": 8477,
											"name": "DUP12"
										},
										{
											"begin": 8470,
											"end": 8481,
											"name": "GT"
										},
										{
											"begin": 8470,
											"end": 8496,
											"name": "DUP1"
										},
										{
											"begin": 8470,
											"end": 8496,
											"name": "ISZERO"
										},
										{
											"begin": 8470,
											"end": 8496,
											"name": "PUSH [tag]",
											"value": "274"
										},
										{
											"begin": 8470,
											"end": 8496,
											"name": "JUMPI"
										},
										{
											"begin": 8470,
											"end": 8496,
											"name": "POP"
										},
										{
											"begin": 8495,
											"end": 8496,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8485,
											"end": 8492,
											"name": "DUP11"
										},
										{
											"begin": 8485,
											"end": 8496,
											"name": "GT"
										},
										{
											"begin": 8470,
											"end": 8496,
											"name": "tag",
											"value": "274"
										},
										{
											"begin": 8470,
											"end": 8496,
											"name": "JUMPDEST"
										},
										{
											"begin": 8462,
											"end": 8535,
											"name": "PUSH [tag]",
											"value": "275"
										},
										{
											"begin": 8462,
											"end": 8535,
											"name": "JUMPI"
										},
										{
											"begin": 8462,
											"end": 8535,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8462,
											"end": 8535,
											"name": "MLOAD"
										},
										{
											"begin": 8462,
											"end": 8535,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8462,
											"end": 8535,
											"name": "DUP2"
										},
										{
											"begin": 8462,
											"end": 8535,
											"name": "MSTORE"
										},
										{
											"begin": 8462,
											"end": 8535,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 8462,
											"end": 8535,
											"name": "ADD"
										},
										{
											"begin": 8462,
											"end": 8535,
											"name": "DUP1"
										},
										{
											"begin": 8462,
											"end": 8535,
											"name": "DUP1"
										},
										{
											"begin": 8462,
											"end": 8535,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8462,
											"end": 8535,
											"name": "ADD"
										},
										{
											"begin": 8462,
											"end": 8535,
											"name": "DUP3"
										},
										{
											"begin": 8462,
											"end": 8535,
											"name": "DUP2"
										},
										{
											"begin": 8462,
											"end": 8535,
											"name": "SUB"
										},
										{
											"begin": 8462,
											"end": 8535,
											"name": "DUP3"
										},
										{
											"begin": 8462,
											"end": 8535,
											"name": "MSTORE"
										},
										{
											"begin": 8462,
											"end": 8535,
											"name": "PUSH",
											"value": "22"
										},
										{
											"begin": 8462,
											"end": 8535,
											"name": "DUP2"
										},
										{
											"begin": 8462,
											"end": 8535,
											"name": "MSTORE"
										},
										{
											"begin": 8462,
											"end": 8535,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8462,
											"end": 8535,
											"name": "ADD"
										},
										{
											"begin": 8462,
											"end": 8535,
											"name": "DUP1"
										},
										{
											"begin": 8462,
											"end": 8535,
											"name": "PUSH data",
											"value": "E445A9437CF2A16B4C4A661DECA6E9C597CE139BB56E2872AEDDA20402A5D4D9"
										},
										{
											"begin": 8462,
											"end": 8535,
											"name": "PUSH",
											"value": "22"
										},
										{
											"begin": 8462,
											"end": 8535,
											"name": "SWAP2"
										},
										{
											"begin": 8462,
											"end": 8535,
											"name": "CODECOPY"
										},
										{
											"begin": 8462,
											"end": 8535,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8462,
											"end": 8535,
											"name": "ADD"
										},
										{
											"begin": 8462,
											"end": 8535,
											"name": "SWAP2"
										},
										{
											"begin": 8462,
											"end": 8535,
											"name": "POP"
										},
										{
											"begin": 8462,
											"end": 8535,
											"name": "POP"
										},
										{
											"begin": 8462,
											"end": 8535,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8462,
											"end": 8535,
											"name": "MLOAD"
										},
										{
											"begin": 8462,
											"end": 8535,
											"name": "DUP1"
										},
										{
											"begin": 8462,
											"end": 8535,
											"name": "SWAP2"
										},
										{
											"begin": 8462,
											"end": 8535,
											"name": "SUB"
										},
										{
											"begin": 8462,
											"end": 8535,
											"name": "SWAP1"
										},
										{
											"begin": 8462,
											"end": 8535,
											"name": "REVERT"
										},
										{
											"begin": 8462,
											"end": 8535,
											"name": "tag",
											"value": "275"
										},
										{
											"begin": 8462,
											"end": 8535,
											"name": "JUMPDEST"
										},
										{
											"begin": 8542,
											"end": 8573,
											"name": "PUSH [tag]",
											"value": "276"
										},
										{
											"begin": 8556,
											"end": 8560,
											"name": "ADDRESS"
										},
										{
											"begin": 8563,
											"end": 8572,
											"name": "DUP5"
										},
										{
											"begin": 8542,
											"end": 8547,
											"name": "PUSH [tag]",
											"value": "277"
										},
										{
											"begin": 8542,
											"end": 8573,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 8542,
											"end": 8573,
											"name": "tag",
											"value": "276"
										},
										{
											"begin": 8542,
											"end": 8573,
											"name": "JUMPDEST"
										},
										{
											"begin": 8580,
											"end": 8615,
											"name": "PUSH [tag]",
											"value": "278"
										},
										{
											"begin": 8594,
											"end": 8601,
											"name": "DUP8"
										},
										{
											"begin": 8603,
											"end": 8605,
											"name": "DUP14"
										},
										{
											"begin": 8607,
											"end": 8614,
											"name": "DUP14"
										},
										{
											"begin": 8580,
											"end": 8593,
											"name": "PUSH [tag]",
											"value": "279"
										},
										{
											"begin": 8580,
											"end": 8615,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 8580,
											"end": 8615,
											"name": "tag",
											"value": "278"
										},
										{
											"begin": 8580,
											"end": 8615,
											"name": "JUMPDEST"
										},
										{
											"begin": 8622,
											"end": 8657,
											"name": "PUSH [tag]",
											"value": "280"
										},
										{
											"begin": 8636,
											"end": 8643,
											"name": "DUP7"
										},
										{
											"begin": 8645,
											"end": 8647,
											"name": "DUP14"
										},
										{
											"begin": 8649,
											"end": 8656,
											"name": "DUP13"
										},
										{
											"begin": 8622,
											"end": 8635,
											"name": "PUSH [tag]",
											"value": "279"
										},
										{
											"begin": 8622,
											"end": 8657,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 8622,
											"end": 8657,
											"name": "tag",
											"value": "280"
										},
										{
											"begin": 8622,
											"end": 8657,
											"name": "JUMPDEST"
										},
										{
											"begin": 8682,
											"end": 8689,
											"name": "DUP7"
										},
										{
											"begin": 8675,
											"end": 8700,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8675,
											"end": 8700,
											"name": "AND"
										},
										{
											"begin": 8675,
											"end": 8700,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 8709,
											"end": 8713,
											"name": "ADDRESS"
										},
										{
											"begin": 8675,
											"end": 8715,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8675,
											"end": 8715,
											"name": "MLOAD"
										},
										{
											"begin": 8675,
											"end": 8715,
											"name": "DUP3"
										},
										{
											"begin": 8675,
											"end": 8715,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 8675,
											"end": 8715,
											"name": "AND"
										},
										{
											"begin": 8675,
											"end": 8715,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 8675,
											"end": 8715,
											"name": "SHL"
										},
										{
											"begin": 8675,
											"end": 8715,
											"name": "DUP2"
										},
										{
											"begin": 8675,
											"end": 8715,
											"name": "MSTORE"
										},
										{
											"begin": 8675,
											"end": 8715,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 8675,
											"end": 8715,
											"name": "ADD"
										},
										{
											"begin": 8675,
											"end": 8715,
											"name": "DUP1"
										},
										{
											"begin": 8675,
											"end": 8715,
											"name": "DUP3"
										},
										{
											"begin": 8675,
											"end": 8715,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8675,
											"end": 8715,
											"name": "AND"
										},
										{
											"begin": 8675,
											"end": 8715,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8675,
											"end": 8715,
											"name": "AND"
										},
										{
											"begin": 8675,
											"end": 8715,
											"name": "DUP2"
										},
										{
											"begin": 8675,
											"end": 8715,
											"name": "MSTORE"
										},
										{
											"begin": 8675,
											"end": 8715,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8675,
											"end": 8715,
											"name": "ADD"
										},
										{
											"begin": 8675,
											"end": 8715,
											"name": "SWAP2"
										},
										{
											"begin": 8675,
											"end": 8715,
											"name": "POP"
										},
										{
											"begin": 8675,
											"end": 8715,
											"name": "POP"
										},
										{
											"begin": 8675,
											"end": 8715,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8675,
											"end": 8715,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8675,
											"end": 8715,
											"name": "MLOAD"
										},
										{
											"begin": 8675,
											"end": 8715,
											"name": "DUP1"
										},
										{
											"begin": 8675,
											"end": 8715,
											"name": "DUP4"
										},
										{
											"begin": 8675,
											"end": 8715,
											"name": "SUB"
										},
										{
											"begin": 8675,
											"end": 8715,
											"name": "DUP2"
										},
										{
											"begin": 8675,
											"end": 8715,
											"name": "DUP7"
										},
										{
											"begin": 8675,
											"end": 8715,
											"name": "DUP1"
										},
										{
											"begin": 8675,
											"end": 8715,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 8675,
											"end": 8715,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "281"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "281"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 8675,
											"end": 8715,
											"name": "POP"
										},
										{
											"begin": 8675,
											"end": 8715,
											"name": "GAS"
										},
										{
											"begin": 8675,
											"end": 8715,
											"name": "STATICCALL"
										},
										{
											"begin": 8675,
											"end": 8715,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "282"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "282"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 8675,
											"end": 8715,
											"name": "POP"
										},
										{
											"begin": 8675,
											"end": 8715,
											"name": "POP"
										},
										{
											"begin": 8675,
											"end": 8715,
											"name": "POP"
										},
										{
											"begin": 8675,
											"end": 8715,
											"name": "POP"
										},
										{
											"begin": 8675,
											"end": 8715,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8675,
											"end": 8715,
											"name": "MLOAD"
										},
										{
											"begin": 8675,
											"end": 8715,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "283"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "283"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 8675,
											"end": 8715,
											"name": "DUP2"
										},
										{
											"begin": 8675,
											"end": 8715,
											"name": "ADD"
										},
										{
											"begin": 8675,
											"end": 8715,
											"name": "SWAP1"
										},
										{
											"begin": 8675,
											"end": 8715,
											"name": "DUP1"
										},
										{
											"begin": 8675,
											"end": 8715,
											"name": "DUP1"
										},
										{
											"begin": 8675,
											"end": 8715,
											"name": "MLOAD"
										},
										{
											"begin": 8675,
											"end": 8715,
											"name": "SWAP1"
										},
										{
											"begin": 8675,
											"end": 8715,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8675,
											"end": 8715,
											"name": "ADD"
										},
										{
											"begin": 8675,
											"end": 8715,
											"name": "SWAP1"
										},
										{
											"begin": 8675,
											"end": 8715,
											"name": "SWAP3"
										},
										{
											"begin": 8675,
											"end": 8715,
											"name": "SWAP2"
										},
										{
											"begin": 8675,
											"end": 8715,
											"name": "SWAP1"
										},
										{
											"begin": 8675,
											"end": 8715,
											"name": "POP"
										},
										{
											"begin": 8675,
											"end": 8715,
											"name": "POP"
										},
										{
											"begin": 8675,
											"end": 8715,
											"name": "POP"
										},
										{
											"begin": 8664,
											"end": 8715,
											"name": "SWAP5"
										},
										{
											"begin": 8664,
											"end": 8715,
											"name": "POP"
										},
										{
											"begin": 8740,
											"end": 8747,
											"name": "DUP6"
										},
										{
											"begin": 8733,
											"end": 8758,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8733,
											"end": 8758,
											"name": "AND"
										},
										{
											"begin": 8733,
											"end": 8758,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 8767,
											"end": 8771,
											"name": "ADDRESS"
										},
										{
											"begin": 8733,
											"end": 8773,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8733,
											"end": 8773,
											"name": "MLOAD"
										},
										{
											"begin": 8733,
											"end": 8773,
											"name": "DUP3"
										},
										{
											"begin": 8733,
											"end": 8773,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 8733,
											"end": 8773,
											"name": "AND"
										},
										{
											"begin": 8733,
											"end": 8773,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 8733,
											"end": 8773,
											"name": "SHL"
										},
										{
											"begin": 8733,
											"end": 8773,
											"name": "DUP2"
										},
										{
											"begin": 8733,
											"end": 8773,
											"name": "MSTORE"
										},
										{
											"begin": 8733,
											"end": 8773,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 8733,
											"end": 8773,
											"name": "ADD"
										},
										{
											"begin": 8733,
											"end": 8773,
											"name": "DUP1"
										},
										{
											"begin": 8733,
											"end": 8773,
											"name": "DUP3"
										},
										{
											"begin": 8733,
											"end": 8773,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8733,
											"end": 8773,
											"name": "AND"
										},
										{
											"begin": 8733,
											"end": 8773,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8733,
											"end": 8773,
											"name": "AND"
										},
										{
											"begin": 8733,
											"end": 8773,
											"name": "DUP2"
										},
										{
											"begin": 8733,
											"end": 8773,
											"name": "MSTORE"
										},
										{
											"begin": 8733,
											"end": 8773,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8733,
											"end": 8773,
											"name": "ADD"
										},
										{
											"begin": 8733,
											"end": 8773,
											"name": "SWAP2"
										},
										{
											"begin": 8733,
											"end": 8773,
											"name": "POP"
										},
										{
											"begin": 8733,
											"end": 8773,
											"name": "POP"
										},
										{
											"begin": 8733,
											"end": 8773,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8733,
											"end": 8773,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8733,
											"end": 8773,
											"name": "MLOAD"
										},
										{
											"begin": 8733,
											"end": 8773,
											"name": "DUP1"
										},
										{
											"begin": 8733,
											"end": 8773,
											"name": "DUP4"
										},
										{
											"begin": 8733,
											"end": 8773,
											"name": "SUB"
										},
										{
											"begin": 8733,
											"end": 8773,
											"name": "DUP2"
										},
										{
											"begin": 8733,
											"end": 8773,
											"name": "DUP7"
										},
										{
											"begin": 8733,
											"end": 8773,
											"name": "DUP1"
										},
										{
											"begin": 8733,
											"end": 8773,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 8733,
											"end": 8773,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "284"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "284"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 8733,
											"end": 8773,
											"name": "POP"
										},
										{
											"begin": 8733,
											"end": 8773,
											"name": "GAS"
										},
										{
											"begin": 8733,
											"end": 8773,
											"name": "STATICCALL"
										},
										{
											"begin": 8733,
											"end": 8773,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "285"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "285"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 8733,
											"end": 8773,
											"name": "POP"
										},
										{
											"begin": 8733,
											"end": 8773,
											"name": "POP"
										},
										{
											"begin": 8733,
											"end": 8773,
											"name": "POP"
										},
										{
											"begin": 8733,
											"end": 8773,
											"name": "POP"
										},
										{
											"begin": 8733,
											"end": 8773,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8733,
											"end": 8773,
											"name": "MLOAD"
										},
										{
											"begin": 8733,
											"end": 8773,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "286"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "286"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 8733,
											"end": 8773,
											"name": "DUP2"
										},
										{
											"begin": 8733,
											"end": 8773,
											"name": "ADD"
										},
										{
											"begin": 8733,
											"end": 8773,
											"name": "SWAP1"
										},
										{
											"begin": 8733,
											"end": 8773,
											"name": "DUP1"
										},
										{
											"begin": 8733,
											"end": 8773,
											"name": "DUP1"
										},
										{
											"begin": 8733,
											"end": 8773,
											"name": "MLOAD"
										},
										{
											"begin": 8733,
											"end": 8773,
											"name": "SWAP1"
										},
										{
											"begin": 8733,
											"end": 8773,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8733,
											"end": 8773,
											"name": "ADD"
										},
										{
											"begin": 8733,
											"end": 8773,
											"name": "SWAP1"
										},
										{
											"begin": 8733,
											"end": 8773,
											"name": "SWAP3"
										},
										{
											"begin": 8733,
											"end": 8773,
											"name": "SWAP2"
										},
										{
											"begin": 8733,
											"end": 8773,
											"name": "SWAP1"
										},
										{
											"begin": 8733,
											"end": 8773,
											"name": "POP"
										},
										{
											"begin": 8733,
											"end": 8773,
											"name": "POP"
										},
										{
											"begin": 8733,
											"end": 8773,
											"name": "POP"
										},
										{
											"begin": 8722,
											"end": 8773,
											"name": "SWAP4"
										},
										{
											"begin": 8722,
											"end": 8773,
											"name": "POP"
										},
										{
											"begin": 8782,
											"end": 8809,
											"name": "PUSH [tag]",
											"value": "287"
										},
										{
											"begin": 8790,
											"end": 8798,
											"name": "DUP6"
										},
										{
											"begin": 8800,
											"end": 8808,
											"name": "DUP6"
										},
										{
											"begin": 8782,
											"end": 8789,
											"name": "PUSH [tag]",
											"value": "253"
										},
										{
											"begin": 8782,
											"end": 8809,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 8782,
											"end": 8809,
											"name": "tag",
											"value": "287"
										},
										{
											"begin": 8782,
											"end": 8809,
											"name": "JUMPDEST"
										},
										{
											"begin": 8820,
											"end": 8825,
											"name": "DUP2"
										},
										{
											"begin": 8816,
											"end": 8869,
											"name": "ISZERO"
										},
										{
											"begin": 8816,
											"end": 8869,
											"name": "PUSH [tag]",
											"value": "288"
										},
										{
											"begin": 8816,
											"end": 8869,
											"name": "JUMPI"
										},
										{
											"begin": 8835,
											"end": 8869,
											"name": "PUSH [tag]",
											"value": "289"
										},
										{
											"begin": 8843,
											"end": 8851,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 8843,
											"end": 8851,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8843,
											"end": 8851,
											"name": "SWAP1"
										},
										{
											"begin": 8843,
											"end": 8851,
											"name": "SLOAD"
										},
										{
											"begin": 8843,
											"end": 8851,
											"name": "SWAP1"
										},
										{
											"begin": 8843,
											"end": 8851,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 8843,
											"end": 8851,
											"name": "EXP"
										},
										{
											"begin": 8843,
											"end": 8851,
											"name": "SWAP1"
										},
										{
											"begin": 8843,
											"end": 8851,
											"name": "DIV"
										},
										{
											"begin": 8843,
											"end": 8851,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8843,
											"end": 8851,
											"name": "AND"
										},
										{
											"begin": 8838,
											"end": 8852,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8838,
											"end": 8852,
											"name": "AND"
										},
										{
											"begin": 8859,
											"end": 8867,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 8859,
											"end": 8867,
											"name": "PUSH",
											"value": "E"
										},
										{
											"begin": 8859,
											"end": 8867,
											"name": "SWAP1"
										},
										{
											"begin": 8859,
											"end": 8867,
											"name": "SLOAD"
										},
										{
											"begin": 8859,
											"end": 8867,
											"name": "SWAP1"
										},
										{
											"begin": 8859,
											"end": 8867,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 8859,
											"end": 8867,
											"name": "EXP"
										},
										{
											"begin": 8859,
											"end": 8867,
											"name": "SWAP1"
										},
										{
											"begin": 8859,
											"end": 8867,
											"name": "DIV"
										},
										{
											"begin": 8859,
											"end": 8867,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8859,
											"end": 8867,
											"name": "AND"
										},
										{
											"begin": 8854,
											"end": 8868,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8854,
											"end": 8868,
											"name": "AND"
										},
										{
											"begin": 8835,
											"end": 8837,
											"name": "PUSH [tag]",
											"value": "193"
										},
										{
											"begin": 8835,
											"end": 8869,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 8835,
											"end": 8869,
											"name": "tag",
											"value": "289"
										},
										{
											"begin": 8835,
											"end": 8869,
											"name": "JUMPDEST"
										},
										{
											"begin": 8827,
											"end": 8832,
											"name": "PUSH",
											"value": "B"
										},
										{
											"begin": 8827,
											"end": 8869,
											"name": "DUP2"
										},
										{
											"begin": 8827,
											"end": 8869,
											"name": "SWAP1"
										},
										{
											"begin": 8827,
											"end": 8869,
											"name": "SSTORE"
										},
										{
											"begin": 8827,
											"end": 8869,
											"name": "POP"
										},
										{
											"begin": 8816,
											"end": 8869,
											"name": "tag",
											"value": "288"
										},
										{
											"begin": 8816,
											"end": 8869,
											"name": "JUMPDEST"
										},
										{
											"begin": 8956,
											"end": 8958,
											"name": "DUP12"
										},
										{
											"begin": 8921,
											"end": 8959,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8921,
											"end": 8959,
											"name": "AND"
										},
										{
											"begin": 8926,
											"end": 8936,
											"name": "CALLER"
										},
										{
											"begin": 8921,
											"end": 8959,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8921,
											"end": 8959,
											"name": "AND"
										},
										{
											"begin": 8921,
											"end": 8959,
											"name": "PUSH",
											"value": "DCCD412F0B1252819CB1FD330B93224CA42612892BB3F4F789976E6D81936496"
										},
										{
											"begin": 8938,
											"end": 8945,
											"name": "DUP14"
										},
										{
											"begin": 8947,
											"end": 8954,
											"name": "DUP14"
										},
										{
											"begin": 8921,
											"end": 8959,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8921,
											"end": 8959,
											"name": "MLOAD"
										},
										{
											"begin": 8921,
											"end": 8959,
											"name": "DUP1"
										},
										{
											"begin": 8921,
											"end": 8959,
											"name": "DUP4"
										},
										{
											"begin": 8921,
											"end": 8959,
											"name": "DUP2"
										},
										{
											"begin": 8921,
											"end": 8959,
											"name": "MSTORE"
										},
										{
											"begin": 8921,
											"end": 8959,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8921,
											"end": 8959,
											"name": "ADD"
										},
										{
											"begin": 8921,
											"end": 8959,
											"name": "DUP3"
										},
										{
											"begin": 8921,
											"end": 8959,
											"name": "DUP2"
										},
										{
											"begin": 8921,
											"end": 8959,
											"name": "MSTORE"
										},
										{
											"begin": 8921,
											"end": 8959,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8921,
											"end": 8959,
											"name": "ADD"
										},
										{
											"begin": 8921,
											"end": 8959,
											"name": "SWAP3"
										},
										{
											"begin": 8921,
											"end": 8959,
											"name": "POP"
										},
										{
											"begin": 8921,
											"end": 8959,
											"name": "POP"
										},
										{
											"begin": 8921,
											"end": 8959,
											"name": "POP"
										},
										{
											"begin": 8921,
											"end": 8959,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8921,
											"end": 8959,
											"name": "MLOAD"
										},
										{
											"begin": 8921,
											"end": 8959,
											"name": "DUP1"
										},
										{
											"begin": 8921,
											"end": 8959,
											"name": "SWAP2"
										},
										{
											"begin": 8921,
											"end": 8959,
											"name": "SUB"
										},
										{
											"begin": 8921,
											"end": 8959,
											"name": "SWAP1"
										},
										{
											"begin": 8921,
											"end": 8959,
											"name": "LOG3"
										},
										{
											"begin": 1612,
											"end": 1613,
											"name": "POP"
										},
										{
											"begin": 1612,
											"end": 1613,
											"name": "POP"
										},
										{
											"begin": 1612,
											"end": 1613,
											"name": "POP"
										},
										{
											"begin": 1612,
											"end": 1613,
											"name": "POP"
										},
										{
											"begin": 1612,
											"end": 1613,
											"name": "POP"
										},
										{
											"begin": 1612,
											"end": 1613,
											"name": "POP"
										},
										{
											"begin": 1612,
											"end": 1613,
											"name": "POP"
										},
										{
											"begin": 1612,
											"end": 1613,
											"name": "POP"
										},
										{
											"begin": 1612,
											"end": 1613,
											"name": "POP"
										},
										{
											"begin": 1631,
											"end": 1632,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1620,
											"end": 1628,
											"name": "PUSH",
											"value": "D"
										},
										{
											"begin": 1620,
											"end": 1632,
											"name": "DUP2"
										},
										{
											"begin": 1620,
											"end": 1632,
											"name": "SWAP1"
										},
										{
											"begin": 1620,
											"end": 1632,
											"name": "SSTORE"
										},
										{
											"begin": 1620,
											"end": 1632,
											"name": "POP"
										},
										{
											"begin": 7660,
											"end": 8965,
											"name": "SWAP2"
										},
										{
											"begin": 7660,
											"end": 8965,
											"name": "POP"
										},
										{
											"begin": 7660,
											"end": 8965,
											"name": "SWAP2"
										},
										{
											"begin": 7660,
											"end": 8965,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "tag",
											"value": "124"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "JUMPDEST"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "MLOAD"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "DUP1"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "ADD"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "MSTORE"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "DUP1"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "DUP2"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "MSTORE"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "ADD"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "PUSH",
											"value": "434D4C542D4C5000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "DUP2"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "MSTORE"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "POP"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "DUP2"
										},
										{
											"begin": 226,
											"end": 267,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1323,
											"end": 1345,
											"name": "tag",
											"value": "130"
										},
										{
											"begin": 1323,
											"end": 1345,
											"name": "JUMPDEST"
										},
										{
											"begin": 1323,
											"end": 1345,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 1323,
											"end": 1345,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1323,
											"end": 1345,
											"name": "SWAP1"
										},
										{
											"begin": 1323,
											"end": 1345,
											"name": "SLOAD"
										},
										{
											"begin": 1323,
											"end": 1345,
											"name": "SWAP1"
										},
										{
											"begin": 1323,
											"end": 1345,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1323,
											"end": 1345,
											"name": "EXP"
										},
										{
											"begin": 1323,
											"end": 1345,
											"name": "SWAP1"
										},
										{
											"begin": 1323,
											"end": 1345,
											"name": "DIV"
										},
										{
											"begin": 1323,
											"end": 1345,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1323,
											"end": 1345,
											"name": "AND"
										},
										{
											"begin": 1323,
											"end": 1345,
											"name": "DUP2"
										},
										{
											"begin": 1323,
											"end": 1345,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2380,
											"end": 2519,
											"name": "tag",
											"value": "133"
										},
										{
											"begin": 2380,
											"end": 2519,
											"name": "JUMPDEST"
										},
										{
											"begin": 2440,
											"end": 2444,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2457,
											"end": 2489,
											"name": "PUSH [tag]",
											"value": "291"
										},
										{
											"begin": 2467,
											"end": 2477,
											"name": "CALLER"
										},
										{
											"begin": 2479,
											"end": 2481,
											"name": "DUP5"
										},
										{
											"begin": 2483,
											"end": 2488,
											"name": "DUP5"
										},
										{
											"begin": 2457,
											"end": 2466,
											"name": "PUSH [tag]",
											"value": "175"
										},
										{
											"begin": 2457,
											"end": 2489,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2457,
											"end": 2489,
											"name": "tag",
											"value": "291"
										},
										{
											"begin": 2457,
											"end": 2489,
											"name": "JUMPDEST"
										},
										{
											"begin": 2507,
											"end": 2511,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2500,
											"end": 2511,
											"name": "SWAP1"
										},
										{
											"begin": 2500,
											"end": 2511,
											"name": "POP"
										},
										{
											"begin": 2380,
											"end": 2519,
											"name": "SWAP3"
										},
										{
											"begin": 2380,
											"end": 2519,
											"name": "SWAP2"
										},
										{
											"begin": 2380,
											"end": 2519,
											"name": "POP"
										},
										{
											"begin": 2380,
											"end": 2519,
											"name": "POP"
										},
										{
											"begin": 2380,
											"end": 2519,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1397,
											"end": 1426,
											"name": "tag",
											"value": "135"
										},
										{
											"begin": 1397,
											"end": 1426,
											"name": "JUMPDEST"
										},
										{
											"begin": 1397,
											"end": 1426,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 1397,
											"end": 1426,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1397,
											"end": 1426,
											"name": "SWAP1"
										},
										{
											"begin": 1397,
											"end": 1426,
											"name": "SLOAD"
										},
										{
											"begin": 1397,
											"end": 1426,
											"name": "SWAP1"
										},
										{
											"begin": 1397,
											"end": 1426,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1397,
											"end": 1426,
											"name": "EXP"
										},
										{
											"begin": 1397,
											"end": 1426,
											"name": "SWAP1"
										},
										{
											"begin": 1397,
											"end": 1426,
											"name": "DIV"
										},
										{
											"begin": 1397,
											"end": 1426,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1397,
											"end": 1426,
											"name": "AND"
										},
										{
											"begin": 1397,
											"end": 1426,
											"name": "DUP2"
										},
										{
											"begin": 1397,
											"end": 1426,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 352,
											"end": 400,
											"name": "tag",
											"value": "137"
										},
										{
											"begin": 352,
											"end": 400,
											"name": "JUMPDEST"
										},
										{
											"begin": 393,
											"end": 400,
											"name": "PUSH",
											"value": "3E8"
										},
										{
											"begin": 352,
											"end": 400,
											"name": "DUP2"
										},
										{
											"begin": 352,
											"end": 400,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 16932,
											"end": 17276,
											"name": "tag",
											"value": "140"
										},
										{
											"begin": 16932,
											"end": 17276,
											"name": "JUMPDEST"
										},
										{
											"begin": 1569,
											"end": 1570,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1557,
											"end": 1565,
											"name": "PUSH",
											"value": "D"
										},
										{
											"begin": 1557,
											"end": 1565,
											"name": "SLOAD"
										},
										{
											"begin": 1557,
											"end": 1570,
											"name": "EQ"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "PUSH [tag]",
											"value": "293"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "JUMPI"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "MLOAD"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "DUP2"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "MSTORE"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "ADD"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "DUP1"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "DUP1"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "ADD"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "DUP3"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "DUP2"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "SUB"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "DUP3"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "MSTORE"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "PUSH",
											"value": "B"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "DUP2"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "MSTORE"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "ADD"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "DUP1"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "PUSH",
											"value": "31306B3A204C4F434B4544000000000000000000000000000000000000000000"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "DUP2"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "MSTORE"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "POP"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "ADD"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "SWAP2"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "POP"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "POP"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "MLOAD"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "DUP1"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "SWAP2"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "SUB"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "SWAP1"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "REVERT"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "tag",
											"value": "293"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "JUMPDEST"
										},
										{
											"begin": 1604,
											"end": 1605,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1593,
											"end": 1601,
											"name": "PUSH",
											"value": "D"
										},
										{
											"begin": 1593,
											"end": 1605,
											"name": "DUP2"
										},
										{
											"begin": 1593,
											"end": 1605,
											"name": "SWAP1"
										},
										{
											"begin": 1593,
											"end": 1605,
											"name": "SSTORE"
										},
										{
											"begin": 1593,
											"end": 1605,
											"name": "POP"
										},
										{
											"begin": 16979,
											"end": 16994,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16997,
											"end": 17003,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 16997,
											"end": 17003,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16997,
											"end": 17003,
											"name": "SWAP1"
										},
										{
											"begin": 16997,
											"end": 17003,
											"name": "SLOAD"
										},
										{
											"begin": 16997,
											"end": 17003,
											"name": "SWAP1"
										},
										{
											"begin": 16997,
											"end": 17003,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 16997,
											"end": 17003,
											"name": "EXP"
										},
										{
											"begin": 16997,
											"end": 17003,
											"name": "SWAP1"
										},
										{
											"begin": 16997,
											"end": 17003,
											"name": "DIV"
										},
										{
											"begin": 16997,
											"end": 17003,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16997,
											"end": 17003,
											"name": "AND"
										},
										{
											"begin": 16979,
											"end": 17003,
											"name": "SWAP1"
										},
										{
											"begin": 16979,
											"end": 17003,
											"name": "POP"
										},
										{
											"begin": 17030,
											"end": 17045,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 17048,
											"end": 17054,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 17048,
											"end": 17054,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 17048,
											"end": 17054,
											"name": "SWAP1"
										},
										{
											"begin": 17048,
											"end": 17054,
											"name": "SLOAD"
										},
										{
											"begin": 17048,
											"end": 17054,
											"name": "SWAP1"
										},
										{
											"begin": 17048,
											"end": 17054,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 17048,
											"end": 17054,
											"name": "EXP"
										},
										{
											"begin": 17048,
											"end": 17054,
											"name": "SWAP1"
										},
										{
											"begin": 17048,
											"end": 17054,
											"name": "DIV"
										},
										{
											"begin": 17048,
											"end": 17054,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17048,
											"end": 17054,
											"name": "AND"
										},
										{
											"begin": 17030,
											"end": 17054,
											"name": "SWAP1"
										},
										{
											"begin": 17030,
											"end": 17054,
											"name": "POP"
										},
										{
											"begin": 17081,
											"end": 17163,
											"name": "PUSH [tag]",
											"value": "295"
										},
										{
											"begin": 17095,
											"end": 17102,
											"name": "DUP3"
										},
										{
											"begin": 17104,
											"end": 17106,
											"name": "DUP5"
										},
										{
											"begin": 17108,
											"end": 17162,
											"name": "PUSH [tag]",
											"value": "296"
										},
										{
											"begin": 17153,
											"end": 17161,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 17153,
											"end": 17161,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 17153,
											"end": 17161,
											"name": "SWAP1"
										},
										{
											"begin": 17153,
											"end": 17161,
											"name": "SLOAD"
										},
										{
											"begin": 17153,
											"end": 17161,
											"name": "SWAP1"
										},
										{
											"begin": 17153,
											"end": 17161,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 17153,
											"end": 17161,
											"name": "EXP"
										},
										{
											"begin": 17153,
											"end": 17161,
											"name": "SWAP1"
										},
										{
											"begin": 17153,
											"end": 17161,
											"name": "DIV"
										},
										{
											"begin": 17153,
											"end": 17161,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17153,
											"end": 17161,
											"name": "AND"
										},
										{
											"begin": 17108,
											"end": 17162,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17108,
											"end": 17162,
											"name": "AND"
										},
										{
											"begin": 17115,
											"end": 17122,
											"name": "DUP7"
										},
										{
											"begin": 17108,
											"end": 17133,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17108,
											"end": 17133,
											"name": "AND"
										},
										{
											"begin": 17108,
											"end": 17133,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 17142,
											"end": 17146,
											"name": "ADDRESS"
										},
										{
											"begin": 17108,
											"end": 17148,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17108,
											"end": 17148,
											"name": "MLOAD"
										},
										{
											"begin": 17108,
											"end": 17148,
											"name": "DUP3"
										},
										{
											"begin": 17108,
											"end": 17148,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 17108,
											"end": 17148,
											"name": "AND"
										},
										{
											"begin": 17108,
											"end": 17148,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 17108,
											"end": 17148,
											"name": "SHL"
										},
										{
											"begin": 17108,
											"end": 17148,
											"name": "DUP2"
										},
										{
											"begin": 17108,
											"end": 17148,
											"name": "MSTORE"
										},
										{
											"begin": 17108,
											"end": 17148,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 17108,
											"end": 17148,
											"name": "ADD"
										},
										{
											"begin": 17108,
											"end": 17148,
											"name": "DUP1"
										},
										{
											"begin": 17108,
											"end": 17148,
											"name": "DUP3"
										},
										{
											"begin": 17108,
											"end": 17148,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17108,
											"end": 17148,
											"name": "AND"
										},
										{
											"begin": 17108,
											"end": 17148,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17108,
											"end": 17148,
											"name": "AND"
										},
										{
											"begin": 17108,
											"end": 17148,
											"name": "DUP2"
										},
										{
											"begin": 17108,
											"end": 17148,
											"name": "MSTORE"
										},
										{
											"begin": 17108,
											"end": 17148,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17108,
											"end": 17148,
											"name": "ADD"
										},
										{
											"begin": 17108,
											"end": 17148,
											"name": "SWAP2"
										},
										{
											"begin": 17108,
											"end": 17148,
											"name": "POP"
										},
										{
											"begin": 17108,
											"end": 17148,
											"name": "POP"
										},
										{
											"begin": 17108,
											"end": 17148,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17108,
											"end": 17148,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17108,
											"end": 17148,
											"name": "MLOAD"
										},
										{
											"begin": 17108,
											"end": 17148,
											"name": "DUP1"
										},
										{
											"begin": 17108,
											"end": 17148,
											"name": "DUP4"
										},
										{
											"begin": 17108,
											"end": 17148,
											"name": "SUB"
										},
										{
											"begin": 17108,
											"end": 17148,
											"name": "DUP2"
										},
										{
											"begin": 17108,
											"end": 17148,
											"name": "DUP7"
										},
										{
											"begin": 17108,
											"end": 17148,
											"name": "DUP1"
										},
										{
											"begin": 17108,
											"end": 17148,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 17108,
											"end": 17148,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "297"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "297"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 17108,
											"end": 17148,
											"name": "POP"
										},
										{
											"begin": 17108,
											"end": 17148,
											"name": "GAS"
										},
										{
											"begin": 17108,
											"end": 17148,
											"name": "STATICCALL"
										},
										{
											"begin": 17108,
											"end": 17148,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "298"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "298"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 17108,
											"end": 17148,
											"name": "POP"
										},
										{
											"begin": 17108,
											"end": 17148,
											"name": "POP"
										},
										{
											"begin": 17108,
											"end": 17148,
											"name": "POP"
										},
										{
											"begin": 17108,
											"end": 17148,
											"name": "POP"
										},
										{
											"begin": 17108,
											"end": 17148,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17108,
											"end": 17148,
											"name": "MLOAD"
										},
										{
											"begin": 17108,
											"end": 17148,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "299"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "299"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 17108,
											"end": 17148,
											"name": "DUP2"
										},
										{
											"begin": 17108,
											"end": 17148,
											"name": "ADD"
										},
										{
											"begin": 17108,
											"end": 17148,
											"name": "SWAP1"
										},
										{
											"begin": 17108,
											"end": 17148,
											"name": "DUP1"
										},
										{
											"begin": 17108,
											"end": 17148,
											"name": "DUP1"
										},
										{
											"begin": 17108,
											"end": 17148,
											"name": "MLOAD"
										},
										{
											"begin": 17108,
											"end": 17148,
											"name": "SWAP1"
										},
										{
											"begin": 17108,
											"end": 17148,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17108,
											"end": 17148,
											"name": "ADD"
										},
										{
											"begin": 17108,
											"end": 17148,
											"name": "SWAP1"
										},
										{
											"begin": 17108,
											"end": 17148,
											"name": "SWAP3"
										},
										{
											"begin": 17108,
											"end": 17148,
											"name": "SWAP2"
										},
										{
											"begin": 17108,
											"end": 17148,
											"name": "SWAP1"
										},
										{
											"begin": 17108,
											"end": 17148,
											"name": "POP"
										},
										{
											"begin": 17108,
											"end": 17148,
											"name": "POP"
										},
										{
											"begin": 17108,
											"end": 17148,
											"name": "POP"
										},
										{
											"begin": 17108,
											"end": 17152,
											"name": "PUSH [tag]",
											"value": "173"
										},
										{
											"begin": 17108,
											"end": 17152,
											"name": "SWAP1"
										},
										{
											"begin": 17108,
											"end": 17162,
											"name": "SWAP2"
										},
										{
											"begin": 17108,
											"end": 17162,
											"name": "SWAP1"
										},
										{
											"begin": 17108,
											"end": 17162,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 17108,
											"end": 17162,
											"name": "AND"
										},
										{
											"begin": 17108,
											"end": 17162,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 17108,
											"end": 17162,
											"name": "tag",
											"value": "296"
										},
										{
											"begin": 17108,
											"end": 17162,
											"name": "JUMPDEST"
										},
										{
											"begin": 17081,
											"end": 17094,
											"name": "PUSH [tag]",
											"value": "279"
										},
										{
											"begin": 17081,
											"end": 17163,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 17081,
											"end": 17163,
											"name": "tag",
											"value": "295"
										},
										{
											"begin": 17081,
											"end": 17163,
											"name": "JUMPDEST"
										},
										{
											"begin": 17170,
											"end": 17252,
											"name": "PUSH [tag]",
											"value": "300"
										},
										{
											"begin": 17184,
											"end": 17191,
											"name": "DUP2"
										},
										{
											"begin": 17193,
											"end": 17195,
											"name": "DUP5"
										},
										{
											"begin": 17197,
											"end": 17251,
											"name": "PUSH [tag]",
											"value": "301"
										},
										{
											"begin": 17242,
											"end": 17250,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 17242,
											"end": 17250,
											"name": "PUSH",
											"value": "E"
										},
										{
											"begin": 17242,
											"end": 17250,
											"name": "SWAP1"
										},
										{
											"begin": 17242,
											"end": 17250,
											"name": "SLOAD"
										},
										{
											"begin": 17242,
											"end": 17250,
											"name": "SWAP1"
										},
										{
											"begin": 17242,
											"end": 17250,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 17242,
											"end": 17250,
											"name": "EXP"
										},
										{
											"begin": 17242,
											"end": 17250,
											"name": "SWAP1"
										},
										{
											"begin": 17242,
											"end": 17250,
											"name": "DIV"
										},
										{
											"begin": 17242,
											"end": 17250,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17242,
											"end": 17250,
											"name": "AND"
										},
										{
											"begin": 17197,
											"end": 17251,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17197,
											"end": 17251,
											"name": "AND"
										},
										{
											"begin": 17204,
											"end": 17211,
											"name": "DUP6"
										},
										{
											"begin": 17197,
											"end": 17222,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17197,
											"end": 17222,
											"name": "AND"
										},
										{
											"begin": 17197,
											"end": 17222,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 17231,
											"end": 17235,
											"name": "ADDRESS"
										},
										{
											"begin": 17197,
											"end": 17237,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17197,
											"end": 17237,
											"name": "MLOAD"
										},
										{
											"begin": 17197,
											"end": 17237,
											"name": "DUP3"
										},
										{
											"begin": 17197,
											"end": 17237,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 17197,
											"end": 17237,
											"name": "AND"
										},
										{
											"begin": 17197,
											"end": 17237,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 17197,
											"end": 17237,
											"name": "SHL"
										},
										{
											"begin": 17197,
											"end": 17237,
											"name": "DUP2"
										},
										{
											"begin": 17197,
											"end": 17237,
											"name": "MSTORE"
										},
										{
											"begin": 17197,
											"end": 17237,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 17197,
											"end": 17237,
											"name": "ADD"
										},
										{
											"begin": 17197,
											"end": 17237,
											"name": "DUP1"
										},
										{
											"begin": 17197,
											"end": 17237,
											"name": "DUP3"
										},
										{
											"begin": 17197,
											"end": 17237,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17197,
											"end": 17237,
											"name": "AND"
										},
										{
											"begin": 17197,
											"end": 17237,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17197,
											"end": 17237,
											"name": "AND"
										},
										{
											"begin": 17197,
											"end": 17237,
											"name": "DUP2"
										},
										{
											"begin": 17197,
											"end": 17237,
											"name": "MSTORE"
										},
										{
											"begin": 17197,
											"end": 17237,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17197,
											"end": 17237,
											"name": "ADD"
										},
										{
											"begin": 17197,
											"end": 17237,
											"name": "SWAP2"
										},
										{
											"begin": 17197,
											"end": 17237,
											"name": "POP"
										},
										{
											"begin": 17197,
											"end": 17237,
											"name": "POP"
										},
										{
											"begin": 17197,
											"end": 17237,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17197,
											"end": 17237,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17197,
											"end": 17237,
											"name": "MLOAD"
										},
										{
											"begin": 17197,
											"end": 17237,
											"name": "DUP1"
										},
										{
											"begin": 17197,
											"end": 17237,
											"name": "DUP4"
										},
										{
											"begin": 17197,
											"end": 17237,
											"name": "SUB"
										},
										{
											"begin": 17197,
											"end": 17237,
											"name": "DUP2"
										},
										{
											"begin": 17197,
											"end": 17237,
											"name": "DUP7"
										},
										{
											"begin": 17197,
											"end": 17237,
											"name": "DUP1"
										},
										{
											"begin": 17197,
											"end": 17237,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 17197,
											"end": 17237,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "302"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "302"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 17197,
											"end": 17237,
											"name": "POP"
										},
										{
											"begin": 17197,
											"end": 17237,
											"name": "GAS"
										},
										{
											"begin": 17197,
											"end": 17237,
											"name": "STATICCALL"
										},
										{
											"begin": 17197,
											"end": 17237,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "303"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "303"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 17197,
											"end": 17237,
											"name": "POP"
										},
										{
											"begin": 17197,
											"end": 17237,
											"name": "POP"
										},
										{
											"begin": 17197,
											"end": 17237,
											"name": "POP"
										},
										{
											"begin": 17197,
											"end": 17237,
											"name": "POP"
										},
										{
											"begin": 17197,
											"end": 17237,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17197,
											"end": 17237,
											"name": "MLOAD"
										},
										{
											"begin": 17197,
											"end": 17237,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "304"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "304"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 17197,
											"end": 17237,
											"name": "DUP2"
										},
										{
											"begin": 17197,
											"end": 17237,
											"name": "ADD"
										},
										{
											"begin": 17197,
											"end": 17237,
											"name": "SWAP1"
										},
										{
											"begin": 17197,
											"end": 17237,
											"name": "DUP1"
										},
										{
											"begin": 17197,
											"end": 17237,
											"name": "DUP1"
										},
										{
											"begin": 17197,
											"end": 17237,
											"name": "MLOAD"
										},
										{
											"begin": 17197,
											"end": 17237,
											"name": "SWAP1"
										},
										{
											"begin": 17197,
											"end": 17237,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17197,
											"end": 17237,
											"name": "ADD"
										},
										{
											"begin": 17197,
											"end": 17237,
											"name": "SWAP1"
										},
										{
											"begin": 17197,
											"end": 17237,
											"name": "SWAP3"
										},
										{
											"begin": 17197,
											"end": 17237,
											"name": "SWAP2"
										},
										{
											"begin": 17197,
											"end": 17237,
											"name": "SWAP1"
										},
										{
											"begin": 17197,
											"end": 17237,
											"name": "POP"
										},
										{
											"begin": 17197,
											"end": 17237,
											"name": "POP"
										},
										{
											"begin": 17197,
											"end": 17237,
											"name": "POP"
										},
										{
											"begin": 17197,
											"end": 17241,
											"name": "PUSH [tag]",
											"value": "173"
										},
										{
											"begin": 17197,
											"end": 17241,
											"name": "SWAP1"
										},
										{
											"begin": 17197,
											"end": 17251,
											"name": "SWAP2"
										},
										{
											"begin": 17197,
											"end": 17251,
											"name": "SWAP1"
										},
										{
											"begin": 17197,
											"end": 17251,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 17197,
											"end": 17251,
											"name": "AND"
										},
										{
											"begin": 17197,
											"end": 17251,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 17197,
											"end": 17251,
											"name": "tag",
											"value": "301"
										},
										{
											"begin": 17197,
											"end": 17251,
											"name": "JUMPDEST"
										},
										{
											"begin": 17170,
											"end": 17183,
											"name": "PUSH [tag]",
											"value": "279"
										},
										{
											"begin": 17170,
											"end": 17252,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 17170,
											"end": 17252,
											"name": "tag",
											"value": "300"
										},
										{
											"begin": 17170,
											"end": 17252,
											"name": "JUMPDEST"
										},
										{
											"begin": 17264,
											"end": 17270,
											"name": "PUSH",
											"value": "21AD22495C9C75CD1C94756F91824E779C0C8A8E168B267C790DF464FE056B79"
										},
										{
											"begin": 17264,
											"end": 17270,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17264,
											"end": 17270,
											"name": "MLOAD"
										},
										{
											"begin": 17264,
											"end": 17270,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17264,
											"end": 17270,
											"name": "MLOAD"
										},
										{
											"begin": 17264,
											"end": 17270,
											"name": "DUP1"
										},
										{
											"begin": 17264,
											"end": 17270,
											"name": "SWAP2"
										},
										{
											"begin": 17264,
											"end": 17270,
											"name": "SUB"
										},
										{
											"begin": 17264,
											"end": 17270,
											"name": "SWAP1"
										},
										{
											"begin": 17264,
											"end": 17270,
											"name": "LOG1"
										},
										{
											"begin": 1612,
											"end": 1613,
											"name": "POP"
										},
										{
											"begin": 1612,
											"end": 1613,
											"name": "POP"
										},
										{
											"begin": 1631,
											"end": 1632,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1620,
											"end": 1628,
											"name": "PUSH",
											"value": "D"
										},
										{
											"begin": 1620,
											"end": 1632,
											"name": "DUP2"
										},
										{
											"begin": 1620,
											"end": 1632,
											"name": "SWAP1"
										},
										{
											"begin": 1620,
											"end": 1632,
											"name": "SSTORE"
										},
										{
											"begin": 1620,
											"end": 1632,
											"name": "POP"
										},
										{
											"begin": 16932,
											"end": 17276,
											"name": "POP"
										},
										{
											"begin": 16932,
											"end": 17276,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 500,
											"end": 522,
											"name": "tag",
											"value": "142"
										},
										{
											"begin": 500,
											"end": 522,
											"name": "JUMPDEST"
										},
										{
											"begin": 500,
											"end": 522,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 500,
											"end": 522,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 500,
											"end": 522,
											"name": "SWAP1"
										},
										{
											"begin": 500,
											"end": 522,
											"name": "SLOAD"
										},
										{
											"begin": 500,
											"end": 522,
											"name": "SWAP1"
										},
										{
											"begin": 500,
											"end": 522,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 500,
											"end": 522,
											"name": "EXP"
										},
										{
											"begin": 500,
											"end": 522,
											"name": "SWAP1"
										},
										{
											"begin": 500,
											"end": 522,
											"name": "DIV"
										},
										{
											"begin": 500,
											"end": 522,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 500,
											"end": 522,
											"name": "AND"
										},
										{
											"begin": 500,
											"end": 522,
											"name": "DUP2"
										},
										{
											"begin": 500,
											"end": 522,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 553,
											"end": 574,
											"name": "tag",
											"value": "144"
										},
										{
											"begin": 553,
											"end": 574,
											"name": "JUMPDEST"
										},
										{
											"begin": 553,
											"end": 574,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 553,
											"end": 574,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 553,
											"end": 574,
											"name": "SWAP1"
										},
										{
											"begin": 553,
											"end": 574,
											"name": "SLOAD"
										},
										{
											"begin": 553,
											"end": 574,
											"name": "SWAP1"
										},
										{
											"begin": 553,
											"end": 574,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 553,
											"end": 574,
											"name": "EXP"
										},
										{
											"begin": 553,
											"end": 574,
											"name": "SWAP1"
										},
										{
											"begin": 553,
											"end": 574,
											"name": "DIV"
										},
										{
											"begin": 553,
											"end": 574,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 553,
											"end": 574,
											"name": "AND"
										},
										{
											"begin": 553,
											"end": 574,
											"name": "DUP2"
										},
										{
											"begin": 553,
											"end": 574,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "tag",
											"value": "147"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "JUMPDEST"
										},
										{
											"begin": 3080,
											"end": 3095,
											"name": "TIMESTAMP"
										},
										{
											"begin": 3068,
											"end": 3076,
											"name": "DUP5"
										},
										{
											"begin": 3068,
											"end": 3095,
											"name": "LT"
										},
										{
											"begin": 3068,
											"end": 3095,
											"name": "ISZERO"
										},
										{
											"begin": 3060,
											"end": 3118,
											"name": "PUSH [tag]",
											"value": "306"
										},
										{
											"begin": 3060,
											"end": 3118,
											"name": "JUMPI"
										},
										{
											"begin": 3060,
											"end": 3118,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3060,
											"end": 3118,
											"name": "MLOAD"
										},
										{
											"begin": 3060,
											"end": 3118,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3060,
											"end": 3118,
											"name": "DUP2"
										},
										{
											"begin": 3060,
											"end": 3118,
											"name": "MSTORE"
										},
										{
											"begin": 3060,
											"end": 3118,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3060,
											"end": 3118,
											"name": "ADD"
										},
										{
											"begin": 3060,
											"end": 3118,
											"name": "DUP1"
										},
										{
											"begin": 3060,
											"end": 3118,
											"name": "DUP1"
										},
										{
											"begin": 3060,
											"end": 3118,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3060,
											"end": 3118,
											"name": "ADD"
										},
										{
											"begin": 3060,
											"end": 3118,
											"name": "DUP3"
										},
										{
											"begin": 3060,
											"end": 3118,
											"name": "DUP2"
										},
										{
											"begin": 3060,
											"end": 3118,
											"name": "SUB"
										},
										{
											"begin": 3060,
											"end": 3118,
											"name": "DUP3"
										},
										{
											"begin": 3060,
											"end": 3118,
											"name": "MSTORE"
										},
										{
											"begin": 3060,
											"end": 3118,
											"name": "PUSH",
											"value": "12"
										},
										{
											"begin": 3060,
											"end": 3118,
											"name": "DUP2"
										},
										{
											"begin": 3060,
											"end": 3118,
											"name": "MSTORE"
										},
										{
											"begin": 3060,
											"end": 3118,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3060,
											"end": 3118,
											"name": "ADD"
										},
										{
											"begin": 3060,
											"end": 3118,
											"name": "DUP1"
										},
										{
											"begin": 3060,
											"end": 3118,
											"name": "PUSH",
											"value": "556E697377617056323A20455850495245440000000000000000000000000000"
										},
										{
											"begin": 3060,
											"end": 3118,
											"name": "DUP2"
										},
										{
											"begin": 3060,
											"end": 3118,
											"name": "MSTORE"
										},
										{
											"begin": 3060,
											"end": 3118,
											"name": "POP"
										},
										{
											"begin": 3060,
											"end": 3118,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3060,
											"end": 3118,
											"name": "ADD"
										},
										{
											"begin": 3060,
											"end": 3118,
											"name": "SWAP2"
										},
										{
											"begin": 3060,
											"end": 3118,
											"name": "POP"
										},
										{
											"begin": 3060,
											"end": 3118,
											"name": "POP"
										},
										{
											"begin": 3060,
											"end": 3118,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3060,
											"end": 3118,
											"name": "MLOAD"
										},
										{
											"begin": 3060,
											"end": 3118,
											"name": "DUP1"
										},
										{
											"begin": 3060,
											"end": 3118,
											"name": "SWAP2"
										},
										{
											"begin": 3060,
											"end": 3118,
											"name": "SUB"
										},
										{
											"begin": 3060,
											"end": 3118,
											"name": "SWAP1"
										},
										{
											"begin": 3060,
											"end": 3118,
											"name": "REVERT"
										},
										{
											"begin": 3060,
											"end": 3118,
											"name": "tag",
											"value": "306"
										},
										{
											"begin": 3060,
											"end": 3118,
											"name": "JUMPDEST"
										},
										{
											"begin": 3129,
											"end": 3143,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3234,
											"end": 3250,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 3234,
											"end": 3250,
											"name": "SLOAD"
										},
										{
											"begin": 650,
											"end": 716,
											"name": "PUSH",
											"value": "6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9"
										},
										{
											"begin": 3290,
											"end": 3305,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3290,
											"end": 3305,
											"name": "SHL"
										},
										{
											"begin": 3307,
											"end": 3312,
											"name": "DUP10"
										},
										{
											"begin": 3314,
											"end": 3321,
											"name": "DUP10"
										},
										{
											"begin": 3323,
											"end": 3328,
											"name": "DUP10"
										},
										{
											"begin": 3330,
											"end": 3336,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3330,
											"end": 3343,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3337,
											"end": 3342,
											"name": "DUP15"
										},
										{
											"begin": 3330,
											"end": 3343,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3330,
											"end": 3343,
											"name": "AND"
										},
										{
											"begin": 3330,
											"end": 3343,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3330,
											"end": 3343,
											"name": "AND"
										},
										{
											"begin": 3330,
											"end": 3343,
											"name": "DUP2"
										},
										{
											"begin": 3330,
											"end": 3343,
											"name": "MSTORE"
										},
										{
											"begin": 3330,
											"end": 3343,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3330,
											"end": 3343,
											"name": "ADD"
										},
										{
											"begin": 3330,
											"end": 3343,
											"name": "SWAP1"
										},
										{
											"begin": 3330,
											"end": 3343,
											"name": "DUP2"
										},
										{
											"begin": 3330,
											"end": 3343,
											"name": "MSTORE"
										},
										{
											"begin": 3330,
											"end": 3343,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3330,
											"end": 3343,
											"name": "ADD"
										},
										{
											"begin": 3330,
											"end": 3343,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3330,
											"end": 3343,
											"name": "KECCAK256"
										},
										{
											"begin": 3330,
											"end": 3343,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3330,
											"end": 3345,
											"name": "DUP2"
										},
										{
											"begin": 3330,
											"end": 3345,
											"name": "SLOAD"
										},
										{
											"begin": 3330,
											"end": 3345,
											"name": "DUP1"
										},
										{
											"begin": 3330,
											"end": 3345,
											"name": "SWAP3"
										},
										{
											"begin": 3330,
											"end": 3345,
											"name": "SWAP2"
										},
										{
											"begin": 3330,
											"end": 3345,
											"name": "SWAP1"
										},
										{
											"begin": 3330,
											"end": 3345,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3330,
											"end": 3345,
											"name": "ADD"
										},
										{
											"begin": 3330,
											"end": 3345,
											"name": "SWAP2"
										},
										{
											"begin": 3330,
											"end": 3345,
											"name": "SWAP1"
										},
										{
											"begin": 3330,
											"end": 3345,
											"name": "POP"
										},
										{
											"begin": 3330,
											"end": 3345,
											"name": "SSTORE"
										},
										{
											"begin": 3347,
											"end": 3355,
											"name": "DUP11"
										},
										{
											"begin": 3279,
											"end": 3356,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3279,
											"end": 3356,
											"name": "MLOAD"
										},
										{
											"begin": 3279,
											"end": 3356,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3279,
											"end": 3356,
											"name": "ADD"
										},
										{
											"begin": 3279,
											"end": 3356,
											"name": "DUP1"
										},
										{
											"begin": 3279,
											"end": 3356,
											"name": "DUP8"
										},
										{
											"begin": 3279,
											"end": 3356,
											"name": "DUP2"
										},
										{
											"begin": 3279,
											"end": 3356,
											"name": "MSTORE"
										},
										{
											"begin": 3279,
											"end": 3356,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3279,
											"end": 3356,
											"name": "ADD"
										},
										{
											"begin": 3279,
											"end": 3356,
											"name": "DUP7"
										},
										{
											"begin": 3279,
											"end": 3356,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3279,
											"end": 3356,
											"name": "AND"
										},
										{
											"begin": 3279,
											"end": 3356,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3279,
											"end": 3356,
											"name": "AND"
										},
										{
											"begin": 3279,
											"end": 3356,
											"name": "DUP2"
										},
										{
											"begin": 3279,
											"end": 3356,
											"name": "MSTORE"
										},
										{
											"begin": 3279,
											"end": 3356,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3279,
											"end": 3356,
											"name": "ADD"
										},
										{
											"begin": 3279,
											"end": 3356,
											"name": "DUP6"
										},
										{
											"begin": 3279,
											"end": 3356,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3279,
											"end": 3356,
											"name": "AND"
										},
										{
											"begin": 3279,
											"end": 3356,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3279,
											"end": 3356,
											"name": "AND"
										},
										{
											"begin": 3279,
											"end": 3356,
											"name": "DUP2"
										},
										{
											"begin": 3279,
											"end": 3356,
											"name": "MSTORE"
										},
										{
											"begin": 3279,
											"end": 3356,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3279,
											"end": 3356,
											"name": "ADD"
										},
										{
											"begin": 3279,
											"end": 3356,
											"name": "DUP5"
										},
										{
											"begin": 3279,
											"end": 3356,
											"name": "DUP2"
										},
										{
											"begin": 3279,
											"end": 3356,
											"name": "MSTORE"
										},
										{
											"begin": 3279,
											"end": 3356,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3279,
											"end": 3356,
											"name": "ADD"
										},
										{
											"begin": 3279,
											"end": 3356,
											"name": "DUP4"
										},
										{
											"begin": 3279,
											"end": 3356,
											"name": "DUP2"
										},
										{
											"begin": 3279,
											"end": 3356,
											"name": "MSTORE"
										},
										{
											"begin": 3279,
											"end": 3356,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3279,
											"end": 3356,
											"name": "ADD"
										},
										{
											"begin": 3279,
											"end": 3356,
											"name": "DUP3"
										},
										{
											"begin": 3279,
											"end": 3356,
											"name": "DUP2"
										},
										{
											"begin": 3279,
											"end": 3356,
											"name": "MSTORE"
										},
										{
											"begin": 3279,
											"end": 3356,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3279,
											"end": 3356,
											"name": "ADD"
										},
										{
											"begin": 3279,
											"end": 3356,
											"name": "SWAP7"
										},
										{
											"begin": 3279,
											"end": 3356,
											"name": "POP"
										},
										{
											"begin": 3279,
											"end": 3356,
											"name": "POP"
										},
										{
											"begin": 3279,
											"end": 3356,
											"name": "POP"
										},
										{
											"begin": 3279,
											"end": 3356,
											"name": "POP"
										},
										{
											"begin": 3279,
											"end": 3356,
											"name": "POP"
										},
										{
											"begin": 3279,
											"end": 3356,
											"name": "POP"
										},
										{
											"begin": 3279,
											"end": 3356,
											"name": "POP"
										},
										{
											"begin": 3279,
											"end": 3356,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3279,
											"end": 3356,
											"name": "MLOAD"
										},
										{
											"begin": 49,
											"end": 53,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 39,
											"end": 46,
											"name": "DUP2"
										},
										{
											"begin": 30,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 20,
											"name": "DUP2"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 3279,
											"end": 3356,
											"name": "SWAP1"
										},
										{
											"begin": 3279,
											"end": 3356,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3279,
											"end": 3356,
											"name": "MSTORE"
										},
										{
											"begin": 3269,
											"end": 3357,
											"name": "DUP1"
										},
										{
											"begin": 3269,
											"end": 3357,
											"name": "MLOAD"
										},
										{
											"begin": 3269,
											"end": 3357,
											"name": "SWAP1"
										},
										{
											"begin": 3269,
											"end": 3357,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3269,
											"end": 3357,
											"name": "ADD"
										},
										{
											"begin": 3269,
											"end": 3357,
											"name": "KECCAK256"
										},
										{
											"begin": 3170,
											"end": 3372,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3170,
											"end": 3372,
											"name": "MLOAD"
										},
										{
											"begin": 3170,
											"end": 3372,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3170,
											"end": 3372,
											"name": "ADD"
										},
										{
											"begin": 3170,
											"end": 3372,
											"name": "DUP1"
										},
										{
											"begin": 3170,
											"end": 3372,
											"name": "DUP1"
										},
										{
											"begin": 3170,
											"end": 3372,
											"name": "PUSH",
											"value": "1901000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3170,
											"end": 3372,
											"name": "DUP2"
										},
										{
											"begin": 3170,
											"end": 3372,
											"name": "MSTORE"
										},
										{
											"begin": 3170,
											"end": 3372,
											"name": "POP"
										},
										{
											"begin": 3170,
											"end": 3372,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 3170,
											"end": 3372,
											"name": "ADD"
										},
										{
											"begin": 3170,
											"end": 3372,
											"name": "DUP4"
										},
										{
											"begin": 3170,
											"end": 3372,
											"name": "DUP2"
										},
										{
											"begin": 3170,
											"end": 3372,
											"name": "MSTORE"
										},
										{
											"begin": 3170,
											"end": 3372,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3170,
											"end": 3372,
											"name": "ADD"
										},
										{
											"begin": 3170,
											"end": 3372,
											"name": "DUP3"
										},
										{
											"begin": 3170,
											"end": 3372,
											"name": "DUP2"
										},
										{
											"begin": 3170,
											"end": 3372,
											"name": "MSTORE"
										},
										{
											"begin": 3170,
											"end": 3372,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3170,
											"end": 3372,
											"name": "ADD"
										},
										{
											"begin": 3170,
											"end": 3372,
											"name": "SWAP3"
										},
										{
											"begin": 3170,
											"end": 3372,
											"name": "POP"
										},
										{
											"begin": 3170,
											"end": 3372,
											"name": "POP"
										},
										{
											"begin": 3170,
											"end": 3372,
											"name": "POP"
										},
										{
											"begin": 3170,
											"end": 3372,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3170,
											"end": 3372,
											"name": "MLOAD"
										},
										{
											"begin": 49,
											"end": 53,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 39,
											"end": 46,
											"name": "DUP2"
										},
										{
											"begin": 30,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 20,
											"name": "DUP2"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 3170,
											"end": 3372,
											"name": "SWAP1"
										},
										{
											"begin": 3170,
											"end": 3372,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3170,
											"end": 3372,
											"name": "MSTORE"
										},
										{
											"begin": 3146,
											"end": 3383,
											"name": "DUP1"
										},
										{
											"begin": 3146,
											"end": 3383,
											"name": "MLOAD"
										},
										{
											"begin": 3146,
											"end": 3383,
											"name": "SWAP1"
										},
										{
											"begin": 3146,
											"end": 3383,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3146,
											"end": 3383,
											"name": "ADD"
										},
										{
											"begin": 3146,
											"end": 3383,
											"name": "KECCAK256"
										},
										{
											"begin": 3129,
											"end": 3383,
											"name": "SWAP1"
										},
										{
											"begin": 3129,
											"end": 3383,
											"name": "POP"
										},
										{
											"begin": 3394,
											"end": 3418,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3421,
											"end": 3447,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3431,
											"end": 3437,
											"name": "DUP3"
										},
										{
											"begin": 3439,
											"end": 3440,
											"name": "DUP7"
										},
										{
											"begin": 3442,
											"end": 3443,
											"name": "DUP7"
										},
										{
											"begin": 3445,
											"end": 3446,
											"name": "DUP7"
										},
										{
											"begin": 3421,
											"end": 3447,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3421,
											"end": 3447,
											"name": "MLOAD"
										},
										{
											"begin": 3421,
											"end": 3447,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3421,
											"end": 3447,
											"name": "DUP2"
										},
										{
											"begin": 3421,
											"end": 3447,
											"name": "MSTORE"
										},
										{
											"begin": 3421,
											"end": 3447,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3421,
											"end": 3447,
											"name": "ADD"
										},
										{
											"begin": 3421,
											"end": 3447,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3421,
											"end": 3447,
											"name": "MSTORE"
										},
										{
											"begin": 3421,
											"end": 3447,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3421,
											"end": 3447,
											"name": "MLOAD"
										},
										{
											"begin": 3421,
											"end": 3447,
											"name": "DUP1"
										},
										{
											"begin": 3421,
											"end": 3447,
											"name": "DUP6"
										},
										{
											"begin": 3421,
											"end": 3447,
											"name": "DUP2"
										},
										{
											"begin": 3421,
											"end": 3447,
											"name": "MSTORE"
										},
										{
											"begin": 3421,
											"end": 3447,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3421,
											"end": 3447,
											"name": "ADD"
										},
										{
											"begin": 3421,
											"end": 3447,
											"name": "DUP5"
										},
										{
											"begin": 3421,
											"end": 3447,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 3421,
											"end": 3447,
											"name": "AND"
										},
										{
											"begin": 3421,
											"end": 3447,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 3421,
											"end": 3447,
											"name": "AND"
										},
										{
											"begin": 3421,
											"end": 3447,
											"name": "DUP2"
										},
										{
											"begin": 3421,
											"end": 3447,
											"name": "MSTORE"
										},
										{
											"begin": 3421,
											"end": 3447,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3421,
											"end": 3447,
											"name": "ADD"
										},
										{
											"begin": 3421,
											"end": 3447,
											"name": "DUP4"
										},
										{
											"begin": 3421,
											"end": 3447,
											"name": "DUP2"
										},
										{
											"begin": 3421,
											"end": 3447,
											"name": "MSTORE"
										},
										{
											"begin": 3421,
											"end": 3447,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3421,
											"end": 3447,
											"name": "ADD"
										},
										{
											"begin": 3421,
											"end": 3447,
											"name": "DUP3"
										},
										{
											"begin": 3421,
											"end": 3447,
											"name": "DUP2"
										},
										{
											"begin": 3421,
											"end": 3447,
											"name": "MSTORE"
										},
										{
											"begin": 3421,
											"end": 3447,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3421,
											"end": 3447,
											"name": "ADD"
										},
										{
											"begin": 3421,
											"end": 3447,
											"name": "SWAP5"
										},
										{
											"begin": 3421,
											"end": 3447,
											"name": "POP"
										},
										{
											"begin": 3421,
											"end": 3447,
											"name": "POP"
										},
										{
											"begin": 3421,
											"end": 3447,
											"name": "POP"
										},
										{
											"begin": 3421,
											"end": 3447,
											"name": "POP"
										},
										{
											"begin": 3421,
											"end": 3447,
											"name": "POP"
										},
										{
											"begin": 3421,
											"end": 3447,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3421,
											"end": 3447,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3421,
											"end": 3447,
											"name": "MLOAD"
										},
										{
											"begin": 3421,
											"end": 3447,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3421,
											"end": 3447,
											"name": "DUP2"
										},
										{
											"begin": 3421,
											"end": 3447,
											"name": "SUB"
										},
										{
											"begin": 3421,
											"end": 3447,
											"name": "SWAP1"
										},
										{
											"begin": 3421,
											"end": 3447,
											"name": "DUP1"
										},
										{
											"begin": 3421,
											"end": 3447,
											"name": "DUP5"
										},
										{
											"begin": 3421,
											"end": 3447,
											"name": "SUB"
										},
										{
											"begin": 3421,
											"end": 3447,
											"name": "SWAP1"
										},
										{
											"begin": 3421,
											"end": 3447,
											"name": "DUP6"
										},
										{
											"begin": 3421,
											"end": 3447,
											"name": "GAS"
										},
										{
											"begin": 3421,
											"end": 3447,
											"name": "STATICCALL"
										},
										{
											"begin": 3421,
											"end": 3447,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "307"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "307"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 3421,
											"end": 3447,
											"name": "POP"
										},
										{
											"begin": 3421,
											"end": 3447,
											"name": "POP"
										},
										{
											"begin": 3421,
											"end": 3447,
											"name": "POP"
										},
										{
											"begin": 3421,
											"end": 3447,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3421,
											"end": 3447,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3421,
											"end": 3447,
											"name": "MLOAD"
										},
										{
											"begin": 3421,
											"end": 3447,
											"name": "SUB"
										},
										{
											"begin": 3421,
											"end": 3447,
											"name": "MLOAD"
										},
										{
											"begin": 3394,
											"end": 3447,
											"name": "SWAP1"
										},
										{
											"begin": 3394,
											"end": 3447,
											"name": "POP"
										},
										{
											"begin": 3494,
											"end": 3495,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3466,
											"end": 3496,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3466,
											"end": 3496,
											"name": "AND"
										},
										{
											"begin": 3466,
											"end": 3482,
											"name": "DUP2"
										},
										{
											"begin": 3466,
											"end": 3496,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3466,
											"end": 3496,
											"name": "AND"
										},
										{
											"begin": 3466,
											"end": 3496,
											"name": "EQ"
										},
										{
											"begin": 3466,
											"end": 3496,
											"name": "ISZERO"
										},
										{
											"begin": 3466,
											"end": 3525,
											"name": "DUP1"
										},
										{
											"begin": 3466,
											"end": 3525,
											"name": "ISZERO"
										},
										{
											"begin": 3466,
											"end": 3525,
											"name": "PUSH [tag]",
											"value": "308"
										},
										{
											"begin": 3466,
											"end": 3525,
											"name": "JUMPI"
										},
										{
											"begin": 3466,
											"end": 3525,
											"name": "POP"
										},
										{
											"begin": 3520,
											"end": 3525,
											"name": "DUP9"
										},
										{
											"begin": 3500,
											"end": 3525,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3500,
											"end": 3525,
											"name": "AND"
										},
										{
											"begin": 3500,
											"end": 3516,
											"name": "DUP2"
										},
										{
											"begin": 3500,
											"end": 3525,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3500,
											"end": 3525,
											"name": "AND"
										},
										{
											"begin": 3500,
											"end": 3525,
											"name": "EQ"
										},
										{
											"begin": 3466,
											"end": 3525,
											"name": "tag",
											"value": "308"
										},
										{
											"begin": 3466,
											"end": 3525,
											"name": "JUMPDEST"
										},
										{
											"begin": 3458,
											"end": 3558,
											"name": "PUSH [tag]",
											"value": "309"
										},
										{
											"begin": 3458,
											"end": 3558,
											"name": "JUMPI"
										},
										{
											"begin": 3458,
											"end": 3558,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3458,
											"end": 3558,
											"name": "MLOAD"
										},
										{
											"begin": 3458,
											"end": 3558,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3458,
											"end": 3558,
											"name": "DUP2"
										},
										{
											"begin": 3458,
											"end": 3558,
											"name": "MSTORE"
										},
										{
											"begin": 3458,
											"end": 3558,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3458,
											"end": 3558,
											"name": "ADD"
										},
										{
											"begin": 3458,
											"end": 3558,
											"name": "DUP1"
										},
										{
											"begin": 3458,
											"end": 3558,
											"name": "DUP1"
										},
										{
											"begin": 3458,
											"end": 3558,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3458,
											"end": 3558,
											"name": "ADD"
										},
										{
											"begin": 3458,
											"end": 3558,
											"name": "DUP3"
										},
										{
											"begin": 3458,
											"end": 3558,
											"name": "DUP2"
										},
										{
											"begin": 3458,
											"end": 3558,
											"name": "SUB"
										},
										{
											"begin": 3458,
											"end": 3558,
											"name": "DUP3"
										},
										{
											"begin": 3458,
											"end": 3558,
											"name": "MSTORE"
										},
										{
											"begin": 3458,
											"end": 3558,
											"name": "PUSH",
											"value": "1C"
										},
										{
											"begin": 3458,
											"end": 3558,
											"name": "DUP2"
										},
										{
											"begin": 3458,
											"end": 3558,
											"name": "MSTORE"
										},
										{
											"begin": 3458,
											"end": 3558,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3458,
											"end": 3558,
											"name": "ADD"
										},
										{
											"begin": 3458,
											"end": 3558,
											"name": "DUP1"
										},
										{
											"begin": 3458,
											"end": 3558,
											"name": "PUSH",
											"value": "556E697377617056323A20494E56414C49445F5349474E415455524500000000"
										},
										{
											"begin": 3458,
											"end": 3558,
											"name": "DUP2"
										},
										{
											"begin": 3458,
											"end": 3558,
											"name": "MSTORE"
										},
										{
											"begin": 3458,
											"end": 3558,
											"name": "POP"
										},
										{
											"begin": 3458,
											"end": 3558,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3458,
											"end": 3558,
											"name": "ADD"
										},
										{
											"begin": 3458,
											"end": 3558,
											"name": "SWAP2"
										},
										{
											"begin": 3458,
											"end": 3558,
											"name": "POP"
										},
										{
											"begin": 3458,
											"end": 3558,
											"name": "POP"
										},
										{
											"begin": 3458,
											"end": 3558,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3458,
											"end": 3558,
											"name": "MLOAD"
										},
										{
											"begin": 3458,
											"end": 3558,
											"name": "DUP1"
										},
										{
											"begin": 3458,
											"end": 3558,
											"name": "SWAP2"
										},
										{
											"begin": 3458,
											"end": 3558,
											"name": "SUB"
										},
										{
											"begin": 3458,
											"end": 3558,
											"name": "SWAP1"
										},
										{
											"begin": 3458,
											"end": 3558,
											"name": "REVERT"
										},
										{
											"begin": 3458,
											"end": 3558,
											"name": "tag",
											"value": "309"
										},
										{
											"begin": 3458,
											"end": 3558,
											"name": "JUMPDEST"
										},
										{
											"begin": 3569,
											"end": 3600,
											"name": "PUSH [tag]",
											"value": "310"
										},
										{
											"begin": 3578,
											"end": 3583,
											"name": "DUP10"
										},
										{
											"begin": 3585,
											"end": 3592,
											"name": "DUP10"
										},
										{
											"begin": 3594,
											"end": 3599,
											"name": "DUP10"
										},
										{
											"begin": 3569,
											"end": 3577,
											"name": "PUSH [tag]",
											"value": "169"
										},
										{
											"begin": 3569,
											"end": 3600,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3569,
											"end": 3600,
											"name": "tag",
											"value": "310"
										},
										{
											"begin": 3569,
											"end": 3600,
											"name": "JUMPDEST"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "POP"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "POP"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "POP"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "POP"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "POP"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "POP"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "POP"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "POP"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "POP"
										},
										{
											"begin": 2934,
											"end": 3608,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 611,
											"end": 656,
											"name": "tag",
											"value": "149"
										},
										{
											"begin": 611,
											"end": 656,
											"name": "JUMPDEST"
										},
										{
											"begin": 650,
											"end": 656,
											"name": "PUSH",
											"value": "186A0"
										},
										{
											"begin": 611,
											"end": 656,
											"name": "DUP2"
										},
										{
											"begin": 611,
											"end": 656,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 395,
											"end": 456,
											"name": "tag",
											"value": "152"
										},
										{
											"begin": 395,
											"end": 456,
											"name": "JUMPDEST"
										},
										{
											"begin": 395,
											"end": 456,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 395,
											"end": 456,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 395,
											"end": 456,
											"name": "MSTORE"
										},
										{
											"begin": 395,
											"end": 456,
											"name": "DUP2"
										},
										{
											"begin": 395,
											"end": 456,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 395,
											"end": 456,
											"name": "MSTORE"
										},
										{
											"begin": 395,
											"end": 456,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 395,
											"end": 456,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 395,
											"end": 456,
											"name": "KECCAK256"
										},
										{
											"begin": 395,
											"end": 456,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 395,
											"end": 456,
											"name": "MSTORE"
										},
										{
											"begin": 395,
											"end": 456,
											"name": "DUP1"
										},
										{
											"begin": 395,
											"end": 456,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 395,
											"end": 456,
											"name": "MSTORE"
										},
										{
											"begin": 395,
											"end": 456,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 395,
											"end": 456,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 395,
											"end": 456,
											"name": "KECCAK256"
										},
										{
											"begin": 395,
											"end": 456,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 395,
											"end": 456,
											"name": "SWAP2"
										},
										{
											"begin": 395,
											"end": 456,
											"name": "POP"
										},
										{
											"begin": 395,
											"end": 456,
											"name": "SWAP2"
										},
										{
											"begin": 395,
											"end": 456,
											"name": "POP"
										},
										{
											"begin": 395,
											"end": 456,
											"name": "POP"
										},
										{
											"begin": 395,
											"end": 456,
											"name": "SLOAD"
										},
										{
											"begin": 395,
											"end": 456,
											"name": "DUP2"
										},
										{
											"begin": 395,
											"end": 456,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 15507,
											"end": 15768,
											"name": "tag",
											"value": "155"
										},
										{
											"begin": 15507,
											"end": 15768,
											"name": "JUMPDEST"
										},
										{
											"begin": 15584,
											"end": 15588,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15597,
											"end": 15614,
											"name": "DUP1"
										},
										{
											"begin": 15628,
											"end": 15634,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 15628,
											"end": 15634,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15628,
											"end": 15634,
											"name": "SWAP1"
										},
										{
											"begin": 15628,
											"end": 15634,
											"name": "SLOAD"
										},
										{
											"begin": 15628,
											"end": 15634,
											"name": "SWAP1"
										},
										{
											"begin": 15628,
											"end": 15634,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 15628,
											"end": 15634,
											"name": "EXP"
										},
										{
											"begin": 15628,
											"end": 15634,
											"name": "SWAP1"
										},
										{
											"begin": 15628,
											"end": 15634,
											"name": "DIV"
										},
										{
											"begin": 15628,
											"end": 15634,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15628,
											"end": 15634,
											"name": "AND"
										},
										{
											"begin": 15617,
											"end": 15634,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15617,
											"end": 15634,
											"name": "AND"
										},
										{
											"begin": 15617,
											"end": 15624,
											"name": "DUP4"
										},
										{
											"begin": 15617,
											"end": 15634,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15617,
											"end": 15634,
											"name": "AND"
										},
										{
											"begin": 15617,
											"end": 15634,
											"name": "EQ"
										},
										{
											"begin": 15617,
											"end": 15672,
											"name": "PUSH [tag]",
											"value": "312"
										},
										{
											"begin": 15617,
											"end": 15672,
											"name": "JUMPI"
										},
										{
											"begin": 15656,
											"end": 15672,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 15656,
											"end": 15672,
											"name": "PUSH",
											"value": "1E"
										},
										{
											"begin": 15656,
											"end": 15672,
											"name": "SWAP1"
										},
										{
											"begin": 15656,
											"end": 15672,
											"name": "SLOAD"
										},
										{
											"begin": 15656,
											"end": 15672,
											"name": "SWAP1"
										},
										{
											"begin": 15656,
											"end": 15672,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 15656,
											"end": 15672,
											"name": "EXP"
										},
										{
											"begin": 15656,
											"end": 15672,
											"name": "SWAP1"
										},
										{
											"begin": 15656,
											"end": 15672,
											"name": "DIV"
										},
										{
											"begin": 15656,
											"end": 15672,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 15656,
											"end": 15672,
											"name": "AND"
										},
										{
											"begin": 15617,
											"end": 15672,
											"name": "PUSH [tag]",
											"value": "313"
										},
										{
											"begin": 15617,
											"end": 15672,
											"name": "JUMP"
										},
										{
											"begin": 15617,
											"end": 15672,
											"name": "tag",
											"value": "312"
										},
										{
											"begin": 15617,
											"end": 15672,
											"name": "JUMPDEST"
										},
										{
											"begin": 15637,
											"end": 15653,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 15637,
											"end": 15653,
											"name": "PUSH",
											"value": "1C"
										},
										{
											"begin": 15637,
											"end": 15653,
											"name": "SWAP1"
										},
										{
											"begin": 15637,
											"end": 15653,
											"name": "SLOAD"
										},
										{
											"begin": 15637,
											"end": 15653,
											"name": "SWAP1"
										},
										{
											"begin": 15637,
											"end": 15653,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 15637,
											"end": 15653,
											"name": "EXP"
										},
										{
											"begin": 15637,
											"end": 15653,
											"name": "SWAP1"
										},
										{
											"begin": 15637,
											"end": 15653,
											"name": "DIV"
										},
										{
											"begin": 15637,
											"end": 15653,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 15637,
											"end": 15653,
											"name": "AND"
										},
										{
											"begin": 15617,
											"end": 15672,
											"name": "tag",
											"value": "313"
										},
										{
											"begin": 15617,
											"end": 15672,
											"name": "JUMPDEST"
										},
										{
											"begin": 15597,
											"end": 15672,
											"name": "SWAP1"
										},
										{
											"begin": 15597,
											"end": 15672,
											"name": "POP"
										},
										{
											"begin": 15686,
											"end": 15762,
											"name": "PUSH [tag]",
											"value": "314"
										},
										{
											"begin": 15700,
											"end": 15708,
											"name": "DUP5"
										},
										{
											"begin": 15710,
											"end": 15717,
											"name": "DUP5"
										},
										{
											"begin": 15724,
											"end": 15732,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 15724,
											"end": 15732,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15724,
											"end": 15732,
											"name": "SWAP1"
										},
										{
											"begin": 15724,
											"end": 15732,
											"name": "SLOAD"
										},
										{
											"begin": 15724,
											"end": 15732,
											"name": "SWAP1"
										},
										{
											"begin": 15724,
											"end": 15732,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 15724,
											"end": 15732,
											"name": "EXP"
										},
										{
											"begin": 15724,
											"end": 15732,
											"name": "SWAP1"
										},
										{
											"begin": 15724,
											"end": 15732,
											"name": "DIV"
										},
										{
											"begin": 15724,
											"end": 15732,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15724,
											"end": 15732,
											"name": "AND"
										},
										{
											"begin": 15719,
											"end": 15733,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15719,
											"end": 15733,
											"name": "AND"
										},
										{
											"begin": 15740,
											"end": 15748,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 15740,
											"end": 15748,
											"name": "PUSH",
											"value": "E"
										},
										{
											"begin": 15740,
											"end": 15748,
											"name": "SWAP1"
										},
										{
											"begin": 15740,
											"end": 15748,
											"name": "SLOAD"
										},
										{
											"begin": 15740,
											"end": 15748,
											"name": "SWAP1"
										},
										{
											"begin": 15740,
											"end": 15748,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 15740,
											"end": 15748,
											"name": "EXP"
										},
										{
											"begin": 15740,
											"end": 15748,
											"name": "SWAP1"
										},
										{
											"begin": 15740,
											"end": 15748,
											"name": "DIV"
										},
										{
											"begin": 15740,
											"end": 15748,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15740,
											"end": 15748,
											"name": "AND"
										},
										{
											"begin": 15735,
											"end": 15749,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15735,
											"end": 15749,
											"name": "AND"
										},
										{
											"begin": 15751,
											"end": 15761,
											"name": "DUP6"
										},
										{
											"begin": 15686,
											"end": 15762,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 15686,
											"end": 15762,
											"name": "AND"
										},
										{
											"begin": 15686,
											"end": 15699,
											"name": "PUSH [tag]",
											"value": "315"
										},
										{
											"begin": 15686,
											"end": 15762,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 15686,
											"end": 15762,
											"name": "tag",
											"value": "314"
										},
										{
											"begin": 15686,
											"end": 15762,
											"name": "JUMPDEST"
										},
										{
											"begin": 15679,
											"end": 15762,
											"name": "SWAP2"
										},
										{
											"begin": 15679,
											"end": 15762,
											"name": "POP"
										},
										{
											"begin": 15679,
											"end": 15762,
											"name": "POP"
										},
										{
											"begin": 15507,
											"end": 15768,
											"name": "SWAP3"
										},
										{
											"begin": 15507,
											"end": 15768,
											"name": "SWAP2"
										},
										{
											"begin": 15507,
											"end": 15768,
											"name": "POP"
										},
										{
											"begin": 15507,
											"end": 15768,
											"name": "POP"
										},
										{
											"begin": 15507,
											"end": 15768,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 17752,
											"end": 18098,
											"name": "tag",
											"value": "158"
										},
										{
											"begin": 17752,
											"end": 18098,
											"name": "JUMPDEST"
										},
										{
											"begin": 1569,
											"end": 1570,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1557,
											"end": 1565,
											"name": "PUSH",
											"value": "D"
										},
										{
											"begin": 1557,
											"end": 1565,
											"name": "SLOAD"
										},
										{
											"begin": 1557,
											"end": 1570,
											"name": "EQ"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "PUSH [tag]",
											"value": "317"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "JUMPI"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "MLOAD"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "DUP2"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "MSTORE"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "ADD"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "DUP1"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "DUP1"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "ADD"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "DUP3"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "DUP2"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "SUB"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "DUP3"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "MSTORE"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "PUSH",
											"value": "B"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "DUP2"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "MSTORE"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "ADD"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "DUP1"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "PUSH",
											"value": "31306B3A204C4F434B4544000000000000000000000000000000000000000000"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "DUP2"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "MSTORE"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "POP"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "ADD"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "SWAP2"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "POP"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "POP"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "MLOAD"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "DUP1"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "SWAP2"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "SUB"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "SWAP1"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "REVERT"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "tag",
											"value": "317"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "JUMPDEST"
										},
										{
											"begin": 1604,
											"end": 1605,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1593,
											"end": 1601,
											"name": "PUSH",
											"value": "D"
										},
										{
											"begin": 1593,
											"end": 1605,
											"name": "DUP2"
										},
										{
											"begin": 1593,
											"end": 1605,
											"name": "SWAP1"
										},
										{
											"begin": 1593,
											"end": 1605,
											"name": "SSTORE"
										},
										{
											"begin": 1593,
											"end": 1605,
											"name": "POP"
										},
										{
											"begin": 17865,
											"end": 17872,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 17865,
											"end": 17872,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 17865,
											"end": 17872,
											"name": "SWAP1"
										},
										{
											"begin": 17865,
											"end": 17872,
											"name": "SLOAD"
										},
										{
											"begin": 17865,
											"end": 17872,
											"name": "SWAP1"
										},
										{
											"begin": 17865,
											"end": 17872,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 17865,
											"end": 17872,
											"name": "EXP"
										},
										{
											"begin": 17865,
											"end": 17872,
											"name": "SWAP1"
										},
										{
											"begin": 17865,
											"end": 17872,
											"name": "DIV"
										},
										{
											"begin": 17865,
											"end": 17872,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17865,
											"end": 17872,
											"name": "AND"
										},
										{
											"begin": 17847,
											"end": 17879,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17847,
											"end": 17879,
											"name": "AND"
										},
										{
											"begin": 17847,
											"end": 17879,
											"name": "PUSH",
											"value": "8DA5CB5B"
										},
										{
											"begin": 17847,
											"end": 17881,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17847,
											"end": 17881,
											"name": "MLOAD"
										},
										{
											"begin": 17847,
											"end": 17881,
											"name": "DUP2"
										},
										{
											"begin": 17847,
											"end": 17881,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 17847,
											"end": 17881,
											"name": "AND"
										},
										{
											"begin": 17847,
											"end": 17881,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 17847,
											"end": 17881,
											"name": "SHL"
										},
										{
											"begin": 17847,
											"end": 17881,
											"name": "DUP2"
										},
										{
											"begin": 17847,
											"end": 17881,
											"name": "MSTORE"
										},
										{
											"begin": 17847,
											"end": 17881,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 17847,
											"end": 17881,
											"name": "ADD"
										},
										{
											"begin": 17847,
											"end": 17881,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17847,
											"end": 17881,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17847,
											"end": 17881,
											"name": "MLOAD"
										},
										{
											"begin": 17847,
											"end": 17881,
											"name": "DUP1"
										},
										{
											"begin": 17847,
											"end": 17881,
											"name": "DUP4"
										},
										{
											"begin": 17847,
											"end": 17881,
											"name": "SUB"
										},
										{
											"begin": 17847,
											"end": 17881,
											"name": "DUP2"
										},
										{
											"begin": 17847,
											"end": 17881,
											"name": "DUP7"
										},
										{
											"begin": 17847,
											"end": 17881,
											"name": "DUP1"
										},
										{
											"begin": 17847,
											"end": 17881,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 17847,
											"end": 17881,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "319"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "319"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 17847,
											"end": 17881,
											"name": "POP"
										},
										{
											"begin": 17847,
											"end": 17881,
											"name": "GAS"
										},
										{
											"begin": 17847,
											"end": 17881,
											"name": "STATICCALL"
										},
										{
											"begin": 17847,
											"end": 17881,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "320"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "320"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 17847,
											"end": 17881,
											"name": "POP"
										},
										{
											"begin": 17847,
											"end": 17881,
											"name": "POP"
										},
										{
											"begin": 17847,
											"end": 17881,
											"name": "POP"
										},
										{
											"begin": 17847,
											"end": 17881,
											"name": "POP"
										},
										{
											"begin": 17847,
											"end": 17881,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17847,
											"end": 17881,
											"name": "MLOAD"
										},
										{
											"begin": 17847,
											"end": 17881,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "321"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "321"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 17847,
											"end": 17881,
											"name": "DUP2"
										},
										{
											"begin": 17847,
											"end": 17881,
											"name": "ADD"
										},
										{
											"begin": 17847,
											"end": 17881,
											"name": "SWAP1"
										},
										{
											"begin": 17847,
											"end": 17881,
											"name": "DUP1"
										},
										{
											"begin": 17847,
											"end": 17881,
											"name": "DUP1"
										},
										{
											"begin": 17847,
											"end": 17881,
											"name": "MLOAD"
										},
										{
											"begin": 17847,
											"end": 17881,
											"name": "SWAP1"
										},
										{
											"begin": 17847,
											"end": 17881,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17847,
											"end": 17881,
											"name": "ADD"
										},
										{
											"begin": 17847,
											"end": 17881,
											"name": "SWAP1"
										},
										{
											"begin": 17847,
											"end": 17881,
											"name": "SWAP3"
										},
										{
											"begin": 17847,
											"end": 17881,
											"name": "SWAP2"
										},
										{
											"begin": 17847,
											"end": 17881,
											"name": "SWAP1"
										},
										{
											"begin": 17847,
											"end": 17881,
											"name": "POP"
										},
										{
											"begin": 17847,
											"end": 17881,
											"name": "POP"
										},
										{
											"begin": 17847,
											"end": 17881,
											"name": "POP"
										},
										{
											"begin": 17833,
											"end": 17881,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17833,
											"end": 17881,
											"name": "AND"
										},
										{
											"begin": 17833,
											"end": 17843,
											"name": "CALLER"
										},
										{
											"begin": 17833,
											"end": 17881,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17833,
											"end": 17881,
											"name": "AND"
										},
										{
											"begin": 17833,
											"end": 17881,
											"name": "EQ"
										},
										{
											"begin": 17825,
											"end": 17911,
											"name": "PUSH [tag]",
											"value": "322"
										},
										{
											"begin": 17825,
											"end": 17911,
											"name": "JUMPI"
										},
										{
											"begin": 17825,
											"end": 17911,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17825,
											"end": 17911,
											"name": "MLOAD"
										},
										{
											"begin": 17825,
											"end": 17911,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17825,
											"end": 17911,
											"name": "DUP2"
										},
										{
											"begin": 17825,
											"end": 17911,
											"name": "MSTORE"
										},
										{
											"begin": 17825,
											"end": 17911,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 17825,
											"end": 17911,
											"name": "ADD"
										},
										{
											"begin": 17825,
											"end": 17911,
											"name": "DUP1"
										},
										{
											"begin": 17825,
											"end": 17911,
											"name": "DUP1"
										},
										{
											"begin": 17825,
											"end": 17911,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17825,
											"end": 17911,
											"name": "ADD"
										},
										{
											"begin": 17825,
											"end": 17911,
											"name": "DUP3"
										},
										{
											"begin": 17825,
											"end": 17911,
											"name": "DUP2"
										},
										{
											"begin": 17825,
											"end": 17911,
											"name": "SUB"
										},
										{
											"begin": 17825,
											"end": 17911,
											"name": "DUP3"
										},
										{
											"begin": 17825,
											"end": 17911,
											"name": "MSTORE"
										},
										{
											"begin": 17825,
											"end": 17911,
											"name": "PUSH",
											"value": "19"
										},
										{
											"begin": 17825,
											"end": 17911,
											"name": "DUP2"
										},
										{
											"begin": 17825,
											"end": 17911,
											"name": "MSTORE"
										},
										{
											"begin": 17825,
											"end": 17911,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17825,
											"end": 17911,
											"name": "ADD"
										},
										{
											"begin": 17825,
											"end": 17911,
											"name": "DUP1"
										},
										{
											"begin": 17825,
											"end": 17911,
											"name": "PUSH",
											"value": "31306B3A206F6E6C7920666163746F72792773206F776E657200000000000000"
										},
										{
											"begin": 17825,
											"end": 17911,
											"name": "DUP2"
										},
										{
											"begin": 17825,
											"end": 17911,
											"name": "MSTORE"
										},
										{
											"begin": 17825,
											"end": 17911,
											"name": "POP"
										},
										{
											"begin": 17825,
											"end": 17911,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17825,
											"end": 17911,
											"name": "ADD"
										},
										{
											"begin": 17825,
											"end": 17911,
											"name": "SWAP2"
										},
										{
											"begin": 17825,
											"end": 17911,
											"name": "POP"
										},
										{
											"begin": 17825,
											"end": 17911,
											"name": "POP"
										},
										{
											"begin": 17825,
											"end": 17911,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17825,
											"end": 17911,
											"name": "MLOAD"
										},
										{
											"begin": 17825,
											"end": 17911,
											"name": "DUP1"
										},
										{
											"begin": 17825,
											"end": 17911,
											"name": "SWAP2"
										},
										{
											"begin": 17825,
											"end": 17911,
											"name": "SUB"
										},
										{
											"begin": 17825,
											"end": 17911,
											"name": "SWAP1"
										},
										{
											"begin": 17825,
											"end": 17911,
											"name": "REVERT"
										},
										{
											"begin": 17825,
											"end": 17911,
											"name": "tag",
											"value": "322"
										},
										{
											"begin": 17825,
											"end": 17911,
											"name": "JUMPDEST"
										},
										{
											"begin": 17935,
											"end": 17941,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 17935,
											"end": 17941,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 17935,
											"end": 17941,
											"name": "SWAP1"
										},
										{
											"begin": 17935,
											"end": 17941,
											"name": "SLOAD"
										},
										{
											"begin": 17935,
											"end": 17941,
											"name": "SWAP1"
										},
										{
											"begin": 17935,
											"end": 17941,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 17935,
											"end": 17941,
											"name": "EXP"
										},
										{
											"begin": 17935,
											"end": 17941,
											"name": "SWAP1"
										},
										{
											"begin": 17935,
											"end": 17941,
											"name": "DIV"
										},
										{
											"begin": 17935,
											"end": 17941,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17935,
											"end": 17941,
											"name": "AND"
										},
										{
											"begin": 17926,
											"end": 17941,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17926,
											"end": 17941,
											"name": "AND"
										},
										{
											"begin": 17926,
											"end": 17931,
											"name": "DUP3"
										},
										{
											"begin": 17926,
											"end": 17941,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17926,
											"end": 17941,
											"name": "AND"
										},
										{
											"begin": 17926,
											"end": 17941,
											"name": "EQ"
										},
										{
											"begin": 17926,
											"end": 17941,
											"name": "ISZERO"
										},
										{
											"begin": 17926,
											"end": 17960,
											"name": "DUP1"
										},
										{
											"begin": 17926,
											"end": 17960,
											"name": "ISZERO"
										},
										{
											"begin": 17926,
											"end": 17960,
											"name": "PUSH [tag]",
											"value": "323"
										},
										{
											"begin": 17926,
											"end": 17960,
											"name": "JUMPI"
										},
										{
											"begin": 17926,
											"end": 17960,
											"name": "POP"
										},
										{
											"begin": 17954,
											"end": 17960,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 17954,
											"end": 17960,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 17954,
											"end": 17960,
											"name": "SWAP1"
										},
										{
											"begin": 17954,
											"end": 17960,
											"name": "SLOAD"
										},
										{
											"begin": 17954,
											"end": 17960,
											"name": "SWAP1"
										},
										{
											"begin": 17954,
											"end": 17960,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 17954,
											"end": 17960,
											"name": "EXP"
										},
										{
											"begin": 17954,
											"end": 17960,
											"name": "SWAP1"
										},
										{
											"begin": 17954,
											"end": 17960,
											"name": "DIV"
										},
										{
											"begin": 17954,
											"end": 17960,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17954,
											"end": 17960,
											"name": "AND"
										},
										{
											"begin": 17945,
											"end": 17960,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17945,
											"end": 17960,
											"name": "AND"
										},
										{
											"begin": 17945,
											"end": 17950,
											"name": "DUP3"
										},
										{
											"begin": 17945,
											"end": 17960,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17945,
											"end": 17960,
											"name": "AND"
										},
										{
											"begin": 17945,
											"end": 17960,
											"name": "EQ"
										},
										{
											"begin": 17945,
											"end": 17960,
											"name": "ISZERO"
										},
										{
											"begin": 17926,
											"end": 17960,
											"name": "tag",
											"value": "323"
										},
										{
											"begin": 17926,
											"end": 17960,
											"name": "JUMPDEST"
										},
										{
											"begin": 17918,
											"end": 17983,
											"name": "PUSH [tag]",
											"value": "324"
										},
										{
											"begin": 17918,
											"end": 17983,
											"name": "JUMPI"
										},
										{
											"begin": 17918,
											"end": 17983,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17918,
											"end": 17983,
											"name": "MLOAD"
										},
										{
											"begin": 17918,
											"end": 17983,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17918,
											"end": 17983,
											"name": "DUP2"
										},
										{
											"begin": 17918,
											"end": 17983,
											"name": "MSTORE"
										},
										{
											"begin": 17918,
											"end": 17983,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 17918,
											"end": 17983,
											"name": "ADD"
										},
										{
											"begin": 17918,
											"end": 17983,
											"name": "DUP1"
										},
										{
											"begin": 17918,
											"end": 17983,
											"name": "DUP1"
										},
										{
											"begin": 17918,
											"end": 17983,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17918,
											"end": 17983,
											"name": "ADD"
										},
										{
											"begin": 17918,
											"end": 17983,
											"name": "DUP3"
										},
										{
											"begin": 17918,
											"end": 17983,
											"name": "DUP2"
										},
										{
											"begin": 17918,
											"end": 17983,
											"name": "SUB"
										},
										{
											"begin": 17918,
											"end": 17983,
											"name": "DUP3"
										},
										{
											"begin": 17918,
											"end": 17983,
											"name": "MSTORE"
										},
										{
											"begin": 17918,
											"end": 17983,
											"name": "PUSH",
											"value": "12"
										},
										{
											"begin": 17918,
											"end": 17983,
											"name": "DUP2"
										},
										{
											"begin": 17918,
											"end": 17983,
											"name": "MSTORE"
										},
										{
											"begin": 17918,
											"end": 17983,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17918,
											"end": 17983,
											"name": "ADD"
										},
										{
											"begin": 17918,
											"end": 17983,
											"name": "DUP1"
										},
										{
											"begin": 17918,
											"end": 17983,
											"name": "PUSH",
											"value": "31306B3A20696E76616C696420746F6B656E0000000000000000000000000000"
										},
										{
											"begin": 17918,
											"end": 17983,
											"name": "DUP2"
										},
										{
											"begin": 17918,
											"end": 17983,
											"name": "MSTORE"
										},
										{
											"begin": 17918,
											"end": 17983,
											"name": "POP"
										},
										{
											"begin": 17918,
											"end": 17983,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17918,
											"end": 17983,
											"name": "ADD"
										},
										{
											"begin": 17918,
											"end": 17983,
											"name": "SWAP2"
										},
										{
											"begin": 17918,
											"end": 17983,
											"name": "POP"
										},
										{
											"begin": 17918,
											"end": 17983,
											"name": "POP"
										},
										{
											"begin": 17918,
											"end": 17983,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17918,
											"end": 17983,
											"name": "MLOAD"
										},
										{
											"begin": 17918,
											"end": 17983,
											"name": "DUP1"
										},
										{
											"begin": 17918,
											"end": 17983,
											"name": "SWAP2"
										},
										{
											"begin": 17918,
											"end": 17983,
											"name": "SUB"
										},
										{
											"begin": 17918,
											"end": 17983,
											"name": "SWAP1"
										},
										{
											"begin": 17918,
											"end": 17983,
											"name": "REVERT"
										},
										{
											"begin": 17918,
											"end": 17983,
											"name": "tag",
											"value": "324"
										},
										{
											"begin": 17918,
											"end": 17983,
											"name": "JUMPDEST"
										},
										{
											"begin": 17990,
											"end": 18054,
											"name": "PUSH [tag]",
											"value": "325"
										},
										{
											"begin": 18004,
											"end": 18009,
											"name": "DUP3"
										},
										{
											"begin": 18011,
											"end": 18013,
											"name": "DUP3"
										},
										{
											"begin": 18022,
											"end": 18027,
											"name": "DUP5"
										},
										{
											"begin": 18015,
											"end": 18038,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18015,
											"end": 18038,
											"name": "AND"
										},
										{
											"begin": 18015,
											"end": 18038,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 18047,
											"end": 18051,
											"name": "ADDRESS"
										},
										{
											"begin": 18015,
											"end": 18053,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18015,
											"end": 18053,
											"name": "MLOAD"
										},
										{
											"begin": 18015,
											"end": 18053,
											"name": "DUP3"
										},
										{
											"begin": 18015,
											"end": 18053,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 18015,
											"end": 18053,
											"name": "AND"
										},
										{
											"begin": 18015,
											"end": 18053,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 18015,
											"end": 18053,
											"name": "SHL"
										},
										{
											"begin": 18015,
											"end": 18053,
											"name": "DUP2"
										},
										{
											"begin": 18015,
											"end": 18053,
											"name": "MSTORE"
										},
										{
											"begin": 18015,
											"end": 18053,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 18015,
											"end": 18053,
											"name": "ADD"
										},
										{
											"begin": 18015,
											"end": 18053,
											"name": "DUP1"
										},
										{
											"begin": 18015,
											"end": 18053,
											"name": "DUP3"
										},
										{
											"begin": 18015,
											"end": 18053,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18015,
											"end": 18053,
											"name": "AND"
										},
										{
											"begin": 18015,
											"end": 18053,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18015,
											"end": 18053,
											"name": "AND"
										},
										{
											"begin": 18015,
											"end": 18053,
											"name": "DUP2"
										},
										{
											"begin": 18015,
											"end": 18053,
											"name": "MSTORE"
										},
										{
											"begin": 18015,
											"end": 18053,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18015,
											"end": 18053,
											"name": "ADD"
										},
										{
											"begin": 18015,
											"end": 18053,
											"name": "SWAP2"
										},
										{
											"begin": 18015,
											"end": 18053,
											"name": "POP"
										},
										{
											"begin": 18015,
											"end": 18053,
											"name": "POP"
										},
										{
											"begin": 18015,
											"end": 18053,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18015,
											"end": 18053,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18015,
											"end": 18053,
											"name": "MLOAD"
										},
										{
											"begin": 18015,
											"end": 18053,
											"name": "DUP1"
										},
										{
											"begin": 18015,
											"end": 18053,
											"name": "DUP4"
										},
										{
											"begin": 18015,
											"end": 18053,
											"name": "SUB"
										},
										{
											"begin": 18015,
											"end": 18053,
											"name": "DUP2"
										},
										{
											"begin": 18015,
											"end": 18053,
											"name": "DUP7"
										},
										{
											"begin": 18015,
											"end": 18053,
											"name": "DUP1"
										},
										{
											"begin": 18015,
											"end": 18053,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 18015,
											"end": 18053,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "326"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "326"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 18015,
											"end": 18053,
											"name": "POP"
										},
										{
											"begin": 18015,
											"end": 18053,
											"name": "GAS"
										},
										{
											"begin": 18015,
											"end": 18053,
											"name": "STATICCALL"
										},
										{
											"begin": 18015,
											"end": 18053,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "327"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "327"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 18015,
											"end": 18053,
											"name": "POP"
										},
										{
											"begin": 18015,
											"end": 18053,
											"name": "POP"
										},
										{
											"begin": 18015,
											"end": 18053,
											"name": "POP"
										},
										{
											"begin": 18015,
											"end": 18053,
											"name": "POP"
										},
										{
											"begin": 18015,
											"end": 18053,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18015,
											"end": 18053,
											"name": "MLOAD"
										},
										{
											"begin": 18015,
											"end": 18053,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "328"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "328"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 18015,
											"end": 18053,
											"name": "DUP2"
										},
										{
											"begin": 18015,
											"end": 18053,
											"name": "ADD"
										},
										{
											"begin": 18015,
											"end": 18053,
											"name": "SWAP1"
										},
										{
											"begin": 18015,
											"end": 18053,
											"name": "DUP1"
										},
										{
											"begin": 18015,
											"end": 18053,
											"name": "DUP1"
										},
										{
											"begin": 18015,
											"end": 18053,
											"name": "MLOAD"
										},
										{
											"begin": 18015,
											"end": 18053,
											"name": "SWAP1"
										},
										{
											"begin": 18015,
											"end": 18053,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18015,
											"end": 18053,
											"name": "ADD"
										},
										{
											"begin": 18015,
											"end": 18053,
											"name": "SWAP1"
										},
										{
											"begin": 18015,
											"end": 18053,
											"name": "SWAP3"
										},
										{
											"begin": 18015,
											"end": 18053,
											"name": "SWAP2"
										},
										{
											"begin": 18015,
											"end": 18053,
											"name": "SWAP1"
										},
										{
											"begin": 18015,
											"end": 18053,
											"name": "POP"
										},
										{
											"begin": 18015,
											"end": 18053,
											"name": "POP"
										},
										{
											"begin": 18015,
											"end": 18053,
											"name": "POP"
										},
										{
											"begin": 17990,
											"end": 18003,
											"name": "PUSH [tag]",
											"value": "279"
										},
										{
											"begin": 17990,
											"end": 18054,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 17990,
											"end": 18054,
											"name": "tag",
											"value": "325"
										},
										{
											"begin": 17990,
											"end": 18054,
											"name": "JUMPDEST"
										},
										{
											"begin": 18082,
											"end": 18087,
											"name": "DUP2"
										},
										{
											"begin": 18066,
											"end": 18092,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18066,
											"end": 18092,
											"name": "AND"
										},
										{
											"begin": 18066,
											"end": 18092,
											"name": "PUSH",
											"value": "368A9DC863ECB94B5BA32A682E26295B10D9C2666FAD7D785EBDF262C3C52413"
										},
										{
											"begin": 18089,
											"end": 18091,
											"name": "DUP3"
										},
										{
											"begin": 18066,
											"end": 18092,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18066,
											"end": 18092,
											"name": "MLOAD"
										},
										{
											"begin": 18066,
											"end": 18092,
											"name": "DUP1"
										},
										{
											"begin": 18066,
											"end": 18092,
											"name": "DUP3"
										},
										{
											"begin": 18066,
											"end": 18092,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18066,
											"end": 18092,
											"name": "AND"
										},
										{
											"begin": 18066,
											"end": 18092,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18066,
											"end": 18092,
											"name": "AND"
										},
										{
											"begin": 18066,
											"end": 18092,
											"name": "DUP2"
										},
										{
											"begin": 18066,
											"end": 18092,
											"name": "MSTORE"
										},
										{
											"begin": 18066,
											"end": 18092,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18066,
											"end": 18092,
											"name": "ADD"
										},
										{
											"begin": 18066,
											"end": 18092,
											"name": "SWAP2"
										},
										{
											"begin": 18066,
											"end": 18092,
											"name": "POP"
										},
										{
											"begin": 18066,
											"end": 18092,
											"name": "POP"
										},
										{
											"begin": 18066,
											"end": 18092,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18066,
											"end": 18092,
											"name": "MLOAD"
										},
										{
											"begin": 18066,
											"end": 18092,
											"name": "DUP1"
										},
										{
											"begin": 18066,
											"end": 18092,
											"name": "SWAP2"
										},
										{
											"begin": 18066,
											"end": 18092,
											"name": "SUB"
										},
										{
											"begin": 18066,
											"end": 18092,
											"name": "SWAP1"
										},
										{
											"begin": 18066,
											"end": 18092,
											"name": "LOG2"
										},
										{
											"begin": 1631,
											"end": 1632,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1620,
											"end": 1628,
											"name": "PUSH",
											"value": "D"
										},
										{
											"begin": 1620,
											"end": 1632,
											"name": "DUP2"
										},
										{
											"begin": 1620,
											"end": 1632,
											"name": "SWAP1"
										},
										{
											"begin": 1620,
											"end": 1632,
											"name": "SSTORE"
										},
										{
											"begin": 1620,
											"end": 1632,
											"name": "POP"
										},
										{
											"begin": 17752,
											"end": 18098,
											"name": "POP"
										},
										{
											"begin": 17752,
											"end": 18098,
											"name": "POP"
										},
										{
											"begin": 17752,
											"end": 18098,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 17321,
											"end": 17631,
											"name": "tag",
											"value": "160"
										},
										{
											"begin": 17321,
											"end": 17631,
											"name": "JUMPDEST"
										},
										{
											"begin": 1569,
											"end": 1570,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1557,
											"end": 1565,
											"name": "PUSH",
											"value": "D"
										},
										{
											"begin": 1557,
											"end": 1565,
											"name": "SLOAD"
										},
										{
											"begin": 1557,
											"end": 1570,
											"name": "EQ"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "PUSH [tag]",
											"value": "330"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "JUMPI"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "MLOAD"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "DUP2"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "MSTORE"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "ADD"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "DUP1"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "DUP1"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "ADD"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "DUP3"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "DUP2"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "SUB"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "DUP3"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "MSTORE"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "PUSH",
											"value": "B"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "DUP2"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "MSTORE"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "ADD"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "DUP1"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "PUSH",
											"value": "31306B3A204C4F434B4544000000000000000000000000000000000000000000"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "DUP2"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "MSTORE"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "POP"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "ADD"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "SWAP2"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "POP"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "POP"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "MLOAD"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "DUP1"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "SWAP2"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "SUB"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "SWAP1"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "REVERT"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "tag",
											"value": "330"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "JUMPDEST"
										},
										{
											"begin": 1604,
											"end": 1605,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1593,
											"end": 1601,
											"name": "PUSH",
											"value": "D"
										},
										{
											"begin": 1593,
											"end": 1605,
											"name": "DUP2"
										},
										{
											"begin": 1593,
											"end": 1605,
											"name": "SWAP1"
										},
										{
											"begin": 1593,
											"end": 1605,
											"name": "SSTORE"
										},
										{
											"begin": 1593,
											"end": 1605,
											"name": "POP"
										},
										{
											"begin": 17358,
											"end": 17376,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 17386,
											"end": 17392,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 17386,
											"end": 17392,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 17386,
											"end": 17392,
											"name": "SWAP1"
										},
										{
											"begin": 17386,
											"end": 17392,
											"name": "SLOAD"
										},
										{
											"begin": 17386,
											"end": 17392,
											"name": "SWAP1"
										},
										{
											"begin": 17386,
											"end": 17392,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 17386,
											"end": 17392,
											"name": "EXP"
										},
										{
											"begin": 17386,
											"end": 17392,
											"name": "SWAP1"
										},
										{
											"begin": 17386,
											"end": 17392,
											"name": "DIV"
										},
										{
											"begin": 17386,
											"end": 17392,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17386,
											"end": 17392,
											"name": "AND"
										},
										{
											"begin": 17379,
											"end": 17403,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17379,
											"end": 17403,
											"name": "AND"
										},
										{
											"begin": 17379,
											"end": 17403,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 17412,
											"end": 17416,
											"name": "ADDRESS"
										},
										{
											"begin": 17379,
											"end": 17418,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17379,
											"end": 17418,
											"name": "MLOAD"
										},
										{
											"begin": 17379,
											"end": 17418,
											"name": "DUP3"
										},
										{
											"begin": 17379,
											"end": 17418,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 17379,
											"end": 17418,
											"name": "AND"
										},
										{
											"begin": 17379,
											"end": 17418,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 17379,
											"end": 17418,
											"name": "SHL"
										},
										{
											"begin": 17379,
											"end": 17418,
											"name": "DUP2"
										},
										{
											"begin": 17379,
											"end": 17418,
											"name": "MSTORE"
										},
										{
											"begin": 17379,
											"end": 17418,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 17379,
											"end": 17418,
											"name": "ADD"
										},
										{
											"begin": 17379,
											"end": 17418,
											"name": "DUP1"
										},
										{
											"begin": 17379,
											"end": 17418,
											"name": "DUP3"
										},
										{
											"begin": 17379,
											"end": 17418,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17379,
											"end": 17418,
											"name": "AND"
										},
										{
											"begin": 17379,
											"end": 17418,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17379,
											"end": 17418,
											"name": "AND"
										},
										{
											"begin": 17379,
											"end": 17418,
											"name": "DUP2"
										},
										{
											"begin": 17379,
											"end": 17418,
											"name": "MSTORE"
										},
										{
											"begin": 17379,
											"end": 17418,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17379,
											"end": 17418,
											"name": "ADD"
										},
										{
											"begin": 17379,
											"end": 17418,
											"name": "SWAP2"
										},
										{
											"begin": 17379,
											"end": 17418,
											"name": "POP"
										},
										{
											"begin": 17379,
											"end": 17418,
											"name": "POP"
										},
										{
											"begin": 17379,
											"end": 17418,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17379,
											"end": 17418,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17379,
											"end": 17418,
											"name": "MLOAD"
										},
										{
											"begin": 17379,
											"end": 17418,
											"name": "DUP1"
										},
										{
											"begin": 17379,
											"end": 17418,
											"name": "DUP4"
										},
										{
											"begin": 17379,
											"end": 17418,
											"name": "SUB"
										},
										{
											"begin": 17379,
											"end": 17418,
											"name": "DUP2"
										},
										{
											"begin": 17379,
											"end": 17418,
											"name": "DUP7"
										},
										{
											"begin": 17379,
											"end": 17418,
											"name": "DUP1"
										},
										{
											"begin": 17379,
											"end": 17418,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 17379,
											"end": 17418,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "332"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "332"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 17379,
											"end": 17418,
											"name": "POP"
										},
										{
											"begin": 17379,
											"end": 17418,
											"name": "GAS"
										},
										{
											"begin": 17379,
											"end": 17418,
											"name": "STATICCALL"
										},
										{
											"begin": 17379,
											"end": 17418,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "333"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "333"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 17379,
											"end": 17418,
											"name": "POP"
										},
										{
											"begin": 17379,
											"end": 17418,
											"name": "POP"
										},
										{
											"begin": 17379,
											"end": 17418,
											"name": "POP"
										},
										{
											"begin": 17379,
											"end": 17418,
											"name": "POP"
										},
										{
											"begin": 17379,
											"end": 17418,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17379,
											"end": 17418,
											"name": "MLOAD"
										},
										{
											"begin": 17379,
											"end": 17418,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "334"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "334"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 17379,
											"end": 17418,
											"name": "DUP2"
										},
										{
											"begin": 17379,
											"end": 17418,
											"name": "ADD"
										},
										{
											"begin": 17379,
											"end": 17418,
											"name": "SWAP1"
										},
										{
											"begin": 17379,
											"end": 17418,
											"name": "DUP1"
										},
										{
											"begin": 17379,
											"end": 17418,
											"name": "DUP1"
										},
										{
											"begin": 17379,
											"end": 17418,
											"name": "MLOAD"
										},
										{
											"begin": 17379,
											"end": 17418,
											"name": "SWAP1"
										},
										{
											"begin": 17379,
											"end": 17418,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17379,
											"end": 17418,
											"name": "ADD"
										},
										{
											"begin": 17379,
											"end": 17418,
											"name": "SWAP1"
										},
										{
											"begin": 17379,
											"end": 17418,
											"name": "SWAP3"
										},
										{
											"begin": 17379,
											"end": 17418,
											"name": "SWAP2"
										},
										{
											"begin": 17379,
											"end": 17418,
											"name": "SWAP1"
										},
										{
											"begin": 17379,
											"end": 17418,
											"name": "POP"
										},
										{
											"begin": 17379,
											"end": 17418,
											"name": "POP"
										},
										{
											"begin": 17379,
											"end": 17418,
											"name": "POP"
										},
										{
											"begin": 17358,
											"end": 17418,
											"name": "SWAP1"
										},
										{
											"begin": 17358,
											"end": 17418,
											"name": "POP"
										},
										{
											"begin": 17425,
											"end": 17443,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 17453,
											"end": 17459,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 17453,
											"end": 17459,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 17453,
											"end": 17459,
											"name": "SWAP1"
										},
										{
											"begin": 17453,
											"end": 17459,
											"name": "SLOAD"
										},
										{
											"begin": 17453,
											"end": 17459,
											"name": "SWAP1"
										},
										{
											"begin": 17453,
											"end": 17459,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 17453,
											"end": 17459,
											"name": "EXP"
										},
										{
											"begin": 17453,
											"end": 17459,
											"name": "SWAP1"
										},
										{
											"begin": 17453,
											"end": 17459,
											"name": "DIV"
										},
										{
											"begin": 17453,
											"end": 17459,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17453,
											"end": 17459,
											"name": "AND"
										},
										{
											"begin": 17446,
											"end": 17470,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17446,
											"end": 17470,
											"name": "AND"
										},
										{
											"begin": 17446,
											"end": 17470,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 17479,
											"end": 17483,
											"name": "ADDRESS"
										},
										{
											"begin": 17446,
											"end": 17485,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17446,
											"end": 17485,
											"name": "MLOAD"
										},
										{
											"begin": 17446,
											"end": 17485,
											"name": "DUP3"
										},
										{
											"begin": 17446,
											"end": 17485,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 17446,
											"end": 17485,
											"name": "AND"
										},
										{
											"begin": 17446,
											"end": 17485,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 17446,
											"end": 17485,
											"name": "SHL"
										},
										{
											"begin": 17446,
											"end": 17485,
											"name": "DUP2"
										},
										{
											"begin": 17446,
											"end": 17485,
											"name": "MSTORE"
										},
										{
											"begin": 17446,
											"end": 17485,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 17446,
											"end": 17485,
											"name": "ADD"
										},
										{
											"begin": 17446,
											"end": 17485,
											"name": "DUP1"
										},
										{
											"begin": 17446,
											"end": 17485,
											"name": "DUP3"
										},
										{
											"begin": 17446,
											"end": 17485,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17446,
											"end": 17485,
											"name": "AND"
										},
										{
											"begin": 17446,
											"end": 17485,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17446,
											"end": 17485,
											"name": "AND"
										},
										{
											"begin": 17446,
											"end": 17485,
											"name": "DUP2"
										},
										{
											"begin": 17446,
											"end": 17485,
											"name": "MSTORE"
										},
										{
											"begin": 17446,
											"end": 17485,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17446,
											"end": 17485,
											"name": "ADD"
										},
										{
											"begin": 17446,
											"end": 17485,
											"name": "SWAP2"
										},
										{
											"begin": 17446,
											"end": 17485,
											"name": "POP"
										},
										{
											"begin": 17446,
											"end": 17485,
											"name": "POP"
										},
										{
											"begin": 17446,
											"end": 17485,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17446,
											"end": 17485,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17446,
											"end": 17485,
											"name": "MLOAD"
										},
										{
											"begin": 17446,
											"end": 17485,
											"name": "DUP1"
										},
										{
											"begin": 17446,
											"end": 17485,
											"name": "DUP4"
										},
										{
											"begin": 17446,
											"end": 17485,
											"name": "SUB"
										},
										{
											"begin": 17446,
											"end": 17485,
											"name": "DUP2"
										},
										{
											"begin": 17446,
											"end": 17485,
											"name": "DUP7"
										},
										{
											"begin": 17446,
											"end": 17485,
											"name": "DUP1"
										},
										{
											"begin": 17446,
											"end": 17485,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 17446,
											"end": 17485,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "335"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "335"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 17446,
											"end": 17485,
											"name": "POP"
										},
										{
											"begin": 17446,
											"end": 17485,
											"name": "GAS"
										},
										{
											"begin": 17446,
											"end": 17485,
											"name": "STATICCALL"
										},
										{
											"begin": 17446,
											"end": 17485,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "336"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "336"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 17446,
											"end": 17485,
											"name": "POP"
										},
										{
											"begin": 17446,
											"end": 17485,
											"name": "POP"
										},
										{
											"begin": 17446,
											"end": 17485,
											"name": "POP"
										},
										{
											"begin": 17446,
											"end": 17485,
											"name": "POP"
										},
										{
											"begin": 17446,
											"end": 17485,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17446,
											"end": 17485,
											"name": "MLOAD"
										},
										{
											"begin": 17446,
											"end": 17485,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "337"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "337"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 17446,
											"end": 17485,
											"name": "DUP2"
										},
										{
											"begin": 17446,
											"end": 17485,
											"name": "ADD"
										},
										{
											"begin": 17446,
											"end": 17485,
											"name": "SWAP1"
										},
										{
											"begin": 17446,
											"end": 17485,
											"name": "DUP1"
										},
										{
											"begin": 17446,
											"end": 17485,
											"name": "DUP1"
										},
										{
											"begin": 17446,
											"end": 17485,
											"name": "MLOAD"
										},
										{
											"begin": 17446,
											"end": 17485,
											"name": "SWAP1"
										},
										{
											"begin": 17446,
											"end": 17485,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17446,
											"end": 17485,
											"name": "ADD"
										},
										{
											"begin": 17446,
											"end": 17485,
											"name": "SWAP1"
										},
										{
											"begin": 17446,
											"end": 17485,
											"name": "SWAP3"
										},
										{
											"begin": 17446,
											"end": 17485,
											"name": "SWAP2"
										},
										{
											"begin": 17446,
											"end": 17485,
											"name": "SWAP1"
										},
										{
											"begin": 17446,
											"end": 17485,
											"name": "POP"
										},
										{
											"begin": 17446,
											"end": 17485,
											"name": "POP"
										},
										{
											"begin": 17446,
											"end": 17485,
											"name": "POP"
										},
										{
											"begin": 17425,
											"end": 17485,
											"name": "SWAP1"
										},
										{
											"begin": 17425,
											"end": 17485,
											"name": "POP"
										},
										{
											"begin": 17517,
											"end": 17518,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 17500,
											"end": 17513,
											"name": "DUP3"
										},
										{
											"begin": 17500,
											"end": 17518,
											"name": "EQ"
										},
										{
											"begin": 17500,
											"end": 17518,
											"name": "ISZERO"
										},
										{
											"begin": 17500,
											"end": 17540,
											"name": "DUP1"
										},
										{
											"begin": 17500,
											"end": 17540,
											"name": "ISZERO"
										},
										{
											"begin": 17500,
											"end": 17540,
											"name": "PUSH [tag]",
											"value": "338"
										},
										{
											"begin": 17500,
											"end": 17540,
											"name": "JUMPI"
										},
										{
											"begin": 17500,
											"end": 17540,
											"name": "POP"
										},
										{
											"begin": 17539,
											"end": 17540,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 17522,
											"end": 17535,
											"name": "DUP2"
										},
										{
											"begin": 17522,
											"end": 17540,
											"name": "EQ"
										},
										{
											"begin": 17522,
											"end": 17540,
											"name": "ISZERO"
										},
										{
											"begin": 17500,
											"end": 17540,
											"name": "tag",
											"value": "338"
										},
										{
											"begin": 17500,
											"end": 17540,
											"name": "JUMPDEST"
										},
										{
											"begin": 17492,
											"end": 17581,
											"name": "PUSH [tag]",
											"value": "339"
										},
										{
											"begin": 17492,
											"end": 17581,
											"name": "JUMPI"
										},
										{
											"begin": 17492,
											"end": 17581,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17492,
											"end": 17581,
											"name": "MLOAD"
										},
										{
											"begin": 17492,
											"end": 17581,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17492,
											"end": 17581,
											"name": "DUP2"
										},
										{
											"begin": 17492,
											"end": 17581,
											"name": "MSTORE"
										},
										{
											"begin": 17492,
											"end": 17581,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 17492,
											"end": 17581,
											"name": "ADD"
										},
										{
											"begin": 17492,
											"end": 17581,
											"name": "DUP1"
										},
										{
											"begin": 17492,
											"end": 17581,
											"name": "DUP1"
										},
										{
											"begin": 17492,
											"end": 17581,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17492,
											"end": 17581,
											"name": "ADD"
										},
										{
											"begin": 17492,
											"end": 17581,
											"name": "DUP3"
										},
										{
											"begin": 17492,
											"end": 17581,
											"name": "DUP2"
										},
										{
											"begin": 17492,
											"end": 17581,
											"name": "SUB"
										},
										{
											"begin": 17492,
											"end": 17581,
											"name": "DUP3"
										},
										{
											"begin": 17492,
											"end": 17581,
											"name": "MSTORE"
										},
										{
											"begin": 17492,
											"end": 17581,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 17492,
											"end": 17581,
											"name": "DUP2"
										},
										{
											"begin": 17492,
											"end": 17581,
											"name": "MSTORE"
										},
										{
											"begin": 17492,
											"end": 17581,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17492,
											"end": 17581,
											"name": "ADD"
										},
										{
											"begin": 17492,
											"end": 17581,
											"name": "DUP1"
										},
										{
											"begin": 17492,
											"end": 17581,
											"name": "PUSH data",
											"value": "A8F5B5742EA4F6D77E3DDEADE1D79A13F37F3B0B50626B04C2C56458D8D3D5C7"
										},
										{
											"begin": 17492,
											"end": 17581,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 17492,
											"end": 17581,
											"name": "SWAP2"
										},
										{
											"begin": 17492,
											"end": 17581,
											"name": "CODECOPY"
										},
										{
											"begin": 17492,
											"end": 17581,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17492,
											"end": 17581,
											"name": "ADD"
										},
										{
											"begin": 17492,
											"end": 17581,
											"name": "SWAP2"
										},
										{
											"begin": 17492,
											"end": 17581,
											"name": "POP"
										},
										{
											"begin": 17492,
											"end": 17581,
											"name": "POP"
										},
										{
											"begin": 17492,
											"end": 17581,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17492,
											"end": 17581,
											"name": "MLOAD"
										},
										{
											"begin": 17492,
											"end": 17581,
											"name": "DUP1"
										},
										{
											"begin": 17492,
											"end": 17581,
											"name": "SWAP2"
										},
										{
											"begin": 17492,
											"end": 17581,
											"name": "SUB"
										},
										{
											"begin": 17492,
											"end": 17581,
											"name": "SWAP1"
										},
										{
											"begin": 17492,
											"end": 17581,
											"name": "REVERT"
										},
										{
											"begin": 17492,
											"end": 17581,
											"name": "tag",
											"value": "339"
										},
										{
											"begin": 17492,
											"end": 17581,
											"name": "JUMPDEST"
										},
										{
											"begin": 17588,
											"end": 17625,
											"name": "PUSH [tag]",
											"value": "340"
										},
										{
											"begin": 17596,
											"end": 17609,
											"name": "DUP3"
										},
										{
											"begin": 17611,
											"end": 17624,
											"name": "DUP3"
										},
										{
											"begin": 17588,
											"end": 17595,
											"name": "PUSH [tag]",
											"value": "253"
										},
										{
											"begin": 17588,
											"end": 17625,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 17588,
											"end": 17625,
											"name": "tag",
											"value": "340"
										},
										{
											"begin": 17588,
											"end": 17625,
											"name": "JUMPDEST"
										},
										{
											"begin": 1612,
											"end": 1613,
											"name": "POP"
										},
										{
											"begin": 1612,
											"end": 1613,
											"name": "POP"
										},
										{
											"begin": 1631,
											"end": 1632,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1620,
											"end": 1628,
											"name": "PUSH",
											"value": "D"
										},
										{
											"begin": 1620,
											"end": 1632,
											"name": "DUP2"
										},
										{
											"begin": 1620,
											"end": 1632,
											"name": "SWAP1"
										},
										{
											"begin": 1620,
											"end": 1632,
											"name": "SSTORE"
										},
										{
											"begin": 1620,
											"end": 1632,
											"name": "POP"
										},
										{
											"begin": 17321,
											"end": 17631,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 10205,
											"end": 14219,
											"name": "tag",
											"value": "165"
										},
										{
											"begin": 10205,
											"end": 14219,
											"name": "JUMPDEST"
										},
										{
											"begin": 1569,
											"end": 1570,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1557,
											"end": 1565,
											"name": "PUSH",
											"value": "D"
										},
										{
											"begin": 1557,
											"end": 1565,
											"name": "SLOAD"
										},
										{
											"begin": 1557,
											"end": 1570,
											"name": "EQ"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "PUSH [tag]",
											"value": "342"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "JUMPI"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "MLOAD"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "DUP2"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "MSTORE"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "ADD"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "DUP1"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "DUP1"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "ADD"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "DUP3"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "DUP2"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "SUB"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "DUP3"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "MSTORE"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "PUSH",
											"value": "B"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "DUP2"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "MSTORE"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "ADD"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "DUP1"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "PUSH",
											"value": "31306B3A204C4F434B4544000000000000000000000000000000000000000000"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "DUP2"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "MSTORE"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "POP"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "ADD"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "SWAP2"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "POP"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "POP"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "MLOAD"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "DUP1"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "SWAP2"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "SUB"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "SWAP1"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "REVERT"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "tag",
											"value": "342"
										},
										{
											"begin": 1549,
											"end": 1586,
											"name": "JUMPDEST"
										},
										{
											"begin": 1604,
											"end": 1605,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1593,
											"end": 1601,
											"name": "PUSH",
											"value": "D"
										},
										{
											"begin": 1593,
											"end": 1605,
											"name": "DUP2"
										},
										{
											"begin": 1593,
											"end": 1605,
											"name": "SWAP1"
										},
										{
											"begin": 1593,
											"end": 1605,
											"name": "SSTORE"
										},
										{
											"begin": 1593,
											"end": 1605,
											"name": "POP"
										},
										{
											"begin": 10352,
											"end": 10353,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10328,
											"end": 10338,
											"name": "DUP5"
										},
										{
											"begin": 10328,
											"end": 10349,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10328,
											"end": 10349,
											"name": "ADD"
										},
										{
											"begin": 10328,
											"end": 10349,
											"name": "MLOAD"
										},
										{
											"begin": 10328,
											"end": 10353,
											"name": "GT"
										},
										{
											"begin": 10328,
											"end": 10382,
											"name": "DUP1"
										},
										{
											"begin": 10328,
											"end": 10382,
											"name": "PUSH [tag]",
											"value": "344"
										},
										{
											"begin": 10328,
											"end": 10382,
											"name": "JUMPI"
										},
										{
											"begin": 10328,
											"end": 10382,
											"name": "POP"
										},
										{
											"begin": 10381,
											"end": 10382,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10357,
											"end": 10367,
											"name": "DUP5"
										},
										{
											"begin": 10357,
											"end": 10378,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 10357,
											"end": 10378,
											"name": "ADD"
										},
										{
											"begin": 10357,
											"end": 10378,
											"name": "MLOAD"
										},
										{
											"begin": 10357,
											"end": 10382,
											"name": "GT"
										},
										{
											"begin": 10328,
											"end": 10382,
											"name": "tag",
											"value": "344"
										},
										{
											"begin": 10328,
											"end": 10382,
											"name": "JUMPDEST"
										},
										{
											"begin": 10320,
											"end": 10418,
											"name": "PUSH [tag]",
											"value": "345"
										},
										{
											"begin": 10320,
											"end": 10418,
											"name": "JUMPI"
										},
										{
											"begin": 10320,
											"end": 10418,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10320,
											"end": 10418,
											"name": "MLOAD"
										},
										{
											"begin": 10320,
											"end": 10418,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10320,
											"end": 10418,
											"name": "DUP2"
										},
										{
											"begin": 10320,
											"end": 10418,
											"name": "MSTORE"
										},
										{
											"begin": 10320,
											"end": 10418,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 10320,
											"end": 10418,
											"name": "ADD"
										},
										{
											"begin": 10320,
											"end": 10418,
											"name": "DUP1"
										},
										{
											"begin": 10320,
											"end": 10418,
											"name": "DUP1"
										},
										{
											"begin": 10320,
											"end": 10418,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10320,
											"end": 10418,
											"name": "ADD"
										},
										{
											"begin": 10320,
											"end": 10418,
											"name": "DUP3"
										},
										{
											"begin": 10320,
											"end": 10418,
											"name": "DUP2"
										},
										{
											"begin": 10320,
											"end": 10418,
											"name": "SUB"
										},
										{
											"begin": 10320,
											"end": 10418,
											"name": "DUP3"
										},
										{
											"begin": 10320,
											"end": 10418,
											"name": "MSTORE"
										},
										{
											"begin": 10320,
											"end": 10418,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 10320,
											"end": 10418,
											"name": "DUP2"
										},
										{
											"begin": 10320,
											"end": 10418,
											"name": "MSTORE"
										},
										{
											"begin": 10320,
											"end": 10418,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10320,
											"end": 10418,
											"name": "ADD"
										},
										{
											"begin": 10320,
											"end": 10418,
											"name": "DUP1"
										},
										{
											"begin": 10320,
											"end": 10418,
											"name": "PUSH",
											"value": "31306B3A20494E53554646494349454E545F4F55545055545F414D4F554E5400"
										},
										{
											"begin": 10320,
											"end": 10418,
											"name": "DUP2"
										},
										{
											"begin": 10320,
											"end": 10418,
											"name": "MSTORE"
										},
										{
											"begin": 10320,
											"end": 10418,
											"name": "POP"
										},
										{
											"begin": 10320,
											"end": 10418,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10320,
											"end": 10418,
											"name": "ADD"
										},
										{
											"begin": 10320,
											"end": 10418,
											"name": "SWAP2"
										},
										{
											"begin": 10320,
											"end": 10418,
											"name": "POP"
										},
										{
											"begin": 10320,
											"end": 10418,
											"name": "POP"
										},
										{
											"begin": 10320,
											"end": 10418,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10320,
											"end": 10418,
											"name": "MLOAD"
										},
										{
											"begin": 10320,
											"end": 10418,
											"name": "DUP1"
										},
										{
											"begin": 10320,
											"end": 10418,
											"name": "SWAP2"
										},
										{
											"begin": 10320,
											"end": 10418,
											"name": "SUB"
										},
										{
											"begin": 10320,
											"end": 10418,
											"name": "SWAP1"
										},
										{
											"begin": 10320,
											"end": 10418,
											"name": "REVERT"
										},
										{
											"begin": 10320,
											"end": 10418,
											"name": "tag",
											"value": "345"
										},
										{
											"begin": 10320,
											"end": 10418,
											"name": "JUMPDEST"
										},
										{
											"begin": 10428,
											"end": 10445,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10447,
											"end": 10464,
											"name": "DUP1"
										},
										{
											"begin": 10466,
											"end": 10490,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10492,
											"end": 10516,
											"name": "DUP1"
										},
										{
											"begin": 10520,
											"end": 10533,
											"name": "PUSH [tag]",
											"value": "346"
										},
										{
											"begin": 10520,
											"end": 10531,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 10520,
											"end": 10533,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 10520,
											"end": 10533,
											"name": "tag",
											"value": "346"
										},
										{
											"begin": 10520,
											"end": 10533,
											"name": "JUMPDEST"
										},
										{
											"begin": 10427,
											"end": 10533,
											"name": "SWAP4"
										},
										{
											"begin": 10427,
											"end": 10533,
											"name": "POP"
										},
										{
											"begin": 10427,
											"end": 10533,
											"name": "SWAP4"
										},
										{
											"begin": 10427,
											"end": 10533,
											"name": "POP"
										},
										{
											"begin": 10427,
											"end": 10533,
											"name": "SWAP4"
										},
										{
											"begin": 10427,
											"end": 10533,
											"name": "POP"
										},
										{
											"begin": 10427,
											"end": 10533,
											"name": "SWAP4"
										},
										{
											"begin": 10427,
											"end": 10533,
											"name": "POP"
										},
										{
											"begin": 10572,
											"end": 10581,
											"name": "DUP4"
										},
										{
											"begin": 10548,
											"end": 10581,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10548,
											"end": 10581,
											"name": "AND"
										},
										{
											"begin": 10548,
											"end": 10558,
											"name": "DUP9"
										},
										{
											"begin": 10548,
											"end": 10569,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10548,
											"end": 10569,
											"name": "ADD"
										},
										{
											"begin": 10548,
											"end": 10569,
											"name": "MLOAD"
										},
										{
											"begin": 10548,
											"end": 10581,
											"name": "LT"
										},
										{
											"begin": 10548,
											"end": 10618,
											"name": "DUP1"
										},
										{
											"begin": 10548,
											"end": 10618,
											"name": "ISZERO"
										},
										{
											"begin": 10548,
											"end": 10618,
											"name": "PUSH [tag]",
											"value": "347"
										},
										{
											"begin": 10548,
											"end": 10618,
											"name": "JUMPI"
										},
										{
											"begin": 10548,
											"end": 10618,
											"name": "POP"
										},
										{
											"begin": 10609,
											"end": 10618,
											"name": "DUP3"
										},
										{
											"begin": 10585,
											"end": 10618,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10585,
											"end": 10618,
											"name": "AND"
										},
										{
											"begin": 10585,
											"end": 10595,
											"name": "DUP9"
										},
										{
											"begin": 10585,
											"end": 10606,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 10585,
											"end": 10606,
											"name": "ADD"
										},
										{
											"begin": 10585,
											"end": 10606,
											"name": "MLOAD"
										},
										{
											"begin": 10585,
											"end": 10618,
											"name": "LT"
										},
										{
											"begin": 10548,
											"end": 10618,
											"name": "tag",
											"value": "347"
										},
										{
											"begin": 10548,
											"end": 10618,
											"name": "JUMPDEST"
										},
										{
											"begin": 10540,
											"end": 10650,
											"name": "PUSH [tag]",
											"value": "348"
										},
										{
											"begin": 10540,
											"end": 10650,
											"name": "JUMPI"
										},
										{
											"begin": 10540,
											"end": 10650,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10540,
											"end": 10650,
											"name": "MLOAD"
										},
										{
											"begin": 10540,
											"end": 10650,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10540,
											"end": 10650,
											"name": "DUP2"
										},
										{
											"begin": 10540,
											"end": 10650,
											"name": "MSTORE"
										},
										{
											"begin": 10540,
											"end": 10650,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 10540,
											"end": 10650,
											"name": "ADD"
										},
										{
											"begin": 10540,
											"end": 10650,
											"name": "DUP1"
										},
										{
											"begin": 10540,
											"end": 10650,
											"name": "DUP1"
										},
										{
											"begin": 10540,
											"end": 10650,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10540,
											"end": 10650,
											"name": "ADD"
										},
										{
											"begin": 10540,
											"end": 10650,
											"name": "DUP3"
										},
										{
											"begin": 10540,
											"end": 10650,
											"name": "DUP2"
										},
										{
											"begin": 10540,
											"end": 10650,
											"name": "SUB"
										},
										{
											"begin": 10540,
											"end": 10650,
											"name": "DUP3"
										},
										{
											"begin": 10540,
											"end": 10650,
											"name": "MSTORE"
										},
										{
											"begin": 10540,
											"end": 10650,
											"name": "PUSH",
											"value": "1B"
										},
										{
											"begin": 10540,
											"end": 10650,
											"name": "DUP2"
										},
										{
											"begin": 10540,
											"end": 10650,
											"name": "MSTORE"
										},
										{
											"begin": 10540,
											"end": 10650,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10540,
											"end": 10650,
											"name": "ADD"
										},
										{
											"begin": 10540,
											"end": 10650,
											"name": "DUP1"
										},
										{
											"begin": 10540,
											"end": 10650,
											"name": "PUSH",
											"value": "31306B3A20494E53554646494349454E545F4C49515549444954590000000000"
										},
										{
											"begin": 10540,
											"end": 10650,
											"name": "DUP2"
										},
										{
											"begin": 10540,
											"end": 10650,
											"name": "MSTORE"
										},
										{
											"begin": 10540,
											"end": 10650,
											"name": "POP"
										},
										{
											"begin": 10540,
											"end": 10650,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10540,
											"end": 10650,
											"name": "ADD"
										},
										{
											"begin": 10540,
											"end": 10650,
											"name": "SWAP2"
										},
										{
											"begin": 10540,
											"end": 10650,
											"name": "POP"
										},
										{
											"begin": 10540,
											"end": 10650,
											"name": "POP"
										},
										{
											"begin": 10540,
											"end": 10650,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10540,
											"end": 10650,
											"name": "MLOAD"
										},
										{
											"begin": 10540,
											"end": 10650,
											"name": "DUP1"
										},
										{
											"begin": 10540,
											"end": 10650,
											"name": "SWAP2"
										},
										{
											"begin": 10540,
											"end": 10650,
											"name": "SUB"
										},
										{
											"begin": 10540,
											"end": 10650,
											"name": "SWAP1"
										},
										{
											"begin": 10540,
											"end": 10650,
											"name": "REVERT"
										},
										{
											"begin": 10540,
											"end": 10650,
											"name": "tag",
											"value": "348"
										},
										{
											"begin": 10540,
											"end": 10650,
											"name": "JUMPDEST"
										},
										{
											"begin": 10684,
											"end": 10694,
											"name": "DUP8"
										},
										{
											"begin": 10684,
											"end": 10701,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10684,
											"end": 10701,
											"name": "ADD"
										},
										{
											"begin": 10684,
											"end": 10701,
											"name": "MLOAD"
										},
										{
											"begin": 10678,
											"end": 10701,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10678,
											"end": 10701,
											"name": "AND"
										},
										{
											"begin": 10678,
											"end": 10680,
											"name": "DUP8"
										},
										{
											"begin": 10678,
											"end": 10701,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10678,
											"end": 10701,
											"name": "AND"
										},
										{
											"begin": 10678,
											"end": 10701,
											"name": "EQ"
										},
										{
											"begin": 10678,
											"end": 10701,
											"name": "ISZERO"
										},
										{
											"begin": 10678,
											"end": 10728,
											"name": "DUP1"
										},
										{
											"begin": 10678,
											"end": 10728,
											"name": "ISZERO"
										},
										{
											"begin": 10678,
											"end": 10728,
											"name": "PUSH [tag]",
											"value": "349"
										},
										{
											"begin": 10678,
											"end": 10728,
											"name": "JUMPI"
										},
										{
											"begin": 10678,
											"end": 10728,
											"name": "POP"
										},
										{
											"begin": 10711,
											"end": 10721,
											"name": "DUP8"
										},
										{
											"begin": 10711,
											"end": 10728,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10711,
											"end": 10728,
											"name": "ADD"
										},
										{
											"begin": 10711,
											"end": 10728,
											"name": "MLOAD"
										},
										{
											"begin": 10705,
											"end": 10728,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10705,
											"end": 10728,
											"name": "AND"
										},
										{
											"begin": 10705,
											"end": 10707,
											"name": "DUP8"
										},
										{
											"begin": 10705,
											"end": 10728,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10705,
											"end": 10728,
											"name": "AND"
										},
										{
											"begin": 10705,
											"end": 10728,
											"name": "EQ"
										},
										{
											"begin": 10705,
											"end": 10728,
											"name": "ISZERO"
										},
										{
											"begin": 10678,
											"end": 10728,
											"name": "tag",
											"value": "349"
										},
										{
											"begin": 10678,
											"end": 10728,
											"name": "JUMPDEST"
										},
										{
											"begin": 10670,
											"end": 10748,
											"name": "PUSH [tag]",
											"value": "350"
										},
										{
											"begin": 10670,
											"end": 10748,
											"name": "JUMPI"
										},
										{
											"begin": 10670,
											"end": 10748,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10670,
											"end": 10748,
											"name": "MLOAD"
										},
										{
											"begin": 10670,
											"end": 10748,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10670,
											"end": 10748,
											"name": "DUP2"
										},
										{
											"begin": 10670,
											"end": 10748,
											"name": "MSTORE"
										},
										{
											"begin": 10670,
											"end": 10748,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 10670,
											"end": 10748,
											"name": "ADD"
										},
										{
											"begin": 10670,
											"end": 10748,
											"name": "DUP1"
										},
										{
											"begin": 10670,
											"end": 10748,
											"name": "DUP1"
										},
										{
											"begin": 10670,
											"end": 10748,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10670,
											"end": 10748,
											"name": "ADD"
										},
										{
											"begin": 10670,
											"end": 10748,
											"name": "DUP3"
										},
										{
											"begin": 10670,
											"end": 10748,
											"name": "DUP2"
										},
										{
											"begin": 10670,
											"end": 10748,
											"name": "SUB"
										},
										{
											"begin": 10670,
											"end": 10748,
											"name": "DUP3"
										},
										{
											"begin": 10670,
											"end": 10748,
											"name": "MSTORE"
										},
										{
											"begin": 10670,
											"end": 10748,
											"name": "PUSH",
											"value": "F"
										},
										{
											"begin": 10670,
											"end": 10748,
											"name": "DUP2"
										},
										{
											"begin": 10670,
											"end": 10748,
											"name": "MSTORE"
										},
										{
											"begin": 10670,
											"end": 10748,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10670,
											"end": 10748,
											"name": "ADD"
										},
										{
											"begin": 10670,
											"end": 10748,
											"name": "DUP1"
										},
										{
											"begin": 10670,
											"end": 10748,
											"name": "PUSH",
											"value": "31306B3A20494E56414C49445F544F0000000000000000000000000000000000"
										},
										{
											"begin": 10670,
											"end": 10748,
											"name": "DUP2"
										},
										{
											"begin": 10670,
											"end": 10748,
											"name": "MSTORE"
										},
										{
											"begin": 10670,
											"end": 10748,
											"name": "POP"
										},
										{
											"begin": 10670,
											"end": 10748,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10670,
											"end": 10748,
											"name": "ADD"
										},
										{
											"begin": 10670,
											"end": 10748,
											"name": "SWAP2"
										},
										{
											"begin": 10670,
											"end": 10748,
											"name": "POP"
										},
										{
											"begin": 10670,
											"end": 10748,
											"name": "POP"
										},
										{
											"begin": 10670,
											"end": 10748,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10670,
											"end": 10748,
											"name": "MLOAD"
										},
										{
											"begin": 10670,
											"end": 10748,
											"name": "DUP1"
										},
										{
											"begin": 10670,
											"end": 10748,
											"name": "SWAP2"
										},
										{
											"begin": 10670,
											"end": 10748,
											"name": "SUB"
										},
										{
											"begin": 10670,
											"end": 10748,
											"name": "SWAP1"
										},
										{
											"begin": 10670,
											"end": 10748,
											"name": "REVERT"
										},
										{
											"begin": 10670,
											"end": 10748,
											"name": "tag",
											"value": "350"
										},
										{
											"begin": 10670,
											"end": 10748,
											"name": "JUMPDEST"
										},
										{
											"begin": 10826,
											"end": 10827,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10802,
											"end": 10812,
											"name": "DUP9"
										},
										{
											"begin": 10802,
											"end": 10823,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10802,
											"end": 10823,
											"name": "ADD"
										},
										{
											"begin": 10802,
											"end": 10823,
											"name": "MLOAD"
										},
										{
											"begin": 10802,
											"end": 10827,
											"name": "GT"
										},
										{
											"begin": 10798,
											"end": 10888,
											"name": "ISZERO"
										},
										{
											"begin": 10798,
											"end": 10888,
											"name": "PUSH [tag]",
											"value": "351"
										},
										{
											"begin": 10798,
											"end": 10888,
											"name": "JUMPI"
										},
										{
											"begin": 10829,
											"end": 10888,
											"name": "PUSH [tag]",
											"value": "352"
										},
										{
											"begin": 10843,
											"end": 10853,
											"name": "DUP9"
										},
										{
											"begin": 10843,
											"end": 10860,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10843,
											"end": 10860,
											"name": "ADD"
										},
										{
											"begin": 10843,
											"end": 10860,
											"name": "MLOAD"
										},
										{
											"begin": 10862,
											"end": 10864,
											"name": "DUP9"
										},
										{
											"begin": 10866,
											"end": 10876,
											"name": "DUP11"
										},
										{
											"begin": 10866,
											"end": 10887,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10866,
											"end": 10887,
											"name": "ADD"
										},
										{
											"begin": 10866,
											"end": 10887,
											"name": "MLOAD"
										},
										{
											"begin": 10829,
											"end": 10842,
											"name": "PUSH [tag]",
											"value": "279"
										},
										{
											"begin": 10829,
											"end": 10888,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 10829,
											"end": 10888,
											"name": "tag",
											"value": "352"
										},
										{
											"begin": 10829,
											"end": 10888,
											"name": "JUMPDEST"
										},
										{
											"begin": 10798,
											"end": 10888,
											"name": "tag",
											"value": "351"
										},
										{
											"begin": 10798,
											"end": 10888,
											"name": "JUMPDEST"
										},
										{
											"begin": 10966,
											"end": 10967,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10942,
											"end": 10952,
											"name": "DUP9"
										},
										{
											"begin": 10942,
											"end": 10963,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 10942,
											"end": 10963,
											"name": "ADD"
										},
										{
											"begin": 10942,
											"end": 10963,
											"name": "MLOAD"
										},
										{
											"begin": 10942,
											"end": 10967,
											"name": "GT"
										},
										{
											"begin": 10938,
											"end": 11028,
											"name": "ISZERO"
										},
										{
											"begin": 10938,
											"end": 11028,
											"name": "PUSH [tag]",
											"value": "353"
										},
										{
											"begin": 10938,
											"end": 11028,
											"name": "JUMPI"
										},
										{
											"begin": 10969,
											"end": 11028,
											"name": "PUSH [tag]",
											"value": "354"
										},
										{
											"begin": 10983,
											"end": 10993,
											"name": "DUP9"
										},
										{
											"begin": 10983,
											"end": 11000,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10983,
											"end": 11000,
											"name": "ADD"
										},
										{
											"begin": 10983,
											"end": 11000,
											"name": "MLOAD"
										},
										{
											"begin": 11002,
											"end": 11004,
											"name": "DUP9"
										},
										{
											"begin": 11006,
											"end": 11016,
											"name": "DUP11"
										},
										{
											"begin": 11006,
											"end": 11027,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 11006,
											"end": 11027,
											"name": "ADD"
										},
										{
											"begin": 11006,
											"end": 11027,
											"name": "MLOAD"
										},
										{
											"begin": 10969,
											"end": 10982,
											"name": "PUSH [tag]",
											"value": "279"
										},
										{
											"begin": 10969,
											"end": 11028,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 10969,
											"end": 11028,
											"name": "tag",
											"value": "354"
										},
										{
											"begin": 10969,
											"end": 11028,
											"name": "JUMPDEST"
										},
										{
											"begin": 10938,
											"end": 11028,
											"name": "tag",
											"value": "353"
										},
										{
											"begin": 10938,
											"end": 11028,
											"name": "JUMPDEST"
										},
										{
											"begin": 11055,
											"end": 11056,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11041,
											"end": 11045,
											"name": "DUP7"
										},
										{
											"begin": 11041,
											"end": 11052,
											"name": "MLOAD"
										},
										{
											"begin": 11041,
											"end": 11056,
											"name": "GT"
										},
										{
											"begin": 11037,
											"end": 11156,
											"name": "ISZERO"
										},
										{
											"begin": 11037,
											"end": 11156,
											"name": "PUSH [tag]",
											"value": "355"
										},
										{
											"begin": 11037,
											"end": 11156,
											"name": "JUMPI"
										},
										{
											"begin": 11075,
											"end": 11077,
											"name": "DUP7"
										},
										{
											"begin": 11058,
											"end": 11092,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11058,
											"end": 11092,
											"name": "AND"
										},
										{
											"begin": 11058,
											"end": 11092,
											"name": "PUSH",
											"value": "10D1E85C"
										},
										{
											"begin": 11093,
											"end": 11103,
											"name": "CALLER"
										},
										{
											"begin": 11105,
											"end": 11115,
											"name": "DUP11"
										},
										{
											"begin": 11105,
											"end": 11126,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11105,
											"end": 11126,
											"name": "ADD"
										},
										{
											"begin": 11105,
											"end": 11126,
											"name": "MLOAD"
										},
										{
											"begin": 11128,
											"end": 11138,
											"name": "DUP12"
										},
										{
											"begin": 11128,
											"end": 11149,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 11128,
											"end": 11149,
											"name": "ADD"
										},
										{
											"begin": 11128,
											"end": 11149,
											"name": "MLOAD"
										},
										{
											"begin": 11151,
											"end": 11155,
											"name": "DUP11"
										},
										{
											"begin": 11058,
											"end": 11156,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11058,
											"end": 11156,
											"name": "MLOAD"
										},
										{
											"begin": 11058,
											"end": 11156,
											"name": "DUP6"
										},
										{
											"begin": 11058,
											"end": 11156,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 11058,
											"end": 11156,
											"name": "AND"
										},
										{
											"begin": 11058,
											"end": 11156,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 11058,
											"end": 11156,
											"name": "SHL"
										},
										{
											"begin": 11058,
											"end": 11156,
											"name": "DUP2"
										},
										{
											"begin": 11058,
											"end": 11156,
											"name": "MSTORE"
										},
										{
											"begin": 11058,
											"end": 11156,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 11058,
											"end": 11156,
											"name": "ADD"
										},
										{
											"begin": 11058,
											"end": 11156,
											"name": "DUP1"
										},
										{
											"begin": 11058,
											"end": 11156,
											"name": "DUP6"
										},
										{
											"begin": 11058,
											"end": 11156,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11058,
											"end": 11156,
											"name": "AND"
										},
										{
											"begin": 11058,
											"end": 11156,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11058,
											"end": 11156,
											"name": "AND"
										},
										{
											"begin": 11058,
											"end": 11156,
											"name": "DUP2"
										},
										{
											"begin": 11058,
											"end": 11156,
											"name": "MSTORE"
										},
										{
											"begin": 11058,
											"end": 11156,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11058,
											"end": 11156,
											"name": "ADD"
										},
										{
											"begin": 11058,
											"end": 11156,
											"name": "DUP5"
										},
										{
											"begin": 11058,
											"end": 11156,
											"name": "DUP2"
										},
										{
											"begin": 11058,
											"end": 11156,
											"name": "MSTORE"
										},
										{
											"begin": 11058,
											"end": 11156,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11058,
											"end": 11156,
											"name": "ADD"
										},
										{
											"begin": 11058,
											"end": 11156,
											"name": "DUP4"
										},
										{
											"begin": 11058,
											"end": 11156,
											"name": "DUP2"
										},
										{
											"begin": 11058,
											"end": 11156,
											"name": "MSTORE"
										},
										{
											"begin": 11058,
											"end": 11156,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11058,
											"end": 11156,
											"name": "ADD"
										},
										{
											"begin": 11058,
											"end": 11156,
											"name": "DUP1"
										},
										{
											"begin": 11058,
											"end": 11156,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11058,
											"end": 11156,
											"name": "ADD"
										},
										{
											"begin": 11058,
											"end": 11156,
											"name": "DUP3"
										},
										{
											"begin": 11058,
											"end": 11156,
											"name": "DUP2"
										},
										{
											"begin": 11058,
											"end": 11156,
											"name": "SUB"
										},
										{
											"begin": 11058,
											"end": 11156,
											"name": "DUP3"
										},
										{
											"begin": 11058,
											"end": 11156,
											"name": "MSTORE"
										},
										{
											"begin": 11058,
											"end": 11156,
											"name": "DUP4"
										},
										{
											"begin": 11058,
											"end": 11156,
											"name": "DUP2"
										},
										{
											"begin": 11058,
											"end": 11156,
											"name": "DUP2"
										},
										{
											"begin": 11058,
											"end": 11156,
											"name": "MLOAD"
										},
										{
											"begin": 11058,
											"end": 11156,
											"name": "DUP2"
										},
										{
											"begin": 11058,
											"end": 11156,
											"name": "MSTORE"
										},
										{
											"begin": 11058,
											"end": 11156,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11058,
											"end": 11156,
											"name": "ADD"
										},
										{
											"begin": 11058,
											"end": 11156,
											"name": "SWAP2"
										},
										{
											"begin": 11058,
											"end": 11156,
											"name": "POP"
										},
										{
											"begin": 11058,
											"end": 11156,
											"name": "DUP1"
										},
										{
											"begin": 11058,
											"end": 11156,
											"name": "MLOAD"
										},
										{
											"begin": 11058,
											"end": 11156,
											"name": "SWAP1"
										},
										{
											"begin": 11058,
											"end": 11156,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11058,
											"end": 11156,
											"name": "ADD"
										},
										{
											"begin": 11058,
											"end": 11156,
											"name": "SWAP1"
										},
										{
											"begin": 11058,
											"end": 11156,
											"name": "DUP1"
										},
										{
											"begin": 11058,
											"end": 11156,
											"name": "DUP4"
										},
										{
											"begin": 11058,
											"end": 11156,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "356"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "358"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "356"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "358"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 11058,
											"end": 11156,
											"name": "POP"
										},
										{
											"begin": 11058,
											"end": 11156,
											"name": "POP"
										},
										{
											"begin": 11058,
											"end": 11156,
											"name": "POP"
										},
										{
											"begin": 11058,
											"end": 11156,
											"name": "SWAP1"
										},
										{
											"begin": 11058,
											"end": 11156,
											"name": "POP"
										},
										{
											"begin": 11058,
											"end": 11156,
											"name": "SWAP1"
										},
										{
											"begin": 11058,
											"end": 11156,
											"name": "DUP2"
										},
										{
											"begin": 11058,
											"end": 11156,
											"name": "ADD"
										},
										{
											"begin": 11058,
											"end": 11156,
											"name": "SWAP1"
										},
										{
											"begin": 11058,
											"end": 11156,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 11058,
											"end": 11156,
											"name": "AND"
										},
										{
											"begin": 11058,
											"end": 11156,
											"name": "DUP1"
										},
										{
											"begin": 11058,
											"end": 11156,
											"name": "ISZERO"
										},
										{
											"begin": 11058,
											"end": 11156,
											"name": "PUSH [tag]",
											"value": "359"
										},
										{
											"begin": 11058,
											"end": 11156,
											"name": "JUMPI"
										},
										{
											"begin": 11058,
											"end": 11156,
											"name": "DUP1"
										},
										{
											"begin": 11058,
											"end": 11156,
											"name": "DUP3"
										},
										{
											"begin": 11058,
											"end": 11156,
											"name": "SUB"
										},
										{
											"begin": 11058,
											"end": 11156,
											"name": "DUP1"
										},
										{
											"begin": 11058,
											"end": 11156,
											"name": "MLOAD"
										},
										{
											"begin": 11058,
											"end": 11156,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 11058,
											"end": 11156,
											"name": "DUP4"
										},
										{
											"begin": 11058,
											"end": 11156,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11058,
											"end": 11156,
											"name": "SUB"
										},
										{
											"begin": 11058,
											"end": 11156,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 11058,
											"end": 11156,
											"name": "EXP"
										},
										{
											"begin": 11058,
											"end": 11156,
											"name": "SUB"
										},
										{
											"begin": 11058,
											"end": 11156,
											"name": "NOT"
										},
										{
											"begin": 11058,
											"end": 11156,
											"name": "AND"
										},
										{
											"begin": 11058,
											"end": 11156,
											"name": "DUP2"
										},
										{
											"begin": 11058,
											"end": 11156,
											"name": "MSTORE"
										},
										{
											"begin": 11058,
											"end": 11156,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11058,
											"end": 11156,
											"name": "ADD"
										},
										{
											"begin": 11058,
											"end": 11156,
											"name": "SWAP2"
										},
										{
											"begin": 11058,
											"end": 11156,
											"name": "POP"
										},
										{
											"begin": 11058,
											"end": 11156,
											"name": "tag",
											"value": "359"
										},
										{
											"begin": 11058,
											"end": 11156,
											"name": "JUMPDEST"
										},
										{
											"begin": 11058,
											"end": 11156,
											"name": "POP"
										},
										{
											"begin": 11058,
											"end": 11156,
											"name": "SWAP6"
										},
										{
											"begin": 11058,
											"end": 11156,
											"name": "POP"
										},
										{
											"begin": 11058,
											"end": 11156,
											"name": "POP"
										},
										{
											"begin": 11058,
											"end": 11156,
											"name": "POP"
										},
										{
											"begin": 11058,
											"end": 11156,
											"name": "POP"
										},
										{
											"begin": 11058,
											"end": 11156,
											"name": "POP"
										},
										{
											"begin": 11058,
											"end": 11156,
											"name": "POP"
										},
										{
											"begin": 11058,
											"end": 11156,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11058,
											"end": 11156,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11058,
											"end": 11156,
											"name": "MLOAD"
										},
										{
											"begin": 11058,
											"end": 11156,
											"name": "DUP1"
										},
										{
											"begin": 11058,
											"end": 11156,
											"name": "DUP4"
										},
										{
											"begin": 11058,
											"end": 11156,
											"name": "SUB"
										},
										{
											"begin": 11058,
											"end": 11156,
											"name": "DUP2"
										},
										{
											"begin": 11058,
											"end": 11156,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11058,
											"end": 11156,
											"name": "DUP8"
										},
										{
											"begin": 11058,
											"end": 11156,
											"name": "DUP1"
										},
										{
											"begin": 11058,
											"end": 11156,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 11058,
											"end": 11156,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "360"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "360"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 11058,
											"end": 11156,
											"name": "POP"
										},
										{
											"begin": 11058,
											"end": 11156,
											"name": "GAS"
										},
										{
											"begin": 11058,
											"end": 11156,
											"name": "CALL"
										},
										{
											"begin": 11058,
											"end": 11156,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "361"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "361"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 11058,
											"end": 11156,
											"name": "POP"
										},
										{
											"begin": 11058,
											"end": 11156,
											"name": "POP"
										},
										{
											"begin": 11058,
											"end": 11156,
											"name": "POP"
										},
										{
											"begin": 11058,
											"end": 11156,
											"name": "POP"
										},
										{
											"begin": 11037,
											"end": 11156,
											"name": "tag",
											"value": "355"
										},
										{
											"begin": 11037,
											"end": 11156,
											"name": "JUMPDEST"
										},
										{
											"begin": 11194,
											"end": 11204,
											"name": "DUP8"
										},
										{
											"begin": 11194,
											"end": 11211,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11194,
											"end": 11211,
											"name": "ADD"
										},
										{
											"begin": 11194,
											"end": 11211,
											"name": "MLOAD"
										},
										{
											"begin": 11187,
											"end": 11222,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11187,
											"end": 11222,
											"name": "AND"
										},
										{
											"begin": 11187,
											"end": 11222,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 11231,
											"end": 11235,
											"name": "ADDRESS"
										},
										{
											"begin": 11187,
											"end": 11237,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11187,
											"end": 11237,
											"name": "MLOAD"
										},
										{
											"begin": 11187,
											"end": 11237,
											"name": "DUP3"
										},
										{
											"begin": 11187,
											"end": 11237,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 11187,
											"end": 11237,
											"name": "AND"
										},
										{
											"begin": 11187,
											"end": 11237,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 11187,
											"end": 11237,
											"name": "SHL"
										},
										{
											"begin": 11187,
											"end": 11237,
											"name": "DUP2"
										},
										{
											"begin": 11187,
											"end": 11237,
											"name": "MSTORE"
										},
										{
											"begin": 11187,
											"end": 11237,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 11187,
											"end": 11237,
											"name": "ADD"
										},
										{
											"begin": 11187,
											"end": 11237,
											"name": "DUP1"
										},
										{
											"begin": 11187,
											"end": 11237,
											"name": "DUP3"
										},
										{
											"begin": 11187,
											"end": 11237,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11187,
											"end": 11237,
											"name": "AND"
										},
										{
											"begin": 11187,
											"end": 11237,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11187,
											"end": 11237,
											"name": "AND"
										},
										{
											"begin": 11187,
											"end": 11237,
											"name": "DUP2"
										},
										{
											"begin": 11187,
											"end": 11237,
											"name": "MSTORE"
										},
										{
											"begin": 11187,
											"end": 11237,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11187,
											"end": 11237,
											"name": "ADD"
										},
										{
											"begin": 11187,
											"end": 11237,
											"name": "SWAP2"
										},
										{
											"begin": 11187,
											"end": 11237,
											"name": "POP"
										},
										{
											"begin": 11187,
											"end": 11237,
											"name": "POP"
										},
										{
											"begin": 11187,
											"end": 11237,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11187,
											"end": 11237,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11187,
											"end": 11237,
											"name": "MLOAD"
										},
										{
											"begin": 11187,
											"end": 11237,
											"name": "DUP1"
										},
										{
											"begin": 11187,
											"end": 11237,
											"name": "DUP4"
										},
										{
											"begin": 11187,
											"end": 11237,
											"name": "SUB"
										},
										{
											"begin": 11187,
											"end": 11237,
											"name": "DUP2"
										},
										{
											"begin": 11187,
											"end": 11237,
											"name": "DUP7"
										},
										{
											"begin": 11187,
											"end": 11237,
											"name": "DUP1"
										},
										{
											"begin": 11187,
											"end": 11237,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 11187,
											"end": 11237,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "362"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "362"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 11187,
											"end": 11237,
											"name": "POP"
										},
										{
											"begin": 11187,
											"end": 11237,
											"name": "GAS"
										},
										{
											"begin": 11187,
											"end": 11237,
											"name": "STATICCALL"
										},
										{
											"begin": 11187,
											"end": 11237,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "363"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "363"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 11187,
											"end": 11237,
											"name": "POP"
										},
										{
											"begin": 11187,
											"end": 11237,
											"name": "POP"
										},
										{
											"begin": 11187,
											"end": 11237,
											"name": "POP"
										},
										{
											"begin": 11187,
											"end": 11237,
											"name": "POP"
										},
										{
											"begin": 11187,
											"end": 11237,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11187,
											"end": 11237,
											"name": "MLOAD"
										},
										{
											"begin": 11187,
											"end": 11237,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "364"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "364"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 11187,
											"end": 11237,
											"name": "DUP2"
										},
										{
											"begin": 11187,
											"end": 11237,
											"name": "ADD"
										},
										{
											"begin": 11187,
											"end": 11237,
											"name": "SWAP1"
										},
										{
											"begin": 11187,
											"end": 11237,
											"name": "DUP1"
										},
										{
											"begin": 11187,
											"end": 11237,
											"name": "DUP1"
										},
										{
											"begin": 11187,
											"end": 11237,
											"name": "MLOAD"
										},
										{
											"begin": 11187,
											"end": 11237,
											"name": "SWAP1"
										},
										{
											"begin": 11187,
											"end": 11237,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11187,
											"end": 11237,
											"name": "ADD"
										},
										{
											"begin": 11187,
											"end": 11237,
											"name": "SWAP1"
										},
										{
											"begin": 11187,
											"end": 11237,
											"name": "SWAP3"
										},
										{
											"begin": 11187,
											"end": 11237,
											"name": "SWAP2"
										},
										{
											"begin": 11187,
											"end": 11237,
											"name": "SWAP1"
										},
										{
											"begin": 11187,
											"end": 11237,
											"name": "POP"
										},
										{
											"begin": 11187,
											"end": 11237,
											"name": "POP"
										},
										{
											"begin": 11187,
											"end": 11237,
											"name": "POP"
										},
										{
											"begin": 11165,
											"end": 11175,
											"name": "DUP9"
										},
										{
											"begin": 11165,
											"end": 11184,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 11165,
											"end": 11184,
											"name": "ADD"
										},
										{
											"begin": 11165,
											"end": 11237,
											"name": "DUP2"
										},
										{
											"begin": 11165,
											"end": 11237,
											"name": "DUP2"
										},
										{
											"begin": 11165,
											"end": 11237,
											"name": "MSTORE"
										},
										{
											"begin": 11165,
											"end": 11237,
											"name": "POP"
										},
										{
											"begin": 11165,
											"end": 11237,
											"name": "POP"
										},
										{
											"begin": 11275,
											"end": 11285,
											"name": "DUP8"
										},
										{
											"begin": 11275,
											"end": 11292,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11275,
											"end": 11292,
											"name": "ADD"
										},
										{
											"begin": 11275,
											"end": 11292,
											"name": "MLOAD"
										},
										{
											"begin": 11268,
											"end": 11303,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11268,
											"end": 11303,
											"name": "AND"
										},
										{
											"begin": 11268,
											"end": 11303,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 11312,
											"end": 11316,
											"name": "ADDRESS"
										},
										{
											"begin": 11268,
											"end": 11318,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11268,
											"end": 11318,
											"name": "MLOAD"
										},
										{
											"begin": 11268,
											"end": 11318,
											"name": "DUP3"
										},
										{
											"begin": 11268,
											"end": 11318,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 11268,
											"end": 11318,
											"name": "AND"
										},
										{
											"begin": 11268,
											"end": 11318,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 11268,
											"end": 11318,
											"name": "SHL"
										},
										{
											"begin": 11268,
											"end": 11318,
											"name": "DUP2"
										},
										{
											"begin": 11268,
											"end": 11318,
											"name": "MSTORE"
										},
										{
											"begin": 11268,
											"end": 11318,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 11268,
											"end": 11318,
											"name": "ADD"
										},
										{
											"begin": 11268,
											"end": 11318,
											"name": "DUP1"
										},
										{
											"begin": 11268,
											"end": 11318,
											"name": "DUP3"
										},
										{
											"begin": 11268,
											"end": 11318,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11268,
											"end": 11318,
											"name": "AND"
										},
										{
											"begin": 11268,
											"end": 11318,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11268,
											"end": 11318,
											"name": "AND"
										},
										{
											"begin": 11268,
											"end": 11318,
											"name": "DUP2"
										},
										{
											"begin": 11268,
											"end": 11318,
											"name": "MSTORE"
										},
										{
											"begin": 11268,
											"end": 11318,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11268,
											"end": 11318,
											"name": "ADD"
										},
										{
											"begin": 11268,
											"end": 11318,
											"name": "SWAP2"
										},
										{
											"begin": 11268,
											"end": 11318,
											"name": "POP"
										},
										{
											"begin": 11268,
											"end": 11318,
											"name": "POP"
										},
										{
											"begin": 11268,
											"end": 11318,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11268,
											"end": 11318,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11268,
											"end": 11318,
											"name": "MLOAD"
										},
										{
											"begin": 11268,
											"end": 11318,
											"name": "DUP1"
										},
										{
											"begin": 11268,
											"end": 11318,
											"name": "DUP4"
										},
										{
											"begin": 11268,
											"end": 11318,
											"name": "SUB"
										},
										{
											"begin": 11268,
											"end": 11318,
											"name": "DUP2"
										},
										{
											"begin": 11268,
											"end": 11318,
											"name": "DUP7"
										},
										{
											"begin": 11268,
											"end": 11318,
											"name": "DUP1"
										},
										{
											"begin": 11268,
											"end": 11318,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 11268,
											"end": 11318,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "365"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "365"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 11268,
											"end": 11318,
											"name": "POP"
										},
										{
											"begin": 11268,
											"end": 11318,
											"name": "GAS"
										},
										{
											"begin": 11268,
											"end": 11318,
											"name": "STATICCALL"
										},
										{
											"begin": 11268,
											"end": 11318,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "366"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "366"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 11268,
											"end": 11318,
											"name": "POP"
										},
										{
											"begin": 11268,
											"end": 11318,
											"name": "POP"
										},
										{
											"begin": 11268,
											"end": 11318,
											"name": "POP"
										},
										{
											"begin": 11268,
											"end": 11318,
											"name": "POP"
										},
										{
											"begin": 11268,
											"end": 11318,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11268,
											"end": 11318,
											"name": "MLOAD"
										},
										{
											"begin": 11268,
											"end": 11318,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "367"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "367"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 11268,
											"end": 11318,
											"name": "DUP2"
										},
										{
											"begin": 11268,
											"end": 11318,
											"name": "ADD"
										},
										{
											"begin": 11268,
											"end": 11318,
											"name": "SWAP1"
										},
										{
											"begin": 11268,
											"end": 11318,
											"name": "DUP1"
										},
										{
											"begin": 11268,
											"end": 11318,
											"name": "DUP1"
										},
										{
											"begin": 11268,
											"end": 11318,
											"name": "MLOAD"
										},
										{
											"begin": 11268,
											"end": 11318,
											"name": "SWAP1"
										},
										{
											"begin": 11268,
											"end": 11318,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11268,
											"end": 11318,
											"name": "ADD"
										},
										{
											"begin": 11268,
											"end": 11318,
											"name": "SWAP1"
										},
										{
											"begin": 11268,
											"end": 11318,
											"name": "SWAP3"
										},
										{
											"begin": 11268,
											"end": 11318,
											"name": "SWAP2"
										},
										{
											"begin": 11268,
											"end": 11318,
											"name": "SWAP1"
										},
										{
											"begin": 11268,
											"end": 11318,
											"name": "POP"
										},
										{
											"begin": 11268,
											"end": 11318,
											"name": "POP"
										},
										{
											"begin": 11268,
											"end": 11318,
											"name": "POP"
										},
										{
											"begin": 11246,
											"end": 11256,
											"name": "DUP9"
										},
										{
											"begin": 11246,
											"end": 11265,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": 11246,
											"end": 11265,
											"name": "ADD"
										},
										{
											"begin": 11246,
											"end": 11318,
											"name": "DUP2"
										},
										{
											"begin": 11246,
											"end": 11318,
											"name": "DUP2"
										},
										{
											"begin": 11246,
											"end": 11318,
											"name": "MSTORE"
										},
										{
											"begin": 11246,
											"end": 11318,
											"name": "POP"
										},
										{
											"begin": 11246,
											"end": 11318,
											"name": "POP"
										},
										{
											"begin": 11334,
											"end": 11348,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11385,
											"end": 11395,
											"name": "DUP9"
										},
										{
											"begin": 11385,
											"end": 11406,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11385,
											"end": 11406,
											"name": "ADD"
										},
										{
											"begin": 11385,
											"end": 11406,
											"name": "MLOAD"
										},
										{
											"begin": 11373,
											"end": 11382,
											"name": "DUP6"
										},
										{
											"begin": 11373,
											"end": 11406,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11373,
											"end": 11406,
											"name": "AND"
										},
										{
											"begin": 11373,
											"end": 11406,
											"name": "SUB"
										},
										{
											"begin": 11351,
											"end": 11361,
											"name": "DUP10"
										},
										{
											"begin": 11351,
											"end": 11370,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 11351,
											"end": 11370,
											"name": "ADD"
										},
										{
											"begin": 11351,
											"end": 11370,
											"name": "MLOAD"
										},
										{
											"begin": 11351,
											"end": 11406,
											"name": "GT"
										},
										{
											"begin": 11351,
											"end": 11470,
											"name": "PUSH [tag]",
											"value": "368"
										},
										{
											"begin": 11351,
											"end": 11470,
											"name": "JUMPI"
										},
										{
											"begin": 11469,
											"end": 11470,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11351,
											"end": 11470,
											"name": "PUSH [tag]",
											"value": "369"
										},
										{
											"begin": 11351,
											"end": 11470,
											"name": "JUMP"
										},
										{
											"begin": 11351,
											"end": 11470,
											"name": "tag",
											"value": "368"
										},
										{
											"begin": 11351,
											"end": 11470,
											"name": "JUMPDEST"
										},
										{
											"begin": 11444,
											"end": 11454,
											"name": "DUP9"
										},
										{
											"begin": 11444,
											"end": 11465,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11444,
											"end": 11465,
											"name": "ADD"
										},
										{
											"begin": 11444,
											"end": 11465,
											"name": "MLOAD"
										},
										{
											"begin": 11432,
											"end": 11441,
											"name": "DUP6"
										},
										{
											"begin": 11432,
											"end": 11465,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11432,
											"end": 11465,
											"name": "AND"
										},
										{
											"begin": 11432,
											"end": 11465,
											"name": "SUB"
										},
										{
											"begin": 11409,
											"end": 11419,
											"name": "DUP10"
										},
										{
											"begin": 11409,
											"end": 11428,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 11409,
											"end": 11428,
											"name": "ADD"
										},
										{
											"begin": 11409,
											"end": 11428,
											"name": "MLOAD"
										},
										{
											"begin": 11409,
											"end": 11466,
											"name": "SUB"
										},
										{
											"begin": 11351,
											"end": 11470,
											"name": "tag",
											"value": "369"
										},
										{
											"begin": 11351,
											"end": 11470,
											"name": "JUMPDEST"
										},
										{
											"begin": 11334,
											"end": 11470,
											"name": "SWAP1"
										},
										{
											"begin": 11334,
											"end": 11470,
											"name": "POP"
										},
										{
											"begin": 11477,
											"end": 11491,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11528,
											"end": 11538,
											"name": "DUP10"
										},
										{
											"begin": 11528,
											"end": 11549,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 11528,
											"end": 11549,
											"name": "ADD"
										},
										{
											"begin": 11528,
											"end": 11549,
											"name": "MLOAD"
										},
										{
											"begin": 11516,
											"end": 11525,
											"name": "DUP6"
										},
										{
											"begin": 11516,
											"end": 11549,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11516,
											"end": 11549,
											"name": "AND"
										},
										{
											"begin": 11516,
											"end": 11549,
											"name": "SUB"
										},
										{
											"begin": 11494,
											"end": 11504,
											"name": "DUP11"
										},
										{
											"begin": 11494,
											"end": 11513,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": 11494,
											"end": 11513,
											"name": "ADD"
										},
										{
											"begin": 11494,
											"end": 11513,
											"name": "MLOAD"
										},
										{
											"begin": 11494,
											"end": 11549,
											"name": "GT"
										},
										{
											"begin": 11494,
											"end": 11613,
											"name": "PUSH [tag]",
											"value": "370"
										},
										{
											"begin": 11494,
											"end": 11613,
											"name": "JUMPI"
										},
										{
											"begin": 11612,
											"end": 11613,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11494,
											"end": 11613,
											"name": "PUSH [tag]",
											"value": "371"
										},
										{
											"begin": 11494,
											"end": 11613,
											"name": "JUMP"
										},
										{
											"begin": 11494,
											"end": 11613,
											"name": "tag",
											"value": "370"
										},
										{
											"begin": 11494,
											"end": 11613,
											"name": "JUMPDEST"
										},
										{
											"begin": 11587,
											"end": 11597,
											"name": "DUP10"
										},
										{
											"begin": 11587,
											"end": 11608,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 11587,
											"end": 11608,
											"name": "ADD"
										},
										{
											"begin": 11587,
											"end": 11608,
											"name": "MLOAD"
										},
										{
											"begin": 11575,
											"end": 11584,
											"name": "DUP6"
										},
										{
											"begin": 11575,
											"end": 11608,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11575,
											"end": 11608,
											"name": "AND"
										},
										{
											"begin": 11575,
											"end": 11608,
											"name": "SUB"
										},
										{
											"begin": 11552,
											"end": 11562,
											"name": "DUP11"
										},
										{
											"begin": 11552,
											"end": 11571,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": 11552,
											"end": 11571,
											"name": "ADD"
										},
										{
											"begin": 11552,
											"end": 11571,
											"name": "MLOAD"
										},
										{
											"begin": 11552,
											"end": 11609,
											"name": "SUB"
										},
										{
											"begin": 11494,
											"end": 11613,
											"name": "tag",
											"value": "371"
										},
										{
											"begin": 11494,
											"end": 11613,
											"name": "JUMPDEST"
										},
										{
											"begin": 11477,
											"end": 11613,
											"name": "SWAP1"
										},
										{
											"begin": 11477,
											"end": 11613,
											"name": "POP"
										},
										{
											"begin": 11640,
											"end": 11641,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11628,
											"end": 11637,
											"name": "DUP3"
										},
										{
											"begin": 11628,
											"end": 11641,
											"name": "GT"
										},
										{
											"begin": 11628,
											"end": 11658,
											"name": "DUP1"
										},
										{
											"begin": 11628,
											"end": 11658,
											"name": "PUSH [tag]",
											"value": "372"
										},
										{
											"begin": 11628,
											"end": 11658,
											"name": "JUMPI"
										},
										{
											"begin": 11628,
											"end": 11658,
											"name": "POP"
										},
										{
											"begin": 11657,
											"end": 11658,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11645,
											"end": 11654,
											"name": "DUP2"
										},
										{
											"begin": 11645,
											"end": 11658,
											"name": "GT"
										},
										{
											"begin": 11628,
											"end": 11658,
											"name": "tag",
											"value": "372"
										},
										{
											"begin": 11628,
											"end": 11658,
											"name": "JUMPDEST"
										},
										{
											"begin": 11620,
											"end": 11693,
											"name": "PUSH [tag]",
											"value": "373"
										},
										{
											"begin": 11620,
											"end": 11693,
											"name": "JUMPI"
										},
										{
											"begin": 11620,
											"end": 11693,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11620,
											"end": 11693,
											"name": "MLOAD"
										},
										{
											"begin": 11620,
											"end": 11693,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11620,
											"end": 11693,
											"name": "DUP2"
										},
										{
											"begin": 11620,
											"end": 11693,
											"name": "MSTORE"
										},
										{
											"begin": 11620,
											"end": 11693,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 11620,
											"end": 11693,
											"name": "ADD"
										},
										{
											"begin": 11620,
											"end": 11693,
											"name": "DUP1"
										},
										{
											"begin": 11620,
											"end": 11693,
											"name": "DUP1"
										},
										{
											"begin": 11620,
											"end": 11693,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11620,
											"end": 11693,
											"name": "ADD"
										},
										{
											"begin": 11620,
											"end": 11693,
											"name": "DUP3"
										},
										{
											"begin": 11620,
											"end": 11693,
											"name": "DUP2"
										},
										{
											"begin": 11620,
											"end": 11693,
											"name": "SUB"
										},
										{
											"begin": 11620,
											"end": 11693,
											"name": "DUP3"
										},
										{
											"begin": 11620,
											"end": 11693,
											"name": "MSTORE"
										},
										{
											"begin": 11620,
											"end": 11693,
											"name": "PUSH",
											"value": "1E"
										},
										{
											"begin": 11620,
											"end": 11693,
											"name": "DUP2"
										},
										{
											"begin": 11620,
											"end": 11693,
											"name": "MSTORE"
										},
										{
											"begin": 11620,
											"end": 11693,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11620,
											"end": 11693,
											"name": "ADD"
										},
										{
											"begin": 11620,
											"end": 11693,
											"name": "DUP1"
										},
										{
											"begin": 11620,
											"end": 11693,
											"name": "PUSH",
											"value": "31306B3A20494E53554646494349454E545F494E5055545F414D4F554E540000"
										},
										{
											"begin": 11620,
											"end": 11693,
											"name": "DUP2"
										},
										{
											"begin": 11620,
											"end": 11693,
											"name": "MSTORE"
										},
										{
											"begin": 11620,
											"end": 11693,
											"name": "POP"
										},
										{
											"begin": 11620,
											"end": 11693,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11620,
											"end": 11693,
											"name": "ADD"
										},
										{
											"begin": 11620,
											"end": 11693,
											"name": "SWAP2"
										},
										{
											"begin": 11620,
											"end": 11693,
											"name": "POP"
										},
										{
											"begin": 11620,
											"end": 11693,
											"name": "POP"
										},
										{
											"begin": 11620,
											"end": 11693,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11620,
											"end": 11693,
											"name": "MLOAD"
										},
										{
											"begin": 11620,
											"end": 11693,
											"name": "DUP1"
										},
										{
											"begin": 11620,
											"end": 11693,
											"name": "SWAP2"
										},
										{
											"begin": 11620,
											"end": 11693,
											"name": "SUB"
										},
										{
											"begin": 11620,
											"end": 11693,
											"name": "SWAP1"
										},
										{
											"begin": 11620,
											"end": 11693,
											"name": "REVERT"
										},
										{
											"begin": 11620,
											"end": 11693,
											"name": "tag",
											"value": "373"
										},
										{
											"begin": 11620,
											"end": 11693,
											"name": "JUMPDEST"
										},
										{
											"begin": 650,
											"end": 656,
											"name": "PUSH",
											"value": "186A0"
										},
										{
											"begin": 11729,
											"end": 11761,
											"name": "PUSH [tag]",
											"value": "374"
										},
										{
											"begin": 11743,
											"end": 11760,
											"name": "DUP6"
										},
										{
											"begin": 11729,
											"end": 11761,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 11729,
											"end": 11761,
											"name": "AND"
										},
										{
											"begin": 11729,
											"end": 11738,
											"name": "DUP5"
										},
										{
											"begin": 11729,
											"end": 11742,
											"name": "PUSH [tag]",
											"value": "239"
										},
										{
											"begin": 11729,
											"end": 11742,
											"name": "SWAP1"
										},
										{
											"begin": 11729,
											"end": 11761,
											"name": "SWAP2"
										},
										{
											"begin": 11729,
											"end": 11761,
											"name": "SWAP1"
										},
										{
											"begin": 11729,
											"end": 11761,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 11729,
											"end": 11761,
											"name": "AND"
										},
										{
											"begin": 11729,
											"end": 11761,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 11729,
											"end": 11761,
											"name": "tag",
											"value": "374"
										},
										{
											"begin": 11729,
											"end": 11761,
											"name": "JUMPDEST"
										},
										{
											"begin": 11729,
											"end": 11779,
											"name": "DUP2"
										},
										{
											"begin": 11729,
											"end": 11779,
											"name": "PUSH [tag]",
											"value": "375"
										},
										{
											"begin": 11729,
											"end": 11779,
											"name": "JUMPI"
										},
										{
											"begin": 11729,
											"end": 11779,
											"name": "INVALID"
										},
										{
											"begin": 11729,
											"end": 11779,
											"name": "tag",
											"value": "375"
										},
										{
											"begin": 11729,
											"end": 11779,
											"name": "JUMPDEST"
										},
										{
											"begin": 11729,
											"end": 11779,
											"name": "DIV"
										},
										{
											"begin": 11702,
											"end": 11712,
											"name": "DUP11"
										},
										{
											"begin": 11702,
											"end": 11726,
											"name": "PUSH",
											"value": "C0"
										},
										{
											"begin": 11702,
											"end": 11726,
											"name": "ADD"
										},
										{
											"begin": 11702,
											"end": 11779,
											"name": "DUP2"
										},
										{
											"begin": 11702,
											"end": 11779,
											"name": "DUP2"
										},
										{
											"begin": 11702,
											"end": 11779,
											"name": "MSTORE"
										},
										{
											"begin": 11702,
											"end": 11779,
											"name": "POP"
										},
										{
											"begin": 11702,
											"end": 11779,
											"name": "POP"
										},
										{
											"begin": 650,
											"end": 656,
											"name": "PUSH",
											"value": "186A0"
										},
										{
											"begin": 11813,
											"end": 11845,
											"name": "PUSH [tag]",
											"value": "376"
										},
										{
											"begin": 11827,
											"end": 11844,
											"name": "DUP5"
										},
										{
											"begin": 11813,
											"end": 11845,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 11813,
											"end": 11845,
											"name": "AND"
										},
										{
											"begin": 11813,
											"end": 11822,
											"name": "DUP4"
										},
										{
											"begin": 11813,
											"end": 11826,
											"name": "PUSH [tag]",
											"value": "239"
										},
										{
											"begin": 11813,
											"end": 11826,
											"name": "SWAP1"
										},
										{
											"begin": 11813,
											"end": 11845,
											"name": "SWAP2"
										},
										{
											"begin": 11813,
											"end": 11845,
											"name": "SWAP1"
										},
										{
											"begin": 11813,
											"end": 11845,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 11813,
											"end": 11845,
											"name": "AND"
										},
										{
											"begin": 11813,
											"end": 11845,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 11813,
											"end": 11845,
											"name": "tag",
											"value": "376"
										},
										{
											"begin": 11813,
											"end": 11845,
											"name": "JUMPDEST"
										},
										{
											"begin": 11813,
											"end": 11863,
											"name": "DUP2"
										},
										{
											"begin": 11813,
											"end": 11863,
											"name": "PUSH [tag]",
											"value": "377"
										},
										{
											"begin": 11813,
											"end": 11863,
											"name": "JUMPI"
										},
										{
											"begin": 11813,
											"end": 11863,
											"name": "INVALID"
										},
										{
											"begin": 11813,
											"end": 11863,
											"name": "tag",
											"value": "377"
										},
										{
											"begin": 11813,
											"end": 11863,
											"name": "JUMPDEST"
										},
										{
											"begin": 11813,
											"end": 11863,
											"name": "DIV"
										},
										{
											"begin": 11786,
											"end": 11796,
											"name": "DUP11"
										},
										{
											"begin": 11786,
											"end": 11810,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 11786,
											"end": 11810,
											"name": "ADD"
										},
										{
											"begin": 11786,
											"end": 11863,
											"name": "DUP2"
										},
										{
											"begin": 11786,
											"end": 11863,
											"name": "DUP2"
										},
										{
											"begin": 11786,
											"end": 11863,
											"name": "MSTORE"
										},
										{
											"begin": 11786,
											"end": 11863,
											"name": "POP"
										},
										{
											"begin": 11786,
											"end": 11863,
											"name": "POP"
										},
										{
											"begin": 11924,
											"end": 11932,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11935,
											"end": 11936,
											"name": "DUP1"
										},
										{
											"begin": 11924,
											"end": 11936,
											"name": "SWAP1"
										},
										{
											"begin": 11924,
											"end": 11936,
											"name": "POP"
										},
										{
											"begin": 11947,
											"end": 11973,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11996,
											"end": 11997,
											"name": "DUP1"
										},
										{
											"begin": 11976,
											"end": 11998,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11976,
											"end": 11998,
											"name": "AND"
										},
										{
											"begin": 11976,
											"end": 11984,
											"name": "DUP10"
										},
										{
											"begin": 11976,
											"end": 11998,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11976,
											"end": 11998,
											"name": "AND"
										},
										{
											"begin": 11976,
											"end": 11998,
											"name": "EQ"
										},
										{
											"begin": 11976,
											"end": 11998,
											"name": "ISZERO"
										},
										{
											"begin": 11976,
											"end": 12059,
											"name": "PUSH [tag]",
											"value": "378"
										},
										{
											"begin": 11976,
											"end": 12059,
											"name": "JUMPI"
										},
										{
											"begin": 12058,
											"end": 12059,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11976,
											"end": 12059,
											"name": "PUSH [tag]",
											"value": "379"
										},
										{
											"begin": 11976,
											"end": 12059,
											"name": "JUMP"
										},
										{
											"begin": 11976,
											"end": 12059,
											"name": "tag",
											"value": "378"
										},
										{
											"begin": 11976,
											"end": 12059,
											"name": "JUMPDEST"
										},
										{
											"begin": 12019,
											"end": 12026,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 12019,
											"end": 12026,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12019,
											"end": 12026,
											"name": "SWAP1"
										},
										{
											"begin": 12019,
											"end": 12026,
											"name": "SLOAD"
										},
										{
											"begin": 12019,
											"end": 12026,
											"name": "SWAP1"
										},
										{
											"begin": 12019,
											"end": 12026,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 12019,
											"end": 12026,
											"name": "EXP"
										},
										{
											"begin": 12019,
											"end": 12026,
											"name": "SWAP1"
										},
										{
											"begin": 12019,
											"end": 12026,
											"name": "DIV"
										},
										{
											"begin": 12019,
											"end": 12026,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12019,
											"end": 12026,
											"name": "AND"
										},
										{
											"begin": 12001,
											"end": 12045,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12001,
											"end": 12045,
											"name": "AND"
										},
										{
											"begin": 12001,
											"end": 12045,
											"name": "PUSH",
											"value": "7183D47C"
										},
										{
											"begin": 12046,
											"end": 12054,
											"name": "DUP11"
										},
										{
											"begin": 12001,
											"end": 12055,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12001,
											"end": 12055,
											"name": "MLOAD"
										},
										{
											"begin": 12001,
											"end": 12055,
											"name": "DUP3"
										},
										{
											"begin": 12001,
											"end": 12055,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 12001,
											"end": 12055,
											"name": "AND"
										},
										{
											"begin": 12001,
											"end": 12055,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 12001,
											"end": 12055,
											"name": "SHL"
										},
										{
											"begin": 12001,
											"end": 12055,
											"name": "DUP2"
										},
										{
											"begin": 12001,
											"end": 12055,
											"name": "MSTORE"
										},
										{
											"begin": 12001,
											"end": 12055,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 12001,
											"end": 12055,
											"name": "ADD"
										},
										{
											"begin": 12001,
											"end": 12055,
											"name": "DUP1"
										},
										{
											"begin": 12001,
											"end": 12055,
											"name": "DUP3"
										},
										{
											"begin": 12001,
											"end": 12055,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12001,
											"end": 12055,
											"name": "AND"
										},
										{
											"begin": 12001,
											"end": 12055,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12001,
											"end": 12055,
											"name": "AND"
										},
										{
											"begin": 12001,
											"end": 12055,
											"name": "DUP2"
										},
										{
											"begin": 12001,
											"end": 12055,
											"name": "MSTORE"
										},
										{
											"begin": 12001,
											"end": 12055,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12001,
											"end": 12055,
											"name": "ADD"
										},
										{
											"begin": 12001,
											"end": 12055,
											"name": "SWAP2"
										},
										{
											"begin": 12001,
											"end": 12055,
											"name": "POP"
										},
										{
											"begin": 12001,
											"end": 12055,
											"name": "POP"
										},
										{
											"begin": 12001,
											"end": 12055,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12001,
											"end": 12055,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12001,
											"end": 12055,
											"name": "MLOAD"
										},
										{
											"begin": 12001,
											"end": 12055,
											"name": "DUP1"
										},
										{
											"begin": 12001,
											"end": 12055,
											"name": "DUP4"
										},
										{
											"begin": 12001,
											"end": 12055,
											"name": "SUB"
										},
										{
											"begin": 12001,
											"end": 12055,
											"name": "DUP2"
										},
										{
											"begin": 12001,
											"end": 12055,
											"name": "DUP7"
										},
										{
											"begin": 12001,
											"end": 12055,
											"name": "DUP1"
										},
										{
											"begin": 12001,
											"end": 12055,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 12001,
											"end": 12055,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "380"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "380"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 12001,
											"end": 12055,
											"name": "POP"
										},
										{
											"begin": 12001,
											"end": 12055,
											"name": "GAS"
										},
										{
											"begin": 12001,
											"end": 12055,
											"name": "STATICCALL"
										},
										{
											"begin": 12001,
											"end": 12055,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "381"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "381"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 12001,
											"end": 12055,
											"name": "POP"
										},
										{
											"begin": 12001,
											"end": 12055,
											"name": "POP"
										},
										{
											"begin": 12001,
											"end": 12055,
											"name": "POP"
										},
										{
											"begin": 12001,
											"end": 12055,
											"name": "POP"
										},
										{
											"begin": 12001,
											"end": 12055,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12001,
											"end": 12055,
											"name": "MLOAD"
										},
										{
											"begin": 12001,
											"end": 12055,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "382"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "382"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 12001,
											"end": 12055,
											"name": "DUP2"
										},
										{
											"begin": 12001,
											"end": 12055,
											"name": "ADD"
										},
										{
											"begin": 12001,
											"end": 12055,
											"name": "SWAP1"
										},
										{
											"begin": 12001,
											"end": 12055,
											"name": "DUP1"
										},
										{
											"begin": 12001,
											"end": 12055,
											"name": "DUP1"
										},
										{
											"begin": 12001,
											"end": 12055,
											"name": "MLOAD"
										},
										{
											"begin": 12001,
											"end": 12055,
											"name": "SWAP1"
										},
										{
											"begin": 12001,
											"end": 12055,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12001,
											"end": 12055,
											"name": "ADD"
										},
										{
											"begin": 12001,
											"end": 12055,
											"name": "SWAP1"
										},
										{
											"begin": 12001,
											"end": 12055,
											"name": "SWAP3"
										},
										{
											"begin": 12001,
											"end": 12055,
											"name": "SWAP2"
										},
										{
											"begin": 12001,
											"end": 12055,
											"name": "SWAP1"
										},
										{
											"begin": 12001,
											"end": 12055,
											"name": "POP"
										},
										{
											"begin": 12001,
											"end": 12055,
											"name": "POP"
										},
										{
											"begin": 12001,
											"end": 12055,
											"name": "POP"
										},
										{
											"begin": 11976,
											"end": 12059,
											"name": "tag",
											"value": "379"
										},
										{
											"begin": 11976,
											"end": 12059,
											"name": "JUMPDEST"
										},
										{
											"begin": 11947,
											"end": 12059,
											"name": "SWAP1"
										},
										{
											"begin": 11947,
											"end": 12059,
											"name": "POP"
										},
										{
											"begin": 12096,
											"end": 12097,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12072,
											"end": 12093,
											"name": "DUP2"
										},
										{
											"begin": 12072,
											"end": 12097,
											"name": "GT"
										},
										{
											"begin": 12068,
											"end": 12663,
											"name": "ISZERO"
										},
										{
											"begin": 12068,
											"end": 12663,
											"name": "PUSH [tag]",
											"value": "383"
										},
										{
											"begin": 12068,
											"end": 12663,
											"name": "JUMPI"
										},
										{
											"begin": 12126,
											"end": 12127,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12114,
											"end": 12123,
											"name": "DUP5"
										},
										{
											"begin": 12114,
											"end": 12127,
											"name": "GT"
										},
										{
											"begin": 12110,
											"end": 12377,
											"name": "ISZERO"
										},
										{
											"begin": 12110,
											"end": 12377,
											"name": "PUSH [tag]",
											"value": "384"
										},
										{
											"begin": 12110,
											"end": 12377,
											"name": "JUMPI"
										},
										{
											"begin": 12230,
											"end": 12231,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 650,
											"end": 656,
											"name": "PUSH",
											"value": "186A0"
										},
										{
											"begin": 12211,
											"end": 12231,
											"name": "EXP"
										},
										{
											"begin": 12148,
											"end": 12207,
											"name": "PUSH [tag]",
											"value": "385"
										},
										{
											"begin": 12189,
											"end": 12206,
											"name": "DUP8"
										},
										{
											"begin": 12148,
											"end": 12207,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 12148,
											"end": 12207,
											"name": "AND"
										},
										{
											"begin": 12148,
											"end": 12184,
											"name": "PUSH [tag]",
											"value": "386"
										},
										{
											"begin": 12162,
											"end": 12183,
											"name": "DUP5"
										},
										{
											"begin": 12148,
											"end": 12157,
											"name": "DUP9"
										},
										{
											"begin": 12148,
											"end": 12161,
											"name": "PUSH [tag]",
											"value": "239"
										},
										{
											"begin": 12148,
											"end": 12161,
											"name": "SWAP1"
										},
										{
											"begin": 12148,
											"end": 12184,
											"name": "SWAP2"
										},
										{
											"begin": 12148,
											"end": 12184,
											"name": "SWAP1"
										},
										{
											"begin": 12148,
											"end": 12184,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 12148,
											"end": 12184,
											"name": "AND"
										},
										{
											"begin": 12148,
											"end": 12184,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12148,
											"end": 12184,
											"name": "tag",
											"value": "386"
										},
										{
											"begin": 12148,
											"end": 12184,
											"name": "JUMPDEST"
										},
										{
											"begin": 12148,
											"end": 12188,
											"name": "PUSH [tag]",
											"value": "239"
										},
										{
											"begin": 12148,
											"end": 12188,
											"name": "SWAP1"
										},
										{
											"begin": 12148,
											"end": 12207,
											"name": "SWAP2"
										},
										{
											"begin": 12148,
											"end": 12207,
											"name": "SWAP1"
										},
										{
											"begin": 12148,
											"end": 12207,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 12148,
											"end": 12207,
											"name": "AND"
										},
										{
											"begin": 12148,
											"end": 12207,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12148,
											"end": 12207,
											"name": "tag",
											"value": "385"
										},
										{
											"begin": 12148,
											"end": 12207,
											"name": "JUMPDEST"
										},
										{
											"begin": 12148,
											"end": 12232,
											"name": "DUP2"
										},
										{
											"begin": 12148,
											"end": 12232,
											"name": "PUSH [tag]",
											"value": "387"
										},
										{
											"begin": 12148,
											"end": 12232,
											"name": "JUMPI"
										},
										{
											"begin": 12148,
											"end": 12232,
											"name": "INVALID"
										},
										{
											"begin": 12148,
											"end": 12232,
											"name": "tag",
											"value": "387"
										},
										{
											"begin": 12148,
											"end": 12232,
											"name": "JUMPDEST"
										},
										{
											"begin": 12148,
											"end": 12232,
											"name": "DIV"
										},
										{
											"begin": 12142,
											"end": 12232,
											"name": "SWAP2"
										},
										{
											"begin": 12142,
											"end": 12232,
											"name": "POP"
										},
										{
											"begin": 12272,
											"end": 12305,
											"name": "PUSH [tag]",
											"value": "388"
										},
										{
											"begin": 12301,
											"end": 12304,
											"name": "DUP3"
										},
										{
											"begin": 12272,
											"end": 12282,
											"name": "DUP14"
										},
										{
											"begin": 12272,
											"end": 12296,
											"name": "PUSH",
											"value": "C0"
										},
										{
											"begin": 12272,
											"end": 12296,
											"name": "ADD"
										},
										{
											"begin": 12272,
											"end": 12296,
											"name": "MLOAD"
										},
										{
											"begin": 12272,
											"end": 12300,
											"name": "PUSH [tag]",
											"value": "173"
										},
										{
											"begin": 12272,
											"end": 12300,
											"name": "SWAP1"
										},
										{
											"begin": 12272,
											"end": 12305,
											"name": "SWAP2"
										},
										{
											"begin": 12272,
											"end": 12305,
											"name": "SWAP1"
										},
										{
											"begin": 12272,
											"end": 12305,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 12272,
											"end": 12305,
											"name": "AND"
										},
										{
											"begin": 12272,
											"end": 12305,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12272,
											"end": 12305,
											"name": "tag",
											"value": "388"
										},
										{
											"begin": 12272,
											"end": 12305,
											"name": "JUMPDEST"
										},
										{
											"begin": 12245,
											"end": 12255,
											"name": "DUP13"
										},
										{
											"begin": 12245,
											"end": 12269,
											"name": "PUSH",
											"value": "C0"
										},
										{
											"begin": 12245,
											"end": 12269,
											"name": "ADD"
										},
										{
											"begin": 12245,
											"end": 12305,
											"name": "DUP2"
										},
										{
											"begin": 12245,
											"end": 12305,
											"name": "DUP2"
										},
										{
											"begin": 12245,
											"end": 12305,
											"name": "MSTORE"
										},
										{
											"begin": 12245,
											"end": 12305,
											"name": "POP"
										},
										{
											"begin": 12245,
											"end": 12305,
											"name": "POP"
										},
										{
											"begin": 12318,
											"end": 12365,
											"name": "PUSH [tag]",
											"value": "389"
										},
										{
											"begin": 12332,
											"end": 12342,
											"name": "DUP13"
										},
										{
											"begin": 12332,
											"end": 12349,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12332,
											"end": 12349,
											"name": "ADD"
										},
										{
											"begin": 12332,
											"end": 12349,
											"name": "MLOAD"
										},
										{
											"begin": 12351,
											"end": 12359,
											"name": "DUP11"
										},
										{
											"begin": 12361,
											"end": 12364,
											"name": "DUP5"
										},
										{
											"begin": 12318,
											"end": 12331,
											"name": "PUSH [tag]",
											"value": "279"
										},
										{
											"begin": 12318,
											"end": 12365,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12318,
											"end": 12365,
											"name": "tag",
											"value": "389"
										},
										{
											"begin": 12318,
											"end": 12365,
											"name": "JUMPDEST"
										},
										{
											"begin": 12110,
											"end": 12377,
											"name": "tag",
											"value": "384"
										},
										{
											"begin": 12110,
											"end": 12377,
											"name": "JUMPDEST"
										},
										{
											"begin": 12403,
											"end": 12404,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12391,
											"end": 12400,
											"name": "DUP4"
										},
										{
											"begin": 12391,
											"end": 12404,
											"name": "GT"
										},
										{
											"begin": 12387,
											"end": 12654,
											"name": "ISZERO"
										},
										{
											"begin": 12387,
											"end": 12654,
											"name": "PUSH [tag]",
											"value": "390"
										},
										{
											"begin": 12387,
											"end": 12654,
											"name": "JUMPI"
										},
										{
											"begin": 12507,
											"end": 12508,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 650,
											"end": 656,
											"name": "PUSH",
											"value": "186A0"
										},
										{
											"begin": 12488,
											"end": 12508,
											"name": "EXP"
										},
										{
											"begin": 12425,
											"end": 12484,
											"name": "PUSH [tag]",
											"value": "391"
										},
										{
											"begin": 12466,
											"end": 12483,
											"name": "DUP7"
										},
										{
											"begin": 12425,
											"end": 12484,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 12425,
											"end": 12484,
											"name": "AND"
										},
										{
											"begin": 12425,
											"end": 12461,
											"name": "PUSH [tag]",
											"value": "392"
										},
										{
											"begin": 12439,
											"end": 12460,
											"name": "DUP5"
										},
										{
											"begin": 12425,
											"end": 12434,
											"name": "DUP8"
										},
										{
											"begin": 12425,
											"end": 12438,
											"name": "PUSH [tag]",
											"value": "239"
										},
										{
											"begin": 12425,
											"end": 12438,
											"name": "SWAP1"
										},
										{
											"begin": 12425,
											"end": 12461,
											"name": "SWAP2"
										},
										{
											"begin": 12425,
											"end": 12461,
											"name": "SWAP1"
										},
										{
											"begin": 12425,
											"end": 12461,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 12425,
											"end": 12461,
											"name": "AND"
										},
										{
											"begin": 12425,
											"end": 12461,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12425,
											"end": 12461,
											"name": "tag",
											"value": "392"
										},
										{
											"begin": 12425,
											"end": 12461,
											"name": "JUMPDEST"
										},
										{
											"begin": 12425,
											"end": 12465,
											"name": "PUSH [tag]",
											"value": "239"
										},
										{
											"begin": 12425,
											"end": 12465,
											"name": "SWAP1"
										},
										{
											"begin": 12425,
											"end": 12484,
											"name": "SWAP2"
										},
										{
											"begin": 12425,
											"end": 12484,
											"name": "SWAP1"
										},
										{
											"begin": 12425,
											"end": 12484,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 12425,
											"end": 12484,
											"name": "AND"
										},
										{
											"begin": 12425,
											"end": 12484,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12425,
											"end": 12484,
											"name": "tag",
											"value": "391"
										},
										{
											"begin": 12425,
											"end": 12484,
											"name": "JUMPDEST"
										},
										{
											"begin": 12425,
											"end": 12509,
											"name": "DUP2"
										},
										{
											"begin": 12425,
											"end": 12509,
											"name": "PUSH [tag]",
											"value": "393"
										},
										{
											"begin": 12425,
											"end": 12509,
											"name": "JUMPI"
										},
										{
											"begin": 12425,
											"end": 12509,
											"name": "INVALID"
										},
										{
											"begin": 12425,
											"end": 12509,
											"name": "tag",
											"value": "393"
										},
										{
											"begin": 12425,
											"end": 12509,
											"name": "JUMPDEST"
										},
										{
											"begin": 12425,
											"end": 12509,
											"name": "DIV"
										},
										{
											"begin": 12419,
											"end": 12509,
											"name": "SWAP2"
										},
										{
											"begin": 12419,
											"end": 12509,
											"name": "POP"
										},
										{
											"begin": 12549,
											"end": 12582,
											"name": "PUSH [tag]",
											"value": "394"
										},
										{
											"begin": 12578,
											"end": 12581,
											"name": "DUP3"
										},
										{
											"begin": 12549,
											"end": 12559,
											"name": "DUP14"
										},
										{
											"begin": 12549,
											"end": 12573,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 12549,
											"end": 12573,
											"name": "ADD"
										},
										{
											"begin": 12549,
											"end": 12573,
											"name": "MLOAD"
										},
										{
											"begin": 12549,
											"end": 12577,
											"name": "PUSH [tag]",
											"value": "173"
										},
										{
											"begin": 12549,
											"end": 12577,
											"name": "SWAP1"
										},
										{
											"begin": 12549,
											"end": 12582,
											"name": "SWAP2"
										},
										{
											"begin": 12549,
											"end": 12582,
											"name": "SWAP1"
										},
										{
											"begin": 12549,
											"end": 12582,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 12549,
											"end": 12582,
											"name": "AND"
										},
										{
											"begin": 12549,
											"end": 12582,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12549,
											"end": 12582,
											"name": "tag",
											"value": "394"
										},
										{
											"begin": 12549,
											"end": 12582,
											"name": "JUMPDEST"
										},
										{
											"begin": 12522,
											"end": 12532,
											"name": "DUP13"
										},
										{
											"begin": 12522,
											"end": 12546,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 12522,
											"end": 12546,
											"name": "ADD"
										},
										{
											"begin": 12522,
											"end": 12582,
											"name": "DUP2"
										},
										{
											"begin": 12522,
											"end": 12582,
											"name": "DUP2"
										},
										{
											"begin": 12522,
											"end": 12582,
											"name": "MSTORE"
										},
										{
											"begin": 12522,
											"end": 12582,
											"name": "POP"
										},
										{
											"begin": 12522,
											"end": 12582,
											"name": "POP"
										},
										{
											"begin": 12595,
											"end": 12642,
											"name": "PUSH [tag]",
											"value": "395"
										},
										{
											"begin": 12609,
											"end": 12619,
											"name": "DUP13"
										},
										{
											"begin": 12609,
											"end": 12626,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12609,
											"end": 12626,
											"name": "ADD"
										},
										{
											"begin": 12609,
											"end": 12626,
											"name": "MLOAD"
										},
										{
											"begin": 12628,
											"end": 12636,
											"name": "DUP11"
										},
										{
											"begin": 12638,
											"end": 12641,
											"name": "DUP5"
										},
										{
											"begin": 12595,
											"end": 12608,
											"name": "PUSH [tag]",
											"value": "279"
										},
										{
											"begin": 12595,
											"end": 12642,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12595,
											"end": 12642,
											"name": "tag",
											"value": "395"
										},
										{
											"begin": 12595,
											"end": 12642,
											"name": "JUMPDEST"
										},
										{
											"begin": 12387,
											"end": 12654,
											"name": "tag",
											"value": "390"
										},
										{
											"begin": 12387,
											"end": 12654,
											"name": "JUMPDEST"
										},
										{
											"begin": 12068,
											"end": 12663,
											"name": "tag",
											"value": "383"
										},
										{
											"begin": 12068,
											"end": 12663,
											"name": "JUMPDEST"
										},
										{
											"begin": 12676,
											"end": 12686,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 12676,
											"end": 12686,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12676,
											"end": 12686,
											"name": "SWAP1"
										},
										{
											"begin": 12676,
											"end": 12686,
											"name": "SLOAD"
										},
										{
											"begin": 12676,
											"end": 12686,
											"name": "SWAP1"
										},
										{
											"begin": 12676,
											"end": 12686,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 12676,
											"end": 12686,
											"name": "EXP"
										},
										{
											"begin": 12676,
											"end": 12686,
											"name": "SWAP1"
										},
										{
											"begin": 12676,
											"end": 12686,
											"name": "DIV"
										},
										{
											"begin": 12676,
											"end": 12686,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 12676,
											"end": 12686,
											"name": "AND"
										},
										{
											"begin": 12673,
											"end": 13470,
											"name": "ISZERO"
										},
										{
											"begin": 12673,
											"end": 13470,
											"name": "PUSH [tag]",
											"value": "396"
										},
										{
											"begin": 12673,
											"end": 13470,
											"name": "JUMPI"
										},
										{
											"begin": 12699,
											"end": 12717,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12719,
											"end": 12732,
											"name": "DUP1"
										},
										{
											"begin": 12754,
											"end": 12761,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 12754,
											"end": 12761,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12754,
											"end": 12761,
											"name": "SWAP1"
										},
										{
											"begin": 12754,
											"end": 12761,
											"name": "SLOAD"
										},
										{
											"begin": 12754,
											"end": 12761,
											"name": "SWAP1"
										},
										{
											"begin": 12754,
											"end": 12761,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 12754,
											"end": 12761,
											"name": "EXP"
										},
										{
											"begin": 12754,
											"end": 12761,
											"name": "SWAP1"
										},
										{
											"begin": 12754,
											"end": 12761,
											"name": "DIV"
										},
										{
											"begin": 12754,
											"end": 12761,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12754,
											"end": 12761,
											"name": "AND"
										},
										{
											"begin": 12736,
											"end": 12770,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12736,
											"end": 12770,
											"name": "AND"
										},
										{
											"begin": 12736,
											"end": 12770,
											"name": "PUSH",
											"value": "995B5AAE"
										},
										{
											"begin": 12736,
											"end": 12772,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12736,
											"end": 12772,
											"name": "MLOAD"
										},
										{
											"begin": 12736,
											"end": 12772,
											"name": "DUP2"
										},
										{
											"begin": 12736,
											"end": 12772,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 12736,
											"end": 12772,
											"name": "AND"
										},
										{
											"begin": 12736,
											"end": 12772,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 12736,
											"end": 12772,
											"name": "SHL"
										},
										{
											"begin": 12736,
											"end": 12772,
											"name": "DUP2"
										},
										{
											"begin": 12736,
											"end": 12772,
											"name": "MSTORE"
										},
										{
											"begin": 12736,
											"end": 12772,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 12736,
											"end": 12772,
											"name": "ADD"
										},
										{
											"begin": 12736,
											"end": 12772,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12736,
											"end": 12772,
											"name": "DUP1"
										},
										{
											"begin": 12736,
											"end": 12772,
											"name": "MLOAD"
										},
										{
											"begin": 12736,
											"end": 12772,
											"name": "DUP1"
										},
										{
											"begin": 12736,
											"end": 12772,
											"name": "DUP4"
										},
										{
											"begin": 12736,
											"end": 12772,
											"name": "SUB"
										},
										{
											"begin": 12736,
											"end": 12772,
											"name": "DUP2"
										},
										{
											"begin": 12736,
											"end": 12772,
											"name": "DUP7"
										},
										{
											"begin": 12736,
											"end": 12772,
											"name": "DUP1"
										},
										{
											"begin": 12736,
											"end": 12772,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 12736,
											"end": 12772,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "397"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "397"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 12736,
											"end": 12772,
											"name": "POP"
										},
										{
											"begin": 12736,
											"end": 12772,
											"name": "GAS"
										},
										{
											"begin": 12736,
											"end": 12772,
											"name": "STATICCALL"
										},
										{
											"begin": 12736,
											"end": 12772,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "398"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "398"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 12736,
											"end": 12772,
											"name": "POP"
										},
										{
											"begin": 12736,
											"end": 12772,
											"name": "POP"
										},
										{
											"begin": 12736,
											"end": 12772,
											"name": "POP"
										},
										{
											"begin": 12736,
											"end": 12772,
											"name": "POP"
										},
										{
											"begin": 12736,
											"end": 12772,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12736,
											"end": 12772,
											"name": "MLOAD"
										},
										{
											"begin": 12736,
											"end": 12772,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "399"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "399"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 12736,
											"end": 12772,
											"name": "DUP2"
										},
										{
											"begin": 12736,
											"end": 12772,
											"name": "ADD"
										},
										{
											"begin": 12736,
											"end": 12772,
											"name": "SWAP1"
										},
										{
											"begin": 12736,
											"end": 12772,
											"name": "DUP1"
										},
										{
											"begin": 12736,
											"end": 12772,
											"name": "DUP1"
										},
										{
											"begin": 12736,
											"end": 12772,
											"name": "MLOAD"
										},
										{
											"begin": 12736,
											"end": 12772,
											"name": "SWAP1"
										},
										{
											"begin": 12736,
											"end": 12772,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12736,
											"end": 12772,
											"name": "ADD"
										},
										{
											"begin": 12736,
											"end": 12772,
											"name": "SWAP1"
										},
										{
											"begin": 12736,
											"end": 12772,
											"name": "SWAP3"
										},
										{
											"begin": 12736,
											"end": 12772,
											"name": "SWAP2"
										},
										{
											"begin": 12736,
											"end": 12772,
											"name": "SWAP1"
										},
										{
											"begin": 12736,
											"end": 12772,
											"name": "DUP1"
										},
										{
											"begin": 12736,
											"end": 12772,
											"name": "MLOAD"
										},
										{
											"begin": 12736,
											"end": 12772,
											"name": "SWAP1"
										},
										{
											"begin": 12736,
											"end": 12772,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12736,
											"end": 12772,
											"name": "ADD"
										},
										{
											"begin": 12736,
											"end": 12772,
											"name": "SWAP1"
										},
										{
											"begin": 12736,
											"end": 12772,
											"name": "SWAP3"
										},
										{
											"begin": 12736,
											"end": 12772,
											"name": "SWAP2"
										},
										{
											"begin": 12736,
											"end": 12772,
											"name": "SWAP1"
										},
										{
											"begin": 12736,
											"end": 12772,
											"name": "POP"
										},
										{
											"begin": 12736,
											"end": 12772,
											"name": "POP"
										},
										{
											"begin": 12736,
											"end": 12772,
											"name": "POP"
										},
										{
											"begin": 12698,
											"end": 12772,
											"name": "SWAP2"
										},
										{
											"begin": 12698,
											"end": 12772,
											"name": "POP"
										},
										{
											"begin": 12698,
											"end": 12772,
											"name": "SWAP2"
										},
										{
											"begin": 12698,
											"end": 12772,
											"name": "POP"
										},
										{
											"begin": 12803,
											"end": 12804,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12786,
											"end": 12805,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12786,
											"end": 12805,
											"name": "AND"
										},
										{
											"begin": 12786,
											"end": 12791,
											"name": "DUP2"
										},
										{
											"begin": 12786,
											"end": 12805,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12786,
											"end": 12805,
											"name": "AND"
										},
										{
											"begin": 12786,
											"end": 12805,
											"name": "EQ"
										},
										{
											"begin": 12783,
											"end": 13461,
											"name": "PUSH [tag]",
											"value": "400"
										},
										{
											"begin": 12783,
											"end": 13461,
											"name": "JUMPI"
										},
										{
											"begin": 12836,
											"end": 12897,
											"name": "PUSH [tag]",
											"value": "401"
										},
										{
											"begin": 12883,
											"end": 12896,
											"name": "DUP3"
										},
										{
											"begin": 12836,
											"end": 12878,
											"name": "PUSH [tag]",
											"value": "402"
										},
										{
											"begin": 12856,
											"end": 12877,
											"name": "DUP6"
										},
										{
											"begin": 650,
											"end": 656,
											"name": "PUSH",
											"value": "186A0"
										},
										{
											"begin": 12836,
											"end": 12855,
											"name": "PUSH [tag]",
											"value": "173"
										},
										{
											"begin": 12836,
											"end": 12855,
											"name": "SWAP1"
										},
										{
											"begin": 12836,
											"end": 12878,
											"name": "SWAP2"
										},
										{
											"begin": 12836,
											"end": 12878,
											"name": "SWAP1"
										},
										{
											"begin": 12836,
											"end": 12878,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 12836,
											"end": 12878,
											"name": "AND"
										},
										{
											"begin": 12836,
											"end": 12878,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12836,
											"end": 12878,
											"name": "tag",
											"value": "402"
										},
										{
											"begin": 12836,
											"end": 12878,
											"name": "JUMPDEST"
										},
										{
											"begin": 12836,
											"end": 12882,
											"name": "PUSH [tag]",
											"value": "239"
										},
										{
											"begin": 12836,
											"end": 12882,
											"name": "SWAP1"
										},
										{
											"begin": 12836,
											"end": 12897,
											"name": "SWAP2"
										},
										{
											"begin": 12836,
											"end": 12897,
											"name": "SWAP1"
										},
										{
											"begin": 12836,
											"end": 12897,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 12836,
											"end": 12897,
											"name": "AND"
										},
										{
											"begin": 12836,
											"end": 12897,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12836,
											"end": 12897,
											"name": "tag",
											"value": "401"
										},
										{
											"begin": 12836,
											"end": 12897,
											"name": "JUMPDEST"
										},
										{
											"begin": 12820,
											"end": 12897,
											"name": "SWAP2"
										},
										{
											"begin": 12820,
											"end": 12897,
											"name": "POP"
										},
										{
											"begin": 12926,
											"end": 12927,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12914,
											"end": 12923,
											"name": "DUP7"
										},
										{
											"begin": 12914,
											"end": 12927,
											"name": "GT"
										},
										{
											"begin": 12910,
											"end": 13174,
											"name": "ISZERO"
										},
										{
											"begin": 12910,
											"end": 13174,
											"name": "PUSH [tag]",
											"value": "403"
										},
										{
											"begin": 12910,
											"end": 13174,
											"name": "JUMPI"
										},
										{
											"begin": 13024,
											"end": 13025,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 650,
											"end": 656,
											"name": "PUSH",
											"value": "186A0"
										},
										{
											"begin": 13005,
											"end": 13025,
											"name": "EXP"
										},
										{
											"begin": 12950,
											"end": 13001,
											"name": "PUSH [tag]",
											"value": "404"
										},
										{
											"begin": 12983,
											"end": 13000,
											"name": "DUP10"
										},
										{
											"begin": 12950,
											"end": 13001,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 12950,
											"end": 13001,
											"name": "AND"
										},
										{
											"begin": 12950,
											"end": 12978,
											"name": "PUSH [tag]",
											"value": "405"
										},
										{
											"begin": 12964,
											"end": 12977,
											"name": "DUP6"
										},
										{
											"begin": 12950,
											"end": 12959,
											"name": "DUP11"
										},
										{
											"begin": 12950,
											"end": 12963,
											"name": "PUSH [tag]",
											"value": "239"
										},
										{
											"begin": 12950,
											"end": 12963,
											"name": "SWAP1"
										},
										{
											"begin": 12950,
											"end": 12978,
											"name": "SWAP2"
										},
										{
											"begin": 12950,
											"end": 12978,
											"name": "SWAP1"
										},
										{
											"begin": 12950,
											"end": 12978,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 12950,
											"end": 12978,
											"name": "AND"
										},
										{
											"begin": 12950,
											"end": 12978,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12950,
											"end": 12978,
											"name": "tag",
											"value": "405"
										},
										{
											"begin": 12950,
											"end": 12978,
											"name": "JUMPDEST"
										},
										{
											"begin": 12950,
											"end": 12982,
											"name": "PUSH [tag]",
											"value": "239"
										},
										{
											"begin": 12950,
											"end": 12982,
											"name": "SWAP1"
										},
										{
											"begin": 12950,
											"end": 13001,
											"name": "SWAP2"
										},
										{
											"begin": 12950,
											"end": 13001,
											"name": "SWAP1"
										},
										{
											"begin": 12950,
											"end": 13001,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 12950,
											"end": 13001,
											"name": "AND"
										},
										{
											"begin": 12950,
											"end": 13001,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12950,
											"end": 13001,
											"name": "tag",
											"value": "404"
										},
										{
											"begin": 12950,
											"end": 13001,
											"name": "JUMPDEST"
										},
										{
											"begin": 12950,
											"end": 13026,
											"name": "DUP2"
										},
										{
											"begin": 12950,
											"end": 13026,
											"name": "PUSH [tag]",
											"value": "406"
										},
										{
											"begin": 12950,
											"end": 13026,
											"name": "JUMPI"
										},
										{
											"begin": 12950,
											"end": 13026,
											"name": "INVALID"
										},
										{
											"begin": 12950,
											"end": 13026,
											"name": "tag",
											"value": "406"
										},
										{
											"begin": 12950,
											"end": 13026,
											"name": "JUMPDEST"
										},
										{
											"begin": 12950,
											"end": 13026,
											"name": "DIV"
										},
										{
											"begin": 12944,
											"end": 13026,
											"name": "SWAP4"
										},
										{
											"begin": 12944,
											"end": 13026,
											"name": "POP"
										},
										{
											"begin": 13068,
											"end": 13101,
											"name": "PUSH [tag]",
											"value": "407"
										},
										{
											"begin": 13097,
											"end": 13100,
											"name": "DUP5"
										},
										{
											"begin": 13068,
											"end": 13078,
											"name": "DUP16"
										},
										{
											"begin": 13068,
											"end": 13092,
											"name": "PUSH",
											"value": "C0"
										},
										{
											"begin": 13068,
											"end": 13092,
											"name": "ADD"
										},
										{
											"begin": 13068,
											"end": 13092,
											"name": "MLOAD"
										},
										{
											"begin": 13068,
											"end": 13096,
											"name": "PUSH [tag]",
											"value": "173"
										},
										{
											"begin": 13068,
											"end": 13096,
											"name": "SWAP1"
										},
										{
											"begin": 13068,
											"end": 13101,
											"name": "SWAP2"
										},
										{
											"begin": 13068,
											"end": 13101,
											"name": "SWAP1"
										},
										{
											"begin": 13068,
											"end": 13101,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 13068,
											"end": 13101,
											"name": "AND"
										},
										{
											"begin": 13068,
											"end": 13101,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13068,
											"end": 13101,
											"name": "tag",
											"value": "407"
										},
										{
											"begin": 13068,
											"end": 13101,
											"name": "JUMPDEST"
										},
										{
											"begin": 13041,
											"end": 13051,
											"name": "DUP15"
										},
										{
											"begin": 13041,
											"end": 13065,
											"name": "PUSH",
											"value": "C0"
										},
										{
											"begin": 13041,
											"end": 13065,
											"name": "ADD"
										},
										{
											"begin": 13041,
											"end": 13101,
											"name": "DUP2"
										},
										{
											"begin": 13041,
											"end": 13101,
											"name": "DUP2"
										},
										{
											"begin": 13041,
											"end": 13101,
											"name": "MSTORE"
										},
										{
											"begin": 13041,
											"end": 13101,
											"name": "POP"
										},
										{
											"begin": 13041,
											"end": 13101,
											"name": "POP"
										},
										{
											"begin": 13116,
											"end": 13160,
											"name": "PUSH [tag]",
											"value": "408"
										},
										{
											"begin": 13130,
											"end": 13140,
											"name": "DUP15"
										},
										{
											"begin": 13130,
											"end": 13147,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13130,
											"end": 13147,
											"name": "ADD"
										},
										{
											"begin": 13130,
											"end": 13147,
											"name": "MLOAD"
										},
										{
											"begin": 13149,
											"end": 13154,
											"name": "DUP3"
										},
										{
											"begin": 13156,
											"end": 13159,
											"name": "DUP7"
										},
										{
											"begin": 13116,
											"end": 13129,
											"name": "PUSH [tag]",
											"value": "279"
										},
										{
											"begin": 13116,
											"end": 13160,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13116,
											"end": 13160,
											"name": "tag",
											"value": "408"
										},
										{
											"begin": 13116,
											"end": 13160,
											"name": "JUMPDEST"
										},
										{
											"begin": 12910,
											"end": 13174,
											"name": "tag",
											"value": "403"
										},
										{
											"begin": 12910,
											"end": 13174,
											"name": "JUMPDEST"
										},
										{
											"begin": 13202,
											"end": 13203,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13190,
											"end": 13199,
											"name": "DUP6"
										},
										{
											"begin": 13190,
											"end": 13203,
											"name": "GT"
										},
										{
											"begin": 13186,
											"end": 13450,
											"name": "ISZERO"
										},
										{
											"begin": 13186,
											"end": 13450,
											"name": "PUSH [tag]",
											"value": "409"
										},
										{
											"begin": 13186,
											"end": 13450,
											"name": "JUMPI"
										},
										{
											"begin": 13300,
											"end": 13301,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 650,
											"end": 656,
											"name": "PUSH",
											"value": "186A0"
										},
										{
											"begin": 13281,
											"end": 13301,
											"name": "EXP"
										},
										{
											"begin": 13226,
											"end": 13277,
											"name": "PUSH [tag]",
											"value": "410"
										},
										{
											"begin": 13259,
											"end": 13276,
											"name": "DUP9"
										},
										{
											"begin": 13226,
											"end": 13277,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 13226,
											"end": 13277,
											"name": "AND"
										},
										{
											"begin": 13226,
											"end": 13254,
											"name": "PUSH [tag]",
											"value": "411"
										},
										{
											"begin": 13240,
											"end": 13253,
											"name": "DUP6"
										},
										{
											"begin": 13226,
											"end": 13235,
											"name": "DUP10"
										},
										{
											"begin": 13226,
											"end": 13239,
											"name": "PUSH [tag]",
											"value": "239"
										},
										{
											"begin": 13226,
											"end": 13239,
											"name": "SWAP1"
										},
										{
											"begin": 13226,
											"end": 13254,
											"name": "SWAP2"
										},
										{
											"begin": 13226,
											"end": 13254,
											"name": "SWAP1"
										},
										{
											"begin": 13226,
											"end": 13254,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 13226,
											"end": 13254,
											"name": "AND"
										},
										{
											"begin": 13226,
											"end": 13254,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13226,
											"end": 13254,
											"name": "tag",
											"value": "411"
										},
										{
											"begin": 13226,
											"end": 13254,
											"name": "JUMPDEST"
										},
										{
											"begin": 13226,
											"end": 13258,
											"name": "PUSH [tag]",
											"value": "239"
										},
										{
											"begin": 13226,
											"end": 13258,
											"name": "SWAP1"
										},
										{
											"begin": 13226,
											"end": 13277,
											"name": "SWAP2"
										},
										{
											"begin": 13226,
											"end": 13277,
											"name": "SWAP1"
										},
										{
											"begin": 13226,
											"end": 13277,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 13226,
											"end": 13277,
											"name": "AND"
										},
										{
											"begin": 13226,
											"end": 13277,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13226,
											"end": 13277,
											"name": "tag",
											"value": "410"
										},
										{
											"begin": 13226,
											"end": 13277,
											"name": "JUMPDEST"
										},
										{
											"begin": 13226,
											"end": 13302,
											"name": "DUP2"
										},
										{
											"begin": 13226,
											"end": 13302,
											"name": "PUSH [tag]",
											"value": "412"
										},
										{
											"begin": 13226,
											"end": 13302,
											"name": "JUMPI"
										},
										{
											"begin": 13226,
											"end": 13302,
											"name": "INVALID"
										},
										{
											"begin": 13226,
											"end": 13302,
											"name": "tag",
											"value": "412"
										},
										{
											"begin": 13226,
											"end": 13302,
											"name": "JUMPDEST"
										},
										{
											"begin": 13226,
											"end": 13302,
											"name": "DIV"
										},
										{
											"begin": 13220,
											"end": 13302,
											"name": "SWAP4"
										},
										{
											"begin": 13220,
											"end": 13302,
											"name": "POP"
										},
										{
											"begin": 13344,
											"end": 13377,
											"name": "PUSH [tag]",
											"value": "413"
										},
										{
											"begin": 13373,
											"end": 13376,
											"name": "DUP5"
										},
										{
											"begin": 13344,
											"end": 13354,
											"name": "DUP16"
										},
										{
											"begin": 13344,
											"end": 13368,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 13344,
											"end": 13368,
											"name": "ADD"
										},
										{
											"begin": 13344,
											"end": 13368,
											"name": "MLOAD"
										},
										{
											"begin": 13344,
											"end": 13372,
											"name": "PUSH [tag]",
											"value": "173"
										},
										{
											"begin": 13344,
											"end": 13372,
											"name": "SWAP1"
										},
										{
											"begin": 13344,
											"end": 13377,
											"name": "SWAP2"
										},
										{
											"begin": 13344,
											"end": 13377,
											"name": "SWAP1"
										},
										{
											"begin": 13344,
											"end": 13377,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 13344,
											"end": 13377,
											"name": "AND"
										},
										{
											"begin": 13344,
											"end": 13377,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13344,
											"end": 13377,
											"name": "tag",
											"value": "413"
										},
										{
											"begin": 13344,
											"end": 13377,
											"name": "JUMPDEST"
										},
										{
											"begin": 13317,
											"end": 13327,
											"name": "DUP15"
										},
										{
											"begin": 13317,
											"end": 13341,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 13317,
											"end": 13341,
											"name": "ADD"
										},
										{
											"begin": 13317,
											"end": 13377,
											"name": "DUP2"
										},
										{
											"begin": 13317,
											"end": 13377,
											"name": "DUP2"
										},
										{
											"begin": 13317,
											"end": 13377,
											"name": "MSTORE"
										},
										{
											"begin": 13317,
											"end": 13377,
											"name": "POP"
										},
										{
											"begin": 13317,
											"end": 13377,
											"name": "POP"
										},
										{
											"begin": 13392,
											"end": 13436,
											"name": "PUSH [tag]",
											"value": "414"
										},
										{
											"begin": 13406,
											"end": 13416,
											"name": "DUP15"
										},
										{
											"begin": 13406,
											"end": 13423,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13406,
											"end": 13423,
											"name": "ADD"
										},
										{
											"begin": 13406,
											"end": 13423,
											"name": "MLOAD"
										},
										{
											"begin": 13425,
											"end": 13430,
											"name": "DUP3"
										},
										{
											"begin": 13432,
											"end": 13435,
											"name": "DUP7"
										},
										{
											"begin": 13392,
											"end": 13405,
											"name": "PUSH [tag]",
											"value": "279"
										},
										{
											"begin": 13392,
											"end": 13436,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13392,
											"end": 13436,
											"name": "tag",
											"value": "414"
										},
										{
											"begin": 13392,
											"end": 13436,
											"name": "JUMPDEST"
										},
										{
											"begin": 13186,
											"end": 13450,
											"name": "tag",
											"value": "409"
										},
										{
											"begin": 13186,
											"end": 13450,
											"name": "JUMPDEST"
										},
										{
											"begin": 12783,
											"end": 13461,
											"name": "tag",
											"value": "400"
										},
										{
											"begin": 12783,
											"end": 13461,
											"name": "JUMPDEST"
										},
										{
											"begin": 12673,
											"end": 13470,
											"name": "POP"
										},
										{
											"begin": 12673,
											"end": 13470,
											"name": "POP"
										},
										{
											"begin": 12673,
											"end": 13470,
											"name": "tag",
											"value": "396"
										},
										{
											"begin": 12673,
											"end": 13470,
											"name": "JUMPDEST"
										},
										{
											"begin": 13528,
											"end": 13529,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13516,
											"end": 13525,
											"name": "DUP5"
										},
										{
											"begin": 13516,
											"end": 13529,
											"name": "GT"
										},
										{
											"begin": 13512,
											"end": 13603,
											"name": "ISZERO"
										},
										{
											"begin": 13512,
											"end": 13603,
											"name": "PUSH [tag]",
											"value": "415"
										},
										{
											"begin": 13512,
											"end": 13603,
											"name": "JUMPI"
										},
										{
											"begin": 13560,
											"end": 13570,
											"name": "DUP12"
										},
										{
											"begin": 13560,
											"end": 13577,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13560,
											"end": 13577,
											"name": "ADD"
										},
										{
											"begin": 13560,
											"end": 13577,
											"name": "MLOAD"
										},
										{
											"begin": 13553,
											"end": 13588,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13553,
											"end": 13588,
											"name": "AND"
										},
										{
											"begin": 13553,
											"end": 13588,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 13597,
											"end": 13601,
											"name": "ADDRESS"
										},
										{
											"begin": 13553,
											"end": 13603,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13553,
											"end": 13603,
											"name": "MLOAD"
										},
										{
											"begin": 13553,
											"end": 13603,
											"name": "DUP3"
										},
										{
											"begin": 13553,
											"end": 13603,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 13553,
											"end": 13603,
											"name": "AND"
										},
										{
											"begin": 13553,
											"end": 13603,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 13553,
											"end": 13603,
											"name": "SHL"
										},
										{
											"begin": 13553,
											"end": 13603,
											"name": "DUP2"
										},
										{
											"begin": 13553,
											"end": 13603,
											"name": "MSTORE"
										},
										{
											"begin": 13553,
											"end": 13603,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 13553,
											"end": 13603,
											"name": "ADD"
										},
										{
											"begin": 13553,
											"end": 13603,
											"name": "DUP1"
										},
										{
											"begin": 13553,
											"end": 13603,
											"name": "DUP3"
										},
										{
											"begin": 13553,
											"end": 13603,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13553,
											"end": 13603,
											"name": "AND"
										},
										{
											"begin": 13553,
											"end": 13603,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13553,
											"end": 13603,
											"name": "AND"
										},
										{
											"begin": 13553,
											"end": 13603,
											"name": "DUP2"
										},
										{
											"begin": 13553,
											"end": 13603,
											"name": "MSTORE"
										},
										{
											"begin": 13553,
											"end": 13603,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13553,
											"end": 13603,
											"name": "ADD"
										},
										{
											"begin": 13553,
											"end": 13603,
											"name": "SWAP2"
										},
										{
											"begin": 13553,
											"end": 13603,
											"name": "POP"
										},
										{
											"begin": 13553,
											"end": 13603,
											"name": "POP"
										},
										{
											"begin": 13553,
											"end": 13603,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13553,
											"end": 13603,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13553,
											"end": 13603,
											"name": "MLOAD"
										},
										{
											"begin": 13553,
											"end": 13603,
											"name": "DUP1"
										},
										{
											"begin": 13553,
											"end": 13603,
											"name": "DUP4"
										},
										{
											"begin": 13553,
											"end": 13603,
											"name": "SUB"
										},
										{
											"begin": 13553,
											"end": 13603,
											"name": "DUP2"
										},
										{
											"begin": 13553,
											"end": 13603,
											"name": "DUP7"
										},
										{
											"begin": 13553,
											"end": 13603,
											"name": "DUP1"
										},
										{
											"begin": 13553,
											"end": 13603,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 13553,
											"end": 13603,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "416"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "416"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 13553,
											"end": 13603,
											"name": "POP"
										},
										{
											"begin": 13553,
											"end": 13603,
											"name": "GAS"
										},
										{
											"begin": 13553,
											"end": 13603,
											"name": "STATICCALL"
										},
										{
											"begin": 13553,
											"end": 13603,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "417"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "417"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 13553,
											"end": 13603,
											"name": "POP"
										},
										{
											"begin": 13553,
											"end": 13603,
											"name": "POP"
										},
										{
											"begin": 13553,
											"end": 13603,
											"name": "POP"
										},
										{
											"begin": 13553,
											"end": 13603,
											"name": "POP"
										},
										{
											"begin": 13553,
											"end": 13603,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13553,
											"end": 13603,
											"name": "MLOAD"
										},
										{
											"begin": 13553,
											"end": 13603,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "418"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "418"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 13553,
											"end": 13603,
											"name": "DUP2"
										},
										{
											"begin": 13553,
											"end": 13603,
											"name": "ADD"
										},
										{
											"begin": 13553,
											"end": 13603,
											"name": "SWAP1"
										},
										{
											"begin": 13553,
											"end": 13603,
											"name": "DUP1"
										},
										{
											"begin": 13553,
											"end": 13603,
											"name": "DUP1"
										},
										{
											"begin": 13553,
											"end": 13603,
											"name": "MLOAD"
										},
										{
											"begin": 13553,
											"end": 13603,
											"name": "SWAP1"
										},
										{
											"begin": 13553,
											"end": 13603,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13553,
											"end": 13603,
											"name": "ADD"
										},
										{
											"begin": 13553,
											"end": 13603,
											"name": "SWAP1"
										},
										{
											"begin": 13553,
											"end": 13603,
											"name": "SWAP3"
										},
										{
											"begin": 13553,
											"end": 13603,
											"name": "SWAP2"
										},
										{
											"begin": 13553,
											"end": 13603,
											"name": "SWAP1"
										},
										{
											"begin": 13553,
											"end": 13603,
											"name": "POP"
										},
										{
											"begin": 13553,
											"end": 13603,
											"name": "POP"
										},
										{
											"begin": 13553,
											"end": 13603,
											"name": "POP"
										},
										{
											"begin": 13531,
											"end": 13541,
											"name": "DUP13"
										},
										{
											"begin": 13531,
											"end": 13550,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 13531,
											"end": 13550,
											"name": "ADD"
										},
										{
											"begin": 13531,
											"end": 13603,
											"name": "DUP2"
										},
										{
											"begin": 13531,
											"end": 13603,
											"name": "DUP2"
										},
										{
											"begin": 13531,
											"end": 13603,
											"name": "MSTORE"
										},
										{
											"begin": 13531,
											"end": 13603,
											"name": "POP"
										},
										{
											"begin": 13531,
											"end": 13603,
											"name": "POP"
										},
										{
											"begin": 13512,
											"end": 13603,
											"name": "tag",
											"value": "415"
										},
										{
											"begin": 13512,
											"end": 13603,
											"name": "JUMPDEST"
										},
										{
											"begin": 13628,
											"end": 13629,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13616,
											"end": 13625,
											"name": "DUP4"
										},
										{
											"begin": 13616,
											"end": 13629,
											"name": "GT"
										},
										{
											"begin": 13612,
											"end": 13703,
											"name": "ISZERO"
										},
										{
											"begin": 13612,
											"end": 13703,
											"name": "PUSH [tag]",
											"value": "419"
										},
										{
											"begin": 13612,
											"end": 13703,
											"name": "JUMPI"
										},
										{
											"begin": 13660,
											"end": 13670,
											"name": "DUP12"
										},
										{
											"begin": 13660,
											"end": 13677,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13660,
											"end": 13677,
											"name": "ADD"
										},
										{
											"begin": 13660,
											"end": 13677,
											"name": "MLOAD"
										},
										{
											"begin": 13653,
											"end": 13688,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13653,
											"end": 13688,
											"name": "AND"
										},
										{
											"begin": 13653,
											"end": 13688,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 13697,
											"end": 13701,
											"name": "ADDRESS"
										},
										{
											"begin": 13653,
											"end": 13703,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13653,
											"end": 13703,
											"name": "MLOAD"
										},
										{
											"begin": 13653,
											"end": 13703,
											"name": "DUP3"
										},
										{
											"begin": 13653,
											"end": 13703,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 13653,
											"end": 13703,
											"name": "AND"
										},
										{
											"begin": 13653,
											"end": 13703,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 13653,
											"end": 13703,
											"name": "SHL"
										},
										{
											"begin": 13653,
											"end": 13703,
											"name": "DUP2"
										},
										{
											"begin": 13653,
											"end": 13703,
											"name": "MSTORE"
										},
										{
											"begin": 13653,
											"end": 13703,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 13653,
											"end": 13703,
											"name": "ADD"
										},
										{
											"begin": 13653,
											"end": 13703,
											"name": "DUP1"
										},
										{
											"begin": 13653,
											"end": 13703,
											"name": "DUP3"
										},
										{
											"begin": 13653,
											"end": 13703,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13653,
											"end": 13703,
											"name": "AND"
										},
										{
											"begin": 13653,
											"end": 13703,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13653,
											"end": 13703,
											"name": "AND"
										},
										{
											"begin": 13653,
											"end": 13703,
											"name": "DUP2"
										},
										{
											"begin": 13653,
											"end": 13703,
											"name": "MSTORE"
										},
										{
											"begin": 13653,
											"end": 13703,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13653,
											"end": 13703,
											"name": "ADD"
										},
										{
											"begin": 13653,
											"end": 13703,
											"name": "SWAP2"
										},
										{
											"begin": 13653,
											"end": 13703,
											"name": "POP"
										},
										{
											"begin": 13653,
											"end": 13703,
											"name": "POP"
										},
										{
											"begin": 13653,
											"end": 13703,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13653,
											"end": 13703,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13653,
											"end": 13703,
											"name": "MLOAD"
										},
										{
											"begin": 13653,
											"end": 13703,
											"name": "DUP1"
										},
										{
											"begin": 13653,
											"end": 13703,
											"name": "DUP4"
										},
										{
											"begin": 13653,
											"end": 13703,
											"name": "SUB"
										},
										{
											"begin": 13653,
											"end": 13703,
											"name": "DUP2"
										},
										{
											"begin": 13653,
											"end": 13703,
											"name": "DUP7"
										},
										{
											"begin": 13653,
											"end": 13703,
											"name": "DUP1"
										},
										{
											"begin": 13653,
											"end": 13703,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 13653,
											"end": 13703,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "420"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "420"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 13653,
											"end": 13703,
											"name": "POP"
										},
										{
											"begin": 13653,
											"end": 13703,
											"name": "GAS"
										},
										{
											"begin": 13653,
											"end": 13703,
											"name": "STATICCALL"
										},
										{
											"begin": 13653,
											"end": 13703,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "421"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "421"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 13653,
											"end": 13703,
											"name": "POP"
										},
										{
											"begin": 13653,
											"end": 13703,
											"name": "POP"
										},
										{
											"begin": 13653,
											"end": 13703,
											"name": "POP"
										},
										{
											"begin": 13653,
											"end": 13703,
											"name": "POP"
										},
										{
											"begin": 13653,
											"end": 13703,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13653,
											"end": 13703,
											"name": "MLOAD"
										},
										{
											"begin": 13653,
											"end": 13703,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "422"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "422"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 13653,
											"end": 13703,
											"name": "DUP2"
										},
										{
											"begin": 13653,
											"end": 13703,
											"name": "ADD"
										},
										{
											"begin": 13653,
											"end": 13703,
											"name": "SWAP1"
										},
										{
											"begin": 13653,
											"end": 13703,
											"name": "DUP1"
										},
										{
											"begin": 13653,
											"end": 13703,
											"name": "DUP1"
										},
										{
											"begin": 13653,
											"end": 13703,
											"name": "MLOAD"
										},
										{
											"begin": 13653,
											"end": 13703,
											"name": "SWAP1"
										},
										{
											"begin": 13653,
											"end": 13703,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13653,
											"end": 13703,
											"name": "ADD"
										},
										{
											"begin": 13653,
											"end": 13703,
											"name": "SWAP1"
										},
										{
											"begin": 13653,
											"end": 13703,
											"name": "SWAP3"
										},
										{
											"begin": 13653,
											"end": 13703,
											"name": "SWAP2"
										},
										{
											"begin": 13653,
											"end": 13703,
											"name": "SWAP1"
										},
										{
											"begin": 13653,
											"end": 13703,
											"name": "POP"
										},
										{
											"begin": 13653,
											"end": 13703,
											"name": "POP"
										},
										{
											"begin": 13653,
											"end": 13703,
											"name": "POP"
										},
										{
											"begin": 13631,
											"end": 13641,
											"name": "DUP13"
										},
										{
											"begin": 13631,
											"end": 13650,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": 13631,
											"end": 13650,
											"name": "ADD"
										},
										{
											"begin": 13631,
											"end": 13703,
											"name": "DUP2"
										},
										{
											"begin": 13631,
											"end": 13703,
											"name": "DUP2"
										},
										{
											"begin": 13631,
											"end": 13703,
											"name": "MSTORE"
										},
										{
											"begin": 13631,
											"end": 13703,
											"name": "POP"
										},
										{
											"begin": 13631,
											"end": 13703,
											"name": "POP"
										},
										{
											"begin": 13612,
											"end": 13703,
											"name": "tag",
											"value": "419"
										},
										{
											"begin": 13612,
											"end": 13703,
											"name": "JUMPDEST"
										},
										{
											"begin": 1612,
											"end": 1613,
											"name": "POP"
										},
										{
											"begin": 1612,
											"end": 1613,
											"name": "POP"
										},
										{
											"begin": 13789,
											"end": 13810,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13813,
											"end": 13862,
											"name": "PUSH [tag]",
											"value": "423"
										},
										{
											"begin": 13837,
											"end": 13847,
											"name": "DUP12"
										},
										{
											"begin": 13837,
											"end": 13861,
											"name": "PUSH",
											"value": "C0"
										},
										{
											"begin": 13837,
											"end": 13861,
											"name": "ADD"
										},
										{
											"begin": 13837,
											"end": 13861,
											"name": "MLOAD"
										},
										{
											"begin": 13813,
											"end": 13823,
											"name": "DUP13"
										},
										{
											"begin": 13813,
											"end": 13832,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 13813,
											"end": 13832,
											"name": "ADD"
										},
										{
											"begin": 13813,
											"end": 13832,
											"name": "MLOAD"
										},
										{
											"begin": 13813,
											"end": 13836,
											"name": "PUSH [tag]",
											"value": "173"
										},
										{
											"begin": 13813,
											"end": 13836,
											"name": "SWAP1"
										},
										{
											"begin": 13813,
											"end": 13862,
											"name": "SWAP2"
										},
										{
											"begin": 13813,
											"end": 13862,
											"name": "SWAP1"
										},
										{
											"begin": 13813,
											"end": 13862,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 13813,
											"end": 13862,
											"name": "AND"
										},
										{
											"begin": 13813,
											"end": 13862,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13813,
											"end": 13862,
											"name": "tag",
											"value": "423"
										},
										{
											"begin": 13813,
											"end": 13862,
											"name": "JUMPDEST"
										},
										{
											"begin": 13789,
											"end": 13862,
											"name": "SWAP1"
										},
										{
											"begin": 13789,
											"end": 13862,
											"name": "POP"
										},
										{
											"begin": 13871,
											"end": 13892,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13895,
											"end": 13944,
											"name": "PUSH [tag]",
											"value": "424"
										},
										{
											"begin": 13919,
											"end": 13929,
											"name": "DUP13"
										},
										{
											"begin": 13919,
											"end": 13943,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 13919,
											"end": 13943,
											"name": "ADD"
										},
										{
											"begin": 13919,
											"end": 13943,
											"name": "MLOAD"
										},
										{
											"begin": 13895,
											"end": 13905,
											"name": "DUP14"
										},
										{
											"begin": 13895,
											"end": 13914,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": 13895,
											"end": 13914,
											"name": "ADD"
										},
										{
											"begin": 13895,
											"end": 13914,
											"name": "MLOAD"
										},
										{
											"begin": 13895,
											"end": 13918,
											"name": "PUSH [tag]",
											"value": "173"
										},
										{
											"begin": 13895,
											"end": 13918,
											"name": "SWAP1"
										},
										{
											"begin": 13895,
											"end": 13944,
											"name": "SWAP2"
										},
										{
											"begin": 13895,
											"end": 13944,
											"name": "SWAP1"
										},
										{
											"begin": 13895,
											"end": 13944,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 13895,
											"end": 13944,
											"name": "AND"
										},
										{
											"begin": 13895,
											"end": 13944,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13895,
											"end": 13944,
											"name": "tag",
											"value": "424"
										},
										{
											"begin": 13895,
											"end": 13944,
											"name": "JUMPDEST"
										},
										{
											"begin": 13871,
											"end": 13944,
											"name": "SWAP1"
										},
										{
											"begin": 13871,
											"end": 13944,
											"name": "POP"
										},
										{
											"begin": 14003,
											"end": 14039,
											"name": "PUSH [tag]",
											"value": "425"
										},
										{
											"begin": 14011,
											"end": 14020,
											"name": "DUP9"
										},
										{
											"begin": 14006,
											"end": 14021,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14006,
											"end": 14021,
											"name": "AND"
										},
										{
											"begin": 14028,
											"end": 14037,
											"name": "DUP9"
										},
										{
											"begin": 14023,
											"end": 14038,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14023,
											"end": 14038,
											"name": "AND"
										},
										{
											"begin": 14003,
											"end": 14005,
											"name": "PUSH [tag]",
											"value": "193"
										},
										{
											"begin": 14003,
											"end": 14039,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14003,
											"end": 14039,
											"name": "tag",
											"value": "425"
										},
										{
											"begin": 14003,
											"end": 14039,
											"name": "JUMPDEST"
										},
										{
											"begin": 13961,
											"end": 13999,
											"name": "PUSH [tag]",
											"value": "426"
										},
										{
											"begin": 13964,
											"end": 13980,
											"name": "DUP4"
										},
										{
											"begin": 13982,
											"end": 13998,
											"name": "DUP4"
										},
										{
											"begin": 13961,
											"end": 13963,
											"name": "PUSH [tag]",
											"value": "193"
										},
										{
											"begin": 13961,
											"end": 13999,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13961,
											"end": 13999,
											"name": "tag",
											"value": "426"
										},
										{
											"begin": 13961,
											"end": 13999,
											"name": "JUMPDEST"
										},
										{
											"begin": 13961,
											"end": 14039,
											"name": "LT"
										},
										{
											"begin": 13961,
											"end": 14039,
											"name": "ISZERO"
										},
										{
											"begin": 13953,
											"end": 14050,
											"name": "PUSH [tag]",
											"value": "427"
										},
										{
											"begin": 13953,
											"end": 14050,
											"name": "JUMPI"
										},
										{
											"begin": 13953,
											"end": 14050,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13953,
											"end": 14050,
											"name": "MLOAD"
										},
										{
											"begin": 13953,
											"end": 14050,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13953,
											"end": 14050,
											"name": "DUP2"
										},
										{
											"begin": 13953,
											"end": 14050,
											"name": "MSTORE"
										},
										{
											"begin": 13953,
											"end": 14050,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 13953,
											"end": 14050,
											"name": "ADD"
										},
										{
											"begin": 13953,
											"end": 14050,
											"name": "DUP1"
										},
										{
											"begin": 13953,
											"end": 14050,
											"name": "DUP1"
										},
										{
											"begin": 13953,
											"end": 14050,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13953,
											"end": 14050,
											"name": "ADD"
										},
										{
											"begin": 13953,
											"end": 14050,
											"name": "DUP3"
										},
										{
											"begin": 13953,
											"end": 14050,
											"name": "DUP2"
										},
										{
											"begin": 13953,
											"end": 14050,
											"name": "SUB"
										},
										{
											"begin": 13953,
											"end": 14050,
											"name": "DUP3"
										},
										{
											"begin": 13953,
											"end": 14050,
											"name": "MSTORE"
										},
										{
											"begin": 13953,
											"end": 14050,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 13953,
											"end": 14050,
											"name": "DUP2"
										},
										{
											"begin": 13953,
											"end": 14050,
											"name": "MSTORE"
										},
										{
											"begin": 13953,
											"end": 14050,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13953,
											"end": 14050,
											"name": "ADD"
										},
										{
											"begin": 13953,
											"end": 14050,
											"name": "DUP1"
										},
										{
											"begin": 13953,
											"end": 14050,
											"name": "PUSH",
											"value": "31306B3A204B0000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13953,
											"end": 14050,
											"name": "DUP2"
										},
										{
											"begin": 13953,
											"end": 14050,
											"name": "MSTORE"
										},
										{
											"begin": 13953,
											"end": 14050,
											"name": "POP"
										},
										{
											"begin": 13953,
											"end": 14050,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13953,
											"end": 14050,
											"name": "ADD"
										},
										{
											"begin": 13953,
											"end": 14050,
											"name": "SWAP2"
										},
										{
											"begin": 13953,
											"end": 14050,
											"name": "POP"
										},
										{
											"begin": 13953,
											"end": 14050,
											"name": "POP"
										},
										{
											"begin": 13953,
											"end": 14050,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13953,
											"end": 14050,
											"name": "MLOAD"
										},
										{
											"begin": 13953,
											"end": 14050,
											"name": "DUP1"
										},
										{
											"begin": 13953,
											"end": 14050,
											"name": "SWAP2"
										},
										{
											"begin": 13953,
											"end": 14050,
											"name": "SUB"
										},
										{
											"begin": 13953,
											"end": 14050,
											"name": "SWAP1"
										},
										{
											"begin": 13953,
											"end": 14050,
											"name": "REVERT"
										},
										{
											"begin": 13953,
											"end": 14050,
											"name": "tag",
											"value": "427"
										},
										{
											"begin": 13953,
											"end": 14050,
											"name": "JUMPDEST"
										},
										{
											"begin": 1612,
											"end": 1613,
											"name": "POP"
										},
										{
											"begin": 1612,
											"end": 1613,
											"name": "POP"
										},
										{
											"begin": 14064,
											"end": 14113,
											"name": "PUSH [tag]",
											"value": "428"
										},
										{
											"begin": 14072,
											"end": 14082,
											"name": "DUP11"
										},
										{
											"begin": 14072,
											"end": 14091,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 14072,
											"end": 14091,
											"name": "ADD"
										},
										{
											"begin": 14072,
											"end": 14091,
											"name": "MLOAD"
										},
										{
											"begin": 14093,
											"end": 14103,
											"name": "DUP12"
										},
										{
											"begin": 14093,
											"end": 14112,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": 14093,
											"end": 14112,
											"name": "ADD"
										},
										{
											"begin": 14093,
											"end": 14112,
											"name": "MLOAD"
										},
										{
											"begin": 14064,
											"end": 14071,
											"name": "PUSH [tag]",
											"value": "253"
										},
										{
											"begin": 14064,
											"end": 14113,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14064,
											"end": 14113,
											"name": "tag",
											"value": "428"
										},
										{
											"begin": 14064,
											"end": 14113,
											"name": "JUMPDEST"
										},
										{
											"begin": 14210,
											"end": 14212,
											"name": "DUP9"
										},
										{
											"begin": 14125,
											"end": 14213,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14125,
											"end": 14213,
											"name": "AND"
										},
										{
											"begin": 14130,
											"end": 14140,
											"name": "CALLER"
										},
										{
											"begin": 14125,
											"end": 14213,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14125,
											"end": 14213,
											"name": "AND"
										},
										{
											"begin": 14125,
											"end": 14213,
											"name": "PUSH",
											"value": "D78AD95FA46C994B6551D0DA85FC275FE613CE37657FB8D5E3D130840159D822"
										},
										{
											"begin": 14142,
											"end": 14151,
											"name": "DUP5"
										},
										{
											"begin": 14153,
											"end": 14162,
											"name": "DUP5"
										},
										{
											"begin": 14164,
											"end": 14174,
											"name": "DUP15"
										},
										{
											"begin": 14164,
											"end": 14185,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14164,
											"end": 14185,
											"name": "ADD"
										},
										{
											"begin": 14164,
											"end": 14185,
											"name": "MLOAD"
										},
										{
											"begin": 14187,
											"end": 14197,
											"name": "DUP16"
										},
										{
											"begin": 14187,
											"end": 14208,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 14187,
											"end": 14208,
											"name": "ADD"
										},
										{
											"begin": 14187,
											"end": 14208,
											"name": "MLOAD"
										},
										{
											"begin": 14125,
											"end": 14213,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14125,
											"end": 14213,
											"name": "MLOAD"
										},
										{
											"begin": 14125,
											"end": 14213,
											"name": "DUP1"
										},
										{
											"begin": 14125,
											"end": 14213,
											"name": "DUP6"
										},
										{
											"begin": 14125,
											"end": 14213,
											"name": "DUP2"
										},
										{
											"begin": 14125,
											"end": 14213,
											"name": "MSTORE"
										},
										{
											"begin": 14125,
											"end": 14213,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14125,
											"end": 14213,
											"name": "ADD"
										},
										{
											"begin": 14125,
											"end": 14213,
											"name": "DUP5"
										},
										{
											"begin": 14125,
											"end": 14213,
											"name": "DUP2"
										},
										{
											"begin": 14125,
											"end": 14213,
											"name": "MSTORE"
										},
										{
											"begin": 14125,
											"end": 14213,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14125,
											"end": 14213,
											"name": "ADD"
										},
										{
											"begin": 14125,
											"end": 14213,
											"name": "DUP4"
										},
										{
											"begin": 14125,
											"end": 14213,
											"name": "DUP2"
										},
										{
											"begin": 14125,
											"end": 14213,
											"name": "MSTORE"
										},
										{
											"begin": 14125,
											"end": 14213,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14125,
											"end": 14213,
											"name": "ADD"
										},
										{
											"begin": 14125,
											"end": 14213,
											"name": "DUP3"
										},
										{
											"begin": 14125,
											"end": 14213,
											"name": "DUP2"
										},
										{
											"begin": 14125,
											"end": 14213,
											"name": "MSTORE"
										},
										{
											"begin": 14125,
											"end": 14213,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14125,
											"end": 14213,
											"name": "ADD"
										},
										{
											"begin": 14125,
											"end": 14213,
											"name": "SWAP5"
										},
										{
											"begin": 14125,
											"end": 14213,
											"name": "POP"
										},
										{
											"begin": 14125,
											"end": 14213,
											"name": "POP"
										},
										{
											"begin": 14125,
											"end": 14213,
											"name": "POP"
										},
										{
											"begin": 14125,
											"end": 14213,
											"name": "POP"
										},
										{
											"begin": 14125,
											"end": 14213,
											"name": "POP"
										},
										{
											"begin": 14125,
											"end": 14213,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14125,
											"end": 14213,
											"name": "MLOAD"
										},
										{
											"begin": 14125,
											"end": 14213,
											"name": "DUP1"
										},
										{
											"begin": 14125,
											"end": 14213,
											"name": "SWAP2"
										},
										{
											"begin": 14125,
											"end": 14213,
											"name": "SUB"
										},
										{
											"begin": 14125,
											"end": 14213,
											"name": "SWAP1"
										},
										{
											"begin": 14125,
											"end": 14213,
											"name": "LOG3"
										},
										{
											"begin": 1612,
											"end": 1613,
											"name": "POP"
										},
										{
											"begin": 1612,
											"end": 1613,
											"name": "POP"
										},
										{
											"begin": 1612,
											"end": 1613,
											"name": "POP"
										},
										{
											"begin": 1612,
											"end": 1613,
											"name": "POP"
										},
										{
											"begin": 1612,
											"end": 1613,
											"name": "POP"
										},
										{
											"begin": 1612,
											"end": 1613,
											"name": "POP"
										},
										{
											"begin": 1631,
											"end": 1632,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1620,
											"end": 1628,
											"name": "PUSH",
											"value": "D"
										},
										{
											"begin": 1620,
											"end": 1632,
											"name": "DUP2"
										},
										{
											"begin": 1620,
											"end": 1632,
											"name": "SWAP1"
										},
										{
											"begin": 1620,
											"end": 1632,
											"name": "SSTORE"
										},
										{
											"begin": 1620,
											"end": 1632,
											"name": "POP"
										},
										{
											"begin": 10205,
											"end": 14219,
											"name": "POP"
										},
										{
											"begin": 10205,
											"end": 14219,
											"name": "POP"
										},
										{
											"begin": 10205,
											"end": 14219,
											"name": "POP"
										},
										{
											"begin": 10205,
											"end": 14219,
											"name": "POP"
										},
										{
											"begin": 10205,
											"end": 14219,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1820,
											"end": 1989,
											"name": "tag",
											"value": "169"
										},
										{
											"begin": 1820,
											"end": 1989,
											"name": "JUMPDEST"
										},
										{
											"begin": 1929,
											"end": 1934,
											"name": "DUP1"
										},
										{
											"begin": 1901,
											"end": 1910,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1901,
											"end": 1917,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1911,
											"end": 1916,
											"name": "DUP6"
										},
										{
											"begin": 1901,
											"end": 1917,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1901,
											"end": 1917,
											"name": "AND"
										},
										{
											"begin": 1901,
											"end": 1917,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1901,
											"end": 1917,
											"name": "AND"
										},
										{
											"begin": 1901,
											"end": 1917,
											"name": "DUP2"
										},
										{
											"begin": 1901,
											"end": 1917,
											"name": "MSTORE"
										},
										{
											"begin": 1901,
											"end": 1917,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1901,
											"end": 1917,
											"name": "ADD"
										},
										{
											"begin": 1901,
											"end": 1917,
											"name": "SWAP1"
										},
										{
											"begin": 1901,
											"end": 1917,
											"name": "DUP2"
										},
										{
											"begin": 1901,
											"end": 1917,
											"name": "MSTORE"
										},
										{
											"begin": 1901,
											"end": 1917,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1901,
											"end": 1917,
											"name": "ADD"
										},
										{
											"begin": 1901,
											"end": 1917,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1901,
											"end": 1917,
											"name": "KECCAK256"
										},
										{
											"begin": 1901,
											"end": 1926,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1918,
											"end": 1925,
											"name": "DUP5"
										},
										{
											"begin": 1901,
											"end": 1926,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1901,
											"end": 1926,
											"name": "AND"
										},
										{
											"begin": 1901,
											"end": 1926,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1901,
											"end": 1926,
											"name": "AND"
										},
										{
											"begin": 1901,
											"end": 1926,
											"name": "DUP2"
										},
										{
											"begin": 1901,
											"end": 1926,
											"name": "MSTORE"
										},
										{
											"begin": 1901,
											"end": 1926,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1901,
											"end": 1926,
											"name": "ADD"
										},
										{
											"begin": 1901,
											"end": 1926,
											"name": "SWAP1"
										},
										{
											"begin": 1901,
											"end": 1926,
											"name": "DUP2"
										},
										{
											"begin": 1901,
											"end": 1926,
											"name": "MSTORE"
										},
										{
											"begin": 1901,
											"end": 1926,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1901,
											"end": 1926,
											"name": "ADD"
										},
										{
											"begin": 1901,
											"end": 1926,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1901,
											"end": 1926,
											"name": "KECCAK256"
										},
										{
											"begin": 1901,
											"end": 1934,
											"name": "DUP2"
										},
										{
											"begin": 1901,
											"end": 1934,
											"name": "SWAP1"
										},
										{
											"begin": 1901,
											"end": 1934,
											"name": "SSTORE"
										},
										{
											"begin": 1901,
											"end": 1934,
											"name": "POP"
										},
										{
											"begin": 1966,
											"end": 1973,
											"name": "DUP2"
										},
										{
											"begin": 1950,
											"end": 1981,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1950,
											"end": 1981,
											"name": "AND"
										},
										{
											"begin": 1959,
											"end": 1964,
											"name": "DUP4"
										},
										{
											"begin": 1950,
											"end": 1981,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1950,
											"end": 1981,
											"name": "AND"
										},
										{
											"begin": 1950,
											"end": 1981,
											"name": "PUSH",
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 1975,
											"end": 1980,
											"name": "DUP4"
										},
										{
											"begin": 1950,
											"end": 1981,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1950,
											"end": 1981,
											"name": "MLOAD"
										},
										{
											"begin": 1950,
											"end": 1981,
											"name": "DUP1"
										},
										{
											"begin": 1950,
											"end": 1981,
											"name": "DUP3"
										},
										{
											"begin": 1950,
											"end": 1981,
											"name": "DUP2"
										},
										{
											"begin": 1950,
											"end": 1981,
											"name": "MSTORE"
										},
										{
											"begin": 1950,
											"end": 1981,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1950,
											"end": 1981,
											"name": "ADD"
										},
										{
											"begin": 1950,
											"end": 1981,
											"name": "SWAP2"
										},
										{
											"begin": 1950,
											"end": 1981,
											"name": "POP"
										},
										{
											"begin": 1950,
											"end": 1981,
											"name": "POP"
										},
										{
											"begin": 1950,
											"end": 1981,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1950,
											"end": 1981,
											"name": "MLOAD"
										},
										{
											"begin": 1950,
											"end": 1981,
											"name": "DUP1"
										},
										{
											"begin": 1950,
											"end": 1981,
											"name": "SWAP2"
										},
										{
											"begin": 1950,
											"end": 1981,
											"name": "SUB"
										},
										{
											"begin": 1950,
											"end": 1981,
											"name": "SWAP1"
										},
										{
											"begin": 1950,
											"end": 1981,
											"name": "LOG3"
										},
										{
											"begin": 1820,
											"end": 1989,
											"name": "POP"
										},
										{
											"begin": 1820,
											"end": 1989,
											"name": "POP"
										},
										{
											"begin": 1820,
											"end": 1989,
											"name": "POP"
										},
										{
											"begin": 1820,
											"end": 1989,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 296,
											"end": 425,
											"name": "tag",
											"value": "173"
										},
										{
											"begin": 296,
											"end": 425,
											"name": "JUMPDEST"
										},
										{
											"begin": 348,
											"end": 354,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 390,
											"end": 391,
											"name": "DUP3"
										},
										{
											"begin": 384,
											"end": 385,
											"name": "DUP3"
										},
										{
											"begin": 380,
											"end": 381,
											"name": "DUP5"
										},
										{
											"begin": 380,
											"end": 385,
											"name": "SUB"
										},
										{
											"begin": 376,
											"end": 385,
											"name": "SWAP2"
										},
										{
											"begin": 376,
											"end": 385,
											"name": "POP"
										},
										{
											"begin": 376,
											"end": 385,
											"name": "DUP2"
										},
										{
											"begin": 375,
											"end": 391,
											"name": "GT"
										},
										{
											"begin": 375,
											"end": 391,
											"name": "ISZERO"
										},
										{
											"begin": 367,
											"end": 417,
											"name": "PUSH [tag]",
											"value": "431"
										},
										{
											"begin": 367,
											"end": 417,
											"name": "JUMPI"
										},
										{
											"begin": 367,
											"end": 417,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 367,
											"end": 417,
											"name": "MLOAD"
										},
										{
											"begin": 367,
											"end": 417,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 367,
											"end": 417,
											"name": "DUP2"
										},
										{
											"begin": 367,
											"end": 417,
											"name": "MSTORE"
										},
										{
											"begin": 367,
											"end": 417,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 367,
											"end": 417,
											"name": "ADD"
										},
										{
											"begin": 367,
											"end": 417,
											"name": "DUP1"
										},
										{
											"begin": 367,
											"end": 417,
											"name": "DUP1"
										},
										{
											"begin": 367,
											"end": 417,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 367,
											"end": 417,
											"name": "ADD"
										},
										{
											"begin": 367,
											"end": 417,
											"name": "DUP3"
										},
										{
											"begin": 367,
											"end": 417,
											"name": "DUP2"
										},
										{
											"begin": 367,
											"end": 417,
											"name": "SUB"
										},
										{
											"begin": 367,
											"end": 417,
											"name": "DUP3"
										},
										{
											"begin": 367,
											"end": 417,
											"name": "MSTORE"
										},
										{
											"begin": 367,
											"end": 417,
											"name": "PUSH",
											"value": "15"
										},
										{
											"begin": 367,
											"end": 417,
											"name": "DUP2"
										},
										{
											"begin": 367,
											"end": 417,
											"name": "MSTORE"
										},
										{
											"begin": 367,
											"end": 417,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 367,
											"end": 417,
											"name": "ADD"
										},
										{
											"begin": 367,
											"end": 417,
											"name": "DUP1"
										},
										{
											"begin": 367,
											"end": 417,
											"name": "PUSH",
											"value": "64732D6D6174682D7375622D756E646572666C6F770000000000000000000000"
										},
										{
											"begin": 367,
											"end": 417,
											"name": "DUP2"
										},
										{
											"begin": 367,
											"end": 417,
											"name": "MSTORE"
										},
										{
											"begin": 367,
											"end": 417,
											"name": "POP"
										},
										{
											"begin": 367,
											"end": 417,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 367,
											"end": 417,
											"name": "ADD"
										},
										{
											"begin": 367,
											"end": 417,
											"name": "SWAP2"
										},
										{
											"begin": 367,
											"end": 417,
											"name": "POP"
										},
										{
											"begin": 367,
											"end": 417,
											"name": "POP"
										},
										{
											"begin": 367,
											"end": 417,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 367,
											"end": 417,
											"name": "MLOAD"
										},
										{
											"begin": 367,
											"end": 417,
											"name": "DUP1"
										},
										{
											"begin": 367,
											"end": 417,
											"name": "SWAP2"
										},
										{
											"begin": 367,
											"end": 417,
											"name": "SUB"
										},
										{
											"begin": 367,
											"end": 417,
											"name": "SWAP1"
										},
										{
											"begin": 367,
											"end": 417,
											"name": "REVERT"
										},
										{
											"begin": 367,
											"end": 417,
											"name": "tag",
											"value": "431"
										},
										{
											"begin": 367,
											"end": 417,
											"name": "JUMPDEST"
										},
										{
											"begin": 296,
											"end": 425,
											"name": "SWAP3"
										},
										{
											"begin": 296,
											"end": 425,
											"name": "SWAP2"
										},
										{
											"begin": 296,
											"end": 425,
											"name": "POP"
										},
										{
											"begin": 296,
											"end": 425,
											"name": "POP"
										},
										{
											"begin": 296,
											"end": 425,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1997,
											"end": 2217,
											"name": "tag",
											"value": "175"
										},
										{
											"begin": 1997,
											"end": 2217,
											"name": "JUMPDEST"
										},
										{
											"begin": 2091,
											"end": 2117,
											"name": "PUSH [tag]",
											"value": "433"
										},
										{
											"begin": 2111,
											"end": 2116,
											"name": "DUP2"
										},
										{
											"begin": 2091,
											"end": 2100,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2091,
											"end": 2106,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2101,
											"end": 2105,
											"name": "DUP7"
										},
										{
											"begin": 2091,
											"end": 2106,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2091,
											"end": 2106,
											"name": "AND"
										},
										{
											"begin": 2091,
											"end": 2106,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2091,
											"end": 2106,
											"name": "AND"
										},
										{
											"begin": 2091,
											"end": 2106,
											"name": "DUP2"
										},
										{
											"begin": 2091,
											"end": 2106,
											"name": "MSTORE"
										},
										{
											"begin": 2091,
											"end": 2106,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2091,
											"end": 2106,
											"name": "ADD"
										},
										{
											"begin": 2091,
											"end": 2106,
											"name": "SWAP1"
										},
										{
											"begin": 2091,
											"end": 2106,
											"name": "DUP2"
										},
										{
											"begin": 2091,
											"end": 2106,
											"name": "MSTORE"
										},
										{
											"begin": 2091,
											"end": 2106,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2091,
											"end": 2106,
											"name": "ADD"
										},
										{
											"begin": 2091,
											"end": 2106,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2091,
											"end": 2106,
											"name": "KECCAK256"
										},
										{
											"begin": 2091,
											"end": 2106,
											"name": "SLOAD"
										},
										{
											"begin": 2091,
											"end": 2110,
											"name": "PUSH [tag]",
											"value": "173"
										},
										{
											"begin": 2091,
											"end": 2110,
											"name": "SWAP1"
										},
										{
											"begin": 2091,
											"end": 2117,
											"name": "SWAP2"
										},
										{
											"begin": 2091,
											"end": 2117,
											"name": "SWAP1"
										},
										{
											"begin": 2091,
											"end": 2117,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 2091,
											"end": 2117,
											"name": "AND"
										},
										{
											"begin": 2091,
											"end": 2117,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2091,
											"end": 2117,
											"name": "tag",
											"value": "433"
										},
										{
											"begin": 2091,
											"end": 2117,
											"name": "JUMPDEST"
										},
										{
											"begin": 2073,
											"end": 2082,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2073,
											"end": 2088,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2083,
											"end": 2087,
											"name": "DUP6"
										},
										{
											"begin": 2073,
											"end": 2088,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2073,
											"end": 2088,
											"name": "AND"
										},
										{
											"begin": 2073,
											"end": 2088,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2073,
											"end": 2088,
											"name": "AND"
										},
										{
											"begin": 2073,
											"end": 2088,
											"name": "DUP2"
										},
										{
											"begin": 2073,
											"end": 2088,
											"name": "MSTORE"
										},
										{
											"begin": 2073,
											"end": 2088,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2073,
											"end": 2088,
											"name": "ADD"
										},
										{
											"begin": 2073,
											"end": 2088,
											"name": "SWAP1"
										},
										{
											"begin": 2073,
											"end": 2088,
											"name": "DUP2"
										},
										{
											"begin": 2073,
											"end": 2088,
											"name": "MSTORE"
										},
										{
											"begin": 2073,
											"end": 2088,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2073,
											"end": 2088,
											"name": "ADD"
										},
										{
											"begin": 2073,
											"end": 2088,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2073,
											"end": 2088,
											"name": "KECCAK256"
										},
										{
											"begin": 2073,
											"end": 2117,
											"name": "DUP2"
										},
										{
											"begin": 2073,
											"end": 2117,
											"name": "SWAP1"
										},
										{
											"begin": 2073,
											"end": 2117,
											"name": "SSTORE"
										},
										{
											"begin": 2073,
											"end": 2117,
											"name": "POP"
										},
										{
											"begin": 2144,
											"end": 2168,
											"name": "PUSH [tag]",
											"value": "434"
										},
										{
											"begin": 2162,
											"end": 2167,
											"name": "DUP2"
										},
										{
											"begin": 2144,
											"end": 2153,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2144,
											"end": 2157,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2154,
											"end": 2156,
											"name": "DUP6"
										},
										{
											"begin": 2144,
											"end": 2157,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2144,
											"end": 2157,
											"name": "AND"
										},
										{
											"begin": 2144,
											"end": 2157,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2144,
											"end": 2157,
											"name": "AND"
										},
										{
											"begin": 2144,
											"end": 2157,
											"name": "DUP2"
										},
										{
											"begin": 2144,
											"end": 2157,
											"name": "MSTORE"
										},
										{
											"begin": 2144,
											"end": 2157,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2157,
											"name": "ADD"
										},
										{
											"begin": 2144,
											"end": 2157,
											"name": "SWAP1"
										},
										{
											"begin": 2144,
											"end": 2157,
											"name": "DUP2"
										},
										{
											"begin": 2144,
											"end": 2157,
											"name": "MSTORE"
										},
										{
											"begin": 2144,
											"end": 2157,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2157,
											"name": "ADD"
										},
										{
											"begin": 2144,
											"end": 2157,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2157,
											"name": "KECCAK256"
										},
										{
											"begin": 2144,
											"end": 2157,
											"name": "SLOAD"
										},
										{
											"begin": 2144,
											"end": 2161,
											"name": "PUSH [tag]",
											"value": "435"
										},
										{
											"begin": 2144,
											"end": 2161,
											"name": "SWAP1"
										},
										{
											"begin": 2144,
											"end": 2168,
											"name": "SWAP2"
										},
										{
											"begin": 2144,
											"end": 2168,
											"name": "SWAP1"
										},
										{
											"begin": 2144,
											"end": 2168,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 2144,
											"end": 2168,
											"name": "AND"
										},
										{
											"begin": 2144,
											"end": 2168,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2144,
											"end": 2168,
											"name": "tag",
											"value": "434"
										},
										{
											"begin": 2144,
											"end": 2168,
											"name": "JUMPDEST"
										},
										{
											"begin": 2128,
											"end": 2137,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2128,
											"end": 2141,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2138,
											"end": 2140,
											"name": "DUP5"
										},
										{
											"begin": 2128,
											"end": 2141,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2128,
											"end": 2141,
											"name": "AND"
										},
										{
											"begin": 2128,
											"end": 2141,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2128,
											"end": 2141,
											"name": "AND"
										},
										{
											"begin": 2128,
											"end": 2141,
											"name": "DUP2"
										},
										{
											"begin": 2128,
											"end": 2141,
											"name": "MSTORE"
										},
										{
											"begin": 2128,
											"end": 2141,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2128,
											"end": 2141,
											"name": "ADD"
										},
										{
											"begin": 2128,
											"end": 2141,
											"name": "SWAP1"
										},
										{
											"begin": 2128,
											"end": 2141,
											"name": "DUP2"
										},
										{
											"begin": 2128,
											"end": 2141,
											"name": "MSTORE"
										},
										{
											"begin": 2128,
											"end": 2141,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2128,
											"end": 2141,
											"name": "ADD"
										},
										{
											"begin": 2128,
											"end": 2141,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2128,
											"end": 2141,
											"name": "KECCAK256"
										},
										{
											"begin": 2128,
											"end": 2168,
											"name": "DUP2"
										},
										{
											"begin": 2128,
											"end": 2168,
											"name": "SWAP1"
										},
										{
											"begin": 2128,
											"end": 2168,
											"name": "SSTORE"
										},
										{
											"begin": 2128,
											"end": 2168,
											"name": "POP"
										},
										{
											"begin": 2199,
											"end": 2201,
											"name": "DUP2"
										},
										{
											"begin": 2184,
											"end": 2209,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2184,
											"end": 2209,
											"name": "AND"
										},
										{
											"begin": 2193,
											"end": 2197,
											"name": "DUP4"
										},
										{
											"begin": 2184,
											"end": 2209,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2184,
											"end": 2209,
											"name": "AND"
										},
										{
											"begin": 2184,
											"end": 2209,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 2203,
											"end": 2208,
											"name": "DUP4"
										},
										{
											"begin": 2184,
											"end": 2209,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2184,
											"end": 2209,
											"name": "MLOAD"
										},
										{
											"begin": 2184,
											"end": 2209,
											"name": "DUP1"
										},
										{
											"begin": 2184,
											"end": 2209,
											"name": "DUP3"
										},
										{
											"begin": 2184,
											"end": 2209,
											"name": "DUP2"
										},
										{
											"begin": 2184,
											"end": 2209,
											"name": "MSTORE"
										},
										{
											"begin": 2184,
											"end": 2209,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2184,
											"end": 2209,
											"name": "ADD"
										},
										{
											"begin": 2184,
											"end": 2209,
											"name": "SWAP2"
										},
										{
											"begin": 2184,
											"end": 2209,
											"name": "POP"
										},
										{
											"begin": 2184,
											"end": 2209,
											"name": "POP"
										},
										{
											"begin": 2184,
											"end": 2209,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2184,
											"end": 2209,
											"name": "MLOAD"
										},
										{
											"begin": 2184,
											"end": 2209,
											"name": "DUP1"
										},
										{
											"begin": 2184,
											"end": 2209,
											"name": "SWAP2"
										},
										{
											"begin": 2184,
											"end": 2209,
											"name": "SUB"
										},
										{
											"begin": 2184,
											"end": 2209,
											"name": "SWAP1"
										},
										{
											"begin": 2184,
											"end": 2209,
											"name": "LOG3"
										},
										{
											"begin": 1997,
											"end": 2217,
											"name": "POP"
										},
										{
											"begin": 1997,
											"end": 2217,
											"name": "POP"
										},
										{
											"begin": 1997,
											"end": 2217,
											"name": "POP"
										},
										{
											"begin": 1997,
											"end": 2217,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 5399,
											"end": 6282,
											"name": "tag",
											"value": "188"
										},
										{
											"begin": 5399,
											"end": 6282,
											"name": "JUMPDEST"
										},
										{
											"begin": 5472,
											"end": 5482,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5494,
											"end": 5504,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 5494,
											"end": 5504,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5494,
											"end": 5504,
											"name": "SWAP1"
										},
										{
											"begin": 5494,
											"end": 5504,
											"name": "SLOAD"
										},
										{
											"begin": 5494,
											"end": 5504,
											"name": "SWAP1"
										},
										{
											"begin": 5494,
											"end": 5504,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 5494,
											"end": 5504,
											"name": "EXP"
										},
										{
											"begin": 5494,
											"end": 5504,
											"name": "SWAP1"
										},
										{
											"begin": 5494,
											"end": 5504,
											"name": "DIV"
										},
										{
											"begin": 5494,
											"end": 5504,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 5494,
											"end": 5504,
											"name": "AND"
										},
										{
											"begin": 5491,
											"end": 5518,
											"name": "ISZERO"
										},
										{
											"begin": 5491,
											"end": 5518,
											"name": "PUSH [tag]",
											"value": "437"
										},
										{
											"begin": 5491,
											"end": 5518,
											"name": "JUMPI"
										},
										{
											"begin": 5513,
											"end": 5518,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5506,
											"end": 5518,
											"name": "SWAP1"
										},
										{
											"begin": 5506,
											"end": 5518,
											"name": "POP"
										},
										{
											"begin": 5506,
											"end": 5518,
											"name": "PUSH [tag]",
											"value": "436"
										},
										{
											"begin": 5506,
											"end": 5518,
											"name": "JUMP"
										},
										{
											"begin": 5491,
											"end": 5518,
											"name": "tag",
											"value": "437"
										},
										{
											"begin": 5491,
											"end": 5518,
											"name": "JUMPDEST"
										},
										{
											"begin": 5528,
											"end": 5546,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5548,
											"end": 5561,
											"name": "DUP1"
										},
										{
											"begin": 5583,
											"end": 5590,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 5583,
											"end": 5590,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5583,
											"end": 5590,
											"name": "SWAP1"
										},
										{
											"begin": 5583,
											"end": 5590,
											"name": "SLOAD"
										},
										{
											"begin": 5583,
											"end": 5590,
											"name": "SWAP1"
										},
										{
											"begin": 5583,
											"end": 5590,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 5583,
											"end": 5590,
											"name": "EXP"
										},
										{
											"begin": 5583,
											"end": 5590,
											"name": "SWAP1"
										},
										{
											"begin": 5583,
											"end": 5590,
											"name": "DIV"
										},
										{
											"begin": 5583,
											"end": 5590,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5583,
											"end": 5590,
											"name": "AND"
										},
										{
											"begin": 5565,
											"end": 5599,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5565,
											"end": 5599,
											"name": "AND"
										},
										{
											"begin": 5565,
											"end": 5599,
											"name": "PUSH",
											"value": "995B5AAE"
										},
										{
											"begin": 5565,
											"end": 5601,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5565,
											"end": 5601,
											"name": "MLOAD"
										},
										{
											"begin": 5565,
											"end": 5601,
											"name": "DUP2"
										},
										{
											"begin": 5565,
											"end": 5601,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 5565,
											"end": 5601,
											"name": "AND"
										},
										{
											"begin": 5565,
											"end": 5601,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 5565,
											"end": 5601,
											"name": "SHL"
										},
										{
											"begin": 5565,
											"end": 5601,
											"name": "DUP2"
										},
										{
											"begin": 5565,
											"end": 5601,
											"name": "MSTORE"
										},
										{
											"begin": 5565,
											"end": 5601,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5565,
											"end": 5601,
											"name": "ADD"
										},
										{
											"begin": 5565,
											"end": 5601,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5565,
											"end": 5601,
											"name": "DUP1"
										},
										{
											"begin": 5565,
											"end": 5601,
											"name": "MLOAD"
										},
										{
											"begin": 5565,
											"end": 5601,
											"name": "DUP1"
										},
										{
											"begin": 5565,
											"end": 5601,
											"name": "DUP4"
										},
										{
											"begin": 5565,
											"end": 5601,
											"name": "SUB"
										},
										{
											"begin": 5565,
											"end": 5601,
											"name": "DUP2"
										},
										{
											"begin": 5565,
											"end": 5601,
											"name": "DUP7"
										},
										{
											"begin": 5565,
											"end": 5601,
											"name": "DUP1"
										},
										{
											"begin": 5565,
											"end": 5601,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 5565,
											"end": 5601,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "438"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "438"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 5565,
											"end": 5601,
											"name": "POP"
										},
										{
											"begin": 5565,
											"end": 5601,
											"name": "GAS"
										},
										{
											"begin": 5565,
											"end": 5601,
											"name": "STATICCALL"
										},
										{
											"begin": 5565,
											"end": 5601,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "439"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "439"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 5565,
											"end": 5601,
											"name": "POP"
										},
										{
											"begin": 5565,
											"end": 5601,
											"name": "POP"
										},
										{
											"begin": 5565,
											"end": 5601,
											"name": "POP"
										},
										{
											"begin": 5565,
											"end": 5601,
											"name": "POP"
										},
										{
											"begin": 5565,
											"end": 5601,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5565,
											"end": 5601,
											"name": "MLOAD"
										},
										{
											"begin": 5565,
											"end": 5601,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "440"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "440"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 5565,
											"end": 5601,
											"name": "DUP2"
										},
										{
											"begin": 5565,
											"end": 5601,
											"name": "ADD"
										},
										{
											"begin": 5565,
											"end": 5601,
											"name": "SWAP1"
										},
										{
											"begin": 5565,
											"end": 5601,
											"name": "DUP1"
										},
										{
											"begin": 5565,
											"end": 5601,
											"name": "DUP1"
										},
										{
											"begin": 5565,
											"end": 5601,
											"name": "MLOAD"
										},
										{
											"begin": 5565,
											"end": 5601,
											"name": "SWAP1"
										},
										{
											"begin": 5565,
											"end": 5601,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5565,
											"end": 5601,
											"name": "ADD"
										},
										{
											"begin": 5565,
											"end": 5601,
											"name": "SWAP1"
										},
										{
											"begin": 5565,
											"end": 5601,
											"name": "SWAP3"
										},
										{
											"begin": 5565,
											"end": 5601,
											"name": "SWAP2"
										},
										{
											"begin": 5565,
											"end": 5601,
											"name": "SWAP1"
										},
										{
											"begin": 5565,
											"end": 5601,
											"name": "DUP1"
										},
										{
											"begin": 5565,
											"end": 5601,
											"name": "MLOAD"
										},
										{
											"begin": 5565,
											"end": 5601,
											"name": "SWAP1"
										},
										{
											"begin": 5565,
											"end": 5601,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5565,
											"end": 5601,
											"name": "ADD"
										},
										{
											"begin": 5565,
											"end": 5601,
											"name": "SWAP1"
										},
										{
											"begin": 5565,
											"end": 5601,
											"name": "SWAP3"
										},
										{
											"begin": 5565,
											"end": 5601,
											"name": "SWAP2"
										},
										{
											"begin": 5565,
											"end": 5601,
											"name": "SWAP1"
										},
										{
											"begin": 5565,
											"end": 5601,
											"name": "POP"
										},
										{
											"begin": 5565,
											"end": 5601,
											"name": "POP"
										},
										{
											"begin": 5565,
											"end": 5601,
											"name": "POP"
										},
										{
											"begin": 5527,
											"end": 5601,
											"name": "SWAP2"
										},
										{
											"begin": 5527,
											"end": 5601,
											"name": "POP"
										},
										{
											"begin": 5527,
											"end": 5601,
											"name": "SWAP2"
										},
										{
											"begin": 5527,
											"end": 5601,
											"name": "POP"
										},
										{
											"begin": 5633,
											"end": 5634,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5616,
											"end": 5635,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5616,
											"end": 5635,
											"name": "AND"
										},
										{
											"begin": 5616,
											"end": 5621,
											"name": "DUP2"
										},
										{
											"begin": 5616,
											"end": 5635,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5616,
											"end": 5635,
											"name": "AND"
										},
										{
											"begin": 5616,
											"end": 5635,
											"name": "EQ"
										},
										{
											"begin": 5616,
											"end": 5635,
											"name": "ISZERO"
										},
										{
											"begin": 5608,
											"end": 5635,
											"name": "SWAP3"
										},
										{
											"begin": 5608,
											"end": 5635,
											"name": "POP"
										},
										{
											"begin": 5642,
											"end": 5653,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5656,
											"end": 5661,
											"name": "PUSH",
											"value": "B"
										},
										{
											"begin": 5656,
											"end": 5661,
											"name": "SLOAD"
										},
										{
											"begin": 5642,
											"end": 5661,
											"name": "SWAP1"
										},
										{
											"begin": 5642,
											"end": 5661,
											"name": "POP"
										},
										{
											"begin": 5692,
											"end": 5697,
											"name": "DUP4"
										},
										{
											"begin": 5688,
											"end": 6277,
											"name": "ISZERO"
										},
										{
											"begin": 5688,
											"end": 6277,
											"name": "PUSH [tag]",
											"value": "441"
										},
										{
											"begin": 5688,
											"end": 6277,
											"name": "JUMPI"
										},
										{
											"begin": 5722,
											"end": 5723,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5712,
											"end": 5718,
											"name": "DUP2"
										},
										{
											"begin": 5712,
											"end": 5723,
											"name": "EQ"
										},
										{
											"begin": 5708,
											"end": 6221,
											"name": "PUSH [tag]",
											"value": "442"
										},
										{
											"begin": 5708,
											"end": 6221,
											"name": "JUMPI"
										},
										{
											"begin": 5736,
											"end": 5746,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5749,
											"end": 5796,
											"name": "PUSH [tag]",
											"value": "443"
										},
										{
											"begin": 5759,
											"end": 5795,
											"name": "PUSH [tag]",
											"value": "444"
										},
										{
											"begin": 5767,
											"end": 5776,
											"name": "DUP9"
										},
										{
											"begin": 5762,
											"end": 5777,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5762,
											"end": 5777,
											"name": "AND"
										},
										{
											"begin": 5784,
											"end": 5793,
											"name": "DUP9"
										},
										{
											"begin": 5779,
											"end": 5794,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5779,
											"end": 5794,
											"name": "AND"
										},
										{
											"begin": 5759,
											"end": 5761,
											"name": "PUSH [tag]",
											"value": "193"
										},
										{
											"begin": 5759,
											"end": 5795,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5759,
											"end": 5795,
											"name": "tag",
											"value": "444"
										},
										{
											"begin": 5759,
											"end": 5795,
											"name": "JUMPDEST"
										},
										{
											"begin": 5749,
											"end": 5758,
											"name": "PUSH [tag]",
											"value": "240"
										},
										{
											"begin": 5749,
											"end": 5796,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5749,
											"end": 5796,
											"name": "tag",
											"value": "443"
										},
										{
											"begin": 5749,
											"end": 5796,
											"name": "JUMPDEST"
										},
										{
											"begin": 5736,
											"end": 5796,
											"name": "SWAP1"
										},
										{
											"begin": 5736,
											"end": 5796,
											"name": "POP"
										},
										{
											"begin": 5807,
											"end": 5821,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5824,
											"end": 5841,
											"name": "PUSH [tag]",
											"value": "445"
										},
										{
											"begin": 5834,
											"end": 5840,
											"name": "DUP4"
										},
										{
											"begin": 5824,
											"end": 5833,
											"name": "PUSH [tag]",
											"value": "240"
										},
										{
											"begin": 5824,
											"end": 5841,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5824,
											"end": 5841,
											"name": "tag",
											"value": "445"
										},
										{
											"begin": 5824,
											"end": 5841,
											"name": "JUMPDEST"
										},
										{
											"begin": 5807,
											"end": 5841,
											"name": "SWAP1"
										},
										{
											"begin": 5807,
											"end": 5841,
											"name": "POP"
										},
										{
											"begin": 5864,
											"end": 5873,
											"name": "DUP1"
										},
										{
											"begin": 5856,
											"end": 5861,
											"name": "DUP3"
										},
										{
											"begin": 5856,
											"end": 5873,
											"name": "GT"
										},
										{
											"begin": 5852,
											"end": 6212,
											"name": "ISZERO"
										},
										{
											"begin": 5852,
											"end": 6212,
											"name": "PUSH [tag]",
											"value": "446"
										},
										{
											"begin": 5852,
											"end": 6212,
											"name": "JUMPI"
										},
										{
											"begin": 5888,
											"end": 5894,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5897,
											"end": 5948,
											"name": "PUSH [tag]",
											"value": "447"
										},
										{
											"begin": 5944,
											"end": 5947,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 5925,
											"end": 5938,
											"name": "DUP8"
										},
										{
											"begin": 5898,
											"end": 5922,
											"name": "PUSH [tag]",
											"value": "448"
										},
										{
											"begin": 5918,
											"end": 5921,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 650,
											"end": 656,
											"name": "PUSH",
											"value": "186A0"
										},
										{
											"begin": 5898,
											"end": 5917,
											"name": "PUSH [tag]",
											"value": "239"
										},
										{
											"begin": 5898,
											"end": 5917,
											"name": "SWAP1"
										},
										{
											"begin": 5898,
											"end": 5922,
											"name": "SWAP2"
										},
										{
											"begin": 5898,
											"end": 5922,
											"name": "SWAP1"
										},
										{
											"begin": 5898,
											"end": 5922,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 5898,
											"end": 5922,
											"name": "AND"
										},
										{
											"begin": 5898,
											"end": 5922,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5898,
											"end": 5922,
											"name": "tag",
											"value": "448"
										},
										{
											"begin": 5898,
											"end": 5922,
											"name": "JUMPDEST"
										},
										{
											"begin": 5898,
											"end": 5938,
											"name": "DUP2"
										},
										{
											"begin": 5898,
											"end": 5938,
											"name": "PUSH [tag]",
											"value": "449"
										},
										{
											"begin": 5898,
											"end": 5938,
											"name": "JUMPI"
										},
										{
											"begin": 5898,
											"end": 5938,
											"name": "INVALID"
										},
										{
											"begin": 5898,
											"end": 5938,
											"name": "tag",
											"value": "449"
										},
										{
											"begin": 5898,
											"end": 5938,
											"name": "JUMPDEST"
										},
										{
											"begin": 5898,
											"end": 5938,
											"name": "DIV"
										},
										{
											"begin": 5897,
											"end": 5943,
											"name": "PUSH [tag]",
											"value": "173"
										},
										{
											"begin": 5897,
											"end": 5943,
											"name": "SWAP1"
										},
										{
											"begin": 5897,
											"end": 5948,
											"name": "SWAP2"
										},
										{
											"begin": 5897,
											"end": 5948,
											"name": "SWAP1"
										},
										{
											"begin": 5897,
											"end": 5948,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 5897,
											"end": 5948,
											"name": "AND"
										},
										{
											"begin": 5897,
											"end": 5948,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5897,
											"end": 5948,
											"name": "tag",
											"value": "447"
										},
										{
											"begin": 5897,
											"end": 5948,
											"name": "JUMPDEST"
										},
										{
											"begin": 5888,
											"end": 5948,
											"name": "SWAP1"
										},
										{
											"begin": 5888,
											"end": 5948,
											"name": "POP"
										},
										{
											"begin": 5961,
											"end": 5975,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5978,
											"end": 6024,
											"name": "PUSH [tag]",
											"value": "450"
										},
										{
											"begin": 6020,
											"end": 6023,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 5978,
											"end": 6015,
											"name": "PUSH [tag]",
											"value": "451"
										},
										{
											"begin": 5994,
											"end": 6014,
											"name": "PUSH [tag]",
											"value": "452"
										},
										{
											"begin": 6004,
											"end": 6013,
											"name": "DUP7"
										},
										{
											"begin": 5994,
											"end": 5999,
											"name": "DUP9"
										},
										{
											"begin": 5994,
											"end": 6003,
											"name": "PUSH [tag]",
											"value": "173"
										},
										{
											"begin": 5994,
											"end": 6003,
											"name": "SWAP1"
										},
										{
											"begin": 5994,
											"end": 6014,
											"name": "SWAP2"
										},
										{
											"begin": 5994,
											"end": 6014,
											"name": "SWAP1"
										},
										{
											"begin": 5994,
											"end": 6014,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 5994,
											"end": 6014,
											"name": "AND"
										},
										{
											"begin": 5994,
											"end": 6014,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5994,
											"end": 6014,
											"name": "tag",
											"value": "452"
										},
										{
											"begin": 5994,
											"end": 6014,
											"name": "JUMPDEST"
										},
										{
											"begin": 5978,
											"end": 5989,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5978,
											"end": 5989,
											"name": "SLOAD"
										},
										{
											"begin": 5978,
											"end": 5993,
											"name": "PUSH [tag]",
											"value": "239"
										},
										{
											"begin": 5978,
											"end": 5993,
											"name": "SWAP1"
										},
										{
											"begin": 5978,
											"end": 6015,
											"name": "SWAP2"
										},
										{
											"begin": 5978,
											"end": 6015,
											"name": "SWAP1"
										},
										{
											"begin": 5978,
											"end": 6015,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 5978,
											"end": 6015,
											"name": "AND"
										},
										{
											"begin": 5978,
											"end": 6015,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5978,
											"end": 6015,
											"name": "tag",
											"value": "451"
										},
										{
											"begin": 5978,
											"end": 6015,
											"name": "JUMPDEST"
										},
										{
											"begin": 5978,
											"end": 6019,
											"name": "PUSH [tag]",
											"value": "239"
										},
										{
											"begin": 5978,
											"end": 6019,
											"name": "SWAP1"
										},
										{
											"begin": 5978,
											"end": 6024,
											"name": "SWAP2"
										},
										{
											"begin": 5978,
											"end": 6024,
											"name": "SWAP1"
										},
										{
											"begin": 5978,
											"end": 6024,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 5978,
											"end": 6024,
											"name": "AND"
										},
										{
											"begin": 5978,
											"end": 6024,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5978,
											"end": 6024,
											"name": "tag",
											"value": "450"
										},
										{
											"begin": 5978,
											"end": 6024,
											"name": "JUMPDEST"
										},
										{
											"begin": 5961,
											"end": 6024,
											"name": "SWAP1"
										},
										{
											"begin": 5961,
											"end": 6024,
											"name": "POP"
										},
										{
											"begin": 6037,
											"end": 6053,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6056,
											"end": 6092,
											"name": "PUSH [tag]",
											"value": "453"
										},
										{
											"begin": 6073,
											"end": 6091,
											"name": "PUSH [tag]",
											"value": "454"
										},
										{
											"begin": 6087,
											"end": 6090,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 6073,
											"end": 6082,
											"name": "DUP7"
										},
										{
											"begin": 6073,
											"end": 6086,
											"name": "PUSH [tag]",
											"value": "239"
										},
										{
											"begin": 6073,
											"end": 6086,
											"name": "SWAP1"
										},
										{
											"begin": 6073,
											"end": 6091,
											"name": "SWAP2"
										},
										{
											"begin": 6073,
											"end": 6091,
											"name": "SWAP1"
										},
										{
											"begin": 6073,
											"end": 6091,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 6073,
											"end": 6091,
											"name": "AND"
										},
										{
											"begin": 6073,
											"end": 6091,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6073,
											"end": 6091,
											"name": "tag",
											"value": "454"
										},
										{
											"begin": 6073,
											"end": 6091,
											"name": "JUMPDEST"
										},
										{
											"begin": 6056,
											"end": 6068,
											"name": "PUSH [tag]",
											"value": "455"
										},
										{
											"begin": 6066,
											"end": 6067,
											"name": "DUP6"
										},
										{
											"begin": 6056,
											"end": 6061,
											"name": "DUP9"
										},
										{
											"begin": 6056,
											"end": 6065,
											"name": "PUSH [tag]",
											"value": "239"
										},
										{
											"begin": 6056,
											"end": 6065,
											"name": "SWAP1"
										},
										{
											"begin": 6056,
											"end": 6068,
											"name": "SWAP2"
										},
										{
											"begin": 6056,
											"end": 6068,
											"name": "SWAP1"
										},
										{
											"begin": 6056,
											"end": 6068,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 6056,
											"end": 6068,
											"name": "AND"
										},
										{
											"begin": 6056,
											"end": 6068,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6056,
											"end": 6068,
											"name": "tag",
											"value": "455"
										},
										{
											"begin": 6056,
											"end": 6068,
											"name": "JUMPDEST"
										},
										{
											"begin": 6056,
											"end": 6072,
											"name": "PUSH [tag]",
											"value": "435"
										},
										{
											"begin": 6056,
											"end": 6072,
											"name": "SWAP1"
										},
										{
											"begin": 6056,
											"end": 6092,
											"name": "SWAP2"
										},
										{
											"begin": 6056,
											"end": 6092,
											"name": "SWAP1"
										},
										{
											"begin": 6056,
											"end": 6092,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 6056,
											"end": 6092,
											"name": "AND"
										},
										{
											"begin": 6056,
											"end": 6092,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6056,
											"end": 6092,
											"name": "tag",
											"value": "453"
										},
										{
											"begin": 6056,
											"end": 6092,
											"name": "JUMPDEST"
										},
										{
											"begin": 6037,
											"end": 6092,
											"name": "SWAP1"
										},
										{
											"begin": 6037,
											"end": 6092,
											"name": "POP"
										},
										{
											"begin": 6105,
											"end": 6119,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6134,
											"end": 6145,
											"name": "DUP2"
										},
										{
											"begin": 6122,
											"end": 6131,
											"name": "DUP4"
										},
										{
											"begin": 6122,
											"end": 6145,
											"name": "DUP2"
										},
										{
											"begin": 6122,
											"end": 6145,
											"name": "PUSH [tag]",
											"value": "456"
										},
										{
											"begin": 6122,
											"end": 6145,
											"name": "JUMPI"
										},
										{
											"begin": 6122,
											"end": 6145,
											"name": "INVALID"
										},
										{
											"begin": 6122,
											"end": 6145,
											"name": "tag",
											"value": "456"
										},
										{
											"begin": 6122,
											"end": 6145,
											"name": "JUMPDEST"
										},
										{
											"begin": 6122,
											"end": 6145,
											"name": "DIV"
										},
										{
											"begin": 6105,
											"end": 6145,
											"name": "SWAP1"
										},
										{
											"begin": 6105,
											"end": 6145,
											"name": "POP"
										},
										{
											"begin": 6174,
											"end": 6175,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6162,
											"end": 6171,
											"name": "DUP2"
										},
										{
											"begin": 6162,
											"end": 6175,
											"name": "GT"
										},
										{
											"begin": 6158,
											"end": 6200,
											"name": "ISZERO"
										},
										{
											"begin": 6158,
											"end": 6200,
											"name": "PUSH [tag]",
											"value": "457"
										},
										{
											"begin": 6158,
											"end": 6200,
											"name": "JUMPI"
										},
										{
											"begin": 6177,
											"end": 6200,
											"name": "PUSH [tag]",
											"value": "458"
										},
										{
											"begin": 6183,
											"end": 6188,
											"name": "DUP9"
										},
										{
											"begin": 6190,
											"end": 6199,
											"name": "DUP3"
										},
										{
											"begin": 6177,
											"end": 6182,
											"name": "PUSH [tag]",
											"value": "242"
										},
										{
											"begin": 6177,
											"end": 6200,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6177,
											"end": 6200,
											"name": "tag",
											"value": "458"
										},
										{
											"begin": 6177,
											"end": 6200,
											"name": "JUMPDEST"
										},
										{
											"begin": 6158,
											"end": 6200,
											"name": "tag",
											"value": "457"
										},
										{
											"begin": 6158,
											"end": 6200,
											"name": "JUMPDEST"
										},
										{
											"begin": 5852,
											"end": 6212,
											"name": "POP"
										},
										{
											"begin": 5852,
											"end": 6212,
											"name": "POP"
										},
										{
											"begin": 5852,
											"end": 6212,
											"name": "POP"
										},
										{
											"begin": 5852,
											"end": 6212,
											"name": "POP"
										},
										{
											"begin": 5852,
											"end": 6212,
											"name": "tag",
											"value": "446"
										},
										{
											"begin": 5852,
											"end": 6212,
											"name": "JUMPDEST"
										},
										{
											"begin": 5708,
											"end": 6221,
											"name": "POP"
										},
										{
											"begin": 5708,
											"end": 6221,
											"name": "POP"
										},
										{
											"begin": 5708,
											"end": 6221,
											"name": "tag",
											"value": "442"
										},
										{
											"begin": 5708,
											"end": 6221,
											"name": "JUMPDEST"
										},
										{
											"begin": 5688,
											"end": 6277,
											"name": "PUSH [tag]",
											"value": "459"
										},
										{
											"begin": 5688,
											"end": 6277,
											"name": "JUMP"
										},
										{
											"begin": 5688,
											"end": 6277,
											"name": "tag",
											"value": "441"
										},
										{
											"begin": 5688,
											"end": 6277,
											"name": "JUMPDEST"
										},
										{
											"begin": 6248,
											"end": 6249,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6238,
											"end": 6244,
											"name": "DUP2"
										},
										{
											"begin": 6238,
											"end": 6249,
											"name": "EQ"
										},
										{
											"begin": 6234,
											"end": 6277,
											"name": "PUSH [tag]",
											"value": "460"
										},
										{
											"begin": 6234,
											"end": 6277,
											"name": "JUMPI"
										},
										{
											"begin": 6268,
											"end": 6269,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6260,
											"end": 6265,
											"name": "PUSH",
											"value": "B"
										},
										{
											"begin": 6260,
											"end": 6269,
											"name": "DUP2"
										},
										{
											"begin": 6260,
											"end": 6269,
											"name": "SWAP1"
										},
										{
											"begin": 6260,
											"end": 6269,
											"name": "SSTORE"
										},
										{
											"begin": 6260,
											"end": 6269,
											"name": "POP"
										},
										{
											"begin": 6234,
											"end": 6277,
											"name": "tag",
											"value": "460"
										},
										{
											"begin": 6234,
											"end": 6277,
											"name": "JUMPDEST"
										},
										{
											"begin": 5688,
											"end": 6277,
											"name": "tag",
											"value": "459"
										},
										{
											"begin": 5688,
											"end": 6277,
											"name": "JUMPDEST"
										},
										{
											"begin": 5399,
											"end": 6282,
											"name": "POP"
										},
										{
											"begin": 5399,
											"end": 6282,
											"name": "POP"
										},
										{
											"begin": 5399,
											"end": 6282,
											"name": "POP"
										},
										{
											"begin": 5399,
											"end": 6282,
											"name": "tag",
											"value": "436"
										},
										{
											"begin": 5399,
											"end": 6282,
											"name": "JUMPDEST"
										},
										{
											"begin": 5399,
											"end": 6282,
											"name": "SWAP3"
										},
										{
											"begin": 5399,
											"end": 6282,
											"name": "SWAP2"
										},
										{
											"begin": 5399,
											"end": 6282,
											"name": "POP"
										},
										{
											"begin": 5399,
											"end": 6282,
											"name": "POP"
										},
										{
											"begin": 5399,
											"end": 6282,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 14225,
											"end": 14637,
											"name": "tag",
											"value": "193"
										},
										{
											"begin": 14225,
											"end": 14637,
											"name": "JUMPDEST"
										},
										{
											"begin": 14290,
											"end": 14294,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14307,
											"end": 14317,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 14307,
											"end": 14317,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14307,
											"end": 14317,
											"name": "SWAP1"
										},
										{
											"begin": 14307,
											"end": 14317,
											"name": "SLOAD"
										},
										{
											"begin": 14307,
											"end": 14317,
											"name": "SWAP1"
										},
										{
											"begin": 14307,
											"end": 14317,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 14307,
											"end": 14317,
											"name": "EXP"
										},
										{
											"begin": 14307,
											"end": 14317,
											"name": "SWAP1"
										},
										{
											"begin": 14307,
											"end": 14317,
											"name": "DIV"
										},
										{
											"begin": 14307,
											"end": 14317,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 14307,
											"end": 14317,
											"name": "AND"
										},
										{
											"begin": 14303,
											"end": 14596,
											"name": "ISZERO"
										},
										{
											"begin": 14303,
											"end": 14596,
											"name": "PUSH [tag]",
											"value": "462"
										},
										{
											"begin": 14303,
											"end": 14596,
											"name": "JUMPI"
										},
										{
											"begin": 14328,
											"end": 14335,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14359,
											"end": 14379,
											"name": "PUSH",
											"value": "9"
										},
										{
											"begin": 14359,
											"end": 14379,
											"name": "SLOAD"
										},
										{
											"begin": 14338,
											"end": 14356,
											"name": "PUSH [tag]",
											"value": "463"
										},
										{
											"begin": 14351,
											"end": 14355,
											"name": "PUSH",
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 14338,
											"end": 14346,
											"name": "DUP7"
										},
										{
											"begin": 14338,
											"end": 14350,
											"name": "PUSH [tag]",
											"value": "239"
										},
										{
											"begin": 14338,
											"end": 14350,
											"name": "SWAP1"
										},
										{
											"begin": 14338,
											"end": 14356,
											"name": "SWAP2"
										},
										{
											"begin": 14338,
											"end": 14356,
											"name": "SWAP1"
										},
										{
											"begin": 14338,
											"end": 14356,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 14338,
											"end": 14356,
											"name": "AND"
										},
										{
											"begin": 14338,
											"end": 14356,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14338,
											"end": 14356,
											"name": "tag",
											"value": "463"
										},
										{
											"begin": 14338,
											"end": 14356,
											"name": "JUMPDEST"
										},
										{
											"begin": 14338,
											"end": 14379,
											"name": "DUP2"
										},
										{
											"begin": 14338,
											"end": 14379,
											"name": "PUSH [tag]",
											"value": "464"
										},
										{
											"begin": 14338,
											"end": 14379,
											"name": "JUMPI"
										},
										{
											"begin": 14338,
											"end": 14379,
											"name": "INVALID"
										},
										{
											"begin": 14338,
											"end": 14379,
											"name": "tag",
											"value": "464"
										},
										{
											"begin": 14338,
											"end": 14379,
											"name": "JUMPDEST"
										},
										{
											"begin": 14338,
											"end": 14379,
											"name": "DIV"
										},
										{
											"begin": 14328,
											"end": 14379,
											"name": "SWAP1"
										},
										{
											"begin": 14328,
											"end": 14379,
											"name": "POP"
										},
										{
											"begin": 14388,
											"end": 14395,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14419,
											"end": 14439,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 14419,
											"end": 14439,
											"name": "SLOAD"
										},
										{
											"begin": 14398,
											"end": 14416,
											"name": "PUSH [tag]",
											"value": "465"
										},
										{
											"begin": 14411,
											"end": 14415,
											"name": "PUSH",
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 14398,
											"end": 14406,
											"name": "DUP7"
										},
										{
											"begin": 14398,
											"end": 14410,
											"name": "PUSH [tag]",
											"value": "239"
										},
										{
											"begin": 14398,
											"end": 14410,
											"name": "SWAP1"
										},
										{
											"begin": 14398,
											"end": 14416,
											"name": "SWAP2"
										},
										{
											"begin": 14398,
											"end": 14416,
											"name": "SWAP1"
										},
										{
											"begin": 14398,
											"end": 14416,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 14398,
											"end": 14416,
											"name": "AND"
										},
										{
											"begin": 14398,
											"end": 14416,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14398,
											"end": 14416,
											"name": "tag",
											"value": "465"
										},
										{
											"begin": 14398,
											"end": 14416,
											"name": "JUMPDEST"
										},
										{
											"begin": 14398,
											"end": 14439,
											"name": "DUP2"
										},
										{
											"begin": 14398,
											"end": 14439,
											"name": "PUSH [tag]",
											"value": "466"
										},
										{
											"begin": 14398,
											"end": 14439,
											"name": "JUMPI"
										},
										{
											"begin": 14398,
											"end": 14439,
											"name": "INVALID"
										},
										{
											"begin": 14398,
											"end": 14439,
											"name": "tag",
											"value": "466"
										},
										{
											"begin": 14398,
											"end": 14439,
											"name": "JUMPDEST"
										},
										{
											"begin": 14398,
											"end": 14439,
											"name": "DIV"
										},
										{
											"begin": 14388,
											"end": 14439,
											"name": "SWAP1"
										},
										{
											"begin": 14388,
											"end": 14439,
											"name": "POP"
										},
										{
											"begin": 14448,
											"end": 14455,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14473,
											"end": 14477,
											"name": "PUSH",
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 14459,
											"end": 14469,
											"name": "PUSH [tag]",
											"value": "467"
										},
										{
											"begin": 14466,
											"end": 14468,
											"name": "DUP4"
										},
										{
											"begin": 14459,
											"end": 14461,
											"name": "DUP6"
										},
										{
											"begin": 14459,
											"end": 14465,
											"name": "PUSH [tag]",
											"value": "239"
										},
										{
											"begin": 14459,
											"end": 14465,
											"name": "SWAP1"
										},
										{
											"begin": 14459,
											"end": 14469,
											"name": "SWAP2"
										},
										{
											"begin": 14459,
											"end": 14469,
											"name": "SWAP1"
										},
										{
											"begin": 14459,
											"end": 14469,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 14459,
											"end": 14469,
											"name": "AND"
										},
										{
											"begin": 14459,
											"end": 14469,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14459,
											"end": 14469,
											"name": "tag",
											"value": "467"
										},
										{
											"begin": 14459,
											"end": 14469,
											"name": "JUMPDEST"
										},
										{
											"begin": 14458,
											"end": 14477,
											"name": "DUP2"
										},
										{
											"begin": 14458,
											"end": 14477,
											"name": "PUSH [tag]",
											"value": "468"
										},
										{
											"begin": 14458,
											"end": 14477,
											"name": "JUMPI"
										},
										{
											"begin": 14458,
											"end": 14477,
											"name": "INVALID"
										},
										{
											"begin": 14458,
											"end": 14477,
											"name": "tag",
											"value": "468"
										},
										{
											"begin": 14458,
											"end": 14477,
											"name": "JUMPDEST"
										},
										{
											"begin": 14458,
											"end": 14477,
											"name": "DIV"
										},
										{
											"begin": 14448,
											"end": 14477,
											"name": "SWAP1"
										},
										{
											"begin": 14448,
											"end": 14477,
											"name": "POP"
										},
										{
											"begin": 14486,
											"end": 14493,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14496,
											"end": 14538,
											"name": "PUSH [tag]",
											"value": "469"
										},
										{
											"begin": 14533,
											"end": 14537,
											"name": "PUSH",
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 14520,
											"end": 14530,
											"name": "PUSH [tag]",
											"value": "470"
										},
										{
											"begin": 14527,
											"end": 14529,
											"name": "DUP6"
										},
										{
											"begin": 14520,
											"end": 14522,
											"name": "DUP7"
										},
										{
											"begin": 14520,
											"end": 14526,
											"name": "PUSH [tag]",
											"value": "239"
										},
										{
											"begin": 14520,
											"end": 14526,
											"name": "SWAP1"
										},
										{
											"begin": 14520,
											"end": 14530,
											"name": "SWAP2"
										},
										{
											"begin": 14520,
											"end": 14530,
											"name": "SWAP1"
										},
										{
											"begin": 14520,
											"end": 14530,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 14520,
											"end": 14530,
											"name": "AND"
										},
										{
											"begin": 14520,
											"end": 14530,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14520,
											"end": 14530,
											"name": "tag",
											"value": "470"
										},
										{
											"begin": 14520,
											"end": 14530,
											"name": "JUMPDEST"
										},
										{
											"begin": 14520,
											"end": 14537,
											"name": "DUP2"
										},
										{
											"begin": 14520,
											"end": 14537,
											"name": "PUSH [tag]",
											"value": "471"
										},
										{
											"begin": 14520,
											"end": 14537,
											"name": "JUMPI"
										},
										{
											"begin": 14520,
											"end": 14537,
											"name": "INVALID"
										},
										{
											"begin": 14520,
											"end": 14537,
											"name": "tag",
											"value": "471"
										},
										{
											"begin": 14520,
											"end": 14537,
											"name": "JUMPDEST"
										},
										{
											"begin": 14520,
											"end": 14537,
											"name": "DIV"
										},
										{
											"begin": 14510,
											"end": 14514,
											"name": "PUSH",
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 14497,
											"end": 14507,
											"name": "PUSH [tag]",
											"value": "472"
										},
										{
											"begin": 14504,
											"end": 14506,
											"name": "DUP8"
										},
										{
											"begin": 14497,
											"end": 14499,
											"name": "DUP9"
										},
										{
											"begin": 14497,
											"end": 14503,
											"name": "PUSH [tag]",
											"value": "239"
										},
										{
											"begin": 14497,
											"end": 14503,
											"name": "SWAP1"
										},
										{
											"begin": 14497,
											"end": 14507,
											"name": "SWAP2"
										},
										{
											"begin": 14497,
											"end": 14507,
											"name": "SWAP1"
										},
										{
											"begin": 14497,
											"end": 14507,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 14497,
											"end": 14507,
											"name": "AND"
										},
										{
											"begin": 14497,
											"end": 14507,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14497,
											"end": 14507,
											"name": "tag",
											"value": "472"
										},
										{
											"begin": 14497,
											"end": 14507,
											"name": "JUMPDEST"
										},
										{
											"begin": 14497,
											"end": 14514,
											"name": "DUP2"
										},
										{
											"begin": 14497,
											"end": 14514,
											"name": "PUSH [tag]",
											"value": "473"
										},
										{
											"begin": 14497,
											"end": 14514,
											"name": "JUMPI"
										},
										{
											"begin": 14497,
											"end": 14514,
											"name": "INVALID"
										},
										{
											"begin": 14497,
											"end": 14514,
											"name": "tag",
											"value": "473"
										},
										{
											"begin": 14497,
											"end": 14514,
											"name": "JUMPDEST"
										},
										{
											"begin": 14497,
											"end": 14514,
											"name": "DIV"
										},
										{
											"begin": 14496,
											"end": 14519,
											"name": "PUSH [tag]",
											"value": "435"
										},
										{
											"begin": 14496,
											"end": 14519,
											"name": "SWAP1"
										},
										{
											"begin": 14496,
											"end": 14538,
											"name": "SWAP2"
										},
										{
											"begin": 14496,
											"end": 14538,
											"name": "SWAP1"
										},
										{
											"begin": 14496,
											"end": 14538,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 14496,
											"end": 14538,
											"name": "AND"
										},
										{
											"begin": 14496,
											"end": 14538,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14496,
											"end": 14538,
											"name": "tag",
											"value": "469"
										},
										{
											"begin": 14496,
											"end": 14538,
											"name": "JUMPDEST"
										},
										{
											"begin": 14486,
											"end": 14538,
											"name": "SWAP1"
										},
										{
											"begin": 14486,
											"end": 14538,
											"name": "POP"
										},
										{
											"begin": 14568,
											"end": 14572,
											"name": "PUSH",
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 14555,
											"end": 14565,
											"name": "PUSH [tag]",
											"value": "474"
										},
										{
											"begin": 14562,
											"end": 14564,
											"name": "DUP3"
										},
										{
											"begin": 14555,
											"end": 14557,
											"name": "DUP5"
										},
										{
											"begin": 14555,
											"end": 14561,
											"name": "PUSH [tag]",
											"value": "239"
										},
										{
											"begin": 14555,
											"end": 14561,
											"name": "SWAP1"
										},
										{
											"begin": 14555,
											"end": 14565,
											"name": "SWAP2"
										},
										{
											"begin": 14555,
											"end": 14565,
											"name": "SWAP1"
										},
										{
											"begin": 14555,
											"end": 14565,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 14555,
											"end": 14565,
											"name": "AND"
										},
										{
											"begin": 14555,
											"end": 14565,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14555,
											"end": 14565,
											"name": "tag",
											"value": "474"
										},
										{
											"begin": 14555,
											"end": 14565,
											"name": "JUMPDEST"
										},
										{
											"begin": 14555,
											"end": 14572,
											"name": "DUP2"
										},
										{
											"begin": 14555,
											"end": 14572,
											"name": "PUSH [tag]",
											"value": "475"
										},
										{
											"begin": 14555,
											"end": 14572,
											"name": "JUMPI"
										},
										{
											"begin": 14555,
											"end": 14572,
											"name": "INVALID"
										},
										{
											"begin": 14555,
											"end": 14572,
											"name": "tag",
											"value": "475"
										},
										{
											"begin": 14555,
											"end": 14572,
											"name": "JUMPDEST"
										},
										{
											"begin": 14555,
											"end": 14572,
											"name": "DIV"
										},
										{
											"begin": 14547,
											"end": 14572,
											"name": "SWAP5"
										},
										{
											"begin": 14547,
											"end": 14572,
											"name": "POP"
										},
										{
											"begin": 14547,
											"end": 14572,
											"name": "POP"
										},
										{
											"begin": 14547,
											"end": 14572,
											"name": "POP"
										},
										{
											"begin": 14547,
											"end": 14572,
											"name": "POP"
										},
										{
											"begin": 14547,
											"end": 14572,
											"name": "POP"
										},
										{
											"begin": 14547,
											"end": 14572,
											"name": "PUSH [tag]",
											"value": "461"
										},
										{
											"begin": 14547,
											"end": 14572,
											"name": "JUMP"
										},
										{
											"begin": 14303,
											"end": 14596,
											"name": "tag",
											"value": "462"
										},
										{
											"begin": 14303,
											"end": 14596,
											"name": "JUMPDEST"
										},
										{
											"begin": 14609,
											"end": 14631,
											"name": "PUSH [tag]",
											"value": "476"
										},
										{
											"begin": 14622,
											"end": 14630,
											"name": "DUP3"
										},
										{
											"begin": 14609,
											"end": 14617,
											"name": "DUP5"
										},
										{
											"begin": 14609,
											"end": 14621,
											"name": "PUSH [tag]",
											"value": "239"
										},
										{
											"begin": 14609,
											"end": 14621,
											"name": "SWAP1"
										},
										{
											"begin": 14609,
											"end": 14631,
											"name": "SWAP2"
										},
										{
											"begin": 14609,
											"end": 14631,
											"name": "SWAP1"
										},
										{
											"begin": 14609,
											"end": 14631,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 14609,
											"end": 14631,
											"name": "AND"
										},
										{
											"begin": 14609,
											"end": 14631,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14609,
											"end": 14631,
											"name": "tag",
											"value": "476"
										},
										{
											"begin": 14609,
											"end": 14631,
											"name": "JUMPDEST"
										},
										{
											"begin": 14602,
											"end": 14631,
											"name": "SWAP1"
										},
										{
											"begin": 14602,
											"end": 14631,
											"name": "POP"
										},
										{
											"begin": 14225,
											"end": 14637,
											"name": "tag",
											"value": "461"
										},
										{
											"begin": 14225,
											"end": 14637,
											"name": "JUMPDEST"
										},
										{
											"begin": 14225,
											"end": 14637,
											"name": "SWAP3"
										},
										{
											"begin": 14225,
											"end": 14637,
											"name": "SWAP2"
										},
										{
											"begin": 14225,
											"end": 14637,
											"name": "POP"
										},
										{
											"begin": 14225,
											"end": 14637,
											"name": "POP"
										},
										{
											"begin": 14225,
											"end": 14637,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 433,
											"end": 575,
											"name": "tag",
											"value": "239"
										},
										{
											"begin": 433,
											"end": 575,
											"name": "JUMPDEST"
										},
										{
											"begin": 485,
											"end": 491,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 517,
											"end": 518,
											"name": "DUP1"
										},
										{
											"begin": 512,
											"end": 513,
											"name": "DUP3"
										},
										{
											"begin": 512,
											"end": 518,
											"name": "EQ"
										},
										{
											"begin": 512,
											"end": 542,
											"name": "DUP1"
										},
										{
											"begin": 512,
											"end": 542,
											"name": "PUSH [tag]",
											"value": "478"
										},
										{
											"begin": 512,
											"end": 542,
											"name": "JUMPI"
										},
										{
											"begin": 512,
											"end": 542,
											"name": "POP"
										},
										{
											"begin": 541,
											"end": 542,
											"name": "DUP3"
										},
										{
											"begin": 536,
											"end": 537,
											"name": "DUP3"
										},
										{
											"begin": 531,
											"end": 532,
											"name": "DUP4"
										},
										{
											"begin": 527,
											"end": 528,
											"name": "DUP6"
										},
										{
											"begin": 527,
											"end": 532,
											"name": "MUL"
										},
										{
											"begin": 523,
											"end": 532,
											"name": "SWAP3"
										},
										{
											"begin": 523,
											"end": 532,
											"name": "POP"
										},
										{
											"begin": 523,
											"end": 532,
											"name": "DUP3"
										},
										{
											"begin": 522,
											"end": 537,
											"name": "DUP2"
										},
										{
											"begin": 522,
											"end": 537,
											"name": "PUSH [tag]",
											"value": "479"
										},
										{
											"begin": 522,
											"end": 537,
											"name": "JUMPI"
										},
										{
											"begin": 522,
											"end": 537,
											"name": "INVALID"
										},
										{
											"begin": 522,
											"end": 537,
											"name": "tag",
											"value": "479"
										},
										{
											"begin": 522,
											"end": 537,
											"name": "JUMPDEST"
										},
										{
											"begin": 522,
											"end": 537,
											"name": "DIV"
										},
										{
											"begin": 522,
											"end": 542,
											"name": "EQ"
										},
										{
											"begin": 512,
											"end": 542,
											"name": "tag",
											"value": "478"
										},
										{
											"begin": 512,
											"end": 542,
											"name": "JUMPDEST"
										},
										{
											"begin": 504,
											"end": 567,
											"name": "PUSH [tag]",
											"value": "480"
										},
										{
											"begin": 504,
											"end": 567,
											"name": "JUMPI"
										},
										{
											"begin": 504,
											"end": 567,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 504,
											"end": 567,
											"name": "MLOAD"
										},
										{
											"begin": 504,
											"end": 567,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 504,
											"end": 567,
											"name": "DUP2"
										},
										{
											"begin": 504,
											"end": 567,
											"name": "MSTORE"
										},
										{
											"begin": 504,
											"end": 567,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 504,
											"end": 567,
											"name": "ADD"
										},
										{
											"begin": 504,
											"end": 567,
											"name": "DUP1"
										},
										{
											"begin": 504,
											"end": 567,
											"name": "DUP1"
										},
										{
											"begin": 504,
											"end": 567,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 504,
											"end": 567,
											"name": "ADD"
										},
										{
											"begin": 504,
											"end": 567,
											"name": "DUP3"
										},
										{
											"begin": 504,
											"end": 567,
											"name": "DUP2"
										},
										{
											"begin": 504,
											"end": 567,
											"name": "SUB"
										},
										{
											"begin": 504,
											"end": 567,
											"name": "DUP3"
										},
										{
											"begin": 504,
											"end": 567,
											"name": "MSTORE"
										},
										{
											"begin": 504,
											"end": 567,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 504,
											"end": 567,
											"name": "DUP2"
										},
										{
											"begin": 504,
											"end": 567,
											"name": "MSTORE"
										},
										{
											"begin": 504,
											"end": 567,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 504,
											"end": 567,
											"name": "ADD"
										},
										{
											"begin": 504,
											"end": 567,
											"name": "DUP1"
										},
										{
											"begin": 504,
											"end": 567,
											"name": "PUSH",
											"value": "64732D6D6174682D6D756C2D6F766572666C6F77000000000000000000000000"
										},
										{
											"begin": 504,
											"end": 567,
											"name": "DUP2"
										},
										{
											"begin": 504,
											"end": 567,
											"name": "MSTORE"
										},
										{
											"begin": 504,
											"end": 567,
											"name": "POP"
										},
										{
											"begin": 504,
											"end": 567,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 504,
											"end": 567,
											"name": "ADD"
										},
										{
											"begin": 504,
											"end": 567,
											"name": "SWAP2"
										},
										{
											"begin": 504,
											"end": 567,
											"name": "POP"
										},
										{
											"begin": 504,
											"end": 567,
											"name": "POP"
										},
										{
											"begin": 504,
											"end": 567,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 504,
											"end": 567,
											"name": "MLOAD"
										},
										{
											"begin": 504,
											"end": 567,
											"name": "DUP1"
										},
										{
											"begin": 504,
											"end": 567,
											"name": "SWAP2"
										},
										{
											"begin": 504,
											"end": 567,
											"name": "SUB"
										},
										{
											"begin": 504,
											"end": 567,
											"name": "SWAP1"
										},
										{
											"begin": 504,
											"end": 567,
											"name": "REVERT"
										},
										{
											"begin": 504,
											"end": 567,
											"name": "tag",
											"value": "480"
										},
										{
											"begin": 504,
											"end": 567,
											"name": "JUMPDEST"
										},
										{
											"begin": 433,
											"end": 575,
											"name": "SWAP3"
										},
										{
											"begin": 433,
											"end": 575,
											"name": "SWAP2"
										},
										{
											"begin": 433,
											"end": 575,
											"name": "POP"
										},
										{
											"begin": 433,
											"end": 575,
											"name": "POP"
										},
										{
											"begin": 433,
											"end": 575,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 317,
											"end": 620,
											"name": "tag",
											"value": "240"
										},
										{
											"begin": 317,
											"end": 620,
											"name": "JUMPDEST"
										},
										{
											"begin": 362,
											"end": 368,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 389,
											"end": 390,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 385,
											"end": 386,
											"name": "DUP3"
										},
										{
											"begin": 385,
											"end": 390,
											"name": "GT"
										},
										{
											"begin": 381,
											"end": 613,
											"name": "ISZERO"
										},
										{
											"begin": 381,
											"end": 613,
											"name": "PUSH [tag]",
											"value": "482"
										},
										{
											"begin": 381,
											"end": 613,
											"name": "JUMPI"
										},
										{
											"begin": 411,
											"end": 412,
											"name": "DUP2"
										},
										{
											"begin": 407,
											"end": 412,
											"name": "SWAP1"
										},
										{
											"begin": 407,
											"end": 412,
											"name": "POP"
										},
										{
											"begin": 427,
											"end": 433,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 444,
											"end": 445,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 440,
											"end": 441,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 436,
											"end": 437,
											"name": "DUP5"
										},
										{
											"begin": 436,
											"end": 441,
											"name": "DUP2"
										},
										{
											"begin": 436,
											"end": 441,
											"name": "PUSH [tag]",
											"value": "483"
										},
										{
											"begin": 436,
											"end": 441,
											"name": "JUMPI"
										},
										{
											"begin": 436,
											"end": 441,
											"name": "INVALID"
										},
										{
											"begin": 436,
											"end": 441,
											"name": "tag",
											"value": "483"
										},
										{
											"begin": 436,
											"end": 441,
											"name": "JUMPDEST"
										},
										{
											"begin": 436,
											"end": 441,
											"name": "DIV"
										},
										{
											"begin": 436,
											"end": 445,
											"name": "ADD"
										},
										{
											"begin": 427,
											"end": 445,
											"name": "SWAP1"
										},
										{
											"begin": 427,
											"end": 445,
											"name": "POP"
										},
										{
											"begin": 460,
											"end": 552,
											"name": "tag",
											"value": "484"
										},
										{
											"begin": 460,
											"end": 552,
											"name": "JUMPDEST"
										},
										{
											"begin": 471,
											"end": 472,
											"name": "DUP2"
										},
										{
											"begin": 467,
											"end": 468,
											"name": "DUP2"
										},
										{
											"begin": 467,
											"end": 472,
											"name": "LT"
										},
										{
											"begin": 460,
											"end": 552,
											"name": "ISZERO"
										},
										{
											"begin": 460,
											"end": 552,
											"name": "PUSH [tag]",
											"value": "485"
										},
										{
											"begin": 460,
											"end": 552,
											"name": "JUMPI"
										},
										{
											"begin": 497,
											"end": 498,
											"name": "DUP1"
										},
										{
											"begin": 493,
											"end": 498,
											"name": "SWAP2"
										},
										{
											"begin": 493,
											"end": 498,
											"name": "POP"
										},
										{
											"begin": 535,
											"end": 536,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 530,
											"end": 531,
											"name": "DUP2"
										},
										{
											"begin": 526,
											"end": 527,
											"name": "DUP3"
										},
										{
											"begin": 522,
											"end": 523,
											"name": "DUP6"
										},
										{
											"begin": 522,
											"end": 527,
											"name": "DUP2"
										},
										{
											"begin": 522,
											"end": 527,
											"name": "PUSH [tag]",
											"value": "486"
										},
										{
											"begin": 522,
											"end": 527,
											"name": "JUMPI"
										},
										{
											"begin": 522,
											"end": 527,
											"name": "INVALID"
										},
										{
											"begin": 522,
											"end": 527,
											"name": "tag",
											"value": "486"
										},
										{
											"begin": 522,
											"end": 527,
											"name": "JUMPDEST"
										},
										{
											"begin": 522,
											"end": 527,
											"name": "DIV"
										},
										{
											"begin": 522,
											"end": 531,
											"name": "ADD"
										},
										{
											"begin": 521,
											"end": 536,
											"name": "DUP2"
										},
										{
											"begin": 521,
											"end": 536,
											"name": "PUSH [tag]",
											"value": "487"
										},
										{
											"begin": 521,
											"end": 536,
											"name": "JUMPI"
										},
										{
											"begin": 521,
											"end": 536,
											"name": "INVALID"
										},
										{
											"begin": 521,
											"end": 536,
											"name": "tag",
											"value": "487"
										},
										{
											"begin": 521,
											"end": 536,
											"name": "JUMPDEST"
										},
										{
											"begin": 521,
											"end": 536,
											"name": "DIV"
										},
										{
											"begin": 517,
											"end": 536,
											"name": "SWAP1"
										},
										{
											"begin": 517,
											"end": 536,
											"name": "POP"
										},
										{
											"begin": 460,
											"end": 552,
											"name": "PUSH [tag]",
											"value": "484"
										},
										{
											"begin": 460,
											"end": 552,
											"name": "JUMP"
										},
										{
											"begin": 460,
											"end": 552,
											"name": "tag",
											"value": "485"
										},
										{
											"begin": 460,
											"end": 552,
											"name": "JUMPDEST"
										},
										{
											"begin": 381,
											"end": 613,
											"name": "POP"
										},
										{
											"begin": 381,
											"end": 613,
											"name": "PUSH [tag]",
											"value": "488"
										},
										{
											"begin": 381,
											"end": 613,
											"name": "JUMP"
										},
										{
											"begin": 381,
											"end": 613,
											"name": "tag",
											"value": "482"
										},
										{
											"begin": 381,
											"end": 613,
											"name": "JUMPDEST"
										},
										{
											"begin": 578,
											"end": 579,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 573,
											"end": 574,
											"name": "DUP3"
										},
										{
											"begin": 573,
											"end": 579,
											"name": "EQ"
										},
										{
											"begin": 569,
											"end": 613,
											"name": "PUSH [tag]",
											"value": "489"
										},
										{
											"begin": 569,
											"end": 613,
											"name": "JUMPI"
										},
										{
											"begin": 600,
											"end": 601,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 596,
											"end": 601,
											"name": "SWAP1"
										},
										{
											"begin": 596,
											"end": 601,
											"name": "POP"
										},
										{
											"begin": 569,
											"end": 613,
											"name": "tag",
											"value": "489"
										},
										{
											"begin": 569,
											"end": 613,
											"name": "JUMPDEST"
										},
										{
											"begin": 381,
											"end": 613,
											"name": "tag",
											"value": "488"
										},
										{
											"begin": 381,
											"end": 613,
											"name": "JUMPDEST"
										},
										{
											"begin": 317,
											"end": 620,
											"name": "SWAP2"
										},
										{
											"begin": 317,
											"end": 620,
											"name": "SWAP1"
										},
										{
											"begin": 317,
											"end": 620,
											"name": "POP"
										},
										{
											"begin": 317,
											"end": 620,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1394,
											"end": 1595,
											"name": "tag",
											"value": "242"
										},
										{
											"begin": 1394,
											"end": 1595,
											"name": "JUMPDEST"
										},
										{
											"begin": 1467,
											"end": 1489,
											"name": "PUSH [tag]",
											"value": "491"
										},
										{
											"begin": 1483,
											"end": 1488,
											"name": "DUP2"
										},
										{
											"begin": 1467,
											"end": 1478,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1467,
											"end": 1478,
											"name": "SLOAD"
										},
										{
											"begin": 1467,
											"end": 1482,
											"name": "PUSH [tag]",
											"value": "435"
										},
										{
											"begin": 1467,
											"end": 1482,
											"name": "SWAP1"
										},
										{
											"begin": 1467,
											"end": 1489,
											"name": "SWAP2"
										},
										{
											"begin": 1467,
											"end": 1489,
											"name": "SWAP1"
										},
										{
											"begin": 1467,
											"end": 1489,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 1467,
											"end": 1489,
											"name": "AND"
										},
										{
											"begin": 1467,
											"end": 1489,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1467,
											"end": 1489,
											"name": "tag",
											"value": "491"
										},
										{
											"begin": 1467,
											"end": 1489,
											"name": "JUMPDEST"
										},
										{
											"begin": 1453,
											"end": 1464,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1453,
											"end": 1489,
											"name": "DUP2"
										},
										{
											"begin": 1453,
											"end": 1489,
											"name": "SWAP1"
										},
										{
											"begin": 1453,
											"end": 1489,
											"name": "SSTORE"
										},
										{
											"begin": 1453,
											"end": 1489,
											"name": "POP"
										},
										{
											"begin": 1516,
											"end": 1540,
											"name": "PUSH [tag]",
											"value": "492"
										},
										{
											"begin": 1534,
											"end": 1539,
											"name": "DUP2"
										},
										{
											"begin": 1516,
											"end": 1525,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1516,
											"end": 1529,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1526,
											"end": 1528,
											"name": "DUP6"
										},
										{
											"begin": 1516,
											"end": 1529,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1516,
											"end": 1529,
											"name": "AND"
										},
										{
											"begin": 1516,
											"end": 1529,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1516,
											"end": 1529,
											"name": "AND"
										},
										{
											"begin": 1516,
											"end": 1529,
											"name": "DUP2"
										},
										{
											"begin": 1516,
											"end": 1529,
											"name": "MSTORE"
										},
										{
											"begin": 1516,
											"end": 1529,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1516,
											"end": 1529,
											"name": "ADD"
										},
										{
											"begin": 1516,
											"end": 1529,
											"name": "SWAP1"
										},
										{
											"begin": 1516,
											"end": 1529,
											"name": "DUP2"
										},
										{
											"begin": 1516,
											"end": 1529,
											"name": "MSTORE"
										},
										{
											"begin": 1516,
											"end": 1529,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1516,
											"end": 1529,
											"name": "ADD"
										},
										{
											"begin": 1516,
											"end": 1529,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1516,
											"end": 1529,
											"name": "KECCAK256"
										},
										{
											"begin": 1516,
											"end": 1529,
											"name": "SLOAD"
										},
										{
											"begin": 1516,
											"end": 1533,
											"name": "PUSH [tag]",
											"value": "435"
										},
										{
											"begin": 1516,
											"end": 1533,
											"name": "SWAP1"
										},
										{
											"begin": 1516,
											"end": 1540,
											"name": "SWAP2"
										},
										{
											"begin": 1516,
											"end": 1540,
											"name": "SWAP1"
										},
										{
											"begin": 1516,
											"end": 1540,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 1516,
											"end": 1540,
											"name": "AND"
										},
										{
											"begin": 1516,
											"end": 1540,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1516,
											"end": 1540,
											"name": "tag",
											"value": "492"
										},
										{
											"begin": 1516,
											"end": 1540,
											"name": "JUMPDEST"
										},
										{
											"begin": 1500,
											"end": 1509,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1500,
											"end": 1513,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1510,
											"end": 1512,
											"name": "DUP5"
										},
										{
											"begin": 1500,
											"end": 1513,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1500,
											"end": 1513,
											"name": "AND"
										},
										{
											"begin": 1500,
											"end": 1513,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1500,
											"end": 1513,
											"name": "AND"
										},
										{
											"begin": 1500,
											"end": 1513,
											"name": "DUP2"
										},
										{
											"begin": 1500,
											"end": 1513,
											"name": "MSTORE"
										},
										{
											"begin": 1500,
											"end": 1513,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1500,
											"end": 1513,
											"name": "ADD"
										},
										{
											"begin": 1500,
											"end": 1513,
											"name": "SWAP1"
										},
										{
											"begin": 1500,
											"end": 1513,
											"name": "DUP2"
										},
										{
											"begin": 1500,
											"end": 1513,
											"name": "MSTORE"
										},
										{
											"begin": 1500,
											"end": 1513,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1500,
											"end": 1513,
											"name": "ADD"
										},
										{
											"begin": 1500,
											"end": 1513,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1500,
											"end": 1513,
											"name": "KECCAK256"
										},
										{
											"begin": 1500,
											"end": 1540,
											"name": "DUP2"
										},
										{
											"begin": 1500,
											"end": 1540,
											"name": "SWAP1"
										},
										{
											"begin": 1500,
											"end": 1540,
											"name": "SSTORE"
										},
										{
											"begin": 1500,
											"end": 1540,
											"name": "POP"
										},
										{
											"begin": 1577,
											"end": 1579,
											"name": "DUP2"
										},
										{
											"begin": 1556,
											"end": 1587,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1556,
											"end": 1587,
											"name": "AND"
										},
										{
											"begin": 1573,
											"end": 1574,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1556,
											"end": 1587,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1556,
											"end": 1587,
											"name": "AND"
										},
										{
											"begin": 1556,
											"end": 1587,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 1581,
											"end": 1586,
											"name": "DUP4"
										},
										{
											"begin": 1556,
											"end": 1587,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1556,
											"end": 1587,
											"name": "MLOAD"
										},
										{
											"begin": 1556,
											"end": 1587,
											"name": "DUP1"
										},
										{
											"begin": 1556,
											"end": 1587,
											"name": "DUP3"
										},
										{
											"begin": 1556,
											"end": 1587,
											"name": "DUP2"
										},
										{
											"begin": 1556,
											"end": 1587,
											"name": "MSTORE"
										},
										{
											"begin": 1556,
											"end": 1587,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1556,
											"end": 1587,
											"name": "ADD"
										},
										{
											"begin": 1556,
											"end": 1587,
											"name": "SWAP2"
										},
										{
											"begin": 1556,
											"end": 1587,
											"name": "POP"
										},
										{
											"begin": 1556,
											"end": 1587,
											"name": "POP"
										},
										{
											"begin": 1556,
											"end": 1587,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1556,
											"end": 1587,
											"name": "MLOAD"
										},
										{
											"begin": 1556,
											"end": 1587,
											"name": "DUP1"
										},
										{
											"begin": 1556,
											"end": 1587,
											"name": "SWAP2"
										},
										{
											"begin": 1556,
											"end": 1587,
											"name": "SUB"
										},
										{
											"begin": 1556,
											"end": 1587,
											"name": "SWAP1"
										},
										{
											"begin": 1556,
											"end": 1587,
											"name": "LOG3"
										},
										{
											"begin": 1394,
											"end": 1595,
											"name": "POP"
										},
										{
											"begin": 1394,
											"end": 1595,
											"name": "POP"
										},
										{
											"begin": 1394,
											"end": 1595,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 103,
											"end": 199,
											"name": "tag",
											"value": "249"
										},
										{
											"begin": 103,
											"end": 199,
											"name": "JUMPDEST"
										},
										{
											"begin": 155,
											"end": 161,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 182,
											"end": 183,
											"name": "DUP2"
										},
										{
											"begin": 178,
											"end": 179,
											"name": "DUP4"
										},
										{
											"begin": 178,
											"end": 183,
											"name": "LT"
										},
										{
											"begin": 178,
											"end": 191,
											"name": "PUSH [tag]",
											"value": "494"
										},
										{
											"begin": 178,
											"end": 191,
											"name": "JUMPI"
										},
										{
											"begin": 190,
											"end": 191,
											"name": "DUP2"
										},
										{
											"begin": 178,
											"end": 191,
											"name": "PUSH [tag]",
											"value": "495"
										},
										{
											"begin": 178,
											"end": 191,
											"name": "JUMP"
										},
										{
											"begin": 178,
											"end": 191,
											"name": "tag",
											"value": "494"
										},
										{
											"begin": 178,
											"end": 191,
											"name": "JUMPDEST"
										},
										{
											"begin": 186,
											"end": 187,
											"name": "DUP3"
										},
										{
											"begin": 178,
											"end": 191,
											"name": "tag",
											"value": "495"
										},
										{
											"begin": 178,
											"end": 191,
											"name": "JUMPDEST"
										},
										{
											"begin": 174,
											"end": 191,
											"name": "SWAP1"
										},
										{
											"begin": 174,
											"end": 191,
											"name": "POP"
										},
										{
											"begin": 103,
											"end": 199,
											"name": "SWAP3"
										},
										{
											"begin": 103,
											"end": 199,
											"name": "SWAP2"
										},
										{
											"begin": 103,
											"end": 199,
											"name": "POP"
										},
										{
											"begin": 103,
											"end": 199,
											"name": "POP"
										},
										{
											"begin": 103,
											"end": 199,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4988,
											"end": 5260,
											"name": "tag",
											"value": "253"
										},
										{
											"begin": 4988,
											"end": 5260,
											"name": "JUMPDEST"
										},
										{
											"begin": 5078,
											"end": 5081,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5058,
											"end": 5082,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5058,
											"end": 5082,
											"name": "AND"
										},
										{
											"begin": 5058,
											"end": 5066,
											"name": "DUP3"
										},
										{
											"begin": 5058,
											"end": 5082,
											"name": "GT"
										},
										{
											"begin": 5058,
											"end": 5082,
											"name": "ISZERO"
										},
										{
											"begin": 5058,
											"end": 5110,
											"name": "DUP1"
										},
										{
											"begin": 5058,
											"end": 5110,
											"name": "ISZERO"
										},
										{
											"begin": 5058,
											"end": 5110,
											"name": "PUSH [tag]",
											"value": "497"
										},
										{
											"begin": 5058,
											"end": 5110,
											"name": "JUMPI"
										},
										{
											"begin": 5058,
											"end": 5110,
											"name": "POP"
										},
										{
											"begin": 5106,
											"end": 5109,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5086,
											"end": 5110,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5086,
											"end": 5110,
											"name": "AND"
										},
										{
											"begin": 5086,
											"end": 5094,
											"name": "DUP2"
										},
										{
											"begin": 5086,
											"end": 5110,
											"name": "GT"
										},
										{
											"begin": 5086,
											"end": 5110,
											"name": "ISZERO"
										},
										{
											"begin": 5058,
											"end": 5110,
											"name": "tag",
											"value": "497"
										},
										{
											"begin": 5058,
											"end": 5110,
											"name": "JUMPDEST"
										},
										{
											"begin": 5050,
											"end": 5128,
											"name": "PUSH [tag]",
											"value": "498"
										},
										{
											"begin": 5050,
											"end": 5128,
											"name": "JUMPI"
										},
										{
											"begin": 5050,
											"end": 5128,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5050,
											"end": 5128,
											"name": "MLOAD"
										},
										{
											"begin": 5050,
											"end": 5128,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5050,
											"end": 5128,
											"name": "DUP2"
										},
										{
											"begin": 5050,
											"end": 5128,
											"name": "MSTORE"
										},
										{
											"begin": 5050,
											"end": 5128,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5050,
											"end": 5128,
											"name": "ADD"
										},
										{
											"begin": 5050,
											"end": 5128,
											"name": "DUP1"
										},
										{
											"begin": 5050,
											"end": 5128,
											"name": "DUP1"
										},
										{
											"begin": 5050,
											"end": 5128,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5050,
											"end": 5128,
											"name": "ADD"
										},
										{
											"begin": 5050,
											"end": 5128,
											"name": "DUP3"
										},
										{
											"begin": 5050,
											"end": 5128,
											"name": "DUP2"
										},
										{
											"begin": 5050,
											"end": 5128,
											"name": "SUB"
										},
										{
											"begin": 5050,
											"end": 5128,
											"name": "DUP3"
										},
										{
											"begin": 5050,
											"end": 5128,
											"name": "MSTORE"
										},
										{
											"begin": 5050,
											"end": 5128,
											"name": "PUSH",
											"value": "D"
										},
										{
											"begin": 5050,
											"end": 5128,
											"name": "DUP2"
										},
										{
											"begin": 5050,
											"end": 5128,
											"name": "MSTORE"
										},
										{
											"begin": 5050,
											"end": 5128,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5050,
											"end": 5128,
											"name": "ADD"
										},
										{
											"begin": 5050,
											"end": 5128,
											"name": "DUP1"
										},
										{
											"begin": 5050,
											"end": 5128,
											"name": "PUSH",
											"value": "31306B3A204F564552464C4F5700000000000000000000000000000000000000"
										},
										{
											"begin": 5050,
											"end": 5128,
											"name": "DUP2"
										},
										{
											"begin": 5050,
											"end": 5128,
											"name": "MSTORE"
										},
										{
											"begin": 5050,
											"end": 5128,
											"name": "POP"
										},
										{
											"begin": 5050,
											"end": 5128,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5050,
											"end": 5128,
											"name": "ADD"
										},
										{
											"begin": 5050,
											"end": 5128,
											"name": "SWAP2"
										},
										{
											"begin": 5050,
											"end": 5128,
											"name": "POP"
										},
										{
											"begin": 5050,
											"end": 5128,
											"name": "POP"
										},
										{
											"begin": 5050,
											"end": 5128,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5050,
											"end": 5128,
											"name": "MLOAD"
										},
										{
											"begin": 5050,
											"end": 5128,
											"name": "DUP1"
										},
										{
											"begin": 5050,
											"end": 5128,
											"name": "SWAP2"
										},
										{
											"begin": 5050,
											"end": 5128,
											"name": "SUB"
										},
										{
											"begin": 5050,
											"end": 5128,
											"name": "SWAP1"
										},
										{
											"begin": 5050,
											"end": 5128,
											"name": "REVERT"
										},
										{
											"begin": 5050,
											"end": 5128,
											"name": "tag",
											"value": "498"
										},
										{
											"begin": 5050,
											"end": 5128,
											"name": "JUMPDEST"
										},
										{
											"begin": 5156,
											"end": 5164,
											"name": "DUP2"
										},
										{
											"begin": 5137,
											"end": 5145,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 5137,
											"end": 5145,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5137,
											"end": 5165,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 5137,
											"end": 5165,
											"name": "EXP"
										},
										{
											"begin": 5137,
											"end": 5165,
											"name": "DUP2"
										},
										{
											"begin": 5137,
											"end": 5165,
											"name": "SLOAD"
										},
										{
											"begin": 5137,
											"end": 5165,
											"name": "DUP2"
										},
										{
											"begin": 5137,
											"end": 5165,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5137,
											"end": 5165,
											"name": "MUL"
										},
										{
											"begin": 5137,
											"end": 5165,
											"name": "NOT"
										},
										{
											"begin": 5137,
											"end": 5165,
											"name": "AND"
										},
										{
											"begin": 5137,
											"end": 5165,
											"name": "SWAP1"
										},
										{
											"begin": 5137,
											"end": 5165,
											"name": "DUP4"
										},
										{
											"begin": 5137,
											"end": 5165,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5137,
											"end": 5165,
											"name": "AND"
										},
										{
											"begin": 5137,
											"end": 5165,
											"name": "MUL"
										},
										{
											"begin": 5137,
											"end": 5165,
											"name": "OR"
										},
										{
											"begin": 5137,
											"end": 5165,
											"name": "SWAP1"
										},
										{
											"begin": 5137,
											"end": 5165,
											"name": "SSTORE"
										},
										{
											"begin": 5137,
											"end": 5165,
											"name": "POP"
										},
										{
											"begin": 5191,
											"end": 5199,
											"name": "DUP1"
										},
										{
											"begin": 5172,
											"end": 5180,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 5172,
											"end": 5180,
											"name": "PUSH",
											"value": "E"
										},
										{
											"begin": 5172,
											"end": 5200,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 5172,
											"end": 5200,
											"name": "EXP"
										},
										{
											"begin": 5172,
											"end": 5200,
											"name": "DUP2"
										},
										{
											"begin": 5172,
											"end": 5200,
											"name": "SLOAD"
										},
										{
											"begin": 5172,
											"end": 5200,
											"name": "DUP2"
										},
										{
											"begin": 5172,
											"end": 5200,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5172,
											"end": 5200,
											"name": "MUL"
										},
										{
											"begin": 5172,
											"end": 5200,
											"name": "NOT"
										},
										{
											"begin": 5172,
											"end": 5200,
											"name": "AND"
										},
										{
											"begin": 5172,
											"end": 5200,
											"name": "SWAP1"
										},
										{
											"begin": 5172,
											"end": 5200,
											"name": "DUP4"
										},
										{
											"begin": 5172,
											"end": 5200,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5172,
											"end": 5200,
											"name": "AND"
										},
										{
											"begin": 5172,
											"end": 5200,
											"name": "MUL"
										},
										{
											"begin": 5172,
											"end": 5200,
											"name": "OR"
										},
										{
											"begin": 5172,
											"end": 5200,
											"name": "SWAP1"
										},
										{
											"begin": 5172,
											"end": 5200,
											"name": "SSTORE"
										},
										{
											"begin": 5172,
											"end": 5200,
											"name": "POP"
										},
										{
											"begin": 5212,
											"end": 5254,
											"name": "PUSH",
											"value": "1C411E9A96E071241C2F21F7726B17AE89E3CAB4C78BE50E062B03A9FFFBBAD1"
										},
										{
											"begin": 5225,
											"end": 5233,
											"name": "DUP3"
										},
										{
											"begin": 5244,
											"end": 5252,
											"name": "DUP3"
										},
										{
											"begin": 5212,
											"end": 5254,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5212,
											"end": 5254,
											"name": "MLOAD"
										},
										{
											"begin": 5212,
											"end": 5254,
											"name": "DUP1"
										},
										{
											"begin": 5212,
											"end": 5254,
											"name": "DUP4"
										},
										{
											"begin": 5212,
											"end": 5254,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5212,
											"end": 5254,
											"name": "AND"
										},
										{
											"begin": 5212,
											"end": 5254,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5212,
											"end": 5254,
											"name": "AND"
										},
										{
											"begin": 5212,
											"end": 5254,
											"name": "DUP2"
										},
										{
											"begin": 5212,
											"end": 5254,
											"name": "MSTORE"
										},
										{
											"begin": 5212,
											"end": 5254,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5212,
											"end": 5254,
											"name": "ADD"
										},
										{
											"begin": 5212,
											"end": 5254,
											"name": "DUP3"
										},
										{
											"begin": 5212,
											"end": 5254,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5212,
											"end": 5254,
											"name": "AND"
										},
										{
											"begin": 5212,
											"end": 5254,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5212,
											"end": 5254,
											"name": "AND"
										},
										{
											"begin": 5212,
											"end": 5254,
											"name": "DUP2"
										},
										{
											"begin": 5212,
											"end": 5254,
											"name": "MSTORE"
										},
										{
											"begin": 5212,
											"end": 5254,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5212,
											"end": 5254,
											"name": "ADD"
										},
										{
											"begin": 5212,
											"end": 5254,
											"name": "SWAP3"
										},
										{
											"begin": 5212,
											"end": 5254,
											"name": "POP"
										},
										{
											"begin": 5212,
											"end": 5254,
											"name": "POP"
										},
										{
											"begin": 5212,
											"end": 5254,
											"name": "POP"
										},
										{
											"begin": 5212,
											"end": 5254,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5212,
											"end": 5254,
											"name": "MLOAD"
										},
										{
											"begin": 5212,
											"end": 5254,
											"name": "DUP1"
										},
										{
											"begin": 5212,
											"end": 5254,
											"name": "SWAP2"
										},
										{
											"begin": 5212,
											"end": 5254,
											"name": "SUB"
										},
										{
											"begin": 5212,
											"end": 5254,
											"name": "SWAP1"
										},
										{
											"begin": 5212,
											"end": 5254,
											"name": "LOG1"
										},
										{
											"begin": 4988,
											"end": 5260,
											"name": "POP"
										},
										{
											"begin": 4988,
											"end": 5260,
											"name": "POP"
										},
										{
											"begin": 4988,
											"end": 5260,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1603,
											"end": 1812,
											"name": "tag",
											"value": "277"
										},
										{
											"begin": 1603,
											"end": 1812,
											"name": "JUMPDEST"
										},
										{
											"begin": 1682,
											"end": 1708,
											"name": "PUSH [tag]",
											"value": "500"
										},
										{
											"begin": 1702,
											"end": 1707,
											"name": "DUP2"
										},
										{
											"begin": 1682,
											"end": 1691,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1682,
											"end": 1697,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1692,
											"end": 1696,
											"name": "DUP6"
										},
										{
											"begin": 1682,
											"end": 1697,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1682,
											"end": 1697,
											"name": "AND"
										},
										{
											"begin": 1682,
											"end": 1697,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1682,
											"end": 1697,
											"name": "AND"
										},
										{
											"begin": 1682,
											"end": 1697,
											"name": "DUP2"
										},
										{
											"begin": 1682,
											"end": 1697,
											"name": "MSTORE"
										},
										{
											"begin": 1682,
											"end": 1697,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1682,
											"end": 1697,
											"name": "ADD"
										},
										{
											"begin": 1682,
											"end": 1697,
											"name": "SWAP1"
										},
										{
											"begin": 1682,
											"end": 1697,
											"name": "DUP2"
										},
										{
											"begin": 1682,
											"end": 1697,
											"name": "MSTORE"
										},
										{
											"begin": 1682,
											"end": 1697,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1682,
											"end": 1697,
											"name": "ADD"
										},
										{
											"begin": 1682,
											"end": 1697,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1682,
											"end": 1697,
											"name": "KECCAK256"
										},
										{
											"begin": 1682,
											"end": 1697,
											"name": "SLOAD"
										},
										{
											"begin": 1682,
											"end": 1701,
											"name": "PUSH [tag]",
											"value": "173"
										},
										{
											"begin": 1682,
											"end": 1701,
											"name": "SWAP1"
										},
										{
											"begin": 1682,
											"end": 1708,
											"name": "SWAP2"
										},
										{
											"begin": 1682,
											"end": 1708,
											"name": "SWAP1"
										},
										{
											"begin": 1682,
											"end": 1708,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 1682,
											"end": 1708,
											"name": "AND"
										},
										{
											"begin": 1682,
											"end": 1708,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1682,
											"end": 1708,
											"name": "tag",
											"value": "500"
										},
										{
											"begin": 1682,
											"end": 1708,
											"name": "JUMPDEST"
										},
										{
											"begin": 1664,
											"end": 1673,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1664,
											"end": 1679,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1674,
											"end": 1678,
											"name": "DUP5"
										},
										{
											"begin": 1664,
											"end": 1679,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1664,
											"end": 1679,
											"name": "AND"
										},
										{
											"begin": 1664,
											"end": 1679,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1664,
											"end": 1679,
											"name": "AND"
										},
										{
											"begin": 1664,
											"end": 1679,
											"name": "DUP2"
										},
										{
											"begin": 1664,
											"end": 1679,
											"name": "MSTORE"
										},
										{
											"begin": 1664,
											"end": 1679,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1664,
											"end": 1679,
											"name": "ADD"
										},
										{
											"begin": 1664,
											"end": 1679,
											"name": "SWAP1"
										},
										{
											"begin": 1664,
											"end": 1679,
											"name": "DUP2"
										},
										{
											"begin": 1664,
											"end": 1679,
											"name": "MSTORE"
										},
										{
											"begin": 1664,
											"end": 1679,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1664,
											"end": 1679,
											"name": "ADD"
										},
										{
											"begin": 1664,
											"end": 1679,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1664,
											"end": 1679,
											"name": "KECCAK256"
										},
										{
											"begin": 1664,
											"end": 1708,
											"name": "DUP2"
										},
										{
											"begin": 1664,
											"end": 1708,
											"name": "SWAP1"
										},
										{
											"begin": 1664,
											"end": 1708,
											"name": "SSTORE"
										},
										{
											"begin": 1664,
											"end": 1708,
											"name": "POP"
										},
										{
											"begin": 1733,
											"end": 1755,
											"name": "PUSH [tag]",
											"value": "501"
										},
										{
											"begin": 1749,
											"end": 1754,
											"name": "DUP2"
										},
										{
											"begin": 1733,
											"end": 1744,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1733,
											"end": 1744,
											"name": "SLOAD"
										},
										{
											"begin": 1733,
											"end": 1748,
											"name": "PUSH [tag]",
											"value": "173"
										},
										{
											"begin": 1733,
											"end": 1748,
											"name": "SWAP1"
										},
										{
											"begin": 1733,
											"end": 1755,
											"name": "SWAP2"
										},
										{
											"begin": 1733,
											"end": 1755,
											"name": "SWAP1"
										},
										{
											"begin": 1733,
											"end": 1755,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 1733,
											"end": 1755,
											"name": "AND"
										},
										{
											"begin": 1733,
											"end": 1755,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1733,
											"end": 1755,
											"name": "tag",
											"value": "501"
										},
										{
											"begin": 1733,
											"end": 1755,
											"name": "JUMPDEST"
										},
										{
											"begin": 1719,
											"end": 1730,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1719,
											"end": 1755,
											"name": "DUP2"
										},
										{
											"begin": 1719,
											"end": 1755,
											"name": "SWAP1"
										},
										{
											"begin": 1719,
											"end": 1755,
											"name": "SSTORE"
										},
										{
											"begin": 1719,
											"end": 1755,
											"name": "POP"
										},
										{
											"begin": 1794,
											"end": 1795,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1771,
											"end": 1804,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1771,
											"end": 1804,
											"name": "AND"
										},
										{
											"begin": 1780,
											"end": 1784,
											"name": "DUP3"
										},
										{
											"begin": 1771,
											"end": 1804,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1771,
											"end": 1804,
											"name": "AND"
										},
										{
											"begin": 1771,
											"end": 1804,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 1798,
											"end": 1803,
											"name": "DUP4"
										},
										{
											"begin": 1771,
											"end": 1804,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1771,
											"end": 1804,
											"name": "MLOAD"
										},
										{
											"begin": 1771,
											"end": 1804,
											"name": "DUP1"
										},
										{
											"begin": 1771,
											"end": 1804,
											"name": "DUP3"
										},
										{
											"begin": 1771,
											"end": 1804,
											"name": "DUP2"
										},
										{
											"begin": 1771,
											"end": 1804,
											"name": "MSTORE"
										},
										{
											"begin": 1771,
											"end": 1804,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1771,
											"end": 1804,
											"name": "ADD"
										},
										{
											"begin": 1771,
											"end": 1804,
											"name": "SWAP2"
										},
										{
											"begin": 1771,
											"end": 1804,
											"name": "POP"
										},
										{
											"begin": 1771,
											"end": 1804,
											"name": "POP"
										},
										{
											"begin": 1771,
											"end": 1804,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1771,
											"end": 1804,
											"name": "MLOAD"
										},
										{
											"begin": 1771,
											"end": 1804,
											"name": "DUP1"
										},
										{
											"begin": 1771,
											"end": 1804,
											"name": "SWAP2"
										},
										{
											"begin": 1771,
											"end": 1804,
											"name": "SUB"
										},
										{
											"begin": 1771,
											"end": 1804,
											"name": "SWAP1"
										},
										{
											"begin": 1771,
											"end": 1804,
											"name": "LOG3"
										},
										{
											"begin": 1603,
											"end": 1812,
											"name": "POP"
										},
										{
											"begin": 1603,
											"end": 1812,
											"name": "POP"
										},
										{
											"begin": 1603,
											"end": 1812,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1930,
											"end": 2201,
											"name": "tag",
											"value": "279"
										},
										{
											"begin": 1930,
											"end": 2201,
											"name": "JUMPDEST"
										},
										{
											"begin": 2008,
											"end": 2020,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2022,
											"end": 2039,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 2043,
											"end": 2048,
											"name": "DUP5"
										},
										{
											"begin": 2043,
											"end": 2053,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2043,
											"end": 2053,
											"name": "AND"
										},
										{
											"begin": 457,
											"end": 491,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 457,
											"end": 491,
											"name": "MLOAD"
										},
										{
											"begin": 457,
											"end": 491,
											"name": "DUP1"
										},
										{
											"begin": 457,
											"end": 491,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 457,
											"end": 491,
											"name": "ADD"
										},
										{
											"begin": 457,
											"end": 491,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 457,
											"end": 491,
											"name": "MSTORE"
										},
										{
											"begin": 457,
											"end": 491,
											"name": "DUP1"
										},
										{
											"begin": 457,
											"end": 491,
											"name": "PUSH",
											"value": "19"
										},
										{
											"begin": 457,
											"end": 491,
											"name": "DUP2"
										},
										{
											"begin": 457,
											"end": 491,
											"name": "MSTORE"
										},
										{
											"begin": 457,
											"end": 491,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 457,
											"end": 491,
											"name": "ADD"
										},
										{
											"begin": 457,
											"end": 491,
											"name": "PUSH",
											"value": "7472616E7366657228616464726573732C75696E743235362900000000000000"
										},
										{
											"begin": 457,
											"end": 491,
											"name": "DUP2"
										},
										{
											"begin": 457,
											"end": 491,
											"name": "MSTORE"
										},
										{
											"begin": 457,
											"end": 491,
											"name": "POP"
										},
										{
											"begin": 447,
											"end": 492,
											"name": "DUP1"
										},
										{
											"begin": 447,
											"end": 492,
											"name": "MLOAD"
										},
										{
											"begin": 447,
											"end": 492,
											"name": "SWAP1"
										},
										{
											"begin": 447,
											"end": 492,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 447,
											"end": 492,
											"name": "ADD"
										},
										{
											"begin": 447,
											"end": 492,
											"name": "KECCAK256"
										},
										{
											"begin": 2087,
											"end": 2089,
											"name": "DUP6"
										},
										{
											"begin": 2091,
											"end": 2096,
											"name": "DUP6"
										},
										{
											"begin": 2054,
											"end": 2097,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2054,
											"end": 2097,
											"name": "MLOAD"
										},
										{
											"begin": 2054,
											"end": 2097,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 2054,
											"end": 2097,
											"name": "ADD"
										},
										{
											"begin": 2054,
											"end": 2097,
											"name": "DUP1"
										},
										{
											"begin": 2054,
											"end": 2097,
											"name": "DUP4"
										},
										{
											"begin": 2054,
											"end": 2097,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2054,
											"end": 2097,
											"name": "AND"
										},
										{
											"begin": 2054,
											"end": 2097,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2054,
											"end": 2097,
											"name": "AND"
										},
										{
											"begin": 2054,
											"end": 2097,
											"name": "DUP2"
										},
										{
											"begin": 2054,
											"end": 2097,
											"name": "MSTORE"
										},
										{
											"begin": 2054,
											"end": 2097,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2054,
											"end": 2097,
											"name": "ADD"
										},
										{
											"begin": 2054,
											"end": 2097,
											"name": "DUP3"
										},
										{
											"begin": 2054,
											"end": 2097,
											"name": "DUP2"
										},
										{
											"begin": 2054,
											"end": 2097,
											"name": "MSTORE"
										},
										{
											"begin": 2054,
											"end": 2097,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2054,
											"end": 2097,
											"name": "ADD"
										},
										{
											"begin": 2054,
											"end": 2097,
											"name": "SWAP3"
										},
										{
											"begin": 2054,
											"end": 2097,
											"name": "POP"
										},
										{
											"begin": 2054,
											"end": 2097,
											"name": "POP"
										},
										{
											"begin": 2054,
											"end": 2097,
											"name": "POP"
										},
										{
											"begin": 2054,
											"end": 2097,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2054,
											"end": 2097,
											"name": "MLOAD"
										},
										{
											"begin": 49,
											"end": 53,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 39,
											"end": 46,
											"name": "DUP2"
										},
										{
											"begin": 30,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 20,
											"name": "DUP2"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 2054,
											"end": 2097,
											"name": "SWAP1"
										},
										{
											"begin": 2054,
											"end": 2097,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2054,
											"end": 2097,
											"name": "MSTORE"
										},
										{
											"begin": 2054,
											"end": 2097,
											"name": "SWAP1"
										},
										{
											"begin": 2054,
											"end": 2097,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2054,
											"end": 2097,
											"name": "NOT"
										},
										{
											"begin": 2054,
											"end": 2097,
											"name": "AND"
										},
										{
											"begin": 38,
											"end": 42,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 29,
											"end": 36,
											"name": "DUP3"
										},
										{
											"begin": 25,
											"end": 43,
											"name": "ADD"
										},
										{
											"begin": 67,
											"end": 77,
											"name": "DUP1"
										},
										{
											"begin": 61,
											"end": 78,
											"name": "MLOAD"
										},
										{
											"begin": 96,
											"end": 154,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 199,
											"end": 207,
											"name": "DUP4"
										},
										{
											"begin": 192,
											"end": 196,
											"name": "DUP2"
										},
										{
											"begin": 186,
											"end": 190,
											"name": "DUP4"
										},
										{
											"begin": 182,
											"end": 197,
											"name": "AND"
										},
										{
											"begin": 179,
											"end": 208,
											"name": "OR"
										},
										{
											"begin": 167,
											"end": 177,
											"name": "DUP4"
										},
										{
											"begin": 160,
											"end": 209,
											"name": "MSTORE"
										},
										{
											"begin": 0,
											"end": 215,
											"name": "POP"
										},
										{
											"begin": 0,
											"end": 215,
											"name": "POP"
										},
										{
											"begin": 0,
											"end": 215,
											"name": "POP"
										},
										{
											"begin": 2054,
											"end": 2097,
											"name": "POP"
										},
										{
											"begin": 2043,
											"end": 2098,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2043,
											"end": 2098,
											"name": "MLOAD"
										},
										{
											"begin": 2043,
											"end": 2098,
											"name": "DUP1"
										},
										{
											"begin": 2043,
											"end": 2098,
											"name": "DUP3"
										},
										{
											"begin": 2043,
											"end": 2098,
											"name": "DUP1"
										},
										{
											"begin": 2043,
											"end": 2098,
											"name": "MLOAD"
										},
										{
											"begin": 2043,
											"end": 2098,
											"name": "SWAP1"
										},
										{
											"begin": 2043,
											"end": 2098,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2043,
											"end": 2098,
											"name": "ADD"
										},
										{
											"begin": 2043,
											"end": 2098,
											"name": "SWAP1"
										},
										{
											"begin": 2043,
											"end": 2098,
											"name": "DUP1"
										},
										{
											"begin": 2043,
											"end": 2098,
											"name": "DUP4"
										},
										{
											"begin": 2043,
											"end": 2098,
											"name": "DUP4"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "tag",
											"value": "503"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPDEST"
										},
										{
											"begin": 66,
											"end": 68,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 61,
											"end": 64,
											"name": "DUP4"
										},
										{
											"begin": 58,
											"end": 69,
											"name": "LT"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "PUSH [tag]",
											"value": "505"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPI"
										},
										{
											"begin": 182,
											"end": 185,
											"name": "DUP1"
										},
										{
											"begin": 176,
											"end": 186,
											"name": "MLOAD"
										},
										{
											"begin": 171,
											"end": 174,
											"name": "DUP3"
										},
										{
											"begin": 164,
											"end": 187,
											"name": "MSTORE"
										},
										{
											"begin": 98,
											"end": 100,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 93,
											"end": 96,
											"name": "DUP3"
										},
										{
											"begin": 89,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 82,
											"end": 101,
											"name": "SWAP2"
										},
										{
											"begin": 82,
											"end": 101,
											"name": "POP"
										},
										{
											"begin": 123,
											"end": 125,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 118,
											"end": 121,
											"name": "DUP2"
										},
										{
											"begin": 114,
											"end": 126,
											"name": "ADD"
										},
										{
											"begin": 107,
											"end": 126,
											"name": "SWAP1"
										},
										{
											"begin": 107,
											"end": 126,
											"name": "POP"
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 143,
											"end": 146,
											"name": "DUP4"
										},
										{
											"begin": 139,
											"end": 151,
											"name": "SUB"
										},
										{
											"begin": 132,
											"end": 151,
											"name": "SWAP3"
										},
										{
											"begin": 132,
											"end": 151,
											"name": "POP"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "PUSH [tag]",
											"value": "503"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMP"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "tag",
											"value": "505"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPDEST"
										},
										{
											"begin": 274,
											"end": 275,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 267,
											"end": 270,
											"name": "DUP4"
										},
										{
											"begin": 263,
											"end": 265,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 259,
											"end": 271,
											"name": "SUB"
										},
										{
											"begin": 254,
											"end": 257,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 250,
											"end": 272,
											"name": "EXP"
										},
										{
											"begin": 246,
											"end": 276,
											"name": "SUB"
										},
										{
											"begin": 315,
											"end": 319,
											"name": "DUP1"
										},
										{
											"begin": 311,
											"end": 320,
											"name": "NOT"
										},
										{
											"begin": 305,
											"end": 308,
											"name": "DUP3"
										},
										{
											"begin": 299,
											"end": 309,
											"name": "MLOAD"
										},
										{
											"begin": 295,
											"end": 321,
											"name": "AND"
										},
										{
											"begin": 356,
											"end": 360,
											"name": "DUP2"
										},
										{
											"begin": 350,
											"end": 353,
											"name": "DUP5"
										},
										{
											"begin": 344,
											"end": 354,
											"name": "MLOAD"
										},
										{
											"begin": 340,
											"end": 361,
											"name": "AND"
										},
										{
											"begin": 389,
											"end": 396,
											"name": "DUP1"
										},
										{
											"begin": 380,
											"end": 387,
											"name": "DUP3"
										},
										{
											"begin": 377,
											"end": 397,
											"name": "OR"
										},
										{
											"begin": 372,
											"end": 375,
											"name": "DUP6"
										},
										{
											"begin": 365,
											"end": 398,
											"name": "MSTORE"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 2043,
											"end": 2098,
											"name": "POP"
										},
										{
											"begin": 2043,
											"end": 2098,
											"name": "POP"
										},
										{
											"begin": 2043,
											"end": 2098,
											"name": "POP"
										},
										{
											"begin": 2043,
											"end": 2098,
											"name": "SWAP1"
										},
										{
											"begin": 2043,
											"end": 2098,
											"name": "POP"
										},
										{
											"begin": 2043,
											"end": 2098,
											"name": "ADD"
										},
										{
											"begin": 2043,
											"end": 2098,
											"name": "SWAP2"
										},
										{
											"begin": 2043,
											"end": 2098,
											"name": "POP"
										},
										{
											"begin": 2043,
											"end": 2098,
											"name": "POP"
										},
										{
											"begin": 2043,
											"end": 2098,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2043,
											"end": 2098,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2043,
											"end": 2098,
											"name": "MLOAD"
										},
										{
											"begin": 2043,
											"end": 2098,
											"name": "DUP1"
										},
										{
											"begin": 2043,
											"end": 2098,
											"name": "DUP4"
										},
										{
											"begin": 2043,
											"end": 2098,
											"name": "SUB"
										},
										{
											"begin": 2043,
											"end": 2098,
											"name": "DUP2"
										},
										{
											"begin": 2043,
											"end": 2098,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2043,
											"end": 2098,
											"name": "DUP7"
										},
										{
											"begin": 2043,
											"end": 2098,
											"name": "GAS"
										},
										{
											"begin": 2043,
											"end": 2098,
											"name": "CALL"
										},
										{
											"begin": 2043,
											"end": 2098,
											"name": "SWAP2"
										},
										{
											"begin": 2043,
											"end": 2098,
											"name": "POP"
										},
										{
											"begin": 2043,
											"end": 2098,
											"name": "POP"
										},
										{
											"begin": 2043,
											"end": 2098,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 14,
											"end": 15,
											"name": "DUP1"
										},
										{
											"begin": 21,
											"end": 22,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16,
											"end": 47,
											"name": "DUP2"
										},
										{
											"begin": 16,
											"end": 47,
											"name": "EQ"
										},
										{
											"begin": 16,
											"end": 47,
											"name": "PUSH [tag]",
											"value": "507"
										},
										{
											"begin": 16,
											"end": 47,
											"name": "JUMPI"
										},
										{
											"begin": 75,
											"end": 79,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 69,
											"end": 80,
											"name": "MLOAD"
										},
										{
											"begin": 64,
											"end": 80,
											"name": "SWAP2"
										},
										{
											"begin": 64,
											"end": 80,
											"name": "POP"
										},
										{
											"begin": 144,
											"end": 148,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 140,
											"end": 149,
											"name": "NOT"
										},
										{
											"begin": 133,
											"end": 137,
											"name": "PUSH",
											"value": "3F"
										},
										{
											"begin": 115,
											"end": 131,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 111,
											"end": 138,
											"name": "ADD"
										},
										{
											"begin": 107,
											"end": 150,
											"name": "AND"
										},
										{
											"begin": 104,
											"end": 105,
											"name": "DUP3"
										},
										{
											"begin": 100,
											"end": 151,
											"name": "ADD"
										},
										{
											"begin": 94,
											"end": 98,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 87,
											"end": 152,
											"name": "MSTORE"
										},
										{
											"begin": 169,
											"end": 185,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 166,
											"end": 167,
											"name": "DUP3"
										},
										{
											"begin": 159,
											"end": 186,
											"name": "MSTORE"
										},
										{
											"begin": 225,
											"end": 241,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 222,
											"end": 223,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 215,
											"end": 219,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 212,
											"end": 213,
											"name": "DUP5"
										},
										{
											"begin": 208,
											"end": 220,
											"name": "ADD"
										},
										{
											"begin": 193,
											"end": 242,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 7,
											"end": 249,
											"name": "PUSH [tag]",
											"value": "506"
										},
										{
											"begin": 7,
											"end": 249,
											"name": "JUMP"
										},
										{
											"begin": 16,
											"end": 47,
											"name": "tag",
											"value": "507"
										},
										{
											"begin": 16,
											"end": 47,
											"name": "JUMPDEST"
										},
										{
											"begin": 36,
											"end": 40,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 31,
											"end": 40,
											"name": "SWAP2"
										},
										{
											"begin": 31,
											"end": 40,
											"name": "POP"
										},
										{
											"begin": 7,
											"end": 249,
											"name": "tag",
											"value": "506"
										},
										{
											"begin": 7,
											"end": 249,
											"name": "JUMPDEST"
										},
										{
											"begin": 7,
											"end": 249,
											"name": "POP"
										},
										{
											"begin": 2007,
											"end": 2098,
											"name": "SWAP2"
										},
										{
											"begin": 2007,
											"end": 2098,
											"name": "POP"
										},
										{
											"begin": 2007,
											"end": 2098,
											"name": "SWAP2"
										},
										{
											"begin": 2007,
											"end": 2098,
											"name": "POP"
										},
										{
											"begin": 2113,
											"end": 2120,
											"name": "DUP2"
										},
										{
											"begin": 2113,
											"end": 2170,
											"name": "DUP1"
										},
										{
											"begin": 2113,
											"end": 2170,
											"name": "ISZERO"
										},
										{
											"begin": 2113,
											"end": 2170,
											"name": "PUSH [tag]",
											"value": "508"
										},
										{
											"begin": 2113,
											"end": 2170,
											"name": "JUMPI"
										},
										{
											"begin": 2113,
											"end": 2170,
											"name": "POP"
										},
										{
											"begin": 2140,
											"end": 2141,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2125,
											"end": 2129,
											"name": "DUP2"
										},
										{
											"begin": 2125,
											"end": 2136,
											"name": "MLOAD"
										},
										{
											"begin": 2125,
											"end": 2141,
											"name": "EQ"
										},
										{
											"begin": 2125,
											"end": 2169,
											"name": "DUP1"
										},
										{
											"begin": 2125,
											"end": 2169,
											"name": "PUSH [tag]",
											"value": "509"
										},
										{
											"begin": 2125,
											"end": 2169,
											"name": "JUMPI"
										},
										{
											"begin": 2125,
											"end": 2169,
											"name": "POP"
										},
										{
											"begin": 2156,
											"end": 2160,
											"name": "DUP1"
										},
										{
											"begin": 2145,
											"end": 2169,
											"name": "DUP1"
										},
										{
											"begin": 2145,
											"end": 2169,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2145,
											"end": 2169,
											"name": "ADD"
										},
										{
											"begin": 2145,
											"end": 2169,
											"name": "SWAP1"
										},
										{
											"begin": 2145,
											"end": 2169,
											"name": "MLOAD"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "510"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "510"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 2145,
											"end": 2169,
											"name": "DUP2"
										},
										{
											"begin": 2145,
											"end": 2169,
											"name": "ADD"
										},
										{
											"begin": 2145,
											"end": 2169,
											"name": "SWAP1"
										},
										{
											"begin": 2145,
											"end": 2169,
											"name": "DUP1"
										},
										{
											"begin": 2145,
											"end": 2169,
											"name": "DUP1"
										},
										{
											"begin": 2145,
											"end": 2169,
											"name": "MLOAD"
										},
										{
											"begin": 2145,
											"end": 2169,
											"name": "SWAP1"
										},
										{
											"begin": 2145,
											"end": 2169,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2145,
											"end": 2169,
											"name": "ADD"
										},
										{
											"begin": 2145,
											"end": 2169,
											"name": "SWAP1"
										},
										{
											"begin": 2145,
											"end": 2169,
											"name": "SWAP3"
										},
										{
											"begin": 2145,
											"end": 2169,
											"name": "SWAP2"
										},
										{
											"begin": 2145,
											"end": 2169,
											"name": "SWAP1"
										},
										{
											"begin": 2145,
											"end": 2169,
											"name": "POP"
										},
										{
											"begin": 2145,
											"end": 2169,
											"name": "POP"
										},
										{
											"begin": 2145,
											"end": 2169,
											"name": "POP"
										},
										{
											"begin": 2125,
											"end": 2169,
											"name": "tag",
											"value": "509"
										},
										{
											"begin": 2125,
											"end": 2169,
											"name": "JUMPDEST"
										},
										{
											"begin": 2113,
											"end": 2170,
											"name": "tag",
											"value": "508"
										},
										{
											"begin": 2113,
											"end": 2170,
											"name": "JUMPDEST"
										},
										{
											"begin": 2105,
											"end": 2195,
											"name": "PUSH [tag]",
											"value": "511"
										},
										{
											"begin": 2105,
											"end": 2195,
											"name": "JUMPI"
										},
										{
											"begin": 2105,
											"end": 2195,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2105,
											"end": 2195,
											"name": "MLOAD"
										},
										{
											"begin": 2105,
											"end": 2195,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2105,
											"end": 2195,
											"name": "DUP2"
										},
										{
											"begin": 2105,
											"end": 2195,
											"name": "MSTORE"
										},
										{
											"begin": 2105,
											"end": 2195,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2105,
											"end": 2195,
											"name": "ADD"
										},
										{
											"begin": 2105,
											"end": 2195,
											"name": "DUP1"
										},
										{
											"begin": 2105,
											"end": 2195,
											"name": "DUP1"
										},
										{
											"begin": 2105,
											"end": 2195,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2105,
											"end": 2195,
											"name": "ADD"
										},
										{
											"begin": 2105,
											"end": 2195,
											"name": "DUP3"
										},
										{
											"begin": 2105,
											"end": 2195,
											"name": "DUP2"
										},
										{
											"begin": 2105,
											"end": 2195,
											"name": "SUB"
										},
										{
											"begin": 2105,
											"end": 2195,
											"name": "DUP3"
										},
										{
											"begin": 2105,
											"end": 2195,
											"name": "MSTORE"
										},
										{
											"begin": 2105,
											"end": 2195,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 2105,
											"end": 2195,
											"name": "DUP2"
										},
										{
											"begin": 2105,
											"end": 2195,
											"name": "MSTORE"
										},
										{
											"begin": 2105,
											"end": 2195,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2105,
											"end": 2195,
											"name": "ADD"
										},
										{
											"begin": 2105,
											"end": 2195,
											"name": "DUP1"
										},
										{
											"begin": 2105,
											"end": 2195,
											"name": "PUSH",
											"value": "31306B3A205452414E534645525F4641494C4544000000000000000000000000"
										},
										{
											"begin": 2105,
											"end": 2195,
											"name": "DUP2"
										},
										{
											"begin": 2105,
											"end": 2195,
											"name": "MSTORE"
										},
										{
											"begin": 2105,
											"end": 2195,
											"name": "POP"
										},
										{
											"begin": 2105,
											"end": 2195,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2105,
											"end": 2195,
											"name": "ADD"
										},
										{
											"begin": 2105,
											"end": 2195,
											"name": "SWAP2"
										},
										{
											"begin": 2105,
											"end": 2195,
											"name": "POP"
										},
										{
											"begin": 2105,
											"end": 2195,
											"name": "POP"
										},
										{
											"begin": 2105,
											"end": 2195,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2105,
											"end": 2195,
											"name": "MLOAD"
										},
										{
											"begin": 2105,
											"end": 2195,
											"name": "DUP1"
										},
										{
											"begin": 2105,
											"end": 2195,
											"name": "SWAP2"
										},
										{
											"begin": 2105,
											"end": 2195,
											"name": "SUB"
										},
										{
											"begin": 2105,
											"end": 2195,
											"name": "SWAP1"
										},
										{
											"begin": 2105,
											"end": 2195,
											"name": "REVERT"
										},
										{
											"begin": 2105,
											"end": 2195,
											"name": "tag",
											"value": "511"
										},
										{
											"begin": 2105,
											"end": 2195,
											"name": "JUMPDEST"
										},
										{
											"begin": 1930,
											"end": 2201,
											"name": "POP"
										},
										{
											"begin": 1930,
											"end": 2201,
											"name": "POP"
										},
										{
											"begin": 1930,
											"end": 2201,
											"name": "POP"
										},
										{
											"begin": 1930,
											"end": 2201,
											"name": "POP"
										},
										{
											"begin": 1930,
											"end": 2201,
											"name": "POP"
										},
										{
											"begin": 1930,
											"end": 2201,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 15774,
											"end": 16887,
											"name": "tag",
											"value": "315"
										},
										{
											"begin": 15774,
											"end": 16887,
											"name": "JUMPDEST"
										},
										{
											"begin": 15901,
											"end": 15905,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15918,
											"end": 15928,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 15918,
											"end": 15928,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15918,
											"end": 15928,
											"name": "SWAP1"
										},
										{
											"begin": 15918,
											"end": 15928,
											"name": "SLOAD"
										},
										{
											"begin": 15918,
											"end": 15928,
											"name": "SWAP1"
										},
										{
											"begin": 15918,
											"end": 15928,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 15918,
											"end": 15928,
											"name": "EXP"
										},
										{
											"begin": 15918,
											"end": 15928,
											"name": "SWAP1"
										},
										{
											"begin": 15918,
											"end": 15928,
											"name": "DIV"
										},
										{
											"begin": 15918,
											"end": 15928,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 15918,
											"end": 15928,
											"name": "AND"
										},
										{
											"begin": 15914,
											"end": 16882,
											"name": "ISZERO"
										},
										{
											"begin": 15914,
											"end": 16882,
											"name": "PUSH [tag]",
											"value": "513"
										},
										{
											"begin": 15914,
											"end": 16882,
											"name": "JUMPI"
										},
										{
											"begin": 15950,
											"end": 16006,
											"name": "PUSH [tag]",
											"value": "514"
										},
										{
											"begin": 650,
											"end": 656,
											"name": "PUSH",
											"value": "186A0"
										},
										{
											"begin": 15963,
											"end": 15987,
											"name": "PUSH [tag]",
											"value": "515"
										},
										{
											"begin": 15976,
											"end": 15986,
											"name": "DUP5"
										},
										{
											"begin": 15963,
											"end": 15971,
											"name": "DUP10"
										},
										{
											"begin": 15963,
											"end": 15975,
											"name": "PUSH [tag]",
											"value": "239"
										},
										{
											"begin": 15963,
											"end": 15975,
											"name": "SWAP1"
										},
										{
											"begin": 15963,
											"end": 15987,
											"name": "SWAP2"
										},
										{
											"begin": 15963,
											"end": 15987,
											"name": "SWAP1"
										},
										{
											"begin": 15963,
											"end": 15987,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 15963,
											"end": 15987,
											"name": "AND"
										},
										{
											"begin": 15963,
											"end": 15987,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 15963,
											"end": 15987,
											"name": "tag",
											"value": "515"
										},
										{
											"begin": 15963,
											"end": 15987,
											"name": "JUMPDEST"
										},
										{
											"begin": 15963,
											"end": 16005,
											"name": "DUP2"
										},
										{
											"begin": 15963,
											"end": 16005,
											"name": "PUSH [tag]",
											"value": "516"
										},
										{
											"begin": 15963,
											"end": 16005,
											"name": "JUMPI"
										},
										{
											"begin": 15963,
											"end": 16005,
											"name": "INVALID"
										},
										{
											"begin": 15963,
											"end": 16005,
											"name": "tag",
											"value": "516"
										},
										{
											"begin": 15963,
											"end": 16005,
											"name": "JUMPDEST"
										},
										{
											"begin": 15963,
											"end": 16005,
											"name": "DIV"
										},
										{
											"begin": 15950,
											"end": 15958,
											"name": "DUP8"
										},
										{
											"begin": 15950,
											"end": 15962,
											"name": "PUSH [tag]",
											"value": "173"
										},
										{
											"begin": 15950,
											"end": 15962,
											"name": "SWAP1"
										},
										{
											"begin": 15950,
											"end": 16006,
											"name": "SWAP2"
										},
										{
											"begin": 15950,
											"end": 16006,
											"name": "SWAP1"
										},
										{
											"begin": 15950,
											"end": 16006,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 15950,
											"end": 16006,
											"name": "AND"
										},
										{
											"begin": 15950,
											"end": 16006,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 15950,
											"end": 16006,
											"name": "tag",
											"value": "514"
										},
										{
											"begin": 15950,
											"end": 16006,
											"name": "JUMPDEST"
										},
										{
											"begin": 15939,
											"end": 16006,
											"name": "SWAP6"
										},
										{
											"begin": 15939,
											"end": 16006,
											"name": "POP"
										},
										{
											"begin": 16050,
											"end": 16057,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16060,
											"end": 16084,
											"name": "PUSH [tag]",
											"value": "517"
										},
										{
											"begin": 16063,
											"end": 16072,
											"name": "DUP6"
										},
										{
											"begin": 16074,
											"end": 16083,
											"name": "DUP6"
										},
										{
											"begin": 16060,
											"end": 16062,
											"name": "PUSH [tag]",
											"value": "193"
										},
										{
											"begin": 16060,
											"end": 16084,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 16060,
											"end": 16084,
											"name": "tag",
											"value": "517"
										},
										{
											"begin": 16060,
											"end": 16084,
											"name": "JUMPDEST"
										},
										{
											"begin": 16050,
											"end": 16084,
											"name": "SWAP1"
										},
										{
											"begin": 16050,
											"end": 16084,
											"name": "POP"
										},
										{
											"begin": 16124,
											"end": 16144,
											"name": "PUSH",
											"value": "9"
										},
										{
											"begin": 16124,
											"end": 16144,
											"name": "SLOAD"
										},
										{
											"begin": 16117,
											"end": 16121,
											"name": "PUSH",
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 16105,
											"end": 16114,
											"name": "DUP7"
										},
										{
											"begin": 16105,
											"end": 16121,
											"name": "MUL"
										},
										{
											"begin": 16105,
											"end": 16144,
											"name": "DUP2"
										},
										{
											"begin": 16105,
											"end": 16144,
											"name": "PUSH [tag]",
											"value": "518"
										},
										{
											"begin": 16105,
											"end": 16144,
											"name": "JUMPI"
										},
										{
											"begin": 16105,
											"end": 16144,
											"name": "INVALID"
										},
										{
											"begin": 16105,
											"end": 16144,
											"name": "tag",
											"value": "518"
										},
										{
											"begin": 16105,
											"end": 16144,
											"name": "JUMPDEST"
										},
										{
											"begin": 16105,
											"end": 16144,
											"name": "DIV"
										},
										{
											"begin": 16093,
											"end": 16144,
											"name": "SWAP5"
										},
										{
											"begin": 16093,
											"end": 16144,
											"name": "POP"
										},
										{
											"begin": 16184,
											"end": 16204,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 16184,
											"end": 16204,
											"name": "SLOAD"
										},
										{
											"begin": 16177,
											"end": 16181,
											"name": "PUSH",
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 16165,
											"end": 16174,
											"name": "DUP6"
										},
										{
											"begin": 16165,
											"end": 16181,
											"name": "MUL"
										},
										{
											"begin": 16165,
											"end": 16204,
											"name": "DUP2"
										},
										{
											"begin": 16165,
											"end": 16204,
											"name": "PUSH [tag]",
											"value": "519"
										},
										{
											"begin": 16165,
											"end": 16204,
											"name": "JUMPI"
										},
										{
											"begin": 16165,
											"end": 16204,
											"name": "INVALID"
										},
										{
											"begin": 16165,
											"end": 16204,
											"name": "tag",
											"value": "519"
										},
										{
											"begin": 16165,
											"end": 16204,
											"name": "JUMPDEST"
										},
										{
											"begin": 16165,
											"end": 16204,
											"name": "DIV"
										},
										{
											"begin": 16153,
											"end": 16204,
											"name": "SWAP4"
										},
										{
											"begin": 16153,
											"end": 16204,
											"name": "POP"
										},
										{
											"begin": 16216,
											"end": 16229,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16231,
											"end": 16244,
											"name": "DUP1"
										},
										{
											"begin": 16259,
											"end": 16265,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 16259,
											"end": 16265,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16259,
											"end": 16265,
											"name": "SWAP1"
										},
										{
											"begin": 16259,
											"end": 16265,
											"name": "SLOAD"
										},
										{
											"begin": 16259,
											"end": 16265,
											"name": "SWAP1"
										},
										{
											"begin": 16259,
											"end": 16265,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 16259,
											"end": 16265,
											"name": "EXP"
										},
										{
											"begin": 16259,
											"end": 16265,
											"name": "SWAP1"
										},
										{
											"begin": 16259,
											"end": 16265,
											"name": "DIV"
										},
										{
											"begin": 16259,
											"end": 16265,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16259,
											"end": 16265,
											"name": "AND"
										},
										{
											"begin": 16248,
											"end": 16265,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16248,
											"end": 16265,
											"name": "AND"
										},
										{
											"begin": 16248,
											"end": 16255,
											"name": "DUP9"
										},
										{
											"begin": 16248,
											"end": 16265,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16248,
											"end": 16265,
											"name": "AND"
										},
										{
											"begin": 16248,
											"end": 16265,
											"name": "EQ"
										},
										{
											"begin": 16248,
											"end": 16315,
											"name": "PUSH [tag]",
											"value": "520"
										},
										{
											"begin": 16248,
											"end": 16315,
											"name": "JUMPI"
										},
										{
											"begin": 16294,
											"end": 16303,
											"name": "DUP6"
										},
										{
											"begin": 16305,
											"end": 16314,
											"name": "DUP8"
										},
										{
											"begin": 16248,
											"end": 16315,
											"name": "PUSH [tag]",
											"value": "521"
										},
										{
											"begin": 16248,
											"end": 16315,
											"name": "JUMP"
										},
										{
											"begin": 16248,
											"end": 16315,
											"name": "tag",
											"value": "520"
										},
										{
											"begin": 16248,
											"end": 16315,
											"name": "JUMPDEST"
										},
										{
											"begin": 16269,
											"end": 16278,
											"name": "DUP7"
										},
										{
											"begin": 16280,
											"end": 16289,
											"name": "DUP7"
										},
										{
											"begin": 16248,
											"end": 16315,
											"name": "tag",
											"value": "521"
										},
										{
											"begin": 16248,
											"end": 16315,
											"name": "JUMPDEST"
										},
										{
											"begin": 16215,
											"end": 16315,
											"name": "SWAP2"
										},
										{
											"begin": 16215,
											"end": 16315,
											"name": "POP"
										},
										{
											"begin": 16215,
											"end": 16315,
											"name": "SWAP2"
										},
										{
											"begin": 16215,
											"end": 16315,
											"name": "POP"
										},
										{
											"begin": 16346,
											"end": 16352,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 16346,
											"end": 16352,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16346,
											"end": 16352,
											"name": "SWAP1"
										},
										{
											"begin": 16346,
											"end": 16352,
											"name": "SLOAD"
										},
										{
											"begin": 16346,
											"end": 16352,
											"name": "SWAP1"
										},
										{
											"begin": 16346,
											"end": 16352,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 16346,
											"end": 16352,
											"name": "EXP"
										},
										{
											"begin": 16346,
											"end": 16352,
											"name": "SWAP1"
										},
										{
											"begin": 16346,
											"end": 16352,
											"name": "DIV"
										},
										{
											"begin": 16346,
											"end": 16352,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16346,
											"end": 16352,
											"name": "AND"
										},
										{
											"begin": 16335,
											"end": 16352,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16335,
											"end": 16352,
											"name": "AND"
										},
										{
											"begin": 16335,
											"end": 16342,
											"name": "DUP9"
										},
										{
											"begin": 16335,
											"end": 16352,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16335,
											"end": 16352,
											"name": "AND"
										},
										{
											"begin": 16335,
											"end": 16352,
											"name": "EQ"
										},
										{
											"begin": 16335,
											"end": 16434,
											"name": "PUSH [tag]",
											"value": "522"
										},
										{
											"begin": 16335,
											"end": 16434,
											"name": "JUMPI"
										},
										{
											"begin": 16414,
											"end": 16434,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 16414,
											"end": 16434,
											"name": "SLOAD"
										},
										{
											"begin": 16407,
											"end": 16411,
											"name": "PUSH",
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 16396,
											"end": 16404,
											"name": "DUP11"
										},
										{
											"begin": 16396,
											"end": 16411,
											"name": "MUL"
										},
										{
											"begin": 16396,
											"end": 16434,
											"name": "DUP2"
										},
										{
											"begin": 16396,
											"end": 16434,
											"name": "PUSH [tag]",
											"value": "523"
										},
										{
											"begin": 16396,
											"end": 16434,
											"name": "JUMPI"
										},
										{
											"begin": 16396,
											"end": 16434,
											"name": "INVALID"
										},
										{
											"begin": 16396,
											"end": 16434,
											"name": "tag",
											"value": "523"
										},
										{
											"begin": 16396,
											"end": 16434,
											"name": "JUMPDEST"
										},
										{
											"begin": 16396,
											"end": 16434,
											"name": "DIV"
										},
										{
											"begin": 16335,
											"end": 16434,
											"name": "PUSH [tag]",
											"value": "524"
										},
										{
											"begin": 16335,
											"end": 16434,
											"name": "JUMP"
										},
										{
											"begin": 16335,
											"end": 16434,
											"name": "tag",
											"value": "522"
										},
										{
											"begin": 16335,
											"end": 16434,
											"name": "JUMPDEST"
										},
										{
											"begin": 16373,
											"end": 16393,
											"name": "PUSH",
											"value": "9"
										},
										{
											"begin": 16373,
											"end": 16393,
											"name": "SLOAD"
										},
										{
											"begin": 16366,
											"end": 16370,
											"name": "PUSH",
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 16355,
											"end": 16363,
											"name": "DUP11"
										},
										{
											"begin": 16355,
											"end": 16370,
											"name": "MUL"
										},
										{
											"begin": 16355,
											"end": 16393,
											"name": "DUP2"
										},
										{
											"begin": 16355,
											"end": 16393,
											"name": "PUSH [tag]",
											"value": "525"
										},
										{
											"begin": 16355,
											"end": 16393,
											"name": "JUMPI"
										},
										{
											"begin": 16355,
											"end": 16393,
											"name": "INVALID"
										},
										{
											"begin": 16355,
											"end": 16393,
											"name": "tag",
											"value": "525"
										},
										{
											"begin": 16355,
											"end": 16393,
											"name": "JUMPDEST"
										},
										{
											"begin": 16355,
											"end": 16393,
											"name": "DIV"
										},
										{
											"begin": 16335,
											"end": 16434,
											"name": "tag",
											"value": "524"
										},
										{
											"begin": 16335,
											"end": 16434,
											"name": "JUMPDEST"
										},
										{
											"begin": 16324,
											"end": 16434,
											"name": "SWAP9"
										},
										{
											"begin": 16324,
											"end": 16434,
											"name": "POP"
										},
										{
											"begin": 16443,
											"end": 16449,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16463,
											"end": 16504,
											"name": "PUSH [tag]",
											"value": "526"
										},
										{
											"begin": 16481,
											"end": 16489,
											"name": "DUP4"
										},
										{
											"begin": 16470,
											"end": 16478,
											"name": "DUP12"
										},
										{
											"begin": 16470,
											"end": 16489,
											"name": "ADD"
										},
										{
											"begin": 16491,
											"end": 16493,
											"name": "DUP6"
										},
										{
											"begin": 16495,
											"end": 16503,
											"name": "DUP5"
										},
										{
											"begin": 16463,
											"end": 16469,
											"name": "PUSH [tag]",
											"value": "527"
										},
										{
											"begin": 16463,
											"end": 16504,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 16463,
											"end": 16504,
											"name": "tag",
											"value": "526"
										},
										{
											"begin": 16463,
											"end": 16504,
											"name": "JUMPDEST"
										},
										{
											"begin": 16452,
											"end": 16460,
											"name": "DUP3"
										},
										{
											"begin": 16452,
											"end": 16504,
											"name": "SUB"
										},
										{
											"begin": 16443,
											"end": 16504,
											"name": "SWAP1"
										},
										{
											"begin": 16443,
											"end": 16504,
											"name": "POP"
										},
										{
											"begin": 16592,
											"end": 16596,
											"name": "PUSH",
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 16536,
											"end": 16542,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 16536,
											"end": 16542,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16536,
											"end": 16542,
											"name": "SWAP1"
										},
										{
											"begin": 16536,
											"end": 16542,
											"name": "SLOAD"
										},
										{
											"begin": 16536,
											"end": 16542,
											"name": "SWAP1"
										},
										{
											"begin": 16536,
											"end": 16542,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 16536,
											"end": 16542,
											"name": "EXP"
										},
										{
											"begin": 16536,
											"end": 16542,
											"name": "SWAP1"
										},
										{
											"begin": 16536,
											"end": 16542,
											"name": "DIV"
										},
										{
											"begin": 16536,
											"end": 16542,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16536,
											"end": 16542,
											"name": "AND"
										},
										{
											"begin": 16525,
											"end": 16542,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16525,
											"end": 16542,
											"name": "AND"
										},
										{
											"begin": 16525,
											"end": 16532,
											"name": "DUP11"
										},
										{
											"begin": 16525,
											"end": 16542,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16525,
											"end": 16542,
											"name": "AND"
										},
										{
											"begin": 16525,
											"end": 16542,
											"name": "EQ"
										},
										{
											"begin": 16525,
											"end": 16588,
											"name": "PUSH [tag]",
											"value": "528"
										},
										{
											"begin": 16525,
											"end": 16588,
											"name": "JUMPI"
										},
										{
											"begin": 16568,
											"end": 16588,
											"name": "PUSH",
											"value": "9"
										},
										{
											"begin": 16568,
											"end": 16588,
											"name": "SLOAD"
										},
										{
											"begin": 16525,
											"end": 16588,
											"name": "PUSH [tag]",
											"value": "529"
										},
										{
											"begin": 16525,
											"end": 16588,
											"name": "JUMP"
										},
										{
											"begin": 16525,
											"end": 16588,
											"name": "tag",
											"value": "528"
										},
										{
											"begin": 16525,
											"end": 16588,
											"name": "JUMPDEST"
										},
										{
											"begin": 16545,
											"end": 16565,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 16545,
											"end": 16565,
											"name": "SLOAD"
										},
										{
											"begin": 16525,
											"end": 16588,
											"name": "tag",
											"value": "529"
										},
										{
											"begin": 16525,
											"end": 16588,
											"name": "JUMPDEST"
										},
										{
											"begin": 16520,
											"end": 16521,
											"name": "DUP3"
										},
										{
											"begin": 16520,
											"end": 16589,
											"name": "MUL"
										},
										{
											"begin": 16520,
											"end": 16596,
											"name": "DUP2"
										},
										{
											"begin": 16520,
											"end": 16596,
											"name": "PUSH [tag]",
											"value": "530"
										},
										{
											"begin": 16520,
											"end": 16596,
											"name": "JUMPI"
										},
										{
											"begin": 16520,
											"end": 16596,
											"name": "INVALID"
										},
										{
											"begin": 16520,
											"end": 16596,
											"name": "tag",
											"value": "530"
										},
										{
											"begin": 16520,
											"end": 16596,
											"name": "JUMPDEST"
										},
										{
											"begin": 16520,
											"end": 16596,
											"name": "DIV"
										},
										{
											"begin": 16513,
											"end": 16596,
											"name": "SWAP5"
										},
										{
											"begin": 16513,
											"end": 16596,
											"name": "POP"
										},
										{
											"begin": 16513,
											"end": 16596,
											"name": "POP"
										},
										{
											"begin": 16513,
											"end": 16596,
											"name": "POP"
										},
										{
											"begin": 16513,
											"end": 16596,
											"name": "POP"
										},
										{
											"begin": 16513,
											"end": 16596,
											"name": "POP"
										},
										{
											"begin": 16513,
											"end": 16596,
											"name": "PUSH [tag]",
											"value": "512"
										},
										{
											"begin": 16513,
											"end": 16596,
											"name": "JUMP"
										},
										{
											"begin": 15914,
											"end": 16882,
											"name": "tag",
											"value": "513"
										},
										{
											"begin": 15914,
											"end": 16882,
											"name": "JUMPDEST"
										},
										{
											"begin": 16622,
											"end": 16635,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16637,
											"end": 16650,
											"name": "DUP1"
										},
										{
											"begin": 16665,
											"end": 16671,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 16665,
											"end": 16671,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16665,
											"end": 16671,
											"name": "SWAP1"
										},
										{
											"begin": 16665,
											"end": 16671,
											"name": "SLOAD"
										},
										{
											"begin": 16665,
											"end": 16671,
											"name": "SWAP1"
										},
										{
											"begin": 16665,
											"end": 16671,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 16665,
											"end": 16671,
											"name": "EXP"
										},
										{
											"begin": 16665,
											"end": 16671,
											"name": "SWAP1"
										},
										{
											"begin": 16665,
											"end": 16671,
											"name": "DIV"
										},
										{
											"begin": 16665,
											"end": 16671,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16665,
											"end": 16671,
											"name": "AND"
										},
										{
											"begin": 16654,
											"end": 16671,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16654,
											"end": 16671,
											"name": "AND"
										},
										{
											"begin": 16654,
											"end": 16661,
											"name": "DUP8"
										},
										{
											"begin": 16654,
											"end": 16671,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16654,
											"end": 16671,
											"name": "AND"
										},
										{
											"begin": 16654,
											"end": 16671,
											"name": "EQ"
										},
										{
											"begin": 16654,
											"end": 16721,
											"name": "PUSH [tag]",
											"value": "532"
										},
										{
											"begin": 16654,
											"end": 16721,
											"name": "JUMPI"
										},
										{
											"begin": 16700,
											"end": 16709,
											"name": "DUP5"
										},
										{
											"begin": 16711,
											"end": 16720,
											"name": "DUP7"
										},
										{
											"begin": 16654,
											"end": 16721,
											"name": "PUSH [tag]",
											"value": "533"
										},
										{
											"begin": 16654,
											"end": 16721,
											"name": "JUMP"
										},
										{
											"begin": 16654,
											"end": 16721,
											"name": "tag",
											"value": "532"
										},
										{
											"begin": 16654,
											"end": 16721,
											"name": "JUMPDEST"
										},
										{
											"begin": 16675,
											"end": 16684,
											"name": "DUP6"
										},
										{
											"begin": 16686,
											"end": 16695,
											"name": "DUP6"
										},
										{
											"begin": 16654,
											"end": 16721,
											"name": "tag",
											"value": "533"
										},
										{
											"begin": 16654,
											"end": 16721,
											"name": "JUMPDEST"
										},
										{
											"begin": 16621,
											"end": 16721,
											"name": "SWAP2"
										},
										{
											"begin": 16621,
											"end": 16721,
											"name": "POP"
										},
										{
											"begin": 16621,
											"end": 16721,
											"name": "SWAP2"
										},
										{
											"begin": 16621,
											"end": 16721,
											"name": "POP"
										},
										{
											"begin": 16741,
											"end": 16786,
											"name": "PUSH [tag]",
											"value": "534"
										},
										{
											"begin": 16754,
											"end": 16785,
											"name": "PUSH [tag]",
											"value": "535"
										},
										{
											"begin": 16774,
											"end": 16784,
											"name": "DUP6"
										},
										{
											"begin": 650,
											"end": 656,
											"name": "PUSH",
											"value": "186A0"
										},
										{
											"begin": 16754,
											"end": 16773,
											"name": "PUSH [tag]",
											"value": "173"
										},
										{
											"begin": 16754,
											"end": 16773,
											"name": "SWAP1"
										},
										{
											"begin": 16754,
											"end": 16785,
											"name": "SWAP2"
										},
										{
											"begin": 16754,
											"end": 16785,
											"name": "SWAP1"
										},
										{
											"begin": 16754,
											"end": 16785,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 16754,
											"end": 16785,
											"name": "AND"
										},
										{
											"begin": 16754,
											"end": 16785,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 16754,
											"end": 16785,
											"name": "tag",
											"value": "535"
										},
										{
											"begin": 16754,
											"end": 16785,
											"name": "JUMPDEST"
										},
										{
											"begin": 16741,
											"end": 16749,
											"name": "DUP10"
										},
										{
											"begin": 16741,
											"end": 16753,
											"name": "PUSH [tag]",
											"value": "239"
										},
										{
											"begin": 16741,
											"end": 16753,
											"name": "SWAP1"
										},
										{
											"begin": 16741,
											"end": 16786,
											"name": "SWAP2"
										},
										{
											"begin": 16741,
											"end": 16786,
											"name": "SWAP1"
										},
										{
											"begin": 16741,
											"end": 16786,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 16741,
											"end": 16786,
											"name": "AND"
										},
										{
											"begin": 16741,
											"end": 16786,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 16741,
											"end": 16786,
											"name": "tag",
											"value": "534"
										},
										{
											"begin": 16741,
											"end": 16786,
											"name": "JUMPDEST"
										},
										{
											"begin": 16730,
											"end": 16786,
											"name": "SWAP8"
										},
										{
											"begin": 16730,
											"end": 16786,
											"name": "POP"
										},
										{
											"begin": 16830,
											"end": 16873,
											"name": "PUSH [tag]",
											"value": "536"
										},
										{
											"begin": 16864,
											"end": 16872,
											"name": "DUP9"
										},
										{
											"begin": 16830,
											"end": 16859,
											"name": "PUSH [tag]",
											"value": "537"
										},
										{
											"begin": 650,
											"end": 656,
											"name": "PUSH",
											"value": "186A0"
										},
										{
											"begin": 16830,
											"end": 16838,
											"name": "DUP6"
										},
										{
											"begin": 16830,
											"end": 16842,
											"name": "PUSH [tag]",
											"value": "239"
										},
										{
											"begin": 16830,
											"end": 16842,
											"name": "SWAP1"
										},
										{
											"begin": 16830,
											"end": 16859,
											"name": "SWAP2"
										},
										{
											"begin": 16830,
											"end": 16859,
											"name": "SWAP1"
										},
										{
											"begin": 16830,
											"end": 16859,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 16830,
											"end": 16859,
											"name": "AND"
										},
										{
											"begin": 16830,
											"end": 16859,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 16830,
											"end": 16859,
											"name": "tag",
											"value": "537"
										},
										{
											"begin": 16830,
											"end": 16859,
											"name": "JUMPDEST"
										},
										{
											"begin": 16830,
											"end": 16863,
											"name": "PUSH [tag]",
											"value": "435"
										},
										{
											"begin": 16830,
											"end": 16863,
											"name": "SWAP1"
										},
										{
											"begin": 16830,
											"end": 16873,
											"name": "SWAP2"
										},
										{
											"begin": 16830,
											"end": 16873,
											"name": "SWAP1"
										},
										{
											"begin": 16830,
											"end": 16873,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 16830,
											"end": 16873,
											"name": "AND"
										},
										{
											"begin": 16830,
											"end": 16873,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 16830,
											"end": 16873,
											"name": "tag",
											"value": "536"
										},
										{
											"begin": 16830,
											"end": 16873,
											"name": "JUMPDEST"
										},
										{
											"begin": 16803,
											"end": 16825,
											"name": "PUSH [tag]",
											"value": "538"
										},
										{
											"begin": 16816,
											"end": 16824,
											"name": "DUP3"
										},
										{
											"begin": 16803,
											"end": 16811,
											"name": "DUP11"
										},
										{
											"begin": 16803,
											"end": 16815,
											"name": "PUSH [tag]",
											"value": "239"
										},
										{
											"begin": 16803,
											"end": 16815,
											"name": "SWAP1"
										},
										{
											"begin": 16803,
											"end": 16825,
											"name": "SWAP2"
										},
										{
											"begin": 16803,
											"end": 16825,
											"name": "SWAP1"
										},
										{
											"begin": 16803,
											"end": 16825,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 16803,
											"end": 16825,
											"name": "AND"
										},
										{
											"begin": 16803,
											"end": 16825,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 16803,
											"end": 16825,
											"name": "tag",
											"value": "538"
										},
										{
											"begin": 16803,
											"end": 16825,
											"name": "JUMPDEST"
										},
										{
											"begin": 16802,
											"end": 16874,
											"name": "DUP2"
										},
										{
											"begin": 16802,
											"end": 16874,
											"name": "PUSH [tag]",
											"value": "539"
										},
										{
											"begin": 16802,
											"end": 16874,
											"name": "JUMPI"
										},
										{
											"begin": 16802,
											"end": 16874,
											"name": "INVALID"
										},
										{
											"begin": 16802,
											"end": 16874,
											"name": "tag",
											"value": "539"
										},
										{
											"begin": 16802,
											"end": 16874,
											"name": "JUMPDEST"
										},
										{
											"begin": 16802,
											"end": 16874,
											"name": "DIV"
										},
										{
											"begin": 16795,
											"end": 16874,
											"name": "SWAP3"
										},
										{
											"begin": 16795,
											"end": 16874,
											"name": "POP"
										},
										{
											"begin": 16795,
											"end": 16874,
											"name": "POP"
										},
										{
											"begin": 16795,
											"end": 16874,
											"name": "POP"
										},
										{
											"begin": 15774,
											"end": 16887,
											"name": "tag",
											"value": "512"
										},
										{
											"begin": 15774,
											"end": 16887,
											"name": "JUMPDEST"
										},
										{
											"begin": 15774,
											"end": 16887,
											"name": "SWAP6"
										},
										{
											"begin": 15774,
											"end": 16887,
											"name": "SWAP5"
										},
										{
											"begin": 15774,
											"end": 16887,
											"name": "POP"
										},
										{
											"begin": 15774,
											"end": 16887,
											"name": "POP"
										},
										{
											"begin": 15774,
											"end": 16887,
											"name": "POP"
										},
										{
											"begin": 15774,
											"end": 16887,
											"name": "POP"
										},
										{
											"begin": 15774,
											"end": 16887,
											"name": "POP"
										},
										{
											"begin": 15774,
											"end": 16887,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 160,
											"end": 288,
											"name": "tag",
											"value": "435"
										},
										{
											"begin": 160,
											"end": 288,
											"name": "JUMPDEST"
										},
										{
											"begin": 212,
											"end": 218,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 254,
											"end": 255,
											"name": "DUP3"
										},
										{
											"begin": 248,
											"end": 249,
											"name": "DUP3"
										},
										{
											"begin": 244,
											"end": 245,
											"name": "DUP5"
										},
										{
											"begin": 244,
											"end": 249,
											"name": "ADD"
										},
										{
											"begin": 240,
											"end": 249,
											"name": "SWAP2"
										},
										{
											"begin": 240,
											"end": 249,
											"name": "POP"
										},
										{
											"begin": 240,
											"end": 249,
											"name": "DUP2"
										},
										{
											"begin": 239,
											"end": 255,
											"name": "LT"
										},
										{
											"begin": 239,
											"end": 255,
											"name": "ISZERO"
										},
										{
											"begin": 231,
											"end": 280,
											"name": "PUSH [tag]",
											"value": "541"
										},
										{
											"begin": 231,
											"end": 280,
											"name": "JUMPI"
										},
										{
											"begin": 231,
											"end": 280,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 231,
											"end": 280,
											"name": "MLOAD"
										},
										{
											"begin": 231,
											"end": 280,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 231,
											"end": 280,
											"name": "DUP2"
										},
										{
											"begin": 231,
											"end": 280,
											"name": "MSTORE"
										},
										{
											"begin": 231,
											"end": 280,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 231,
											"end": 280,
											"name": "ADD"
										},
										{
											"begin": 231,
											"end": 280,
											"name": "DUP1"
										},
										{
											"begin": 231,
											"end": 280,
											"name": "DUP1"
										},
										{
											"begin": 231,
											"end": 280,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 231,
											"end": 280,
											"name": "ADD"
										},
										{
											"begin": 231,
											"end": 280,
											"name": "DUP3"
										},
										{
											"begin": 231,
											"end": 280,
											"name": "DUP2"
										},
										{
											"begin": 231,
											"end": 280,
											"name": "SUB"
										},
										{
											"begin": 231,
											"end": 280,
											"name": "DUP3"
										},
										{
											"begin": 231,
											"end": 280,
											"name": "MSTORE"
										},
										{
											"begin": 231,
											"end": 280,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 231,
											"end": 280,
											"name": "DUP2"
										},
										{
											"begin": 231,
											"end": 280,
											"name": "MSTORE"
										},
										{
											"begin": 231,
											"end": 280,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 231,
											"end": 280,
											"name": "ADD"
										},
										{
											"begin": 231,
											"end": 280,
											"name": "DUP1"
										},
										{
											"begin": 231,
											"end": 280,
											"name": "PUSH",
											"value": "64732D6D6174682D6164642D6F766572666C6F77000000000000000000000000"
										},
										{
											"begin": 231,
											"end": 280,
											"name": "DUP2"
										},
										{
											"begin": 231,
											"end": 280,
											"name": "MSTORE"
										},
										{
											"begin": 231,
											"end": 280,
											"name": "POP"
										},
										{
											"begin": 231,
											"end": 280,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 231,
											"end": 280,
											"name": "ADD"
										},
										{
											"begin": 231,
											"end": 280,
											"name": "SWAP2"
										},
										{
											"begin": 231,
											"end": 280,
											"name": "POP"
										},
										{
											"begin": 231,
											"end": 280,
											"name": "POP"
										},
										{
											"begin": 231,
											"end": 280,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 231,
											"end": 280,
											"name": "MLOAD"
										},
										{
											"begin": 231,
											"end": 280,
											"name": "DUP1"
										},
										{
											"begin": 231,
											"end": 280,
											"name": "SWAP2"
										},
										{
											"begin": 231,
											"end": 280,
											"name": "SUB"
										},
										{
											"begin": 231,
											"end": 280,
											"name": "SWAP1"
										},
										{
											"begin": 231,
											"end": 280,
											"name": "REVERT"
										},
										{
											"begin": 231,
											"end": 280,
											"name": "tag",
											"value": "541"
										},
										{
											"begin": 231,
											"end": 280,
											"name": "JUMPDEST"
										},
										{
											"begin": 160,
											"end": 288,
											"name": "SWAP3"
										},
										{
											"begin": 160,
											"end": 288,
											"name": "SWAP2"
										},
										{
											"begin": 160,
											"end": 288,
											"name": "POP"
										},
										{
											"begin": 160,
											"end": 288,
											"name": "POP"
										},
										{
											"begin": 160,
											"end": 288,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 14643,
											"end": 15193,
											"name": "tag",
											"value": "527"
										},
										{
											"begin": 14643,
											"end": 15193,
											"name": "JUMPDEST"
										},
										{
											"begin": 14708,
											"end": 14712,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14726,
											"end": 14732,
											"name": "DUP1"
										},
										{
											"begin": 14735,
											"end": 14736,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14726,
											"end": 14736,
											"name": "SWAP1"
										},
										{
											"begin": 14726,
											"end": 14736,
											"name": "POP"
										},
										{
											"begin": 14721,
											"end": 15173,
											"name": "tag",
											"value": "543"
										},
										{
											"begin": 14721,
											"end": 15173,
											"name": "JUMPDEST"
										},
										{
											"begin": 14742,
											"end": 14745,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 14738,
											"end": 14739,
											"name": "DUP2"
										},
										{
											"begin": 14738,
											"end": 14745,
											"name": "LT"
										},
										{
											"begin": 14721,
											"end": 15173,
											"name": "ISZERO"
										},
										{
											"begin": 14721,
											"end": 15173,
											"name": "PUSH [tag]",
											"value": "544"
										},
										{
											"begin": 14721,
											"end": 15173,
											"name": "JUMPI"
										},
										{
											"begin": 14761,
											"end": 14772,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14775,
											"end": 14776,
											"name": "DUP4"
										},
										{
											"begin": 14761,
											"end": 14776,
											"name": "SWAP1"
										},
										{
											"begin": 14761,
											"end": 14776,
											"name": "POP"
										},
										{
											"begin": 14785,
											"end": 14791,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14794,
											"end": 14803,
											"name": "PUSH [tag]",
											"value": "546"
										},
										{
											"begin": 14797,
											"end": 14799,
											"name": "DUP8"
										},
										{
											"begin": 14801,
											"end": 14802,
											"name": "DUP7"
										},
										{
											"begin": 14794,
											"end": 14796,
											"name": "PUSH [tag]",
											"value": "547"
										},
										{
											"begin": 14794,
											"end": 14803,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14794,
											"end": 14803,
											"name": "tag",
											"value": "546"
										},
										{
											"begin": 14794,
											"end": 14803,
											"name": "JUMPDEST"
										},
										{
											"begin": 14785,
											"end": 14803,
											"name": "SWAP1"
										},
										{
											"begin": 14785,
											"end": 14803,
											"name": "POP"
										},
										{
											"begin": 14820,
											"end": 14822,
											"name": "DUP6"
										},
										{
											"begin": 14816,
											"end": 14817,
											"name": "DUP2"
										},
										{
											"begin": 14816,
											"end": 14822,
											"name": "LT"
										},
										{
											"begin": 14812,
											"end": 14988,
											"name": "ISZERO"
										},
										{
											"begin": 14812,
											"end": 14988,
											"name": "PUSH [tag]",
											"value": "548"
										},
										{
											"begin": 14812,
											"end": 14988,
											"name": "JUMPI"
										},
										{
											"begin": 14835,
											"end": 14842,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14863,
											"end": 14872,
											"name": "PUSH [tag]",
											"value": "549"
										},
										{
											"begin": 14866,
											"end": 14868,
											"name": "DUP9"
										},
										{
											"begin": 14870,
											"end": 14871,
											"name": "DUP8"
										},
										{
											"begin": 14863,
											"end": 14865,
											"name": "PUSH [tag]",
											"value": "550"
										},
										{
											"begin": 14863,
											"end": 14872,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14863,
											"end": 14872,
											"name": "tag",
											"value": "549"
										},
										{
											"begin": 14863,
											"end": 14872,
											"name": "JUMPDEST"
										},
										{
											"begin": 14856,
											"end": 14860,
											"name": "PUSH",
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 14851,
											"end": 14852,
											"name": "DUP4"
										},
										{
											"begin": 14846,
											"end": 14848,
											"name": "DUP10"
										},
										{
											"begin": 14846,
											"end": 14852,
											"name": "SUB"
										},
										{
											"begin": 14845,
											"end": 14860,
											"name": "MUL"
										},
										{
											"begin": 14845,
											"end": 14872,
											"name": "DUP2"
										},
										{
											"begin": 14845,
											"end": 14872,
											"name": "PUSH [tag]",
											"value": "551"
										},
										{
											"begin": 14845,
											"end": 14872,
											"name": "JUMPI"
										},
										{
											"begin": 14845,
											"end": 14872,
											"name": "INVALID"
										},
										{
											"begin": 14845,
											"end": 14872,
											"name": "tag",
											"value": "551"
										},
										{
											"begin": 14845,
											"end": 14872,
											"name": "JUMPDEST"
										},
										{
											"begin": 14845,
											"end": 14872,
											"name": "DIV"
										},
										{
											"begin": 14835,
											"end": 14872,
											"name": "SWAP1"
										},
										{
											"begin": 14835,
											"end": 14872,
											"name": "POP"
										},
										{
											"begin": 14891,
											"end": 14893,
											"name": "DUP1"
										},
										{
											"begin": 14887,
											"end": 14888,
											"name": "DUP7"
										},
										{
											"begin": 14887,
											"end": 14893,
											"name": "ADD"
										},
										{
											"begin": 14883,
											"end": 14893,
											"name": "SWAP6"
										},
										{
											"begin": 14883,
											"end": 14893,
											"name": "POP"
										},
										{
											"begin": 14812,
											"end": 14988,
											"name": "POP"
										},
										{
											"begin": 14812,
											"end": 14988,
											"name": "PUSH [tag]",
											"value": "552"
										},
										{
											"begin": 14812,
											"end": 14988,
											"name": "JUMP"
										},
										{
											"begin": 14812,
											"end": 14988,
											"name": "tag",
											"value": "548"
										},
										{
											"begin": 14812,
											"end": 14988,
											"name": "JUMPDEST"
										},
										{
											"begin": 14920,
											"end": 14927,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14948,
											"end": 14957,
											"name": "PUSH [tag]",
											"value": "553"
										},
										{
											"begin": 14951,
											"end": 14953,
											"name": "DUP9"
										},
										{
											"begin": 14955,
											"end": 14956,
											"name": "DUP8"
										},
										{
											"begin": 14948,
											"end": 14950,
											"name": "PUSH [tag]",
											"value": "550"
										},
										{
											"begin": 14948,
											"end": 14957,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14948,
											"end": 14957,
											"name": "tag",
											"value": "553"
										},
										{
											"begin": 14948,
											"end": 14957,
											"name": "JUMPDEST"
										},
										{
											"begin": 14941,
											"end": 14945,
											"name": "PUSH",
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 14935,
											"end": 14937,
											"name": "DUP9"
										},
										{
											"begin": 14931,
											"end": 14932,
											"name": "DUP5"
										},
										{
											"begin": 14931,
											"end": 14937,
											"name": "SUB"
										},
										{
											"begin": 14930,
											"end": 14945,
											"name": "MUL"
										},
										{
											"begin": 14930,
											"end": 14957,
											"name": "DUP2"
										},
										{
											"begin": 14930,
											"end": 14957,
											"name": "PUSH [tag]",
											"value": "554"
										},
										{
											"begin": 14930,
											"end": 14957,
											"name": "JUMPI"
										},
										{
											"begin": 14930,
											"end": 14957,
											"name": "INVALID"
										},
										{
											"begin": 14930,
											"end": 14957,
											"name": "tag",
											"value": "554"
										},
										{
											"begin": 14930,
											"end": 14957,
											"name": "JUMPDEST"
										},
										{
											"begin": 14930,
											"end": 14957,
											"name": "DIV"
										},
										{
											"begin": 14920,
											"end": 14957,
											"name": "SWAP1"
										},
										{
											"begin": 14920,
											"end": 14957,
											"name": "POP"
										},
										{
											"begin": 14976,
											"end": 14978,
											"name": "DUP1"
										},
										{
											"begin": 14972,
											"end": 14973,
											"name": "DUP7"
										},
										{
											"begin": 14972,
											"end": 14978,
											"name": "SUB"
										},
										{
											"begin": 14968,
											"end": 14978,
											"name": "SWAP6"
										},
										{
											"begin": 14968,
											"end": 14978,
											"name": "POP"
										},
										{
											"begin": 14812,
											"end": 14988,
											"name": "POP"
										},
										{
											"begin": 14812,
											"end": 14988,
											"name": "tag",
											"value": "552"
										},
										{
											"begin": 14812,
											"end": 14988,
											"name": "JUMPDEST"
										},
										{
											"begin": 15004,
											"end": 15010,
											"name": "DUP2"
										},
										{
											"begin": 15000,
											"end": 15001,
											"name": "DUP6"
										},
										{
											"begin": 15000,
											"end": 15010,
											"name": "GT"
										},
										{
											"begin": 14996,
											"end": 15166,
											"name": "ISZERO"
										},
										{
											"begin": 14996,
											"end": 15166,
											"name": "PUSH [tag]",
											"value": "555"
										},
										{
											"begin": 14996,
											"end": 15166,
											"name": "JUMPI"
										},
										{
											"begin": 15041,
											"end": 15042,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 15031,
											"end": 15037,
											"name": "DUP3"
										},
										{
											"begin": 15027,
											"end": 15028,
											"name": "DUP7"
										},
										{
											"begin": 15027,
											"end": 15037,
											"name": "SUB"
										},
										{
											"begin": 15027,
											"end": 15042,
											"name": "GT"
										},
										{
											"begin": 15023,
											"end": 15077,
											"name": "PUSH [tag]",
											"value": "556"
										},
										{
											"begin": 15023,
											"end": 15077,
											"name": "JUMPI"
										},
										{
											"begin": 15064,
											"end": 15065,
											"name": "DUP5"
										},
										{
											"begin": 15057,
											"end": 15065,
											"name": "SWAP4"
										},
										{
											"begin": 15057,
											"end": 15065,
											"name": "POP"
										},
										{
											"begin": 15057,
											"end": 15065,
											"name": "POP"
										},
										{
											"begin": 15057,
											"end": 15065,
											"name": "POP"
										},
										{
											"begin": 15057,
											"end": 15065,
											"name": "POP"
										},
										{
											"begin": 15057,
											"end": 15065,
											"name": "PUSH [tag]",
											"value": "542"
										},
										{
											"begin": 15057,
											"end": 15065,
											"name": "JUMP"
										},
										{
											"begin": 15023,
											"end": 15077,
											"name": "tag",
											"value": "556"
										},
										{
											"begin": 15023,
											"end": 15077,
											"name": "JUMPDEST"
										},
										{
											"begin": 14996,
											"end": 15166,
											"name": "PUSH [tag]",
											"value": "557"
										},
										{
											"begin": 14996,
											"end": 15166,
											"name": "JUMP"
										},
										{
											"begin": 14996,
											"end": 15166,
											"name": "tag",
											"value": "555"
										},
										{
											"begin": 14996,
											"end": 15166,
											"name": "JUMPDEST"
										},
										{
											"begin": 15121,
											"end": 15122,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 15116,
											"end": 15117,
											"name": "DUP6"
										},
										{
											"begin": 15107,
											"end": 15113,
											"name": "DUP4"
										},
										{
											"begin": 15107,
											"end": 15117,
											"name": "SUB"
										},
										{
											"begin": 15107,
											"end": 15122,
											"name": "GT"
										},
										{
											"begin": 15103,
											"end": 15157,
											"name": "PUSH [tag]",
											"value": "558"
										},
										{
											"begin": 15103,
											"end": 15157,
											"name": "JUMPI"
										},
										{
											"begin": 15144,
											"end": 15145,
											"name": "DUP5"
										},
										{
											"begin": 15137,
											"end": 15145,
											"name": "SWAP4"
										},
										{
											"begin": 15137,
											"end": 15145,
											"name": "POP"
										},
										{
											"begin": 15137,
											"end": 15145,
											"name": "POP"
										},
										{
											"begin": 15137,
											"end": 15145,
											"name": "POP"
										},
										{
											"begin": 15137,
											"end": 15145,
											"name": "POP"
										},
										{
											"begin": 15137,
											"end": 15145,
											"name": "PUSH [tag]",
											"value": "542"
										},
										{
											"begin": 15137,
											"end": 15145,
											"name": "JUMP"
										},
										{
											"begin": 15103,
											"end": 15157,
											"name": "tag",
											"value": "558"
										},
										{
											"begin": 15103,
											"end": 15157,
											"name": "JUMPDEST"
										},
										{
											"begin": 14996,
											"end": 15166,
											"name": "tag",
											"value": "557"
										},
										{
											"begin": 14996,
											"end": 15166,
											"name": "JUMPDEST"
										},
										{
											"begin": 14721,
											"end": 15173,
											"name": "POP"
										},
										{
											"begin": 14721,
											"end": 15173,
											"name": "POP"
										},
										{
											"begin": 14747,
											"end": 14750,
											"name": "DUP1"
										},
										{
											"begin": 14747,
											"end": 14750,
											"name": "DUP1"
										},
										{
											"begin": 14747,
											"end": 14750,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 14747,
											"end": 14750,
											"name": "ADD"
										},
										{
											"begin": 14747,
											"end": 14750,
											"name": "SWAP2"
										},
										{
											"begin": 14747,
											"end": 14750,
											"name": "POP"
										},
										{
											"begin": 14747,
											"end": 14750,
											"name": "POP"
										},
										{
											"begin": 14721,
											"end": 15173,
											"name": "PUSH [tag]",
											"value": "543"
										},
										{
											"begin": 14721,
											"end": 15173,
											"name": "JUMP"
										},
										{
											"begin": 14721,
											"end": 15173,
											"name": "tag",
											"value": "544"
										},
										{
											"begin": 14721,
											"end": 15173,
											"name": "JUMPDEST"
										},
										{
											"begin": 14721,
											"end": 15173,
											"name": "POP"
										},
										{
											"begin": 15186,
											"end": 15187,
											"name": "DUP2"
										},
										{
											"begin": 15179,
											"end": 15187,
											"name": "SWAP1"
										},
										{
											"begin": 15179,
											"end": 15187,
											"name": "POP"
										},
										{
											"begin": 14643,
											"end": 15193,
											"name": "tag",
											"value": "542"
										},
										{
											"begin": 14643,
											"end": 15193,
											"name": "JUMPDEST"
										},
										{
											"begin": 14643,
											"end": 15193,
											"name": "SWAP4"
										},
										{
											"begin": 14643,
											"end": 15193,
											"name": "SWAP3"
										},
										{
											"begin": 14643,
											"end": 15193,
											"name": "POP"
										},
										{
											"begin": 14643,
											"end": 15193,
											"name": "POP"
										},
										{
											"begin": 14643,
											"end": 15193,
											"name": "POP"
										},
										{
											"begin": 14643,
											"end": 15193,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 15199,
											"end": 15356,
											"name": "tag",
											"value": "547"
										},
										{
											"begin": 15199,
											"end": 15356,
											"name": "JUMPDEST"
										},
										{
											"begin": 15251,
											"end": 15255,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15346,
											"end": 15350,
											"name": "PUSH",
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 15342,
											"end": 15343,
											"name": "DUP3"
										},
										{
											"begin": 15334,
											"end": 15338,
											"name": "PUSH",
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 15329,
											"end": 15331,
											"name": "DUP6"
										},
										{
											"begin": 15322,
											"end": 15326,
											"name": "PUSH",
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 15317,
											"end": 15319,
											"name": "DUP8"
										},
										{
											"begin": 15312,
											"end": 15314,
											"name": "DUP9"
										},
										{
											"begin": 15312,
											"end": 15319,
											"name": "MUL"
										},
										{
											"begin": 15312,
											"end": 15326,
											"name": "DUP2"
										},
										{
											"begin": 15312,
											"end": 15326,
											"name": "PUSH [tag]",
											"value": "560"
										},
										{
											"begin": 15312,
											"end": 15326,
											"name": "JUMPI"
										},
										{
											"begin": 15312,
											"end": 15326,
											"name": "INVALID"
										},
										{
											"begin": 15312,
											"end": 15326,
											"name": "tag",
											"value": "560"
										},
										{
											"begin": 15312,
											"end": 15326,
											"name": "JUMPDEST"
										},
										{
											"begin": 15312,
											"end": 15326,
											"name": "DIV"
										},
										{
											"begin": 15312,
											"end": 15331,
											"name": "MUL"
										},
										{
											"begin": 15312,
											"end": 15338,
											"name": "DUP2"
										},
										{
											"begin": 15312,
											"end": 15338,
											"name": "PUSH [tag]",
											"value": "561"
										},
										{
											"begin": 15312,
											"end": 15338,
											"name": "JUMPI"
										},
										{
											"begin": 15312,
											"end": 15338,
											"name": "INVALID"
										},
										{
											"begin": 15312,
											"end": 15338,
											"name": "tag",
											"value": "561"
										},
										{
											"begin": 15312,
											"end": 15338,
											"name": "JUMPDEST"
										},
										{
											"begin": 15312,
											"end": 15338,
											"name": "DIV"
										},
										{
											"begin": 15311,
											"end": 15343,
											"name": "MUL"
										},
										{
											"begin": 15311,
											"end": 15350,
											"name": "DUP2"
										},
										{
											"begin": 15311,
											"end": 15350,
											"name": "PUSH [tag]",
											"value": "562"
										},
										{
											"begin": 15311,
											"end": 15350,
											"name": "JUMPI"
										},
										{
											"begin": 15311,
											"end": 15350,
											"name": "INVALID"
										},
										{
											"begin": 15311,
											"end": 15350,
											"name": "tag",
											"value": "562"
										},
										{
											"begin": 15311,
											"end": 15350,
											"name": "JUMPDEST"
										},
										{
											"begin": 15311,
											"end": 15350,
											"name": "DIV"
										},
										{
											"begin": 15304,
											"end": 15308,
											"name": "PUSH",
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 15296,
											"end": 15300,
											"name": "DUP1"
										},
										{
											"begin": 15292,
											"end": 15293,
											"name": "DUP5"
										},
										{
											"begin": 15285,
											"end": 15289,
											"name": "PUSH",
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 15281,
											"end": 15282,
											"name": "DUP7"
										},
										{
											"begin": 15277,
											"end": 15278,
											"name": "DUP8"
										},
										{
											"begin": 15277,
											"end": 15282,
											"name": "MUL"
										},
										{
											"begin": 15277,
											"end": 15289,
											"name": "DUP2"
										},
										{
											"begin": 15277,
											"end": 15289,
											"name": "PUSH [tag]",
											"value": "563"
										},
										{
											"begin": 15277,
											"end": 15289,
											"name": "JUMPI"
										},
										{
											"begin": 15277,
											"end": 15289,
											"name": "INVALID"
										},
										{
											"begin": 15277,
											"end": 15289,
											"name": "tag",
											"value": "563"
										},
										{
											"begin": 15277,
											"end": 15289,
											"name": "JUMPDEST"
										},
										{
											"begin": 15277,
											"end": 15289,
											"name": "DIV"
										},
										{
											"begin": 15277,
											"end": 15293,
											"name": "MUL"
										},
										{
											"begin": 15277,
											"end": 15300,
											"name": "DUP2"
										},
										{
											"begin": 15277,
											"end": 15300,
											"name": "PUSH [tag]",
											"value": "564"
										},
										{
											"begin": 15277,
											"end": 15300,
											"name": "JUMPI"
										},
										{
											"begin": 15277,
											"end": 15300,
											"name": "INVALID"
										},
										{
											"begin": 15277,
											"end": 15300,
											"name": "tag",
											"value": "564"
										},
										{
											"begin": 15277,
											"end": 15300,
											"name": "JUMPDEST"
										},
										{
											"begin": 15277,
											"end": 15300,
											"name": "DIV"
										},
										{
											"begin": 15271,
											"end": 15273,
											"name": "DUP6"
										},
										{
											"begin": 15271,
											"end": 15301,
											"name": "MUL"
										},
										{
											"begin": 15271,
											"end": 15308,
											"name": "DUP2"
										},
										{
											"begin": 15271,
											"end": 15308,
											"name": "PUSH [tag]",
											"value": "565"
										},
										{
											"begin": 15271,
											"end": 15308,
											"name": "JUMPI"
										},
										{
											"begin": 15271,
											"end": 15308,
											"name": "INVALID"
										},
										{
											"begin": 15271,
											"end": 15308,
											"name": "tag",
											"value": "565"
										},
										{
											"begin": 15271,
											"end": 15308,
											"name": "JUMPDEST"
										},
										{
											"begin": 15271,
											"end": 15308,
											"name": "DIV"
										},
										{
											"begin": 15271,
											"end": 15350,
											"name": "ADD"
										},
										{
											"begin": 15264,
											"end": 15350,
											"name": "SWAP1"
										},
										{
											"begin": 15264,
											"end": 15350,
											"name": "POP"
										},
										{
											"begin": 15199,
											"end": 15356,
											"name": "SWAP3"
										},
										{
											"begin": 15199,
											"end": 15356,
											"name": "SWAP2"
										},
										{
											"begin": 15199,
											"end": 15356,
											"name": "POP"
										},
										{
											"begin": 15199,
											"end": 15356,
											"name": "POP"
										},
										{
											"begin": 15199,
											"end": 15356,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 15362,
											"end": 15501,
											"name": "tag",
											"value": "550"
										},
										{
											"begin": 15362,
											"end": 15501,
											"name": "JUMPDEST"
										},
										{
											"begin": 15414,
											"end": 15418,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15490,
											"end": 15494,
											"name": "PUSH",
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 15485,
											"end": 15487,
											"name": "DUP4"
										},
										{
											"begin": 15478,
											"end": 15482,
											"name": "PUSH",
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 15473,
											"end": 15475,
											"name": "DUP6"
										},
										{
											"begin": 15468,
											"end": 15470,
											"name": "DUP7"
										},
										{
											"begin": 15468,
											"end": 15475,
											"name": "MUL"
										},
										{
											"begin": 15468,
											"end": 15482,
											"name": "DUP2"
										},
										{
											"begin": 15468,
											"end": 15482,
											"name": "PUSH [tag]",
											"value": "567"
										},
										{
											"begin": 15468,
											"end": 15482,
											"name": "JUMPI"
										},
										{
											"begin": 15468,
											"end": 15482,
											"name": "INVALID"
										},
										{
											"begin": 15468,
											"end": 15482,
											"name": "tag",
											"value": "567"
										},
										{
											"begin": 15468,
											"end": 15482,
											"name": "JUMPDEST"
										},
										{
											"begin": 15468,
											"end": 15482,
											"name": "DIV"
										},
										{
											"begin": 15468,
											"end": 15487,
											"name": "MUL"
										},
										{
											"begin": 15468,
											"end": 15494,
											"name": "DUP2"
										},
										{
											"begin": 15468,
											"end": 15494,
											"name": "PUSH [tag]",
											"value": "568"
										},
										{
											"begin": 15468,
											"end": 15494,
											"name": "JUMPI"
										},
										{
											"begin": 15468,
											"end": 15494,
											"name": "INVALID"
										},
										{
											"begin": 15468,
											"end": 15494,
											"name": "tag",
											"value": "568"
										},
										{
											"begin": 15468,
											"end": 15494,
											"name": "JUMPDEST"
										},
										{
											"begin": 15468,
											"end": 15494,
											"name": "DIV"
										},
										{
											"begin": 15460,
											"end": 15464,
											"name": "PUSH",
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 15452,
											"end": 15456,
											"name": "DUP1"
										},
										{
											"begin": 15448,
											"end": 15449,
											"name": "DUP5"
										},
										{
											"begin": 15444,
											"end": 15445,
											"name": "DUP6"
										},
										{
											"begin": 15444,
											"end": 15449,
											"name": "MUL"
										},
										{
											"begin": 15444,
											"end": 15456,
											"name": "DUP2"
										},
										{
											"begin": 15444,
											"end": 15456,
											"name": "PUSH [tag]",
											"value": "569"
										},
										{
											"begin": 15444,
											"end": 15456,
											"name": "JUMPI"
										},
										{
											"begin": 15444,
											"end": 15456,
											"name": "INVALID"
										},
										{
											"begin": 15444,
											"end": 15456,
											"name": "tag",
											"value": "569"
										},
										{
											"begin": 15444,
											"end": 15456,
											"name": "JUMPDEST"
										},
										{
											"begin": 15444,
											"end": 15456,
											"name": "DIV"
										},
										{
											"begin": 15438,
											"end": 15440,
											"name": "DUP6"
										},
										{
											"begin": 15434,
											"end": 15435,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 15434,
											"end": 15440,
											"name": "MUL"
										},
										{
											"begin": 15434,
											"end": 15457,
											"name": "MUL"
										},
										{
											"begin": 15434,
											"end": 15464,
											"name": "DUP2"
										},
										{
											"begin": 15434,
											"end": 15464,
											"name": "PUSH [tag]",
											"value": "570"
										},
										{
											"begin": 15434,
											"end": 15464,
											"name": "JUMPI"
										},
										{
											"begin": 15434,
											"end": 15464,
											"name": "INVALID"
										},
										{
											"begin": 15434,
											"end": 15464,
											"name": "tag",
											"value": "570"
										},
										{
											"begin": 15434,
											"end": 15464,
											"name": "JUMPDEST"
										},
										{
											"begin": 15434,
											"end": 15464,
											"name": "DIV"
										},
										{
											"begin": 15434,
											"end": 15495,
											"name": "ADD"
										},
										{
											"begin": 15427,
											"end": 15495,
											"name": "SWAP1"
										},
										{
											"begin": 15427,
											"end": 15495,
											"name": "POP"
										},
										{
											"begin": 15362,
											"end": 15501,
											"name": "SWAP3"
										},
										{
											"begin": 15362,
											"end": 15501,
											"name": "SWAP2"
										},
										{
											"begin": 15362,
											"end": 15501,
											"name": "POP"
										},
										{
											"begin": 15362,
											"end": 15501,
											"name": "POP"
										},
										{
											"begin": 15362,
											"end": 15501,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "tag",
											"value": "163"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "JUMPDEST"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "MLOAD"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "DUP1"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "ADD"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "MSTORE"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "DUP1"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "AND"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "DUP2"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "MSTORE"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "ADD"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "AND"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "DUP2"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "MSTORE"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "ADD"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "DUP2"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "MSTORE"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "ADD"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "DUP2"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "MSTORE"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "ADD"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "DUP2"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "MSTORE"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "ADD"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "DUP2"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "MSTORE"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "ADD"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "DUP2"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "MSTORE"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "ADD"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "DUP2"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "MSTORE"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "POP"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "SWAP1"
										},
										{
											"begin": 263,
											"end": 18101,
											"name": "JUMP",
											"value": "[out]"
										}
									],
									".data": {
										"34FFD81D2BF0B96ACAE486668FC9D6475667930DF09E9039EE8381F9CC8EF0B1": "31306b3a206f6e6c7920666163746f7279277320666565416d6f756e744f776e6572",
										"45BAAF65170B7D96AB118754B668EEAD3E0F148D8A45A6C0A60AEC311CFCEE2F": "31306b3a2066656550657263656e74206d7573746e27742065786365656420746865206d6178696d756d",
										"640C1A2BCB4B0E819D290BE36FFB74FFF17DD4659141AE0E8778F67D9638BA4C": "31306b3a2066656550657263656e74206d7573746e27742065786365656420746865206d696e696d756d",
										"8A472E50EC0B760C580C3DC8C62CDCF0FE39BAB372EAF2D9E07261F1B72DF71D": "31306b3a20494e53554646494349454e545f4c49515549444954595f4d494e544544",
										"A8F5B5742EA4F6D77E3DDEADE1D79A13F37F3B0B50626B04C2C56458D8D3D5C7": "31306b3a206c697175696469747920726174696f206e6f7420696e697469616c697a6564",
										"E37380231C63DD542C3187103D43BF3DC8FEEC0B6338E70E8209C96CBA47625": "31306b3a206f6e6c7920666163746f7279277320736574537461626c654f776e6572",
										"E445A9437CF2A16B4C4A661DECA6E9C597CE139BB56E2872AEDDA20402A5D4D9": "31306b3a20494e53554646494349454e545f4c49515549444954595f4255524e4544"
									}
								},
								"8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F": "454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429"
							}
						},
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"FEE_DENOMINATOR()": "d73792a9",
							"MAX_FEE_PERCENT()": "67d81740",
							"MINIMUM_LIQUIDITY()": "ba9a7a56",
							"PERMIT_TYPEHASH()": "30adf81f",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(address)": "89afcb44",
							"decimals()": "313ce567",
							"drainWrongToken(address,address)": "f39ac11f",
							"factory()": "c45a0155",
							"getAmountOut(uint256,address)": "f140a35a",
							"getReserves()": "0902f1ac",
							"initialize(address,address)": "485cc955",
							"initialized()": "158ef93e",
							"kLast()": "7464fc3d",
							"mint(address)": "6a627842",
							"name()": "06fdde03",
							"nonces(address)": "7ecebe00",
							"pairTypeImmutable()": "b6200b07",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
							"precisionMultiplier0()": "3b9f1dc0",
							"precisionMultiplier1()": "288e5d02",
							"setFeePercent(uint16,uint16)": "48e5d260",
							"setPairTypeImmutable()": "3ba17077",
							"setStableSwap(bool,uint112,uint112)": "3029e5d4",
							"skim(address)": "bc25cf77",
							"stableSwap()": "9e548b7f",
							"swap(uint256,uint256,address,bytes)": "022c0d9f",
							"swap(uint256,uint256,address,bytes,address)": "6e1fdd7f",
							"symbol()": "95d89b41",
							"sync()": "fff6cae9",
							"token0()": "0dfe1681",
							"token0FeePercent()": "62ecec03",
							"token1()": "d21220a7",
							"token1FeePercent()": "2fcd1692",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"DrainWrongToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"token0FeePercent\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"token1FeePercent\",\"type\":\"uint16\"}],\"name\":\"FeePercentUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"SetPairTypeImmutable\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"prevStableSwap\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"stableSwap\",\"type\":\"bool\"}],\"name\":\"SetStableSwap\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Skim\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0In\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1In\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0Out\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1Out\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint112\",\"name\":\"reserve0\",\"type\":\"uint112\"},{\"indexed\":false,\"internalType\":\"uint112\",\"name\":\"reserve1\",\"type\":\"uint112\"}],\"name\":\"Sync\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"FEE_DENOMINATOR\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MAX_FEE_PERCENT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MINIMUM_LIQUIDITY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"drainWrongToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"}],\"name\":\"getAmountOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getReserves\",\"outputs\":[{\"internalType\":\"uint112\",\"name\":\"_reserve0\",\"type\":\"uint112\"},{\"internalType\":\"uint112\",\"name\":\"_reserve1\",\"type\":\"uint112\"},{\"internalType\":\"uint16\",\"name\":\"_token0FeePercent\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"_token1FeePercent\",\"type\":\"uint16\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token1\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"initialized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"kLast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"pairTypeImmutable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"precisionMultiplier0\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"precisionMultiplier1\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"newToken0FeePercent\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"newToken1FeePercent\",\"type\":\"uint16\"}],\"name\":\"setFeePercent\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"setPairTypeImmutable\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bool\",\"name\":\"stable\",\"type\":\"bool\"},{\"internalType\":\"uint112\",\"name\":\"expectedReserve0\",\"type\":\"uint112\"},{\"internalType\":\"uint112\",\"name\":\"expectedReserve1\",\"type\":\"uint112\"}],\"name\":\"setStableSwap\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"skim\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stableSwap\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0Out\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Out\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0Out\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Out\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"referrer\",\"type\":\"address\"}],\"name\":\"swap\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"sync\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"token0FeePercent\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"token1FeePercent\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"drainWrongToken(address,address)\":{\"details\":\"Allow to recover token sent here by mistake   * Can only be called by factory's owner\"},\"setFeePercent(uint16,uint16)\":{\"details\":\"Updates the swap fees percent   * Can only be called by the factory's feeAmountOwner\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/TenkStablePair.sol\":\"TenkStablePair\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/TenkERC20.sol\":{\"keccak256\":\"0x564cc1b68259ffaafc878219f81dd989ab6b7527a44f93b2a98f17f5fdac4aa9\",\"urls\":[\"bzz-raw://2f7ecc32eae641789aa895deea12f5dee0d23591126ed737abd5a3793c8c374e\",\"dweb:/ipfs/QmWEUR7wKh8qL7oz6E1xycTEK4piVbUuzv6vBFB7SGkxVM\"]},\"contracts/TenkStablePair.sol\":{\"keccak256\":\"0xec4561c5dea44f57bba433fc6056e26b161c39879ae5473e83b9802417110ca8\",\"urls\":[\"bzz-raw://b95b660a05137ad449e0852b54befd70c459a5cac8548ed8eea02e20ade6d4c7\",\"dweb:/ipfs/QmXvtA43BHgBMSKFGQ3qjDPEmKmBFehfCJB4XuwMnessqf\"]},\"interfaces/I10kERC20.sol\":{\"keccak256\":\"0xa8c5a9bfdb6371d4c7f37e4958b410ae7ee7978965162843a07865c2d1005456\",\"urls\":[\"bzz-raw://34bc30986cbfe78549b1d3b11a13372d7f5667627966a72bc08065797515c608\",\"dweb:/ipfs/QmeP39jGMV8JSHkz4VnC1xPjC8Pc68wJgBnuJbBBfBMVEY\"]},\"interfaces/I10kStableCallee.sol\":{\"keccak256\":\"0x78032c32f37205046ccec3927429ac48671753bb6b2e726d9ef2ad319ba92010\",\"urls\":[\"bzz-raw://0a99e5afd3034b4c8acde30aeb212e8f42481e7ef457cff7bb6520154f3722ad\",\"dweb:/ipfs/QmPyJJqamwLHL6FMFQYgoM6iL6wdPEAyfYNMr36y7dqvj8\"]},\"interfaces/I10kStableFactory.sol\":{\"keccak256\":\"0x1600abf0882d18a29d5aa4d74644f57368dbef7799cacfbd94b82f337563862c\",\"urls\":[\"bzz-raw://413a251d65f1255084c77849727a1b49b0635dafebef23961cea71f3a6f53421\",\"dweb:/ipfs/QmaE5Ki2KnFHfGLg8RXSCbFaca8L5KRetvepSmwfap5SFF\"]},\"interfaces/I10kStablePair.sol\":{\"keccak256\":\"0xa66611f5fd9d26c03ec7fb00941af91c5e5ba01dea24fe6a5f223acbbe6ce245\",\"urls\":[\"bzz-raw://5a9c82d7d2c9cd957bd727679f0d73b9871a8d6ea5aa25ec10e293e4531774ba\",\"dweb:/ipfs/QmPG57Ph8k3tq8cmeFe6GW2wBcmpzdr4BFQM6ZF9vnVW5z\"]},\"interfaces/IERC20.sol\":{\"keccak256\":\"0x026fb4c4604e2f6777f72ade61eb8181e39ecaea75623738b5b4db133b96baf9\",\"urls\":[\"bzz-raw://c583da75cb39bf608b3397ba4b7aded1c70560983087e4ad7373c421b30c9eff\",\"dweb:/ipfs/QmXfJu9UyHPvRpJe6wp4aL1skJQ9GrxxriWivaJsriU6YM\"]},\"libraries/Math.sol\":{\"keccak256\":\"0xd18b6121fa8808fff1d095af718276cf840b037165e5ba3bc91516ca6403e776\",\"urls\":[\"bzz-raw://fb213ae85748ccd097ecefb8fab810ebd2699ddcaa37598d6252c34e7397a51c\",\"dweb:/ipfs/QmYzWsfhe9kDedaPro9cxwaihUdSSTcWQyCH9WKK8XZWi7\"]},\"libraries/SafeMath.sol\":{\"keccak256\":\"0x187b45f92784b0471f1007f6fcfa33f97d92c100c3edc7f9b86c2c35a56b6e5d\",\"urls\":[\"bzz-raw://c05bbc97ca818b0657dac8786ed37e0c77537f4c6ec4b7c25940a3b1fcb7ca64\",\"dweb:/ipfs/QmfSvmTfitBonGZ14AVUa794iMNzmfKHLUNbxSekFSvPLU\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 19,
								"contract": "contracts/TenkStablePair.sol:TenkStablePair",
								"label": "totalSupply",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 23,
								"contract": "contracts/TenkStablePair.sol:TenkStablePair",
								"label": "balanceOf",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 29,
								"contract": "contracts/TenkStablePair.sol:TenkStablePair",
								"label": "allowance",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 31,
								"contract": "contracts/TenkStablePair.sol:TenkStablePair",
								"label": "DOMAIN_SEPARATOR",
								"offset": 0,
								"slot": "3",
								"type": "t_bytes32"
							},
							{
								"astId": 38,
								"contract": "contracts/TenkStablePair.sol:TenkStablePair",
								"label": "nonces",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 426,
								"contract": "contracts/TenkStablePair.sol:TenkStablePair",
								"label": "factory",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 428,
								"contract": "contracts/TenkStablePair.sol:TenkStablePair",
								"label": "token0",
								"offset": 0,
								"slot": "6",
								"type": "t_address"
							},
							{
								"astId": 430,
								"contract": "contracts/TenkStablePair.sol:TenkStablePair",
								"label": "token1",
								"offset": 0,
								"slot": "7",
								"type": "t_address"
							},
							{
								"astId": 432,
								"contract": "contracts/TenkStablePair.sol:TenkStablePair",
								"label": "initialized",
								"offset": 20,
								"slot": "7",
								"type": "t_bool"
							},
							{
								"astId": 440,
								"contract": "contracts/TenkStablePair.sol:TenkStablePair",
								"label": "reserve0",
								"offset": 0,
								"slot": "8",
								"type": "t_uint112"
							},
							{
								"astId": 442,
								"contract": "contracts/TenkStablePair.sol:TenkStablePair",
								"label": "reserve1",
								"offset": 14,
								"slot": "8",
								"type": "t_uint112"
							},
							{
								"astId": 445,
								"contract": "contracts/TenkStablePair.sol:TenkStablePair",
								"label": "token0FeePercent",
								"offset": 28,
								"slot": "8",
								"type": "t_uint16"
							},
							{
								"astId": 448,
								"contract": "contracts/TenkStablePair.sol:TenkStablePair",
								"label": "token1FeePercent",
								"offset": 30,
								"slot": "8",
								"type": "t_uint16"
							},
							{
								"astId": 450,
								"contract": "contracts/TenkStablePair.sol:TenkStablePair",
								"label": "precisionMultiplier0",
								"offset": 0,
								"slot": "9",
								"type": "t_uint256"
							},
							{
								"astId": 452,
								"contract": "contracts/TenkStablePair.sol:TenkStablePair",
								"label": "precisionMultiplier1",
								"offset": 0,
								"slot": "10",
								"type": "t_uint256"
							},
							{
								"astId": 454,
								"contract": "contracts/TenkStablePair.sol:TenkStablePair",
								"label": "kLast",
								"offset": 0,
								"slot": "11",
								"type": "t_uint256"
							},
							{
								"astId": 456,
								"contract": "contracts/TenkStablePair.sol:TenkStablePair",
								"label": "stableSwap",
								"offset": 0,
								"slot": "12",
								"type": "t_bool"
							},
							{
								"astId": 458,
								"contract": "contracts/TenkStablePair.sol:TenkStablePair",
								"label": "pairTypeImmutable",
								"offset": 1,
								"slot": "12",
								"type": "t_bool"
							},
							{
								"astId": 461,
								"contract": "contracts/TenkStablePair.sol:TenkStablePair",
								"label": "unlocked",
								"offset": 0,
								"slot": "13",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint112": {
								"encoding": "inplace",
								"label": "uint112",
								"numberOfBytes": "14"
							},
							"t_uint16": {
								"encoding": "inplace",
								"label": "uint16",
								"numberOfBytes": "2"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"interfaces/I10kERC20.sol": {
				"I10kERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "PERMIT_TYPEHASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"PERMIT_TYPEHASH()": "30adf81f",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"interfaces/I10kERC20.sol\":\"I10kERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"interfaces/I10kERC20.sol\":{\"keccak256\":\"0xa8c5a9bfdb6371d4c7f37e4958b410ae7ee7978965162843a07865c2d1005456\",\"urls\":[\"bzz-raw://34bc30986cbfe78549b1d3b11a13372d7f5667627966a72bc08065797515c608\",\"dweb:/ipfs/QmeP39jGMV8JSHkz4VnC1xPjC8Pc68wJgBnuJbBBfBMVEY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"interfaces/I10kStableCallee.sol": {
				"I10kStableCallee": {
					"abi": [
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "uniswapV2Call",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"uniswapV2Call(address,uint256,uint256,bytes)": "10d1e85c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"uniswapV2Call\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"interfaces/I10kStableCallee.sol\":\"I10kStableCallee\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"interfaces/I10kStableCallee.sol\":{\"keccak256\":\"0x78032c32f37205046ccec3927429ac48671753bb6b2e726d9ef2ad319ba92010\",\"urls\":[\"bzz-raw://0a99e5afd3034b4c8acde30aeb212e8f42481e7ef457cff7bb6520154f3722ad\",\"dweb:/ipfs/QmPyJJqamwLHL6FMFQYgoM6iL6wdPEAyfYNMr36y7dqvj8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"interfaces/I10kStableFactory.sol": {
				"I10kStableFactory": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "token0",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "token1",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "pair",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "PairCreated",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "allPairs",
							"outputs": [
								{
									"internalType": "address",
									"name": "pair",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "allPairsLength",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								}
							],
							"name": "createPair",
							"outputs": [
								{
									"internalType": "address",
									"name": "pair",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "feeInfo",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "_ownerFeeShare",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_feeTo",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "feePercentOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "feeTo",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								}
							],
							"name": "getPair",
							"outputs": [
								{
									"internalType": "address",
									"name": "pair",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "ownerFeeShare",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "referrersFeeShare",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "setFeeTo",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "setStableOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allPairs(uint256)": "1e3dd18b",
							"allPairsLength()": "574f2ba3",
							"createPair(address,address)": "c9c65396",
							"feeInfo()": "995b5aae",
							"feePercentOwner()": "4c217715",
							"feeTo()": "017e7e58",
							"getPair(address,address)": "e6a43905",
							"owner()": "8da5cb5b",
							"ownerFeeShare()": "69c8b572",
							"referrersFeeShare(address)": "7183d47c",
							"setFeeTo(address)": "f46901ed",
							"setStableOwner()": "fc39026a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"PairCreated\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allPairs\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"allPairsLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"}],\"name\":\"createPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"feeInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_ownerFeeShare\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_feeTo\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"feePercentOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"feeTo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"}],\"name\":\"getPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ownerFeeShare\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"referrersFeeShare\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"setFeeTo\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"setStableOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"interfaces/I10kStableFactory.sol\":\"I10kStableFactory\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"interfaces/I10kStableFactory.sol\":{\"keccak256\":\"0x1600abf0882d18a29d5aa4d74644f57368dbef7799cacfbd94b82f337563862c\",\"urls\":[\"bzz-raw://413a251d65f1255084c77849727a1b49b0635dafebef23961cea71f3a6f53421\",\"dweb:/ipfs/QmaE5Ki2KnFHfGLg8RXSCbFaca8L5KRetvepSmwfap5SFF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"interfaces/I10kStablePair.sol": {
				"I10kStablePair": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "Burn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Mint",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0In",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1In",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0Out",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1Out",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "Swap",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint112",
									"name": "reserve0",
									"type": "uint112"
								},
								{
									"indexed": false,
									"internalType": "uint112",
									"name": "reserve1",
									"type": "uint112"
								}
							],
							"name": "Sync",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "MINIMUM_LIQUIDITY",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "PERMIT_TYPEHASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "burn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "tokenIn",
									"type": "address"
								}
							],
							"name": "getAmountOut",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "getReserves",
							"outputs": [
								{
									"internalType": "uint112",
									"name": "reserve0",
									"type": "uint112"
								},
								{
									"internalType": "uint112",
									"name": "reserve1",
									"type": "uint112"
								},
								{
									"internalType": "uint16",
									"name": "token0feePercent",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "token1FeePercent",
									"type": "uint16"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "initialize",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "kLast",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "uint16",
									"name": "token0FeePercent",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "token1FeePercent",
									"type": "uint16"
								}
							],
							"name": "setFeePercent",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "skim",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount0Out",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1Out",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "swap",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount0Out",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1Out",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"internalType": "address",
									"name": "referrer",
									"type": "address"
								}
							],
							"name": "swap",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "sync",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "token0",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "token1",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"MINIMUM_LIQUIDITY()": "ba9a7a56",
							"PERMIT_TYPEHASH()": "30adf81f",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(address)": "89afcb44",
							"decimals()": "313ce567",
							"factory()": "c45a0155",
							"getAmountOut(uint256,address)": "f140a35a",
							"getReserves()": "0902f1ac",
							"initialize(address,address)": "485cc955",
							"kLast()": "7464fc3d",
							"mint(address)": "6a627842",
							"name()": "06fdde03",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
							"setFeePercent(uint16,uint16)": "48e5d260",
							"skim(address)": "bc25cf77",
							"swap(uint256,uint256,address,bytes)": "022c0d9f",
							"swap(uint256,uint256,address,bytes,address)": "6e1fdd7f",
							"symbol()": "95d89b41",
							"sync()": "fff6cae9",
							"token0()": "0dfe1681",
							"token1()": "d21220a7",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0In\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1In\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0Out\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1Out\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint112\",\"name\":\"reserve0\",\"type\":\"uint112\"},{\"indexed\":false,\"internalType\":\"uint112\",\"name\":\"reserve1\",\"type\":\"uint112\"}],\"name\":\"Sync\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MINIMUM_LIQUIDITY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"}],\"name\":\"getAmountOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getReserves\",\"outputs\":[{\"internalType\":\"uint112\",\"name\":\"reserve0\",\"type\":\"uint112\"},{\"internalType\":\"uint112\",\"name\":\"reserve1\",\"type\":\"uint112\"},{\"internalType\":\"uint16\",\"name\":\"token0feePercent\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"token1FeePercent\",\"type\":\"uint16\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"kLast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"token0FeePercent\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"token1FeePercent\",\"type\":\"uint16\"}],\"name\":\"setFeePercent\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"skim\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0Out\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Out\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0Out\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Out\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"referrer\",\"type\":\"address\"}],\"name\":\"swap\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"sync\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"interfaces/I10kStablePair.sol\":\"I10kStablePair\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"interfaces/I10kStablePair.sol\":{\"keccak256\":\"0xa66611f5fd9d26c03ec7fb00941af91c5e5ba01dea24fe6a5f223acbbe6ce245\",\"urls\":[\"bzz-raw://5a9c82d7d2c9cd957bd727679f0d73b9871a8d6ea5aa25ec10e293e4531774ba\",\"dweb:/ipfs/QmPG57Ph8k3tq8cmeFe6GW2wBcmpzdr4BFQM6ZF9vnVW5z\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"interfaces/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"interfaces/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"interfaces/IERC20.sol\":{\"keccak256\":\"0x026fb4c4604e2f6777f72ade61eb8181e39ecaea75623738b5b4db133b96baf9\",\"urls\":[\"bzz-raw://c583da75cb39bf608b3397ba4b7aded1c70560983087e4ad7373c421b30c9eff\",\"dweb:/ipfs/QmXfJu9UyHPvRpJe6wp4aL1skJQ9GrxxriWivaJsriU6YM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"libraries/Math.sol": {
				"Math": {
					"abi": [],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"libraries/Math.sol\":83:623  library Math {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0x0b\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":255:262   */\n  dup1\n    /* \"--CODEGEN--\":249:263   */\n  mload\n    /* \"--CODEGEN--\":246:247   */\n  0x00\n    /* \"--CODEGEN--\":241:264   */\n  byte\n    /* \"--CODEGEN--\":235:239   */\n  0x73\n    /* \"--CODEGEN--\":232:265   */\n  eq\n    /* \"--CODEGEN--\":222:224   */\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":269:278   */\n  invalid\n    /* \"--CODEGEN--\":222:224   */\ntag_1:\n    /* \"--CODEGEN--\":293:302   */\n  address\n    /* \"--CODEGEN--\":290:291   */\n  0x00\n    /* \"--CODEGEN--\":283:303   */\n  mstore\n    /* \"--CODEGEN--\":323:327   */\n  0x73\n    /* \"--CODEGEN--\":314:321   */\n  dup2\n    /* \"--CODEGEN--\":306:328   */\n  mstore8\n    /* \"--CODEGEN--\":347:354   */\n  dup3\n    /* \"--CODEGEN--\":338:345   */\n  dup2\n    /* \"--CODEGEN--\":331:355   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"libraries/Math.sol\":83:623  library Math {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa265627a7a723158205f2db1544ac1d5b07ab10d242894f891118d890b17b452957871263248b711a764736f6c63430005100032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60556023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a723158205f2db1544ac1d5b07ab10d242894f891118d890b17b452957871263248b711a764736f6c63430005100032",
							"opcodes": "PUSH1 0x55 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0x5F 0x2D 0xB1 SLOAD 0x4A 0xC1 0xD5 0xB0 PUSH27 0xB10D242894F891118D890B17B452957871263248B711A764736F6C PUSH4 0x43000510 STOP ORIGIN ",
							"sourceMap": "83:540:7:-;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a723158205f2db1544ac1d5b07ab10d242894f891118d890b17b452957871263248b711a764736f6c63430005100032",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0x5F 0x2D 0xB1 SLOAD 0x4A 0xC1 0xD5 0xB0 PUSH27 0xB10D242894F891118D890B17B452957871263248B711A764736F6C PUSH4 0x43000510 STOP ORIGIN ",
							"sourceMap": "83:540:7:-;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "94",
								"totalCost": "17094"
							},
							"internal": {
								"min(uint256,uint256)": "infinite",
								"sqrt(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 83,
									"end": 623,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 83,
									"end": 623,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 134,
									"name": "PUSH",
									"value": "B"
								},
								{
									"begin": 166,
									"end": 173,
									"name": "DUP3"
								},
								{
									"begin": 155,
									"end": 164,
									"name": "DUP3"
								},
								{
									"begin": 146,
									"end": 153,
									"name": "DUP3"
								},
								{
									"begin": 137,
									"end": 174,
									"name": "CODECOPY"
								},
								{
									"begin": 255,
									"end": 262,
									"name": "DUP1"
								},
								{
									"begin": 249,
									"end": 263,
									"name": "MLOAD"
								},
								{
									"begin": 246,
									"end": 247,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 241,
									"end": 264,
									"name": "BYTE"
								},
								{
									"begin": 235,
									"end": 239,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 232,
									"end": 265,
									"name": "EQ"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPI"
								},
								{
									"begin": 269,
									"end": 278,
									"name": "INVALID"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPDEST"
								},
								{
									"begin": 293,
									"end": 302,
									"name": "ADDRESS"
								},
								{
									"begin": 290,
									"end": 291,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 283,
									"end": 303,
									"name": "MSTORE"
								},
								{
									"begin": 323,
									"end": 327,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 314,
									"end": 321,
									"name": "DUP2"
								},
								{
									"begin": 306,
									"end": 328,
									"name": "MSTORE8"
								},
								{
									"begin": 347,
									"end": 354,
									"name": "DUP3"
								},
								{
									"begin": 338,
									"end": 345,
									"name": "DUP2"
								},
								{
									"begin": 331,
									"end": 355,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a723158205f2db1544ac1d5b07ab10d242894f891118d890b17b452957871263248b711a764736f6c63430005100032",
									".code": [
										{
											"begin": 83,
											"end": 623,
											"name": "PUSHDEPLOYADDRESS"
										},
										{
											"begin": 83,
											"end": 623,
											"name": "ADDRESS"
										},
										{
											"begin": 83,
											"end": 623,
											"name": "EQ"
										},
										{
											"begin": 83,
											"end": 623,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 83,
											"end": 623,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 83,
											"end": 623,
											"name": "MSTORE"
										},
										{
											"begin": 83,
											"end": 623,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 83,
											"end": 623,
											"name": "DUP1"
										},
										{
											"begin": 83,
											"end": 623,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"libraries/Math.sol\":\"Math\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"libraries/Math.sol\":{\"keccak256\":\"0xd18b6121fa8808fff1d095af718276cf840b037165e5ba3bc91516ca6403e776\",\"urls\":[\"bzz-raw://fb213ae85748ccd097ecefb8fab810ebd2699ddcaa37598d6252c34e7397a51c\",\"dweb:/ipfs/QmYzWsfhe9kDedaPro9cxwaihUdSSTcWQyCH9WKK8XZWi7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"libraries/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"libraries/SafeMath.sol\":136:578  library SafeMath {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0x0b\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":255:262   */\n  dup1\n    /* \"--CODEGEN--\":249:263   */\n  mload\n    /* \"--CODEGEN--\":246:247   */\n  0x00\n    /* \"--CODEGEN--\":241:264   */\n  byte\n    /* \"--CODEGEN--\":235:239   */\n  0x73\n    /* \"--CODEGEN--\":232:265   */\n  eq\n    /* \"--CODEGEN--\":222:224   */\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":269:278   */\n  invalid\n    /* \"--CODEGEN--\":222:224   */\ntag_1:\n    /* \"--CODEGEN--\":293:302   */\n  address\n    /* \"--CODEGEN--\":290:291   */\n  0x00\n    /* \"--CODEGEN--\":283:303   */\n  mstore\n    /* \"--CODEGEN--\":323:327   */\n  0x73\n    /* \"--CODEGEN--\":314:321   */\n  dup2\n    /* \"--CODEGEN--\":306:328   */\n  mstore8\n    /* \"--CODEGEN--\":347:354   */\n  dup3\n    /* \"--CODEGEN--\":338:345   */\n  dup2\n    /* \"--CODEGEN--\":331:355   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"libraries/SafeMath.sol\":136:578  library SafeMath {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa265627a7a72315820e43b182c8ce955ea66e8eecf9f3e3776857b2d43834818ff515eb999e610b55f64736f6c63430005100032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60556023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a72315820e43b182c8ce955ea66e8eecf9f3e3776857b2d43834818ff515eb999e610b55f64736f6c63430005100032",
							"opcodes": "PUSH1 0x55 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0xE4 EXTCODESIZE XOR 0x2C DUP13 0xE9 SSTORE 0xEA PUSH7 0xE8EECF9F3E3776 DUP6 PUSH28 0x2D43834818FF515EB999E610B55F64736F6C63430005100032000000 ",
							"sourceMap": "136:442:8:-;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a72315820e43b182c8ce955ea66e8eecf9f3e3776857b2d43834818ff515eb999e610b55f64736f6c63430005100032",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0xE4 EXTCODESIZE XOR 0x2C DUP13 0xE9 SSTORE 0xEA PUSH7 0xE8EECF9F3E3776 DUP6 PUSH28 0x2D43834818FF515EB999E610B55F64736F6C63430005100032000000 ",
							"sourceMap": "136:442:8:-;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "94",
								"totalCost": "17094"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 136,
									"end": 578,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 136,
									"end": 578,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 134,
									"name": "PUSH",
									"value": "B"
								},
								{
									"begin": 166,
									"end": 173,
									"name": "DUP3"
								},
								{
									"begin": 155,
									"end": 164,
									"name": "DUP3"
								},
								{
									"begin": 146,
									"end": 153,
									"name": "DUP3"
								},
								{
									"begin": 137,
									"end": 174,
									"name": "CODECOPY"
								},
								{
									"begin": 255,
									"end": 262,
									"name": "DUP1"
								},
								{
									"begin": 249,
									"end": 263,
									"name": "MLOAD"
								},
								{
									"begin": 246,
									"end": 247,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 241,
									"end": 264,
									"name": "BYTE"
								},
								{
									"begin": 235,
									"end": 239,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 232,
									"end": 265,
									"name": "EQ"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPI"
								},
								{
									"begin": 269,
									"end": 278,
									"name": "INVALID"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPDEST"
								},
								{
									"begin": 293,
									"end": 302,
									"name": "ADDRESS"
								},
								{
									"begin": 290,
									"end": 291,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 283,
									"end": 303,
									"name": "MSTORE"
								},
								{
									"begin": 323,
									"end": 327,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 314,
									"end": 321,
									"name": "DUP2"
								},
								{
									"begin": 306,
									"end": 328,
									"name": "MSTORE8"
								},
								{
									"begin": 347,
									"end": 354,
									"name": "DUP3"
								},
								{
									"begin": 338,
									"end": 345,
									"name": "DUP2"
								},
								{
									"begin": 331,
									"end": 355,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a72315820e43b182c8ce955ea66e8eecf9f3e3776857b2d43834818ff515eb999e610b55f64736f6c63430005100032",
									".code": [
										{
											"begin": 136,
											"end": 578,
											"name": "PUSHDEPLOYADDRESS"
										},
										{
											"begin": 136,
											"end": 578,
											"name": "ADDRESS"
										},
										{
											"begin": 136,
											"end": 578,
											"name": "EQ"
										},
										{
											"begin": 136,
											"end": 578,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 136,
											"end": 578,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 136,
											"end": 578,
											"name": "MSTORE"
										},
										{
											"begin": 136,
											"end": 578,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 136,
											"end": 578,
											"name": "DUP1"
										},
										{
											"begin": 136,
											"end": 578,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"libraries/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"libraries/SafeMath.sol\":{\"keccak256\":\"0x187b45f92784b0471f1007f6fcfa33f97d92c100c3edc7f9b86c2c35a56b6e5d\",\"urls\":[\"bzz-raw://c05bbc97ca818b0657dac8786ed37e0c77537f4c6ec4b7c25940a3b1fcb7ca64\",\"dweb:/ipfs/QmfSvmTfitBonGZ14AVUa794iMNzmfKHLUNbxSekFSvPLU\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"contracts/TenkERC20.sol": {
				"ast": {
					"absolutePath": "contracts/TenkERC20.sol",
					"exportedSymbols": {
						"TenkERC20": [
							395
						]
					},
					"id": 396,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"=",
								"0.5",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:0"
						},
						{
							"absolutePath": "interfaces/I10kERC20.sol",
							"file": "../interfaces/I10kERC20.sol",
							"id": 2,
							"nodeType": "ImportDirective",
							"scope": 396,
							"sourceUnit": 2621,
							"src": "28:37:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "libraries/SafeMath.sol",
							"file": "../libraries/SafeMath.sol",
							"id": 3,
							"nodeType": "ImportDirective",
							"scope": 396,
							"sourceUnit": 3220,
							"src": "67:35:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 4,
										"name": "I10kERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 2620,
										"src": "128:9:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_I10kERC20_$2620",
											"typeString": "contract I10kERC20"
										}
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "128:9:0"
								}
							],
							"contractDependencies": [
								2620
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 395,
							"linearizedBaseContracts": [
								395,
								2620
							],
							"name": "TenkERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 8,
									"libraryName": {
										"contractScope": null,
										"id": 6,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 3219,
										"src": "151:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$3219",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "145:24:0",
									"typeName": {
										"id": 7,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "164:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": true,
									"id": 11,
									"name": "name",
									"nodeType": "VariableDeclaration",
									"scope": 395,
									"src": "177:42:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory",
										"typeString": "string"
									},
									"typeName": {
										"id": 9,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "177:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "43616d656c6f74204c50",
										"id": 10,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "207:12:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_d76c82bc6723d724b871e570045a7319276e62ab33aa5923ccca28a79bbf7411",
											"typeString": "literal_string \"Camelot LP\""
										},
										"value": "Camelot LP"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 14,
									"name": "symbol",
									"nodeType": "VariableDeclaration",
									"scope": 395,
									"src": "226:41:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory",
										"typeString": "string"
									},
									"typeName": {
										"id": 12,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "226:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "434d4c542d4c50",
										"id": 13,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "258:9:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_690ba44dc8aac87a19b86e797cff555dd21f02860ef88c7bf30509fcdfcffd18",
											"typeString": "literal_string \"CMLT-LP\""
										},
										"value": "CMLT-LP"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 17,
									"name": "decimals",
									"nodeType": "VariableDeclaration",
									"scope": 395,
									"src": "274:35:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 15,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "274:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3138",
										"id": 16,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "307:2:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_18_by_1",
											"typeString": "int_const 18"
										},
										"value": "18"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 19,
									"name": "totalSupply",
									"nodeType": "VariableDeclaration",
									"scope": 395,
									"src": "316:24:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 18,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "316:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 23,
									"name": "balanceOf",
									"nodeType": "VariableDeclaration",
									"scope": 395,
									"src": "347:41:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 22,
										"keyType": {
											"id": 20,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "355:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "347:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 21,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "366:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 29,
									"name": "allowance",
									"nodeType": "VariableDeclaration",
									"scope": 395,
									"src": "395:61:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 28,
										"keyType": {
											"id": 24,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "403:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "395:44:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 27,
											"keyType": {
												"id": 25,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "422:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "414:24:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 26,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "433:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 31,
									"name": "DOMAIN_SEPARATOR",
									"nodeType": "VariableDeclaration",
									"scope": 395,
									"src": "465:31:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 30,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "465:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 34,
									"name": "PERMIT_TYPEHASH",
									"nodeType": "VariableDeclaration",
									"scope": 395,
									"src": "608:108:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 32,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "608:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "307836653731656461653132623162393766346431663630333730666566313031303566613266616165303132363131346131363963363438343564363132366339",
										"id": 33,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "650:66:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_49955707469362902507454157297736832118868343942642399513960811609542965143241_by_1",
											"typeString": "int_const 4995...(69 digits omitted)...3241"
										},
										"value": "0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 38,
									"name": "nonces",
									"nodeType": "VariableDeclaration",
									"scope": 395,
									"src": "723:38:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 37,
										"keyType": {
											"id": 35,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "731:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "723:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 36,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "742:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 46,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 40,
												"indexed": true,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "785:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 39,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "785:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 42,
												"indexed": true,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "808:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 41,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "808:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 44,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "833:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 43,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "833:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "784:60:0"
									},
									"src": "770:75:0"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 54,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 48,
												"indexed": true,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "866:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 47,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "866:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 50,
												"indexed": true,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "888:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 49,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "888:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 52,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "908:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "908:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "865:54:0"
									},
									"src": "851:69:0"
								},
								{
									"body": {
										"id": 86,
										"nodeType": "Block",
										"src": "949:437:0",
										"statements": [
											{
												"assignments": [
													58
												],
												"declarations": [
													{
														"constant": false,
														"id": 58,
														"name": "chainId",
														"nodeType": "VariableDeclaration",
														"scope": 86,
														"src": "960:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 57,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "960:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 59,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "960:12:0"
											},
											{
												"externalReferences": [
													{
														"chainId": {
															"declaration": 58,
															"isOffset": false,
															"isSlot": false,
															"src": "1007:7:0",
															"valueSize": 1
														}
													}
												],
												"id": 60,
												"nodeType": "InlineAssembly",
												"operations": "{ chainId := chainid() }",
												"src": "983:53:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 61,
														"name": "DOMAIN_SEPARATOR",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 31,
														"src": "1046:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"hexValue": "454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429",
																				"id": 66,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "string",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1128:84:0",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f",
																					"typeString": "literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""
																				},
																				"value": "EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f",
																					"typeString": "literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""
																				}
																			],
																			"id": 65,
																			"name": "keccak256",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3228,
																			"src": "1118:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																				"typeString": "function (bytes memory) pure returns (bytes32)"
																			}
																		},
																		"id": 67,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1118:95:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"id": 70,
																						"name": "name",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 11,
																						"src": "1248:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_string_memory",
																							"typeString": "string memory"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_string_memory",
																							"typeString": "string memory"
																						}
																					],
																					"id": 69,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "1242:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																						"typeString": "type(bytes storage pointer)"
																					},
																					"typeName": "bytes"
																				},
																				"id": 71,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "1242:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			],
																			"id": 68,
																			"name": "keccak256",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3228,
																			"src": "1232:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																				"typeString": "function (bytes memory) pure returns (bytes32)"
																			}
																		},
																		"id": 72,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1232:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"hexValue": "31",
																						"id": 75,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "string",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "1289:3:0",
																						"subdenomination": null,
																						"typeDescriptions": {
																							"typeIdentifier": "t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6",
																							"typeString": "literal_string \"1\""
																						},
																						"value": "1"
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6",
																							"typeString": "literal_string \"1\""
																						}
																					],
																					"id": 74,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "1283:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																						"typeString": "type(bytes storage pointer)"
																					},
																					"typeName": "bytes"
																				},
																				"id": 76,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "1283:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			],
																			"id": 73,
																			"name": "keccak256",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3228,
																			"src": "1273:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																				"typeString": "function (bytes memory) pure returns (bytes32)"
																			}
																		},
																		"id": 77,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1273:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 78,
																		"name": "chainId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 58,
																		"src": "1313:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 80,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3252,
																				"src": "1347:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_TenkERC20_$395",
																					"typeString": "contract TenkERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_TenkERC20_$395",
																					"typeString": "contract TenkERC20"
																				}
																			],
																			"id": 79,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1339:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": "address"
																		},
																		"id": 81,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1339:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 63,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3221,
																		"src": "1089:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 64,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "encode",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "1089:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function () pure returns (bytes memory)"
																	}
																},
																"id": 82,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1089:278:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 62,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3228,
															"src": "1065:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 83,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1065:313:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "1046:332:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 85,
												"nodeType": "ExpressionStatement",
												"src": "1046:332:0"
											}
										]
									},
									"documentation": null,
									"id": 87,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 55,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "939:2:0"
									},
									"returnParameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "949:0:0"
									},
									"scope": 395,
									"src": "928:458:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 120,
										"nodeType": "Block",
										"src": "1442:153:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 99,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 94,
														"name": "totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 19,
														"src": "1453:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 97,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 91,
																"src": "1483:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 95,
																"name": "totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 19,
																"src": "1467:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 96,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3168,
															"src": "1467:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 98,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1467:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1453:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 100,
												"nodeType": "ExpressionStatement",
												"src": "1453:36:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 110,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 101,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 23,
															"src": "1500:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 103,
														"indexExpression": {
															"argumentTypes": null,
															"id": 102,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 89,
															"src": "1510:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1500:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 108,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 91,
																"src": "1534:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 104,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 23,
																	"src": "1516:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 106,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 105,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 89,
																	"src": "1526:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1516:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 107,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3168,
															"src": "1516:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 109,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1516:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1500:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 111,
												"nodeType": "ExpressionStatement",
												"src": "1500:40:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 114,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1573:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 113,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1565:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 115,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1565:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 116,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 89,
															"src": "1577:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 117,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 91,
															"src": "1581:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 112,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															54
														],
														"referencedDeclaration": 54,
														"src": "1556:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1556:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 119,
												"nodeType": "EmitStatement",
												"src": "1551:36:0"
											}
										]
									},
									"documentation": null,
									"id": 121,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 92,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 89,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 121,
												"src": "1409:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 88,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1409:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 91,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 121,
												"src": "1421:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 90,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1421:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1408:24:0"
									},
									"returnParameters": {
										"id": 93,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1442:0:0"
									},
									"scope": 395,
									"src": "1394:201:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 154,
										"nodeType": "Block",
										"src": "1653:159:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 137,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 128,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 23,
															"src": "1664:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 130,
														"indexExpression": {
															"argumentTypes": null,
															"id": 129,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 123,
															"src": "1674:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1664:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 135,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 125,
																"src": "1702:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 131,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 23,
																	"src": "1682:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 133,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 132,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 123,
																	"src": "1692:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1682:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 134,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3190,
															"src": "1682:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 136,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1682:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1664:44:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 138,
												"nodeType": "ExpressionStatement",
												"src": "1664:44:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 139,
														"name": "totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 19,
														"src": "1719:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 142,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 125,
																"src": "1749:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 140,
																"name": "totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 19,
																"src": "1733:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 141,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3190,
															"src": "1733:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 143,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1733:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1719:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 145,
												"nodeType": "ExpressionStatement",
												"src": "1719:36:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 147,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 123,
															"src": "1780:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 149,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1794:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 148,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1786:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 150,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1786:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 151,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 125,
															"src": "1798:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 146,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															54
														],
														"referencedDeclaration": 54,
														"src": "1771:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 152,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1771:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 153,
												"nodeType": "EmitStatement",
												"src": "1766:38:0"
											}
										]
									},
									"documentation": null,
									"id": 155,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 123,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 155,
												"src": "1618:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 122,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1618:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 125,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 155,
												"src": "1632:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 124,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1632:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1617:26:0"
									},
									"returnParameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1653:0:0"
									},
									"scope": 395,
									"src": "1603:209:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 178,
										"nodeType": "Block",
										"src": "1890:99:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 170,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 164,
																"name": "allowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 29,
																"src": "1901:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 167,
															"indexExpression": {
																"argumentTypes": null,
																"id": 165,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 157,
																"src": "1911:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1901:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 168,
														"indexExpression": {
															"argumentTypes": null,
															"id": 166,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 159,
															"src": "1918:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1901:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 169,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 161,
														"src": "1929:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1901:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 171,
												"nodeType": "ExpressionStatement",
												"src": "1901:33:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 173,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 157,
															"src": "1959:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 174,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 159,
															"src": "1966:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 175,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 161,
															"src": "1975:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 172,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															46
														],
														"referencedDeclaration": 46,
														"src": "1950:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 176,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1950:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 177,
												"nodeType": "EmitStatement",
												"src": "1945:36:0"
											}
										]
									},
									"documentation": null,
									"id": 179,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 157,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 179,
												"src": "1838:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 156,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1838:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 159,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 179,
												"src": "1853:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 158,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1853:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 161,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 179,
												"src": "1870:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 160,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1870:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1837:44:0"
									},
									"returnParameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1890:0:0"
									},
									"scope": 395,
									"src": "1820:169:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 216,
										"nodeType": "Block",
										"src": "2062:155:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 197,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 188,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 23,
															"src": "2073:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 190,
														"indexExpression": {
															"argumentTypes": null,
															"id": 189,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 181,
															"src": "2083:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2073:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 195,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 185,
																"src": "2111:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 191,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 23,
																	"src": "2091:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 193,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 192,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 181,
																	"src": "2101:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2091:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 194,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3190,
															"src": "2091:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 196,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2091:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2073:44:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 198,
												"nodeType": "ExpressionStatement",
												"src": "2073:44:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 199,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 23,
															"src": "2128:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 201,
														"indexExpression": {
															"argumentTypes": null,
															"id": 200,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 183,
															"src": "2138:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2128:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 206,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 185,
																"src": "2162:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 202,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 23,
																	"src": "2144:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 204,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 203,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 183,
																	"src": "2154:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2144:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 205,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3168,
															"src": "2144:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 207,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2144:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2128:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 209,
												"nodeType": "ExpressionStatement",
												"src": "2128:40:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 211,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 181,
															"src": "2193:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 212,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 183,
															"src": "2199:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 213,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 185,
															"src": "2203:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 210,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															54
														],
														"referencedDeclaration": 54,
														"src": "2184:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2184:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 215,
												"nodeType": "EmitStatement",
												"src": "2179:30:0"
											}
										]
									},
									"documentation": null,
									"id": 217,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "2016:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2016:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 183,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "2030:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 182,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2030:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 185,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "2042:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 184,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2042:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2015:38:0"
									},
									"returnParameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2062:0:0"
									},
									"scope": 395,
									"src": "1997:220:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 235,
										"nodeType": "Block",
										"src": "2295:77:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 227,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3234,
																"src": "2315:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 228,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "2315:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 229,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 219,
															"src": "2327:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 230,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 221,
															"src": "2336:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 226,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 179,
														"src": "2306:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2306:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 232,
												"nodeType": "ExpressionStatement",
												"src": "2306:36:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 233,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2360:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 225,
												"id": 234,
												"nodeType": "Return",
												"src": "2353:11:0"
											}
										]
									},
									"documentation": null,
									"id": 236,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "2242:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 218,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2242:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 221,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "2259:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 220,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2259:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2241:29:0"
									},
									"returnParameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 224,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "2289:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 223,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2289:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2288:6:0"
									},
									"scope": 395,
									"src": "2225:147:0",
									"stateMutability": "nonpayable",
									"superFunction": 2565,
									"visibility": "external"
								},
								{
									"body": {
										"id": 254,
										"nodeType": "Block",
										"src": "2446:73:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 246,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3234,
																"src": "2467:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 247,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "2467:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 248,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 238,
															"src": "2479:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 249,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 240,
															"src": "2483:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 245,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 217,
														"src": "2457:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2457:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 251,
												"nodeType": "ExpressionStatement",
												"src": "2457:32:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 252,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2507:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 244,
												"id": 253,
												"nodeType": "Return",
												"src": "2500:11:0"
											}
										]
									},
									"documentation": null,
									"id": 255,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 238,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "2398:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 237,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2398:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 240,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "2410:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 239,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2410:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2397:24:0"
									},
									"returnParameters": {
										"id": 244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 243,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "2440:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 242,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2440:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2439:6:0"
									},
									"scope": 395,
									"src": "2380:139:0",
									"stateMutability": "nonpayable",
									"superFunction": 2574,
									"visibility": "external"
								},
								{
									"body": {
										"id": 315,
										"nodeType": "Block",
										"src": "2611:315:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 266,
																"name": "allowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 29,
																"src": "2626:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 268,
															"indexExpression": {
																"argumentTypes": null,
																"id": 267,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 257,
																"src": "2636:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2626:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 271,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 269,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3234,
																"src": "2642:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 270,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "2642:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2626:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 274,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "-",
																"prefix": true,
																"src": "2662:2:0",
																"subExpression": {
																	"argumentTypes": null,
																	"hexValue": "31",
																	"id": 273,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2663:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_minus_1_by_1",
																	"typeString": "int_const -1"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_minus_1_by_1",
																	"typeString": "int_const -1"
																}
															],
															"id": 272,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2657:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": "uint"
														},
														"id": 275,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2657:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2626:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 306,
												"nodeType": "IfStatement",
												"src": "2622:238:0",
												"trueBody": {
													"id": 305,
													"nodeType": "Block",
													"src": "2667:193:0",
													"statements": [
														{
															"assignments": [
																278
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 278,
																	"name": "remaining",
																	"nodeType": "VariableDeclaration",
																	"scope": 305,
																	"src": "2682:14:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 277,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "2682:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 288,
															"initialValue": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 286,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 261,
																		"src": "2731:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 279,
																				"name": "allowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 29,
																				"src": "2699:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																					"typeString": "mapping(address => mapping(address => uint256))"
																				}
																			},
																			"id": 281,
																			"indexExpression": {
																				"argumentTypes": null,
																				"id": 280,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 257,
																				"src": "2709:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "2699:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																				"typeString": "mapping(address => uint256)"
																			}
																		},
																		"id": 284,
																		"indexExpression": {
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 282,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3234,
																				"src": "2715:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 283,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": null,
																			"src": "2715:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2699:27:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 285,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sub",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3190,
																	"src": "2699:31:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 287,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2699:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2682:55:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 296,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 289,
																			"name": "allowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 29,
																			"src": "2752:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 293,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 290,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 257,
																			"src": "2762:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2752:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 294,
																	"indexExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 291,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3234,
																			"src": "2768:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 292,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "2768:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2752:27:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"id": 295,
																	"name": "remaining",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 278,
																	"src": "2782:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2752:39:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 297,
															"nodeType": "ExpressionStatement",
															"src": "2752:39:0"
														},
														{
															"eventCall": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 299,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 257,
																		"src": "2820:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 300,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3234,
																			"src": "2826:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 301,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "2826:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 302,
																		"name": "remaining",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 278,
																		"src": "2838:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 298,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		46
																	],
																	"referencedDeclaration": 46,
																	"src": "2811:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 303,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2811:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 304,
															"nodeType": "EmitStatement",
															"src": "2806:42:0"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 308,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 257,
															"src": "2880:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 309,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 259,
															"src": "2886:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 310,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 261,
															"src": "2890:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 307,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 217,
														"src": "2870:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2870:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 312,
												"nodeType": "ExpressionStatement",
												"src": "2870:26:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 313,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2914:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 265,
												"id": 314,
												"nodeType": "Return",
												"src": "2907:11:0"
											}
										]
									},
									"documentation": null,
									"id": 316,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 316,
												"src": "2549:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2549:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 259,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 316,
												"src": "2563:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 258,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2563:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 261,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 316,
												"src": "2575:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 260,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2575:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2548:38:0"
									},
									"returnParameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 316,
												"src": "2605:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 263,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2605:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2604:6:0"
									},
									"scope": 395,
									"src": "2527:399:0",
									"stateMutability": "nonpayable",
									"superFunction": 2585,
									"visibility": "external"
								},
								{
									"body": {
										"id": 393,
										"nodeType": "Block",
										"src": "3049:559:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 337,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 334,
																"name": "deadline",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 324,
																"src": "3068:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 335,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3224,
																	"src": "3080:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 336,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "3080:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3068:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "556e697377617056323a2045585049524544",
															"id": 338,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3097:20:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47797eaaf6df6dc2efdb1e824209400a8293aff4c1e7f6d90fcc4b3e3ba18a87",
																"typeString": "literal_string \"UniswapV2: EXPIRED\""
															},
															"value": "UniswapV2: EXPIRED"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_47797eaaf6df6dc2efdb1e824209400a8293aff4c1e7f6d90fcc4b3e3ba18a87",
																"typeString": "literal_string \"UniswapV2: EXPIRED\""
															}
														],
														"id": 333,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															3237,
															3238
														],
														"referencedDeclaration": 3238,
														"src": "3060:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 339,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3060:58:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 340,
												"nodeType": "ExpressionStatement",
												"src": "3060:58:0"
											},
											{
												"assignments": [
													342
												],
												"declarations": [
													{
														"constant": false,
														"id": 342,
														"name": "digest",
														"nodeType": "VariableDeclaration",
														"scope": 393,
														"src": "3129:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 341,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "3129:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 364,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "1901",
																	"id": 346,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3205:10:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
																		"typeString": "literal_string \"\u0019\u0001\""
																	},
																	"value": "\u0019\u0001"
																},
																{
																	"argumentTypes": null,
																	"id": 347,
																	"name": "DOMAIN_SEPARATOR",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 31,
																	"src": "3234:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 351,
																					"name": "PERMIT_TYPEHASH",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 34,
																					"src": "3290:15:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 352,
																					"name": "owner",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 318,
																					"src": "3307:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 353,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 320,
																					"src": "3314:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 354,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 322,
																					"src": "3323:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 358,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "UnaryOperation",
																					"operator": "++",
																					"prefix": false,
																					"src": "3330:15:0",
																					"subExpression": {
																						"argumentTypes": null,
																						"baseExpression": {
																							"argumentTypes": null,
																							"id": 355,
																							"name": "nonces",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 38,
																							"src": "3330:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																								"typeString": "mapping(address => uint256)"
																							}
																						},
																						"id": 357,
																						"indexExpression": {
																							"argumentTypes": null,
																							"id": 356,
																							"name": "owner",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 318,
																							"src": "3337:5:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": true,
																						"nodeType": "IndexAccess",
																						"src": "3330:13:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 359,
																					"name": "deadline",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 324,
																					"src": "3347:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 349,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3221,
																					"src": "3279:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 350,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberName": "encode",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": null,
																				"src": "3279:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																					"typeString": "function () pure returns (bytes memory)"
																				}
																			},
																			"id": 360,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3279:77:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		],
																		"id": 348,
																		"name": "keccak256",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3228,
																		"src": "3269:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																			"typeString": "function (bytes memory) pure returns (bytes32)"
																		}
																	},
																	"id": 361,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3269:88:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
																		"typeString": "literal_string \"\u0019\u0001\""
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 344,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3221,
																	"src": "3170:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 345,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "3170:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 362,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3170:202:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 343,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3228,
														"src": "3146:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 363,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3146:237:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3129:254:0"
											},
											{
												"assignments": [
													366
												],
												"declarations": [
													{
														"constant": false,
														"id": 366,
														"name": "recoveredAddress",
														"nodeType": "VariableDeclaration",
														"scope": 393,
														"src": "3394:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 365,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3394:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 373,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 368,
															"name": "digest",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 342,
															"src": "3431:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"argumentTypes": null,
															"id": 369,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 326,
															"src": "3439:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"argumentTypes": null,
															"id": 370,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 328,
															"src": "3442:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"argumentTypes": null,
															"id": 371,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 330,
															"src": "3445:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 367,
														"name": "ecrecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3226,
														"src": "3421:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
														}
													},
													"id": 372,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3421:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3394:53:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 383,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 379,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 375,
																	"name": "recoveredAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 366,
																	"src": "3466:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 377,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3494:1:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 376,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3486:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": "address"
																	},
																	"id": 378,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3486:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"src": "3466:30:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 382,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 380,
																	"name": "recoveredAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 366,
																	"src": "3500:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 381,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 318,
																	"src": "3520:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "3500:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3466:59:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "556e697377617056323a20494e56414c49445f5349474e4154555245",
															"id": 384,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3527:30:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2d893fc9f5fa2494c39ecec82df2778b33226458ccce3b9a56f5372437d54a56",
																"typeString": "literal_string \"UniswapV2: INVALID_SIGNATURE\""
															},
															"value": "UniswapV2: INVALID_SIGNATURE"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2d893fc9f5fa2494c39ecec82df2778b33226458ccce3b9a56f5372437d54a56",
																"typeString": "literal_string \"UniswapV2: INVALID_SIGNATURE\""
															}
														],
														"id": 374,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															3237,
															3238
														],
														"referencedDeclaration": 3238,
														"src": "3458:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 385,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3458:100:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 386,
												"nodeType": "ExpressionStatement",
												"src": "3458:100:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 388,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 318,
															"src": "3578:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 389,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 320,
															"src": "3585:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 390,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 322,
															"src": "3594:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 387,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 179,
														"src": "3569:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 391,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3569:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 392,
												"nodeType": "ExpressionStatement",
												"src": "3569:31:0"
											}
										]
									},
									"documentation": null,
									"id": 394,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 331,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 318,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 394,
												"src": "2950:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 317,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2950:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 320,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 394,
												"src": "2965:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 319,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2965:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 322,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 394,
												"src": "2982:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 321,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2982:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 394,
												"src": "2994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 323,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2994:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 326,
												"name": "v",
												"nodeType": "VariableDeclaration",
												"scope": 394,
												"src": "3009:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 325,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3009:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 328,
												"name": "r",
												"nodeType": "VariableDeclaration",
												"scope": 394,
												"src": "3018:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 327,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3018:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 330,
												"name": "s",
												"nodeType": "VariableDeclaration",
												"scope": 394,
												"src": "3029:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 329,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2949:90:0"
									},
									"returnParameters": {
										"id": 332,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3049:0:0"
									},
									"scope": 395,
									"src": "2934:674:0",
									"stateMutability": "nonpayable",
									"superFunction": 2619,
									"visibility": "external"
								}
							],
							"scope": 396,
							"src": "106:3505:0"
						}
					],
					"src": "0:3613:0"
				},
				"id": 0
			},
			"contracts/TenkStablePair.sol": {
				"ast": {
					"absolutePath": "contracts/TenkStablePair.sol",
					"exportedSymbols": {
						"TenkStablePair": [
							2502
						]
					},
					"id": 2503,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 397,
							"literals": [
								"solidity",
								"=",
								"0.5",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:1"
						},
						{
							"absolutePath": "interfaces/I10kStablePair.sol",
							"file": "../interfaces/I10kStablePair.sol",
							"id": 398,
							"nodeType": "ImportDirective",
							"scope": 2503,
							"sourceUnit": 2985,
							"src": "28:42:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "libraries/Math.sol",
							"file": "../libraries/Math.sol",
							"id": 399,
							"nodeType": "ImportDirective",
							"scope": 2503,
							"sourceUnit": 3145,
							"src": "72:31:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "interfaces/IERC20.sol",
							"file": "../interfaces/IERC20.sol",
							"id": 400,
							"nodeType": "ImportDirective",
							"scope": 2503,
							"sourceUnit": 3069,
							"src": "105:34:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "interfaces/I10kStableFactory.sol",
							"file": "../interfaces/I10kStableFactory.sol",
							"id": 401,
							"nodeType": "ImportDirective",
							"scope": 2503,
							"sourceUnit": 2722,
							"src": "141:45:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "interfaces/I10kStableCallee.sol",
							"file": "../interfaces/I10kStableCallee.sol",
							"id": 402,
							"nodeType": "ImportDirective",
							"scope": 2503,
							"sourceUnit": 2635,
							"src": "188:44:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/TenkERC20.sol",
							"file": "./TenkERC20.sol",
							"id": 403,
							"nodeType": "ImportDirective",
							"scope": 2503,
							"sourceUnit": 396,
							"src": "234:25:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 404,
										"name": "I10kStablePair",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 2984,
										"src": "290:14:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_I10kStablePair_$2984",
											"typeString": "contract I10kStablePair"
										}
									},
									"id": 405,
									"nodeType": "InheritanceSpecifier",
									"src": "290:14:1"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 406,
										"name": "TenkERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 395,
										"src": "306:9:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_TenkERC20_$395",
											"typeString": "contract TenkERC20"
										}
									},
									"id": 407,
									"nodeType": "InheritanceSpecifier",
									"src": "306:9:1"
								}
							],
							"contractDependencies": [
								395,
								2620,
								2984
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 2502,
							"linearizedBaseContracts": [
								2502,
								395,
								2620,
								2984
							],
							"name": "TenkStablePair",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 410,
									"libraryName": {
										"contractScope": null,
										"id": 408,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 3219,
										"src": "327:8:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$3219",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "321:25:1",
									"typeName": {
										"id": 409,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "341:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": true,
									"id": 415,
									"name": "MINIMUM_LIQUIDITY",
									"nodeType": "VariableDeclaration",
									"scope": 2502,
									"src": "352:48:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 411,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "352:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"commonType": {
											"typeIdentifier": "t_rational_1000_by_1",
											"typeString": "int_const 1000"
										},
										"id": 414,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"argumentTypes": null,
											"hexValue": "3130",
											"id": 412,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "393:2:1",
											"subdenomination": null,
											"typeDescriptions": {
												"typeIdentifier": "t_rational_10_by_1",
												"typeString": "int_const 10"
											},
											"value": "10"
										},
										"nodeType": "BinaryOperation",
										"operator": "**",
										"rightExpression": {
											"argumentTypes": null,
											"hexValue": "33",
											"id": 413,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "399:1:1",
											"subdenomination": null,
											"typeDescriptions": {
												"typeIdentifier": "t_rational_3_by_1",
												"typeString": "int_const 3"
											},
											"value": "3"
										},
										"src": "393:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000_by_1",
											"typeString": "int_const 1000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 424,
									"name": "SELECTOR",
									"nodeType": "VariableDeclaration",
									"scope": 2502,
									"src": "405:88:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes4",
										"typeString": "bytes4"
									},
									"typeName": {
										"id": 416,
										"name": "bytes4",
										"nodeType": "ElementaryTypeName",
										"src": "405:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"value": {
										"argumentTypes": null,
										"arguments": [
											{
												"argumentTypes": null,
												"arguments": [
													{
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "7472616e7366657228616464726573732c75696e7432353629",
																"id": 420,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "463:27:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_a9059cbb2ab09eb219583f4a59a5d0623ade346d962bcd4e46b11da047c9049b",
																	"typeString": "literal_string \"transfer(address,uint256)\""
																},
																"value": "transfer(address,uint256)"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_a9059cbb2ab09eb219583f4a59a5d0623ade346d962bcd4e46b11da047c9049b",
																	"typeString": "literal_string \"transfer(address,uint256)\""
																}
															],
															"id": 419,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "457:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																"typeString": "type(bytes storage pointer)"
															},
															"typeName": "bytes"
														},
														"id": 421,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "457:34:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes memory"
														}
													}
												],
												"expression": {
													"argumentTypes": [
														{
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes memory"
														}
													],
													"id": 418,
													"name": "keccak256",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3228,
													"src": "447:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
														"typeString": "function (bytes memory) pure returns (bytes32)"
													}
												},
												"id": 422,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "functionCall",
												"lValueRequested": false,
												"names": [],
												"nodeType": "FunctionCall",
												"src": "447:45:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											],
											"id": 417,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "440:6:1",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_bytes4_$",
												"typeString": "type(bytes4)"
											},
											"typeName": "bytes4"
										},
										"id": 423,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "440:53:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 426,
									"name": "factory",
									"nodeType": "VariableDeclaration",
									"scope": 2502,
									"src": "500:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 425,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "500:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 428,
									"name": "token0",
									"nodeType": "VariableDeclaration",
									"scope": 2502,
									"src": "527:21:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 427,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "527:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 430,
									"name": "token1",
									"nodeType": "VariableDeclaration",
									"scope": 2502,
									"src": "553:21:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 429,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "553:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 432,
									"name": "initialized",
									"nodeType": "VariableDeclaration",
									"scope": 2502,
									"src": "581:23:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 431,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "581:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 435,
									"name": "FEE_DENOMINATOR",
									"nodeType": "VariableDeclaration",
									"scope": 2502,
									"src": "611:45:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 433,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "611:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "313030303030",
										"id": 434,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "650:6:1",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_100000_by_1",
											"typeString": "int_const 100000"
										},
										"value": "100000"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 438,
									"name": "MAX_FEE_PERCENT",
									"nodeType": "VariableDeclaration",
									"scope": 2502,
									"src": "661:43:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 436,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "661:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "32303030",
										"id": 437,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "700:4:1",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2000_by_1",
											"typeString": "int_const 2000"
										},
										"value": "2000"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 440,
									"name": "reserve0",
									"nodeType": "VariableDeclaration",
									"scope": 2502,
									"src": "719:24:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint112",
										"typeString": "uint112"
									},
									"typeName": {
										"id": 439,
										"name": "uint112",
										"nodeType": "ElementaryTypeName",
										"src": "719:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint112",
											"typeString": "uint112"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 442,
									"name": "reserve1",
									"nodeType": "VariableDeclaration",
									"scope": 2502,
									"src": "814:24:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint112",
										"typeString": "uint112"
									},
									"typeName": {
										"id": 441,
										"name": "uint112",
										"nodeType": "ElementaryTypeName",
										"src": "814:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint112",
											"typeString": "uint112"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 445,
									"name": "token0FeePercent",
									"nodeType": "VariableDeclaration",
									"scope": 2502,
									"src": "909:36:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint16",
										"typeString": "uint16"
									},
									"typeName": {
										"id": 443,
										"name": "uint16",
										"nodeType": "ElementaryTypeName",
										"src": "909:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint16",
											"typeString": "uint16"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "333030",
										"id": 444,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "942:3:1",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_300_by_1",
											"typeString": "int_const 300"
										},
										"value": "300"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 448,
									"name": "token1FeePercent",
									"nodeType": "VariableDeclaration",
									"scope": 2502,
									"src": "1025:36:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint16",
										"typeString": "uint16"
									},
									"typeName": {
										"id": 446,
										"name": "uint16",
										"nodeType": "ElementaryTypeName",
										"src": "1025:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint16",
											"typeString": "uint16"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "333030",
										"id": 447,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1058:3:1",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_300_by_1",
											"typeString": "int_const 300"
										},
										"value": "300"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 450,
									"name": "precisionMultiplier0",
									"nodeType": "VariableDeclaration",
									"scope": 2502,
									"src": "1143:32:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 449,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "1143:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 452,
									"name": "precisionMultiplier1",
									"nodeType": "VariableDeclaration",
									"scope": 2502,
									"src": "1180:32:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 451,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "1180:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 454,
									"name": "kLast",
									"nodeType": "VariableDeclaration",
									"scope": 2502,
									"src": "1219:17:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 453,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "1219:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 456,
									"name": "stableSwap",
									"nodeType": "VariableDeclaration",
									"scope": 2502,
									"src": "1323:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 455,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "1323:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 458,
									"name": "pairTypeImmutable",
									"nodeType": "VariableDeclaration",
									"scope": 2502,
									"src": "1397:29:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 457,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "1397:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 461,
									"name": "unlocked",
									"nodeType": "VariableDeclaration",
									"scope": 2502,
									"src": "1496:25:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 459,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "1496:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "31",
										"id": 460,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1520:1:1",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 479,
										"nodeType": "Block",
										"src": "1542:96:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 466,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 464,
																"name": "unlocked",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 461,
																"src": "1557:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "31",
																"id": 465,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1569:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "1557:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "31306b3a204c4f434b4544",
															"id": 467,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1572:13:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f5e242cf4d9bc19e24c21bc342ced1e4474c114c54f159bf6f4c780ae113e83b",
																"typeString": "literal_string \"10k: LOCKED\""
															},
															"value": "10k: LOCKED"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f5e242cf4d9bc19e24c21bc342ced1e4474c114c54f159bf6f4c780ae113e83b",
																"typeString": "literal_string \"10k: LOCKED\""
															}
														],
														"id": 463,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															3237,
															3238
														],
														"referencedDeclaration": 3238,
														"src": "1549:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 468,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1549:37:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 469,
												"nodeType": "ExpressionStatement",
												"src": "1549:37:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 472,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 470,
														"name": "unlocked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 461,
														"src": "1593:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 471,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1604:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1593:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 473,
												"nodeType": "ExpressionStatement",
												"src": "1593:12:1"
											},
											{
												"id": 474,
												"nodeType": "PlaceholderStatement",
												"src": "1612:1:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 475,
														"name": "unlocked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 461,
														"src": "1620:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "31",
														"id": 476,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1631:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "1620:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 478,
												"nodeType": "ExpressionStatement",
												"src": "1620:12:1"
											}
										]
									},
									"documentation": null,
									"id": 480,
									"name": "lock",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 462,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1539:2:1"
									},
									"src": "1526:112:1",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 507,
										"nodeType": "Block",
										"src": "1778:146:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 493,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 491,
														"name": "_reserve0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 483,
														"src": "1785:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 492,
														"name": "reserve0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 440,
														"src": "1797:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														}
													},
													"src": "1785:20:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"id": 494,
												"nodeType": "ExpressionStatement",
												"src": "1785:20:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 495,
														"name": "_reserve1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 485,
														"src": "1812:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 496,
														"name": "reserve1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 442,
														"src": "1824:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														}
													},
													"src": "1812:20:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"id": 498,
												"nodeType": "ExpressionStatement",
												"src": "1812:20:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 501,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 499,
														"name": "_token0FeePercent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 487,
														"src": "1839:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 500,
														"name": "token0FeePercent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 445,
														"src": "1859:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"src": "1839:36:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"id": 502,
												"nodeType": "ExpressionStatement",
												"src": "1839:36:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 505,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 503,
														"name": "_token1FeePercent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 489,
														"src": "1882:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 504,
														"name": "token1FeePercent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 448,
														"src": "1902:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"src": "1882:36:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"id": 506,
												"nodeType": "ExpressionStatement",
												"src": "1882:36:1"
											}
										]
									},
									"documentation": null,
									"id": 508,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getReserves",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 481,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1664:2:1"
									},
									"returnParameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 483,
												"name": "_reserve0",
												"nodeType": "VariableDeclaration",
												"scope": 508,
												"src": "1688:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 482,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "1688:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 485,
												"name": "_reserve1",
												"nodeType": "VariableDeclaration",
												"scope": 508,
												"src": "1707:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 484,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "1707:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 487,
												"name": "_token0FeePercent",
												"nodeType": "VariableDeclaration",
												"scope": 508,
												"src": "1726:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 486,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "1726:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 489,
												"name": "_token1FeePercent",
												"nodeType": "VariableDeclaration",
												"scope": 508,
												"src": "1752:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 488,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "1752:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1687:90:1"
									},
									"scope": 2502,
									"src": "1644:280:1",
									"stateMutability": "view",
									"superFunction": 2907,
									"visibility": "public"
								},
								{
									"body": {
										"id": 549,
										"nodeType": "Block",
										"src": "2000:201:1",
										"statements": [
											{
												"assignments": [
													518,
													520
												],
												"declarations": [
													{
														"constant": false,
														"id": 518,
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 549,
														"src": "2008:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 517,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2008:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 520,
														"name": "data",
														"nodeType": "VariableDeclaration",
														"scope": 549,
														"src": "2022:17:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 519,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2022:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 530,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 525,
																	"name": "SELECTOR",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 424,
																	"src": "2077:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 526,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 512,
																	"src": "2087:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 527,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 514,
																	"src": "2091:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 523,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3221,
																	"src": "2054:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 524,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "2054:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 528,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2054:43:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 521,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 510,
															"src": "2043:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 522,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "call",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "2043:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 529,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2043:55:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2007:91:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 545,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 532,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 518,
																"src": "2113:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 543,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 536,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"id": 533,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 520,
																					"src": "2125:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 534,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": null,
																				"src": "2125:11:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"argumentTypes": null,
																				"hexValue": "30",
																				"id": 535,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2140:1:1",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "2125:16:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 539,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 520,
																					"src": "2156:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"components": [
																						{
																							"argumentTypes": null,
																							"id": 540,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "2163:4:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_bool_$",
																								"typeString": "type(bool)"
																							},
																							"typeName": "bool"
																						}
																					],
																					"id": 541,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "2162:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					},
																					{
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 537,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3221,
																					"src": "2145:3:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 538,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberName": "decode",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": null,
																				"src": "2145:10:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 542,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2145:24:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "2125:44:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 544,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2124:46:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2113:57:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "31306b3a205452414e534645525f4641494c4544",
															"id": 546,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2172:22:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4bbaa71f0ef6fa150c316887a919914b807fa30592d98d80bf30ddeaeb262999",
																"typeString": "literal_string \"10k: TRANSFER_FAILED\""
															},
															"value": "10k: TRANSFER_FAILED"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4bbaa71f0ef6fa150c316887a919914b807fa30592d98d80bf30ddeaeb262999",
																"typeString": "literal_string \"10k: TRANSFER_FAILED\""
															}
														],
														"id": 531,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															3237,
															3238
														],
														"referencedDeclaration": 3238,
														"src": "2105:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 547,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2105:90:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 548,
												"nodeType": "ExpressionStatement",
												"src": "2105:90:1"
											}
										]
									},
									"documentation": null,
									"id": 550,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 515,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 510,
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 550,
												"src": "1953:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 509,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1953:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 512,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 550,
												"src": "1968:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 511,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1968:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 514,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 550,
												"src": "1980:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 513,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1980:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1952:39:1"
									},
									"returnParameters": {
										"id": 516,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2000:0:1"
									},
									"scope": 2502,
									"src": "1930:271:1",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 556,
									"name": "DrainWrongToken",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 552,
												"indexed": true,
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 556,
												"src": "2229:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 551,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2229:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 554,
												"indexed": false,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 556,
												"src": "2252:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 553,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2252:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2228:35:1"
									},
									"src": "2207:57:1"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 562,
									"name": "FeePercentUpdated",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 561,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 558,
												"indexed": false,
												"name": "token0FeePercent",
												"nodeType": "VariableDeclaration",
												"scope": 562,
												"src": "2292:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 557,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "2292:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 560,
												"indexed": false,
												"name": "token1FeePercent",
												"nodeType": "VariableDeclaration",
												"scope": 562,
												"src": "2317:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 559,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "2317:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2291:50:1"
									},
									"src": "2268:74:1"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 568,
									"name": "SetStableSwap",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 564,
												"indexed": false,
												"name": "prevStableSwap",
												"nodeType": "VariableDeclaration",
												"scope": 568,
												"src": "2366:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 563,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2366:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 566,
												"indexed": false,
												"name": "stableSwap",
												"nodeType": "VariableDeclaration",
												"scope": 568,
												"src": "2387:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 565,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2387:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2365:38:1"
									},
									"src": "2346:58:1"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 570,
									"name": "SetPairTypeImmutable",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 569,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2434:2:1"
									},
									"src": "2408:29:1"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 578,
									"name": "Mint",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 577,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 572,
												"indexed": true,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "2452:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 571,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2452:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 574,
												"indexed": false,
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "2476:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 573,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2476:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 576,
												"indexed": false,
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "2490:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 575,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2490:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2451:52:1"
									},
									"src": "2441:63:1"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 588,
									"name": "Burn",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 587,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 580,
												"indexed": true,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 588,
												"src": "2519:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 579,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2519:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 582,
												"indexed": false,
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 588,
												"src": "2543:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 581,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2543:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 584,
												"indexed": false,
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 588,
												"src": "2557:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 583,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2557:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 586,
												"indexed": true,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 588,
												"src": "2571:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 585,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2571:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2518:72:1"
									},
									"src": "2508:83:1"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 602,
									"name": "Swap",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 601,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 590,
												"indexed": true,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "2612:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 589,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2612:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 592,
												"indexed": false,
												"name": "amount0In",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "2641:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 591,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2641:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 594,
												"indexed": false,
												"name": "amount1In",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "2662:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 593,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2662:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 596,
												"indexed": false,
												"name": "amount0Out",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "2683:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 595,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2683:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 598,
												"indexed": false,
												"name": "amount1Out",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "2705:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 597,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2705:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 600,
												"indexed": true,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "2727:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 599,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2727:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2605:145:1"
									},
									"src": "2595:156:1"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 608,
									"name": "Sync",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 607,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 604,
												"indexed": false,
												"name": "reserve0",
												"nodeType": "VariableDeclaration",
												"scope": 608,
												"src": "2766:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 603,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "2766:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 606,
												"indexed": false,
												"name": "reserve1",
												"nodeType": "VariableDeclaration",
												"scope": 608,
												"src": "2784:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 605,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "2784:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2765:36:1"
									},
									"src": "2755:47:1"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 610,
									"name": "Skim",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 609,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2816:2:1"
									},
									"src": "2806:13:1"
								},
								{
									"body": {
										"id": 618,
										"nodeType": "Block",
										"src": "2846:33:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 616,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 613,
														"name": "factory",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 426,
														"src": "2853:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 614,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3234,
															"src": "2863:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 615,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "2863:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "2853:20:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 617,
												"nodeType": "ExpressionStatement",
												"src": "2853:20:1"
											}
										]
									},
									"documentation": null,
									"id": 619,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2836:2:1"
									},
									"returnParameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2846:0:1"
									},
									"scope": 2502,
									"src": "2825:54:1",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 673,
										"nodeType": "Block",
										"src": "3003:313:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 633,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 630,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 627,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3234,
																		"src": "3018:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 628,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "3018:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 629,
																	"name": "factory",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 426,
																	"src": "3032:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "3018:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"argumentTypes": null,
																"id": 632,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "3043:12:1",
																"subExpression": {
																	"argumentTypes": null,
																	"id": 631,
																	"name": "initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 432,
																	"src": "3044:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3018:37:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "31306b3a20464f5242494444454e",
															"id": 634,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3057:16:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_bbe09da9c2e643a96414f596dd9a453b153bf679a2359ae10247efc5f0e1106e",
																"typeString": "literal_string \"10k: FORBIDDEN\""
															},
															"value": "10k: FORBIDDEN"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_bbe09da9c2e643a96414f596dd9a453b153bf679a2359ae10247efc5f0e1106e",
																"typeString": "literal_string \"10k: FORBIDDEN\""
															}
														],
														"id": 626,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															3237,
															3238
														],
														"referencedDeclaration": 3238,
														"src": "3010:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 635,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3010:64:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 636,
												"nodeType": "ExpressionStatement",
												"src": "3010:64:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 639,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 637,
														"name": "token0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 428,
														"src": "3106:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 638,
														"name": "_token0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 621,
														"src": "3115:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3106:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 640,
												"nodeType": "ExpressionStatement",
												"src": "3106:16:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 643,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 641,
														"name": "token1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 430,
														"src": "3129:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 642,
														"name": "_token1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 623,
														"src": "3138:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3129:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 644,
												"nodeType": "ExpressionStatement",
												"src": "3129:16:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 655,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 645,
														"name": "precisionMultiplier0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 450,
														"src": "3154:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 654,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"hexValue": "3130",
															"id": 646,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3177:2:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10_by_1",
																"typeString": "int_const 10"
															},
															"value": "10"
														},
														"nodeType": "BinaryOperation",
														"operator": "**",
														"rightExpression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 649,
																					"name": "_token0",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 621,
																					"src": "3195:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 648,
																				"name": "IERC20",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3068,
																				"src": "3188:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_IERC20_$3068_$",
																					"typeString": "type(contract IERC20)"
																				}
																			},
																			"id": 650,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3188:15:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$3068",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 651,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "decimals",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3017,
																		"src": "3188:24:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
																			"typeString": "function () view external returns (uint8)"
																		}
																	},
																	"id": 652,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3188:26:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																],
																"id": 647,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3183:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": "uint"
															},
															"id": 653,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3183:32:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3177:38:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3154:61:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 656,
												"nodeType": "ExpressionStatement",
												"src": "3154:61:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 667,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 657,
														"name": "precisionMultiplier1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 452,
														"src": "3222:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 666,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"hexValue": "3130",
															"id": 658,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3245:2:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10_by_1",
																"typeString": "int_const 10"
															},
															"value": "10"
														},
														"nodeType": "BinaryOperation",
														"operator": "**",
														"rightExpression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 661,
																					"name": "_token1",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 623,
																					"src": "3263:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 660,
																				"name": "IERC20",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3068,
																				"src": "3256:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_IERC20_$3068_$",
																					"typeString": "type(contract IERC20)"
																				}
																			},
																			"id": 662,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3256:15:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$3068",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 663,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "decimals",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3017,
																		"src": "3256:24:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
																			"typeString": "function () view external returns (uint8)"
																		}
																	},
																	"id": 664,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3256:26:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																],
																"id": 659,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3251:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": "uint"
															},
															"id": 665,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3251:32:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3245:38:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3222:61:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 668,
												"nodeType": "ExpressionStatement",
												"src": "3222:61:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 671,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 669,
														"name": "initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 432,
														"src": "3292:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "74727565",
														"id": 670,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3306:4:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "3292:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 672,
												"nodeType": "ExpressionStatement",
												"src": "3292:18:1"
											}
										]
									},
									"documentation": null,
									"id": 674,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "initialize",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 624,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 621,
												"name": "_token0",
												"nodeType": "VariableDeclaration",
												"scope": 674,
												"src": "2960:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 620,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2960:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 623,
												"name": "_token1",
												"nodeType": "VariableDeclaration",
												"scope": 674,
												"src": "2977:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 622,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2977:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2959:34:1"
									},
									"returnParameters": {
										"id": 625,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3003:0:1"
									},
									"scope": 2502,
									"src": "2940:376:1",
									"stateMutability": "nonpayable",
									"superFunction": 2983,
									"visibility": "external"
								},
								{
									"body": {
										"id": 730,
										"nodeType": "Block",
										"src": "3529:533:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 691,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 684,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3234,
																	"src": "3544:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 685,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "3544:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 687,
																				"name": "factory",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 426,
																				"src": "3576:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 686,
																			"name": "I10kStableFactory",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2721,
																			"src": "3558:17:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_I10kStableFactory_$2721_$",
																				"typeString": "type(contract I10kStableFactory)"
																			}
																		},
																		"id": 688,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3558:26:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_I10kStableFactory_$2721",
																			"typeString": "contract I10kStableFactory"
																		}
																	},
																	"id": 689,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "feePercentOwner",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2656,
																	"src": "3558:42:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																		"typeString": "function () view external returns (address)"
																	}
																},
																"id": 690,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3558:44:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3544:58:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "31306b3a206f6e6c7920666163746f7279277320666565416d6f756e744f776e6572",
															"id": 692,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3604:36:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_34ffd81d2bf0b96acae486668fc9d6475667930df09e9039ee8381f9cc8ef0b1",
																"typeString": "literal_string \"10k: only factory's feeAmountOwner\""
															},
															"value": "10k: only factory's feeAmountOwner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_34ffd81d2bf0b96acae486668fc9d6475667930df09e9039ee8381f9cc8ef0b1",
																"typeString": "literal_string \"10k: only factory's feeAmountOwner\""
															}
														],
														"id": 683,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															3237,
															3238
														],
														"referencedDeclaration": 3238,
														"src": "3536:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 693,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3536:105:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 694,
												"nodeType": "ExpressionStatement",
												"src": "3536:105:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 702,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 698,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 696,
																	"name": "newToken0FeePercent",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 676,
																	"src": "3656:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 697,
																	"name": "MAX_FEE_PERCENT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 438,
																	"src": "3679:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3656:38:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 701,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 699,
																	"name": "newToken1FeePercent",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 678,
																	"src": "3698:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 700,
																	"name": "MAX_FEE_PERCENT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 438,
																	"src": "3721:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3698:38:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3656:80:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "31306b3a2066656550657263656e74206d7573746e27742065786365656420746865206d6178696d756d",
															"id": 703,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3738:44:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_45baaf65170b7d96ab118754b668eead3e0f148d8a45a6c0a60aec311cfcee2f",
																"typeString": "literal_string \"10k: feePercent mustn't exceed the maximum\""
															},
															"value": "10k: feePercent mustn't exceed the maximum"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_45baaf65170b7d96ab118754b668eead3e0f148d8a45a6c0a60aec311cfcee2f",
																"typeString": "literal_string \"10k: feePercent mustn't exceed the maximum\""
															}
														],
														"id": 695,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															3237,
															3238
														],
														"referencedDeclaration": 3238,
														"src": "3648:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 704,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3648:135:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 705,
												"nodeType": "ExpressionStatement",
												"src": "3648:135:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 713,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																},
																"id": 709,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 707,
																	"name": "newToken0FeePercent",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 676,
																	"src": "3798:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 708,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3820:1:1",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "3798:23:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																},
																"id": 712,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 710,
																	"name": "newToken1FeePercent",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 678,
																	"src": "3825:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 711,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3847:1:1",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "3825:23:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3798:50:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "31306b3a2066656550657263656e74206d7573746e27742065786365656420746865206d696e696d756d",
															"id": 714,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3850:44:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_640c1a2bcb4b0e819d290be36ffb74fff17dd4659141ae0e8778f67d9638ba4c",
																"typeString": "literal_string \"10k: feePercent mustn't exceed the minimum\""
															},
															"value": "10k: feePercent mustn't exceed the minimum"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_640c1a2bcb4b0e819d290be36ffb74fff17dd4659141ae0e8778f67d9638ba4c",
																"typeString": "literal_string \"10k: feePercent mustn't exceed the minimum\""
															}
														],
														"id": 706,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															3237,
															3238
														],
														"referencedDeclaration": 3238,
														"src": "3790:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 715,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3790:105:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 716,
												"nodeType": "ExpressionStatement",
												"src": "3790:105:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 719,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 717,
														"name": "token0FeePercent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 445,
														"src": "3902:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 718,
														"name": "newToken0FeePercent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 676,
														"src": "3921:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"src": "3902:38:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"id": 720,
												"nodeType": "ExpressionStatement",
												"src": "3902:38:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 723,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 721,
														"name": "token1FeePercent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 448,
														"src": "3947:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 722,
														"name": "newToken1FeePercent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 678,
														"src": "3966:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"src": "3947:38:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"id": 724,
												"nodeType": "ExpressionStatement",
												"src": "3947:38:1"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 726,
															"name": "newToken0FeePercent",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 676,
															"src": "4015:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														{
															"argumentTypes": null,
															"id": 727,
															"name": "newToken1FeePercent",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 678,
															"src": "4036:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															},
															{
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														],
														"id": 725,
														"name": "FeePercentUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 562,
														"src": "3997:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint16_$_t_uint16_$returns$__$",
															"typeString": "function (uint16,uint16)"
														}
													},
													"id": 728,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3997:59:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 729,
												"nodeType": "EmitStatement",
												"src": "3992:64:1"
											}
										]
									},
									"documentation": "@dev Updates the swap fees percent\n\n  * Can only be called by the factory's feeAmountOwner",
									"id": 731,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 681,
											"modifierName": {
												"argumentTypes": null,
												"id": 680,
												"name": "lock",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 480,
												"src": "3524:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "3524:4:1"
										}
									],
									"name": "setFeePercent",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 679,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 676,
												"name": "newToken0FeePercent",
												"nodeType": "VariableDeclaration",
												"scope": 731,
												"src": "3459:26:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 675,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "3459:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 678,
												"name": "newToken1FeePercent",
												"nodeType": "VariableDeclaration",
												"scope": 731,
												"src": "3487:26:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 677,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "3487:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3458:56:1"
									},
									"returnParameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3529:0:1"
									},
									"scope": 2502,
									"src": "3436:626:1",
									"stateMutability": "nonpayable",
									"superFunction": 2928,
									"visibility": "external"
								},
								{
									"body": {
										"id": 811,
										"nodeType": "Block",
										"src": "4170:512:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 750,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 743,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3234,
																	"src": "4185:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 744,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "4185:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 746,
																				"name": "factory",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 426,
																				"src": "4217:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 745,
																			"name": "I10kStableFactory",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2721,
																			"src": "4199:17:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_I10kStableFactory_$2721_$",
																				"typeString": "type(contract I10kStableFactory)"
																			}
																		},
																		"id": 747,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4199:26:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_I10kStableFactory_$2721",
																			"typeString": "contract I10kStableFactory"
																		}
																	},
																	"id": 748,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "setStableOwner",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2661,
																	"src": "4199:41:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																		"typeString": "function () view external returns (address)"
																	}
																},
																"id": 749,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4199:43:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4185:57:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "31306b3a206f6e6c7920666163746f7279277320736574537461626c654f776e6572",
															"id": 751,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4244:36:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0e37380231c63dd542c3187103d43bf3dc8feec0b6338e70e8209c96cba47625",
																"typeString": "literal_string \"10k: only factory's setStableOwner\""
															},
															"value": "10k: only factory's setStableOwner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0e37380231c63dd542c3187103d43bf3dc8feec0b6338e70e8209c96cba47625",
																"typeString": "literal_string \"10k: only factory's setStableOwner\""
															}
														],
														"id": 742,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															3237,
															3238
														],
														"referencedDeclaration": 3238,
														"src": "4177:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 752,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4177:104:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 753,
												"nodeType": "ExpressionStatement",
												"src": "4177:104:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 756,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "4296:18:1",
															"subExpression": {
																"argumentTypes": null,
																"id": 755,
																"name": "pairTypeImmutable",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 458,
																"src": "4297:17:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "31306b3a20696d6d757461626c65",
															"id": 757,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4316:16:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_eeea0e08f81e7e885188fc35e56e5547092b51cdcbf0774af111497c9ed5b2b6",
																"typeString": "literal_string \"10k: immutable\""
															},
															"value": "10k: immutable"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_eeea0e08f81e7e885188fc35e56e5547092b51cdcbf0774af111497c9ed5b2b6",
																"typeString": "literal_string \"10k: immutable\""
															}
														],
														"id": 754,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															3237,
															3238
														],
														"referencedDeclaration": 3238,
														"src": "4288:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 758,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4288:45:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 759,
												"nodeType": "ExpressionStatement",
												"src": "4288:45:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 763,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 761,
																"name": "stable",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 733,
																"src": "4350:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 762,
																"name": "stableSwap",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 456,
																"src": "4360:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "4350:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "31306b3a206e6f20757064617465",
															"id": 764,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4372:16:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2f8e9359c9bd428485af1238c5f1b9c5cbc4388a12ceec6cee548804906a93ce",
																"typeString": "literal_string \"10k: no update\""
															},
															"value": "10k: no update"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2f8e9359c9bd428485af1238c5f1b9c5cbc4388a12ceec6cee548804906a93ce",
																"typeString": "literal_string \"10k: no update\""
															}
														],
														"id": 760,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															3237,
															3238
														],
														"referencedDeclaration": 3238,
														"src": "4342:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4342:47:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 766,
												"nodeType": "ExpressionStatement",
												"src": "4342:47:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 774,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint112",
																	"typeString": "uint112"
																},
																"id": 770,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 768,
																	"name": "expectedReserve0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 735,
																	"src": "4404:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 769,
																	"name": "reserve0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 440,
																	"src": "4424:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																},
																"src": "4404:28:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint112",
																	"typeString": "uint112"
																},
																"id": 773,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 771,
																	"name": "expectedReserve1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 737,
																	"src": "4436:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 772,
																	"name": "reserve1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 442,
																	"src": "4456:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																},
																"src": "4436:28:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "4404:60:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "31306b3a206661696c6564",
															"id": 775,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4466:13:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b52df0352f11c73b77026586b9518b42cbcb95ed9cdf8a012a7f3ea2acfcc3fa",
																"typeString": "literal_string \"10k: failed\""
															},
															"value": "10k: failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b52df0352f11c73b77026586b9518b42cbcb95ed9cdf8a012a7f3ea2acfcc3fa",
																"typeString": "literal_string \"10k: failed\""
															}
														],
														"id": 767,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															3237,
															3238
														],
														"referencedDeclaration": 3238,
														"src": "4396:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 776,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4396:84:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 777,
												"nodeType": "ExpressionStatement",
												"src": "4396:84:1"
											},
											{
												"assignments": [
													779
												],
												"declarations": [
													{
														"constant": false,
														"id": 779,
														"name": "feeOn",
														"nodeType": "VariableDeclaration",
														"scope": 811,
														"src": "4489:10:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 778,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4489:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 784,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 781,
															"name": "reserve0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 440,
															"src": "4511:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														},
														{
															"argumentTypes": null,
															"id": 782,
															"name": "reserve1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 442,
															"src": "4521:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															},
															{
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														],
														"id": 780,
														"name": "_mintFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1022,
														"src": "4502:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint112_$_t_uint112_$returns$_t_bool_$",
															"typeString": "function (uint112,uint112) returns (bool)"
														}
													},
													"id": 783,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4502:28:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4489:41:1"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 786,
															"name": "stableSwap",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 456,
															"src": "4558:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 787,
															"name": "stable",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 733,
															"src": "4570:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 785,
														"name": "SetStableSwap",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 568,
														"src": "4544:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bool_$_t_bool_$returns$__$",
															"typeString": "function (bool,bool)"
														}
													},
													"id": 788,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4544:33:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 789,
												"nodeType": "EmitStatement",
												"src": "4539:38:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 792,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 790,
														"name": "stableSwap",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 456,
														"src": "4584:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 791,
														"name": "stable",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 733,
														"src": "4597:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4584:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 793,
												"nodeType": "ExpressionStatement",
												"src": "4584:19:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 809,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 794,
														"name": "kLast",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 454,
														"src": "4610:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"condition": {
															"argumentTypes": null,
															"components": [
																{
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 797,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 795,
																		"name": "stable",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 733,
																		"src": "4619:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"argumentTypes": null,
																		"id": 796,
																		"name": "feeOn",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 779,
																		"src": "4629:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "4619:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"id": 798,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "4618:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseExpression": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 807,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4675:1:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"id": 808,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "Conditional",
														"src": "4618:58:1",
														"trueExpression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 801,
																			"name": "reserve0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 440,
																			"src": "4646:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint112",
																				"typeString": "uint112"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint112",
																				"typeString": "uint112"
																			}
																		],
																		"id": 800,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4641:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": "uint"
																	},
																	"id": 802,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4641:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 804,
																			"name": "reserve1",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 442,
																			"src": "4662:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint112",
																				"typeString": "uint112"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint112",
																				"typeString": "uint112"
																			}
																		],
																		"id": 803,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4657:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": "uint"
																	},
																	"id": 805,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4657:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 799,
																"name": "_k",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1992,
																"src": "4638:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) view returns (uint256)"
																}
															},
															"id": 806,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4638:34:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4610:66:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 810,
												"nodeType": "ExpressionStatement",
												"src": "4610:66:1"
											}
										]
									},
									"documentation": null,
									"id": 812,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 740,
											"modifierName": {
												"argumentTypes": null,
												"id": 739,
												"name": "lock",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 480,
												"src": "4165:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "4165:4:1"
										}
									],
									"name": "setStableSwap",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 738,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 733,
												"name": "stable",
												"nodeType": "VariableDeclaration",
												"scope": 812,
												"src": "4091:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 732,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4091:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 735,
												"name": "expectedReserve0",
												"nodeType": "VariableDeclaration",
												"scope": 812,
												"src": "4104:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 734,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "4104:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 737,
												"name": "expectedReserve1",
												"nodeType": "VariableDeclaration",
												"scope": 812,
												"src": "4130:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 736,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "4130:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4090:65:1"
									},
									"returnParameters": {
										"id": 741,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4170:0:1"
									},
									"scope": 2502,
									"src": "4068:614:1",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": {
										"id": 842,
										"nodeType": "Block",
										"src": "4734:226:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 825,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 818,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3234,
																	"src": "4749:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 819,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "4749:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 821,
																				"name": "factory",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 426,
																				"src": "4781:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 820,
																			"name": "I10kStableFactory",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2721,
																			"src": "4763:17:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_I10kStableFactory_$2721_$",
																				"typeString": "type(contract I10kStableFactory)"
																			}
																		},
																		"id": 822,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4763:26:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_I10kStableFactory_$2721",
																			"typeString": "contract I10kStableFactory"
																		}
																	},
																	"id": 823,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "owner",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2651,
																	"src": "4763:32:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																		"typeString": "function () view external returns (address)"
																	}
																},
																"id": 824,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4763:34:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4749:48:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "31306b3a206f6e6c7920666163746f72792773206f776e6572",
															"id": 826,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4799:27:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0ba1c9402ddfdf8870dbda1742f5daaa5fef8b1fd9a14a68800d6b959e8e587c",
																"typeString": "literal_string \"10k: only factory's owner\""
															},
															"value": "10k: only factory's owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0ba1c9402ddfdf8870dbda1742f5daaa5fef8b1fd9a14a68800d6b959e8e587c",
																"typeString": "literal_string \"10k: only factory's owner\""
															}
														],
														"id": 817,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															3237,
															3238
														],
														"referencedDeclaration": 3238,
														"src": "4741:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 827,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4741:86:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 828,
												"nodeType": "ExpressionStatement",
												"src": "4741:86:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 831,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "4842:18:1",
															"subExpression": {
																"argumentTypes": null,
																"id": 830,
																"name": "pairTypeImmutable",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 458,
																"src": "4843:17:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "31306b3a20616c726561647920696d6d757461626c65",
															"id": 832,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4862:24:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_861cee92725699b7e51d77a39624f80e0d67f9159bb99571e0becce780316981",
																"typeString": "literal_string \"10k: already immutable\""
															},
															"value": "10k: already immutable"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_861cee92725699b7e51d77a39624f80e0d67f9159bb99571e0becce780316981",
																"typeString": "literal_string \"10k: already immutable\""
															}
														],
														"id": 829,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															3237,
															3238
														],
														"referencedDeclaration": 3238,
														"src": "4834:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 833,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4834:53:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 834,
												"nodeType": "ExpressionStatement",
												"src": "4834:53:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 837,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 835,
														"name": "pairTypeImmutable",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "4896:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "74727565",
														"id": 836,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4916:4:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "4896:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 838,
												"nodeType": "ExpressionStatement",
												"src": "4896:24:1"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 839,
														"name": "SetPairTypeImmutable",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 570,
														"src": "4932:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 840,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4932:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 841,
												"nodeType": "EmitStatement",
												"src": "4927:27:1"
											}
										]
									},
									"documentation": null,
									"id": 843,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 815,
											"modifierName": {
												"argumentTypes": null,
												"id": 814,
												"name": "lock",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 480,
												"src": "4729:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "4729:4:1"
										}
									],
									"name": "setPairTypeImmutable",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 813,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4717:2:1"
									},
									"returnParameters": {
										"id": 816,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4734:0:1"
									},
									"scope": 2502,
									"src": "4688:272:1",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": {
										"id": 888,
										"nodeType": "Block",
										"src": "5043:217:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 863,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 856,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 851,
																	"name": "balance0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 845,
																	"src": "5058:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 854,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "-",
																			"prefix": true,
																			"src": "5078:3:1",
																			"subExpression": {
																				"argumentTypes": null,
																				"hexValue": "31",
																				"id": 853,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5080:1:1",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_minus_1_by_1",
																				"typeString": "int_const -1"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_minus_1_by_1",
																				"typeString": "int_const -1"
																			}
																		],
																		"id": 852,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5070:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint112_$",
																			"typeString": "type(uint112)"
																		},
																		"typeName": "uint112"
																	},
																	"id": 855,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5070:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																},
																"src": "5058:24:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 862,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 857,
																	"name": "balance1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 847,
																	"src": "5086:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 860,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "-",
																			"prefix": true,
																			"src": "5106:3:1",
																			"subExpression": {
																				"argumentTypes": null,
																				"hexValue": "31",
																				"id": 859,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5108:1:1",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_minus_1_by_1",
																				"typeString": "int_const -1"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_minus_1_by_1",
																				"typeString": "int_const -1"
																			}
																		],
																		"id": 858,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5098:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint112_$",
																			"typeString": "type(uint112)"
																		},
																		"typeName": "uint112"
																	},
																	"id": 861,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5098:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																},
																"src": "5086:24:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "5058:52:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "31306b3a204f564552464c4f57",
															"id": 864,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5112:15:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_54a2aa6ddc6f0bafd0e60621045532407db1c1ee97f74ce215d1230e5ea0ffba",
																"typeString": "literal_string \"10k: OVERFLOW\""
															},
															"value": "10k: OVERFLOW"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_54a2aa6ddc6f0bafd0e60621045532407db1c1ee97f74ce215d1230e5ea0ffba",
																"typeString": "literal_string \"10k: OVERFLOW\""
															}
														],
														"id": 850,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															3237,
															3238
														],
														"referencedDeclaration": 3238,
														"src": "5050:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 865,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5050:78:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 866,
												"nodeType": "ExpressionStatement",
												"src": "5050:78:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 871,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 867,
														"name": "reserve0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 440,
														"src": "5137:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 869,
																"name": "balance0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 845,
																"src": "5156:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 868,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5148:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint112_$",
																"typeString": "type(uint112)"
															},
															"typeName": "uint112"
														},
														"id": 870,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5148:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														}
													},
													"src": "5137:28:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"id": 872,
												"nodeType": "ExpressionStatement",
												"src": "5137:28:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 877,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 873,
														"name": "reserve1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 442,
														"src": "5172:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 875,
																"name": "balance1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 847,
																"src": "5191:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 874,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5183:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint112_$",
																"typeString": "type(uint112)"
															},
															"typeName": "uint112"
														},
														"id": 876,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5183:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														}
													},
													"src": "5172:28:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"id": 878,
												"nodeType": "ExpressionStatement",
												"src": "5172:28:1"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 881,
																	"name": "balance0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 845,
																	"src": "5225:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 880,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5217:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint112_$",
																	"typeString": "type(uint112)"
																},
																"typeName": "uint112"
															},
															"id": 882,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5217:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 884,
																	"name": "balance1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 847,
																	"src": "5244:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 883,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5236:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint112_$",
																	"typeString": "type(uint112)"
																},
																"typeName": "uint112"
															},
															"id": 885,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5236:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															},
															{
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														],
														"id": 879,
														"name": "Sync",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															608
														],
														"referencedDeclaration": 608,
														"src": "5212:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint112_$_t_uint112_$returns$__$",
															"typeString": "function (uint112,uint112)"
														}
													},
													"id": 886,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5212:42:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 887,
												"nodeType": "EmitStatement",
												"src": "5207:47:1"
											}
										]
									},
									"documentation": null,
									"id": 889,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 848,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 845,
												"name": "balance0",
												"nodeType": "VariableDeclaration",
												"scope": 889,
												"src": "5005:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 844,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5005:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 847,
												"name": "balance1",
												"nodeType": "VariableDeclaration",
												"scope": 889,
												"src": "5020:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 846,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5020:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5004:30:1"
									},
									"returnParameters": {
										"id": 849,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5043:0:1"
									},
									"scope": 2502,
									"src": "4988:272:1",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1021,
										"nodeType": "Block",
										"src": "5484:798:1",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"id": 898,
													"name": "stableSwap",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 456,
													"src": "5494:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 901,
												"nodeType": "IfStatement",
												"src": "5491:27:1",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"hexValue": "66616c7365",
														"id": 899,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5513:5:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"functionReturnParameters": 897,
													"id": 900,
													"nodeType": "Return",
													"src": "5506:12:1"
												}
											},
											{
												"assignments": [
													903,
													905
												],
												"declarations": [
													{
														"constant": false,
														"id": 903,
														"name": "ownerFeeShare",
														"nodeType": "VariableDeclaration",
														"scope": 1021,
														"src": "5528:18:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 902,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "5528:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 905,
														"name": "feeTo",
														"nodeType": "VariableDeclaration",
														"scope": 1021,
														"src": "5548:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 904,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5548:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 911,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 907,
																	"name": "factory",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 426,
																	"src": "5583:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 906,
																"name": "I10kStableFactory",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2721,
																"src": "5565:17:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_I10kStableFactory_$2721_$",
																	"typeString": "type(contract I10kStableFactory)"
																}
															},
															"id": 908,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5565:26:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_I10kStableFactory_$2721",
																"typeString": "contract I10kStableFactory"
															}
														},
														"id": 909,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "feeInfo",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2720,
														"src": "5565:34:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$_t_address_$",
															"typeString": "function () view external returns (uint256,address)"
														}
													},
													"id": 910,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5565:36:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_address_$",
														"typeString": "tuple(uint256,address)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5527:74:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 918,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 912,
														"name": "feeOn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 896,
														"src": "5608:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 917,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 913,
															"name": "feeTo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 905,
															"src": "5616:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 915,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5633:1:1",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 914,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5625:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 916,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5625:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"src": "5616:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "5608:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 919,
												"nodeType": "ExpressionStatement",
												"src": "5608:27:1"
											},
											{
												"assignments": [
													921
												],
												"declarations": [
													{
														"constant": false,
														"id": 921,
														"name": "_kLast",
														"nodeType": "VariableDeclaration",
														"scope": 1021,
														"src": "5642:11:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 920,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "5642:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 923,
												"initialValue": {
													"argumentTypes": null,
													"id": 922,
													"name": "kLast",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 454,
													"src": "5656:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5642:19:1"
											},
											{
												"condition": {
													"argumentTypes": null,
													"id": 924,
													"name": "feeOn",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 896,
													"src": "5692:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1013,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 1011,
															"name": "_kLast",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 921,
															"src": "6238:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 1012,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6248:1:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "6238:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": null,
													"id": 1019,
													"nodeType": "IfStatement",
													"src": "6234:43:1",
													"trueBody": {
														"id": 1018,
														"nodeType": "Block",
														"src": "6251:26:1",
														"statements": [
															{
																"expression": {
																	"argumentTypes": null,
																	"id": 1016,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"argumentTypes": null,
																		"id": 1014,
																		"name": "kLast",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 454,
																		"src": "6260:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 1015,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6268:1:1",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6260:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1017,
																"nodeType": "ExpressionStatement",
																"src": "6260:9:1"
															}
														]
													}
												},
												"id": 1020,
												"nodeType": "IfStatement",
												"src": "5688:589:1",
												"trueBody": {
													"id": 1010,
													"nodeType": "Block",
													"src": "5699:529:1",
													"statements": [
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 927,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 925,
																	"name": "_kLast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 921,
																	"src": "5712:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 926,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5722:1:1",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "5712:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": null,
															"id": 1009,
															"nodeType": "IfStatement",
															"src": "5708:513:1",
															"trueBody": {
																"id": 1008,
																"nodeType": "Block",
																"src": "5725:496:1",
																"statements": [
																	{
																		"assignments": [
																			929
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 929,
																				"name": "rootK",
																				"nodeType": "VariableDeclaration",
																				"scope": 1008,
																				"src": "5736:10:1",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 928,
																					"name": "uint",
																					"nodeType": "ElementaryTypeName",
																					"src": "5736:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 941,
																		"initialValue": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"arguments": [
																						{
																							"argumentTypes": null,
																							"arguments": [
																								{
																									"argumentTypes": null,
																									"id": 934,
																									"name": "_reserve0",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 891,
																									"src": "5767:9:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint112",
																										"typeString": "uint112"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_uint112",
																										"typeString": "uint112"
																									}
																								],
																								"id": 933,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"nodeType": "ElementaryTypeNameExpression",
																								"src": "5762:4:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_uint256_$",
																									"typeString": "type(uint256)"
																								},
																								"typeName": "uint"
																							},
																							"id": 935,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "typeConversion",
																							"lValueRequested": false,
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "5762:15:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						{
																							"argumentTypes": null,
																							"arguments": [
																								{
																									"argumentTypes": null,
																									"id": 937,
																									"name": "_reserve1",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 893,
																									"src": "5784:9:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint112",
																										"typeString": "uint112"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_uint112",
																										"typeString": "uint112"
																									}
																								],
																								"id": 936,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"nodeType": "ElementaryTypeNameExpression",
																								"src": "5779:4:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_uint256_$",
																									"typeString": "type(uint256)"
																								},
																								"typeName": "uint"
																							},
																							"id": 938,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "typeConversion",
																							"lValueRequested": false,
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "5779:15:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"id": 932,
																						"name": "_k",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1992,
																						"src": "5759:2:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																							"typeString": "function (uint256,uint256) view returns (uint256)"
																						}
																					},
																					"id": 939,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "5759:36:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 930,
																					"name": "Math",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3144,
																					"src": "5749:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_Math_$3144_$",
																						"typeString": "type(library Math)"
																					}
																				},
																				"id": 931,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sqrt",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 3143,
																				"src": "5749:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (uint256) pure returns (uint256)"
																				}
																			},
																			"id": 940,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5749:47:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "5736:60:1"
																	},
																	{
																		"assignments": [
																			943
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 943,
																				"name": "rootKLast",
																				"nodeType": "VariableDeclaration",
																				"scope": 1008,
																				"src": "5807:14:1",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 942,
																					"name": "uint",
																					"nodeType": "ElementaryTypeName",
																					"src": "5807:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 948,
																		"initialValue": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 946,
																					"name": "_kLast",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 921,
																					"src": "5834:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 944,
																					"name": "Math",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3144,
																					"src": "5824:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_Math_$3144_$",
																						"typeString": "type(library Math)"
																					}
																				},
																				"id": 945,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sqrt",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 3143,
																				"src": "5824:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (uint256) pure returns (uint256)"
																				}
																			},
																			"id": 947,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5824:17:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "5807:34:1"
																	},
																	{
																		"condition": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 951,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 949,
																				"name": "rootK",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 929,
																				"src": "5856:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 950,
																				"name": "rootKLast",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 943,
																				"src": "5864:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "5856:17:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseBody": null,
																		"id": 1007,
																		"nodeType": "IfStatement",
																		"src": "5852:360:1",
																		"trueBody": {
																			"id": 1006,
																			"nodeType": "Block",
																			"src": "5875:337:1",
																			"statements": [
																				{
																					"assignments": [
																						953
																					],
																					"declarations": [
																						{
																							"constant": false,
																							"id": 953,
																							"name": "d",
																							"nodeType": "VariableDeclaration",
																							"scope": 1006,
																							"src": "5888:6:1",
																							"stateVariable": false,
																							"storageLocation": "default",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"typeName": {
																								"id": 952,
																								"name": "uint",
																								"nodeType": "ElementaryTypeName",
																								"src": "5888:4:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"value": null,
																							"visibility": "internal"
																						}
																					],
																					"id": 964,
																					"initialValue": {
																						"argumentTypes": null,
																						"arguments": [
																							{
																								"argumentTypes": null,
																								"hexValue": "313030",
																								"id": 962,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "5944:3:1",
																								"subdenomination": null,
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_100_by_1",
																									"typeString": "int_const 100"
																								},
																								"value": "100"
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_rational_100_by_1",
																									"typeString": "int_const 100"
																								}
																							],
																							"expression": {
																								"argumentTypes": null,
																								"components": [
																									{
																										"argumentTypes": null,
																										"commonType": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										},
																										"id": 959,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"leftExpression": {
																											"argumentTypes": null,
																											"arguments": [
																												{
																													"argumentTypes": null,
																													"hexValue": "313030",
																													"id": 956,
																													"isConstant": false,
																													"isLValue": false,
																													"isPure": true,
																													"kind": "number",
																													"lValueRequested": false,
																													"nodeType": "Literal",
																													"src": "5918:3:1",
																													"subdenomination": null,
																													"typeDescriptions": {
																														"typeIdentifier": "t_rational_100_by_1",
																														"typeString": "int_const 100"
																													},
																													"value": "100"
																												}
																											],
																											"expression": {
																												"argumentTypes": [
																													{
																														"typeIdentifier": "t_rational_100_by_1",
																														"typeString": "int_const 100"
																													}
																												],
																												"expression": {
																													"argumentTypes": null,
																													"id": 954,
																													"name": "FEE_DENOMINATOR",
																													"nodeType": "Identifier",
																													"overloadedDeclarations": [],
																													"referencedDeclaration": 435,
																													"src": "5898:15:1",
																													"typeDescriptions": {
																														"typeIdentifier": "t_uint256",
																														"typeString": "uint256"
																													}
																												},
																												"id": 955,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": false,
																												"lValueRequested": false,
																												"memberName": "mul",
																												"nodeType": "MemberAccess",
																												"referencedDeclaration": 3218,
																												"src": "5898:19:1",
																												"typeDescriptions": {
																													"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																													"typeString": "function (uint256,uint256) pure returns (uint256)"
																												}
																											},
																											"id": 957,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": false,
																											"kind": "functionCall",
																											"lValueRequested": false,
																											"names": [],
																											"nodeType": "FunctionCall",
																											"src": "5898:24:1",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"nodeType": "BinaryOperation",
																										"operator": "/",
																										"rightExpression": {
																											"argumentTypes": null,
																											"id": 958,
																											"name": "ownerFeeShare",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 903,
																											"src": "5925:13:1",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"src": "5898:40:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									}
																								],
																								"id": 960,
																								"isConstant": false,
																								"isInlineArray": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "TupleExpression",
																								"src": "5897:42:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 961,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "sub",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 3190,
																							"src": "5897:46:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																								"typeString": "function (uint256,uint256) pure returns (uint256)"
																							}
																						},
																						"id": 963,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "5897:51:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "VariableDeclarationStatement",
																					"src": "5888:60:1"
																				},
																				{
																					"assignments": [
																						966
																					],
																					"declarations": [
																						{
																							"constant": false,
																							"id": 966,
																							"name": "numerator",
																							"nodeType": "VariableDeclaration",
																							"scope": 1006,
																							"src": "5961:14:1",
																							"stateVariable": false,
																							"storageLocation": "default",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"typeName": {
																								"id": 965,
																								"name": "uint",
																								"nodeType": "ElementaryTypeName",
																								"src": "5961:4:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"value": null,
																							"visibility": "internal"
																						}
																					],
																					"id": 977,
																					"initialValue": {
																						"argumentTypes": null,
																						"arguments": [
																							{
																								"argumentTypes": null,
																								"hexValue": "313030",
																								"id": 975,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "6020:3:1",
																								"subdenomination": null,
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_100_by_1",
																									"typeString": "int_const 100"
																								},
																								"value": "100"
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_rational_100_by_1",
																									"typeString": "int_const 100"
																								}
																							],
																							"expression": {
																								"argumentTypes": null,
																								"arguments": [
																									{
																										"argumentTypes": null,
																										"arguments": [
																											{
																												"argumentTypes": null,
																												"id": 971,
																												"name": "rootKLast",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 943,
																												"src": "6004:9:1",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											}
																										],
																										"expression": {
																											"argumentTypes": [
																												{
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											],
																											"expression": {
																												"argumentTypes": null,
																												"id": 969,
																												"name": "rootK",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 929,
																												"src": "5994:5:1",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											},
																											"id": 970,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": false,
																											"lValueRequested": false,
																											"memberName": "sub",
																											"nodeType": "MemberAccess",
																											"referencedDeclaration": 3190,
																											"src": "5994:9:1",
																											"typeDescriptions": {
																												"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																												"typeString": "function (uint256,uint256) pure returns (uint256)"
																											}
																										},
																										"id": 972,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"kind": "functionCall",
																										"lValueRequested": false,
																										"names": [],
																										"nodeType": "FunctionCall",
																										"src": "5994:20:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									],
																									"expression": {
																										"argumentTypes": null,
																										"id": 967,
																										"name": "totalSupply",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 19,
																										"src": "5978:11:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"id": 968,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberName": "mul",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 3218,
																									"src": "5978:15:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																										"typeString": "function (uint256,uint256) pure returns (uint256)"
																									}
																								},
																								"id": 973,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "5978:37:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 974,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "mul",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 3218,
																							"src": "5978:41:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																								"typeString": "function (uint256,uint256) pure returns (uint256)"
																							}
																						},
																						"id": 976,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "5978:46:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "VariableDeclarationStatement",
																					"src": "5961:63:1"
																				},
																				{
																					"assignments": [
																						979
																					],
																					"declarations": [
																						{
																							"constant": false,
																							"id": 979,
																							"name": "denominator",
																							"nodeType": "VariableDeclaration",
																							"scope": 1006,
																							"src": "6037:16:1",
																							"stateVariable": false,
																							"storageLocation": "default",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"typeName": {
																								"id": 978,
																								"name": "uint",
																								"nodeType": "ElementaryTypeName",
																								"src": "6037:4:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"value": null,
																							"visibility": "internal"
																						}
																					],
																					"id": 990,
																					"initialValue": {
																						"argumentTypes": null,
																						"arguments": [
																							{
																								"argumentTypes": null,
																								"arguments": [
																									{
																										"argumentTypes": null,
																										"hexValue": "313030",
																										"id": 987,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "number",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "6087:3:1",
																										"subdenomination": null,
																										"typeDescriptions": {
																											"typeIdentifier": "t_rational_100_by_1",
																											"typeString": "int_const 100"
																										},
																										"value": "100"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_rational_100_by_1",
																											"typeString": "int_const 100"
																										}
																									],
																									"expression": {
																										"argumentTypes": null,
																										"id": 985,
																										"name": "rootKLast",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 943,
																										"src": "6073:9:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"id": 986,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberName": "mul",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 3218,
																									"src": "6073:13:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																										"typeString": "function (uint256,uint256) pure returns (uint256)"
																									}
																								},
																								"id": 988,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "6073:18:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"expression": {
																								"argumentTypes": null,
																								"arguments": [
																									{
																										"argumentTypes": null,
																										"id": 982,
																										"name": "d",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 953,
																										"src": "6066:1:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									],
																									"expression": {
																										"argumentTypes": null,
																										"id": 980,
																										"name": "rootK",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 929,
																										"src": "6056:5:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"id": 981,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberName": "mul",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 3218,
																									"src": "6056:9:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																										"typeString": "function (uint256,uint256) pure returns (uint256)"
																									}
																								},
																								"id": 983,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "6056:12:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 984,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "add",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 3168,
																							"src": "6056:16:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																								"typeString": "function (uint256,uint256) pure returns (uint256)"
																							}
																						},
																						"id": 989,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "6056:36:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "VariableDeclarationStatement",
																					"src": "6037:55:1"
																				},
																				{
																					"assignments": [
																						992
																					],
																					"declarations": [
																						{
																							"constant": false,
																							"id": 992,
																							"name": "liquidity",
																							"nodeType": "VariableDeclaration",
																							"scope": 1006,
																							"src": "6105:14:1",
																							"stateVariable": false,
																							"storageLocation": "default",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"typeName": {
																								"id": 991,
																								"name": "uint",
																								"nodeType": "ElementaryTypeName",
																								"src": "6105:4:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"value": null,
																							"visibility": "internal"
																						}
																					],
																					"id": 996,
																					"initialValue": {
																						"argumentTypes": null,
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 995,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"argumentTypes": null,
																							"id": 993,
																							"name": "numerator",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 966,
																							"src": "6122:9:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "/",
																						"rightExpression": {
																							"argumentTypes": null,
																							"id": 994,
																							"name": "denominator",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 979,
																							"src": "6134:11:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "6122:23:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "VariableDeclarationStatement",
																					"src": "6105:40:1"
																				},
																				{
																					"condition": {
																						"argumentTypes": null,
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 999,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"argumentTypes": null,
																							"id": 997,
																							"name": "liquidity",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 992,
																							"src": "6162:9:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": ">",
																						"rightExpression": {
																							"argumentTypes": null,
																							"hexValue": "30",
																							"id": 998,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "6174:1:1",
																							"subdenomination": null,
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						},
																						"src": "6162:13:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"falseBody": null,
																					"id": 1005,
																					"nodeType": "IfStatement",
																					"src": "6158:42:1",
																					"trueBody": {
																						"expression": {
																							"argumentTypes": null,
																							"arguments": [
																								{
																									"argumentTypes": null,
																									"id": 1001,
																									"name": "feeTo",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 905,
																									"src": "6183:5:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								},
																								{
																									"argumentTypes": null,
																									"id": 1002,
																									"name": "liquidity",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 992,
																									"src": "6190:9:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									},
																									{
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								],
																								"id": 1000,
																								"name": "_mint",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 121,
																								"src": "6177:5:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																									"typeString": "function (address,uint256)"
																								}
																							},
																							"id": 1003,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "functionCall",
																							"lValueRequested": false,
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "6177:23:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_tuple$__$",
																								"typeString": "tuple()"
																							}
																						},
																						"id": 1004,
																						"nodeType": "ExpressionStatement",
																						"src": "6177:23:1"
																					}
																				}
																			]
																		}
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 1022,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mintFee",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 894,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 891,
												"name": "_reserve0",
												"nodeType": "VariableDeclaration",
												"scope": 1022,
												"src": "5417:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 890,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "5417:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 893,
												"name": "_reserve1",
												"nodeType": "VariableDeclaration",
												"scope": 1022,
												"src": "5436:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 892,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "5436:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5416:38:1"
									},
									"returnParameters": {
										"id": 897,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 896,
												"name": "feeOn",
												"nodeType": "VariableDeclaration",
												"scope": 1022,
												"src": "5472:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 895,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5472:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5471:12:1"
									},
									"scope": 2502,
									"src": "5399:883:1",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1166,
										"nodeType": "Block",
										"src": "6455:1097:1",
										"statements": [
											{
												"assignments": [
													1032,
													1034,
													null,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1032,
														"name": "_reserve0",
														"nodeType": "VariableDeclaration",
														"scope": 1166,
														"src": "6463:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														},
														"typeName": {
															"id": 1031,
															"name": "uint112",
															"nodeType": "ElementaryTypeName",
															"src": "6463:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1034,
														"name": "_reserve1",
														"nodeType": "VariableDeclaration",
														"scope": 1166,
														"src": "6482:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														},
														"typeName": {
															"id": 1033,
															"name": "uint112",
															"nodeType": "ElementaryTypeName",
															"src": "6482:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													null,
													null
												],
												"id": 1037,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1035,
														"name": "getReserves",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 508,
														"src": "6505:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint112_$_t_uint112_$_t_uint16_$_t_uint16_$",
															"typeString": "function () view returns (uint112,uint112,uint16,uint16)"
														}
													},
													"id": 1036,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6505:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint112_$_t_uint112_$_t_uint16_$_t_uint16_$",
														"typeString": "tuple(uint112,uint112,uint16,uint16)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6462:56:1"
											},
											{
												"assignments": [
													1039
												],
												"declarations": [
													{
														"constant": false,
														"id": 1039,
														"name": "balance0",
														"nodeType": "VariableDeclaration",
														"scope": 1166,
														"src": "6545:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1038,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "6545:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1048,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1045,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3264,
																	"src": "6594:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_TenkStablePair_$2502",
																		"typeString": "contract TenkStablePair"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_TenkStablePair_$2502",
																		"typeString": "contract TenkStablePair"
																	}
																],
																"id": 1044,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6586:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 1046,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6586:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1041,
																	"name": "token0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 428,
																	"src": "6568:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1040,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3068,
																"src": "6561:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$3068_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1042,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6561:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$3068",
																"typeString": "contract IERC20"
															}
														},
														"id": 1043,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3029,
														"src": "6561:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1047,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6561:39:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6545:55:1"
											},
											{
												"assignments": [
													1050
												],
												"declarations": [
													{
														"constant": false,
														"id": 1050,
														"name": "balance1",
														"nodeType": "VariableDeclaration",
														"scope": 1166,
														"src": "6607:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1049,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "6607:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1059,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1056,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3264,
																	"src": "6656:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_TenkStablePair_$2502",
																		"typeString": "contract TenkStablePair"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_TenkStablePair_$2502",
																		"typeString": "contract TenkStablePair"
																	}
																],
																"id": 1055,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6648:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 1057,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6648:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1052,
																	"name": "token1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 430,
																	"src": "6630:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1051,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3068,
																"src": "6623:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$3068_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1053,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6623:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$3068",
																"typeString": "contract IERC20"
															}
														},
														"id": 1054,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3029,
														"src": "6623:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1058,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6623:39:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6607:55:1"
											},
											{
												"assignments": [
													1061
												],
												"declarations": [
													{
														"constant": false,
														"id": 1061,
														"name": "amount0",
														"nodeType": "VariableDeclaration",
														"scope": 1166,
														"src": "6669:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1060,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "6669:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1066,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1064,
															"name": "_reserve0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1032,
															"src": "6697:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 1062,
															"name": "balance0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1039,
															"src": "6684:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1063,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3190,
														"src": "6684:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1065,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6684:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6669:38:1"
											},
											{
												"assignments": [
													1068
												],
												"declarations": [
													{
														"constant": false,
														"id": 1068,
														"name": "amount1",
														"nodeType": "VariableDeclaration",
														"scope": 1166,
														"src": "6714:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1067,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "6714:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1073,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1071,
															"name": "_reserve1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1034,
															"src": "6742:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 1069,
															"name": "balance1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1050,
															"src": "6729:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1070,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3190,
														"src": "6729:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1072,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6729:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6714:38:1"
											},
											{
												"assignments": [
													1075
												],
												"declarations": [
													{
														"constant": false,
														"id": 1075,
														"name": "feeOn",
														"nodeType": "VariableDeclaration",
														"scope": 1166,
														"src": "6761:10:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1074,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6761:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1080,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1077,
															"name": "_reserve0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1032,
															"src": "6783:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														},
														{
															"argumentTypes": null,
															"id": 1078,
															"name": "_reserve1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1034,
															"src": "6794:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															},
															{
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														],
														"id": 1076,
														"name": "_mintFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1022,
														"src": "6774:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint112_$_t_uint112_$returns$_t_bool_$",
															"typeString": "function (uint112,uint112) returns (bool)"
														}
													},
													"id": 1079,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6774:30:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6761:43:1"
											},
											{
												"assignments": [
													1082
												],
												"declarations": [
													{
														"constant": false,
														"id": 1082,
														"name": "_totalSupply",
														"nodeType": "VariableDeclaration",
														"scope": 1166,
														"src": "6811:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1081,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "6811:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1084,
												"initialValue": {
													"argumentTypes": null,
													"id": 1083,
													"name": "totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 19,
													"src": "6831:11:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6811:31:1"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1087,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1085,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1082,
														"src": "6936:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1086,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6952:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6936:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1127,
													"nodeType": "Block",
													"src": "7151:115:1",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1125,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 1109,
																	"name": "liquidity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1029,
																	"src": "7160:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1117,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"id": 1114,
																						"name": "_totalSupply",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1082,
																						"src": "7193:12:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"argumentTypes": null,
																						"id": 1112,
																						"name": "amount0",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1061,
																						"src": "7181:7:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1113,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "mul",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 3218,
																					"src": "7181:11:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 1115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "7181:25:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 1116,
																				"name": "_reserve0",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1032,
																				"src": "7209:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint112",
																					"typeString": "uint112"
																				}
																			},
																			"src": "7181:37:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1123,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"id": 1120,
																						"name": "_totalSupply",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1082,
																						"src": "7232:12:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"argumentTypes": null,
																						"id": 1118,
																						"name": "amount1",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1068,
																						"src": "7220:7:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1119,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "mul",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 3218,
																					"src": "7220:11:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 1121,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "7220:25:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 1122,
																				"name": "_reserve1",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1034,
																				"src": "7248:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint112",
																					"typeString": "uint112"
																				}
																			},
																			"src": "7220:37:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"id": 1110,
																			"name": "Math",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3144,
																			"src": "7172:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_Math_$3144_$",
																				"typeString": "type(library Math)"
																			}
																		},
																		"id": 1111,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "min",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3089,
																		"src": "7172:8:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1124,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7172:86:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7160:98:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1126,
															"nodeType": "ExpressionStatement",
															"src": "7160:98:1"
														}
													]
												},
												"id": 1128,
												"nodeType": "IfStatement",
												"src": "6932:334:1",
												"trueBody": {
													"id": 1108,
													"nodeType": "Block",
													"src": "6955:190:1",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1099,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 1088,
																	"name": "liquidity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1029,
																	"src": "6964:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1097,
																			"name": "MINIMUM_LIQUIDITY",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 415,
																			"src": "7012:17:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"arguments": [
																						{
																							"argumentTypes": null,
																							"id": 1093,
																							"name": "amount1",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1068,
																							"src": "6998:7:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"expression": {
																							"argumentTypes": null,
																							"id": 1091,
																							"name": "amount0",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1061,
																							"src": "6986:7:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 1092,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "mul",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 3218,
																						"src": "6986:11:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 1094,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "6986:20:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 1089,
																					"name": "Math",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3144,
																					"src": "6976:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_Math_$3144_$",
																						"typeString": "type(library Math)"
																					}
																				},
																				"id": 1090,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sqrt",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 3143,
																				"src": "6976:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1095,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6976:31:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1096,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3190,
																		"src": "6976:35:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1098,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6976:54:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6964:66:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1100,
															"nodeType": "ExpressionStatement",
															"src": "6964:66:1"
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"hexValue": "30",
																				"id": 1103,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7053:1:1",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1102,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7045:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": "address"
																		},
																		"id": 1104,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7045:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 1105,
																		"name": "MINIMUM_LIQUIDITY",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 415,
																		"src": "7057:17:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1101,
																	"name": "_mint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 121,
																	"src": "7039:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 1106,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7039:36:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1107,
															"nodeType": "ExpressionStatement",
															"src": "7039:36:1"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1132,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1130,
																"name": "liquidity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1029,
																"src": "7280:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1131,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7292:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "7280:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "31306b3a20494e53554646494349454e545f4c49515549444954595f4d494e544544",
															"id": 1133,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7295:36:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8a472e50ec0b760c580c3dc8c62cdcf0fe39bab372eaf2d9e07261f1b72df71d",
																"typeString": "literal_string \"10k: INSUFFICIENT_LIQUIDITY_MINTED\""
															},
															"value": "10k: INSUFFICIENT_LIQUIDITY_MINTED"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8a472e50ec0b760c580c3dc8c62cdcf0fe39bab372eaf2d9e07261f1b72df71d",
																"typeString": "literal_string \"10k: INSUFFICIENT_LIQUIDITY_MINTED\""
															}
														],
														"id": 1129,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															3237,
															3238
														],
														"referencedDeclaration": 3238,
														"src": "7272:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1134,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7272:60:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1135,
												"nodeType": "ExpressionStatement",
												"src": "7272:60:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1137,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1024,
															"src": "7345:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1138,
															"name": "liquidity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1029,
															"src": "7349:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1136,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 121,
														"src": "7339:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7339:20:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1140,
												"nodeType": "ExpressionStatement",
												"src": "7339:20:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1142,
															"name": "balance0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1039,
															"src": "7376:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1143,
															"name": "balance1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1050,
															"src": "7386:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1141,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 889,
														"src": "7368:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 1144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7368:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1145,
												"nodeType": "ExpressionStatement",
												"src": "7368:27:1"
											},
											{
												"condition": {
													"argumentTypes": null,
													"id": 1146,
													"name": "feeOn",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1075,
													"src": "7406:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1158,
												"nodeType": "IfStatement",
												"src": "7402:53:1",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"id": 1156,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"argumentTypes": null,
															"id": 1147,
															"name": "kLast",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 454,
															"src": "7413:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1150,
																			"name": "reserve0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 440,
																			"src": "7429:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint112",
																				"typeString": "uint112"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint112",
																				"typeString": "uint112"
																			}
																		],
																		"id": 1149,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "7424:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": "uint"
																	},
																	"id": 1151,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7424:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1153,
																			"name": "reserve1",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 442,
																			"src": "7445:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint112",
																				"typeString": "uint112"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint112",
																				"typeString": "uint112"
																			}
																		],
																		"id": 1152,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "7440:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": "uint"
																	},
																	"id": 1154,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7440:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1148,
																"name": "_k",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1992,
																"src": "7421:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) view returns (uint256)"
																}
															},
															"id": 1155,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7421:34:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "7413:42:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1157,
													"nodeType": "ExpressionStatement",
													"src": "7413:42:1"
												}
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1160,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3234,
																"src": "7517:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1161,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "7517:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1162,
															"name": "amount0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1061,
															"src": "7529:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1163,
															"name": "amount1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1068,
															"src": "7538:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1159,
														"name": "Mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															578
														],
														"referencedDeclaration": 578,
														"src": "7512:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1164,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7512:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1165,
												"nodeType": "EmitStatement",
												"src": "7507:39:1"
											}
										]
									},
									"documentation": null,
									"id": 1167,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1027,
											"modifierName": {
												"argumentTypes": null,
												"id": 1026,
												"name": "lock",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 480,
												"src": "6425:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "6425:4:1"
										}
									],
									"name": "mint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1025,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1024,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1167,
												"src": "6404:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1023,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6404:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6403:12:1"
									},
									"returnParameters": {
										"id": 1030,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1029,
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 1167,
												"src": "6439:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1028,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6439:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6438:16:1"
									},
									"scope": 2502,
									"src": "6390:1162:1",
									"stateMutability": "nonpayable",
									"superFunction": 2935,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1330,
										"nodeType": "Block",
										"src": "7737:1228:1",
										"statements": [
											{
												"assignments": [
													1179,
													1181,
													null,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1179,
														"name": "_reserve0",
														"nodeType": "VariableDeclaration",
														"scope": 1330,
														"src": "7745:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														},
														"typeName": {
															"id": 1178,
															"name": "uint112",
															"nodeType": "ElementaryTypeName",
															"src": "7745:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1181,
														"name": "_reserve1",
														"nodeType": "VariableDeclaration",
														"scope": 1330,
														"src": "7764:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														},
														"typeName": {
															"id": 1180,
															"name": "uint112",
															"nodeType": "ElementaryTypeName",
															"src": "7764:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													null,
													null
												],
												"id": 1184,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1182,
														"name": "getReserves",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 508,
														"src": "7787:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint112_$_t_uint112_$_t_uint16_$_t_uint16_$",
															"typeString": "function () view returns (uint112,uint112,uint16,uint16)"
														}
													},
													"id": 1183,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7787:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint112_$_t_uint112_$_t_uint16_$_t_uint16_$",
														"typeString": "tuple(uint112,uint112,uint16,uint16)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7744:56:1"
											},
											{
												"assignments": [
													1186
												],
												"declarations": [
													{
														"constant": false,
														"id": 1186,
														"name": "_token0",
														"nodeType": "VariableDeclaration",
														"scope": 1330,
														"src": "7822:15:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1185,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "7822:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1188,
												"initialValue": {
													"argumentTypes": null,
													"id": 1187,
													"name": "token0",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 428,
													"src": "7840:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7822:24:1"
											},
											{
												"assignments": [
													1190
												],
												"declarations": [
													{
														"constant": false,
														"id": 1190,
														"name": "_token1",
														"nodeType": "VariableDeclaration",
														"scope": 1330,
														"src": "7868:15:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1189,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "7868:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1192,
												"initialValue": {
													"argumentTypes": null,
													"id": 1191,
													"name": "token1",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 430,
													"src": "7886:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7868:24:1"
											},
											{
												"assignments": [
													1194
												],
												"declarations": [
													{
														"constant": false,
														"id": 1194,
														"name": "balance0",
														"nodeType": "VariableDeclaration",
														"scope": 1330,
														"src": "7914:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1193,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "7914:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1203,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1200,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3264,
																	"src": "7964:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_TenkStablePair_$2502",
																		"typeString": "contract TenkStablePair"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_TenkStablePair_$2502",
																		"typeString": "contract TenkStablePair"
																	}
																],
																"id": 1199,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7956:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 1201,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7956:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1196,
																	"name": "_token0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1186,
																	"src": "7937:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1195,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3068,
																"src": "7930:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$3068_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1197,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7930:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$3068",
																"typeString": "contract IERC20"
															}
														},
														"id": 1198,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3029,
														"src": "7930:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7930:40:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7914:56:1"
											},
											{
												"assignments": [
													1205
												],
												"declarations": [
													{
														"constant": false,
														"id": 1205,
														"name": "balance1",
														"nodeType": "VariableDeclaration",
														"scope": 1330,
														"src": "7977:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1204,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "7977:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1214,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1211,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3264,
																	"src": "8027:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_TenkStablePair_$2502",
																		"typeString": "contract TenkStablePair"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_TenkStablePair_$2502",
																		"typeString": "contract TenkStablePair"
																	}
																],
																"id": 1210,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8019:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 1212,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8019:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1207,
																	"name": "_token1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1190,
																	"src": "8000:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1206,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3068,
																"src": "7993:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$3068_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1208,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7993:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$3068",
																"typeString": "contract IERC20"
															}
														},
														"id": 1209,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3029,
														"src": "7993:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1213,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7993:40:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7977:56:1"
											},
											{
												"assignments": [
													1216
												],
												"declarations": [
													{
														"constant": false,
														"id": 1216,
														"name": "liquidity",
														"nodeType": "VariableDeclaration",
														"scope": 1330,
														"src": "8040:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1215,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "8040:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1222,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 1217,
														"name": "balanceOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 23,
														"src": "8057:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1221,
													"indexExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 1219,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3264,
																"src": "8075:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_TenkStablePair_$2502",
																	"typeString": "contract TenkStablePair"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_TenkStablePair_$2502",
																	"typeString": "contract TenkStablePair"
																}
															],
															"id": 1218,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8067:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": "address"
														},
														"id": 1220,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8067:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8057:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8040:41:1"
											},
											{
												"assignments": [
													1224
												],
												"declarations": [
													{
														"constant": false,
														"id": 1224,
														"name": "feeOn",
														"nodeType": "VariableDeclaration",
														"scope": 1330,
														"src": "8090:10:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1223,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "8090:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1229,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1226,
															"name": "_reserve0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1179,
															"src": "8112:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														},
														{
															"argumentTypes": null,
															"id": 1227,
															"name": "_reserve1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1181,
															"src": "8123:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															},
															{
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														],
														"id": 1225,
														"name": "_mintFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1022,
														"src": "8103:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint112_$_t_uint112_$returns$_t_bool_$",
															"typeString": "function (uint112,uint112) returns (bool)"
														}
													},
													"id": 1228,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8103:30:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8090:43:1"
											},
											{
												"assignments": [
													1231
												],
												"declarations": [
													{
														"constant": false,
														"id": 1231,
														"name": "_totalSupply",
														"nodeType": "VariableDeclaration",
														"scope": 1330,
														"src": "8140:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1230,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "8140:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1233,
												"initialValue": {
													"argumentTypes": null,
													"id": 1232,
													"name": "totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 19,
													"src": "8160:11:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8140:31:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1241,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1234,
														"name": "amount0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1174,
														"src": "8256:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1240,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1237,
																	"name": "balance0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1194,
																	"src": "8280:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 1235,
																	"name": "liquidity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1216,
																	"src": "8266:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1236,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 3218,
																"src": "8266:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1238,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8266:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"argumentTypes": null,
															"id": 1239,
															"name": "_totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1231,
															"src": "8292:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "8266:38:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8256:48:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1242,
												"nodeType": "ExpressionStatement",
												"src": "8256:48:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1243,
														"name": "amount1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1176,
														"src": "8359:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1249,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1246,
																	"name": "balance1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1205,
																	"src": "8383:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 1244,
																	"name": "liquidity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1216,
																	"src": "8369:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1245,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 3218,
																"src": "8369:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1247,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8369:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"argumentTypes": null,
															"id": 1248,
															"name": "_totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1231,
															"src": "8395:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "8369:38:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8359:48:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1251,
												"nodeType": "ExpressionStatement",
												"src": "8359:48:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1259,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1255,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1253,
																	"name": "amount0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1174,
																	"src": "8470:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1254,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8480:1:1",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "8470:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1258,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1256,
																	"name": "amount1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1176,
																	"src": "8485:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1257,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8495:1:1",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "8485:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "8470:26:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "31306b3a20494e53554646494349454e545f4c49515549444954595f4255524e4544",
															"id": 1260,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8498:36:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e445a9437cf2a16b4c4a661deca6e9c597ce139bb56e2872aedda20402a5d4d9",
																"typeString": "literal_string \"10k: INSUFFICIENT_LIQUIDITY_BURNED\""
															},
															"value": "10k: INSUFFICIENT_LIQUIDITY_BURNED"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e445a9437cf2a16b4c4a661deca6e9c597ce139bb56e2872aedda20402a5d4d9",
																"typeString": "literal_string \"10k: INSUFFICIENT_LIQUIDITY_BURNED\""
															}
														],
														"id": 1252,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															3237,
															3238
														],
														"referencedDeclaration": 3238,
														"src": "8462:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1261,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8462:73:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1262,
												"nodeType": "ExpressionStatement",
												"src": "8462:73:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1265,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3264,
																	"src": "8556:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_TenkStablePair_$2502",
																		"typeString": "contract TenkStablePair"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_TenkStablePair_$2502",
																		"typeString": "contract TenkStablePair"
																	}
																],
																"id": 1264,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8548:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 1266,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8548:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1267,
															"name": "liquidity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1216,
															"src": "8563:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1263,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 155,
														"src": "8542:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1268,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8542:31:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1269,
												"nodeType": "ExpressionStatement",
												"src": "8542:31:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1271,
															"name": "_token0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1186,
															"src": "8594:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1272,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1169,
															"src": "8603:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1273,
															"name": "amount0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1174,
															"src": "8607:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1270,
														"name": "_safeTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 550,
														"src": "8580:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1274,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8580:35:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1275,
												"nodeType": "ExpressionStatement",
												"src": "8580:35:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1277,
															"name": "_token1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1190,
															"src": "8636:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1278,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1169,
															"src": "8645:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1279,
															"name": "amount1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1176,
															"src": "8649:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1276,
														"name": "_safeTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 550,
														"src": "8622:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1280,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8622:35:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1281,
												"nodeType": "ExpressionStatement",
												"src": "8622:35:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1282,
														"name": "balance0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1194,
														"src": "8664:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1288,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3264,
																		"src": "8709:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_TenkStablePair_$2502",
																			"typeString": "contract TenkStablePair"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_TenkStablePair_$2502",
																			"typeString": "contract TenkStablePair"
																		}
																	],
																	"id": 1287,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8701:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 1289,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8701:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1284,
																		"name": "_token0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1186,
																		"src": "8682:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1283,
																	"name": "IERC20",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3068,
																	"src": "8675:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC20_$3068_$",
																		"typeString": "type(contract IERC20)"
																	}
																},
																"id": 1285,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8675:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$3068",
																	"typeString": "contract IERC20"
																}
															},
															"id": 1286,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "balanceOf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3029,
															"src": "8675:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view external returns (uint256)"
															}
														},
														"id": 1290,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8675:40:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8664:51:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1292,
												"nodeType": "ExpressionStatement",
												"src": "8664:51:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1302,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1293,
														"name": "balance1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1205,
														"src": "8722:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1299,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3264,
																		"src": "8767:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_TenkStablePair_$2502",
																			"typeString": "contract TenkStablePair"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_TenkStablePair_$2502",
																			"typeString": "contract TenkStablePair"
																		}
																	],
																	"id": 1298,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8759:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 1300,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8759:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1295,
																		"name": "_token1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1190,
																		"src": "8740:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1294,
																	"name": "IERC20",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3068,
																	"src": "8733:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC20_$3068_$",
																		"typeString": "type(contract IERC20)"
																	}
																},
																"id": 1296,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8733:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$3068",
																	"typeString": "contract IERC20"
																}
															},
															"id": 1297,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "balanceOf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3029,
															"src": "8733:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view external returns (uint256)"
															}
														},
														"id": 1301,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8733:40:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8722:51:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1303,
												"nodeType": "ExpressionStatement",
												"src": "8722:51:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1305,
															"name": "balance0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1194,
															"src": "8790:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1306,
															"name": "balance1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1205,
															"src": "8800:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1304,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 889,
														"src": "8782:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 1307,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8782:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1308,
												"nodeType": "ExpressionStatement",
												"src": "8782:27:1"
											},
											{
												"condition": {
													"argumentTypes": null,
													"id": 1309,
													"name": "feeOn",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1224,
													"src": "8820:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1321,
												"nodeType": "IfStatement",
												"src": "8816:53:1",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"id": 1319,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"argumentTypes": null,
															"id": 1310,
															"name": "kLast",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 454,
															"src": "8827:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1313,
																			"name": "reserve0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 440,
																			"src": "8843:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint112",
																				"typeString": "uint112"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint112",
																				"typeString": "uint112"
																			}
																		],
																		"id": 1312,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8838:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": "uint"
																	},
																	"id": 1314,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8838:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1316,
																			"name": "reserve1",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 442,
																			"src": "8859:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint112",
																				"typeString": "uint112"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint112",
																				"typeString": "uint112"
																			}
																		],
																		"id": 1315,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8854:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": "uint"
																	},
																	"id": 1317,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8854:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1311,
																"name": "_k",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1992,
																"src": "8835:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) view returns (uint256)"
																}
															},
															"id": 1318,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8835:34:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "8827:42:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1320,
													"nodeType": "ExpressionStatement",
													"src": "8827:42:1"
												}
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1323,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3234,
																"src": "8926:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1324,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "8926:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1325,
															"name": "amount0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1174,
															"src": "8938:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1326,
															"name": "amount1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1176,
															"src": "8947:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1327,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1169,
															"src": "8956:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1322,
														"name": "Burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															588
														],
														"referencedDeclaration": 588,
														"src": "8921:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (address,uint256,uint256,address)"
														}
													},
													"id": 1328,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8921:38:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1329,
												"nodeType": "EmitStatement",
												"src": "8916:43:1"
											}
										]
									},
									"documentation": null,
									"id": 1331,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1172,
											"modifierName": {
												"argumentTypes": null,
												"id": 1171,
												"name": "lock",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 480,
												"src": "7695:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "7695:4:1"
										}
									],
									"name": "burn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1170,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1169,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1331,
												"src": "7674:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1168,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7674:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7673:12:1"
									},
									"returnParameters": {
										"id": 1177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1174,
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 1331,
												"src": "7709:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1173,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7709:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1176,
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 1331,
												"src": "7723:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1175,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7723:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7708:28:1"
									},
									"scope": 2502,
									"src": "7660:1305:1",
									"stateMutability": "nonpayable",
									"superFunction": 2944,
									"visibility": "external"
								},
								{
									"canonicalName": "TenkStablePair.TokensData",
									"id": 1348,
									"members": [
										{
											"constant": false,
											"id": 1333,
											"name": "token0",
											"nodeType": "VariableDeclaration",
											"scope": 1348,
											"src": "8996:14:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1332,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "8996:7:1",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1335,
											"name": "token1",
											"nodeType": "VariableDeclaration",
											"scope": 1348,
											"src": "9017:14:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1334,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "9017:7:1",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1337,
											"name": "amount0Out",
											"nodeType": "VariableDeclaration",
											"scope": 1348,
											"src": "9038:15:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1336,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "9038:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1339,
											"name": "amount1Out",
											"nodeType": "VariableDeclaration",
											"scope": 1348,
											"src": "9060:15:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1338,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "9060:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1341,
											"name": "balance0",
											"nodeType": "VariableDeclaration",
											"scope": 1348,
											"src": "9082:13:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1340,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "9082:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1343,
											"name": "balance1",
											"nodeType": "VariableDeclaration",
											"scope": 1348,
											"src": "9102:13:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1342,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "9102:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1345,
											"name": "remainingFee0",
											"nodeType": "VariableDeclaration",
											"scope": 1348,
											"src": "9122:18:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1344,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "9122:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1347,
											"name": "remainingFee1",
											"nodeType": "VariableDeclaration",
											"scope": 1348,
											"src": "9147:18:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1346,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "9147:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "TokensData",
									"nodeType": "StructDefinition",
									"scope": 2502,
									"src": "8971:200:1",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1381,
										"nodeType": "Block",
										"src": "9369:307:1",
										"statements": [
											{
												"assignments": [
													1360
												],
												"declarations": [
													{
														"constant": false,
														"id": 1360,
														"name": "tokensData",
														"nodeType": "VariableDeclaration",
														"scope": 1381,
														"src": "9376:28:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokensData_$1348_memory_ptr",
															"typeString": "struct TenkStablePair.TokensData"
														},
														"typeName": {
															"contractScope": null,
															"id": 1359,
															"name": "TokensData",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 1348,
															"src": "9376:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokensData_$1348_storage_ptr",
																"typeString": "struct TenkStablePair.TokensData"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1371,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1362,
															"name": "token0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 428,
															"src": "9435:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1363,
															"name": "token1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 430,
															"src": "9458:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1364,
															"name": "amount0Out",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1350,
															"src": "9485:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1365,
															"name": "amount1Out",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1352,
															"src": "9516:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "30",
															"id": 1366,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9545:1:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"argumentTypes": null,
															"hexValue": "30",
															"id": 1367,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9565:1:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"argumentTypes": null,
															"hexValue": "30",
															"id": 1368,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9590:1:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"argumentTypes": null,
															"hexValue": "30",
															"id": 1369,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9615:1:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 1361,
														"name": "TokensData",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1348,
														"src": "9407:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_TokensData_$1348_storage_ptr_$",
															"typeString": "type(struct TenkStablePair.TokensData storage pointer)"
														}
													},
													"id": 1370,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"names": [
														"token0",
														"token1",
														"amount0Out",
														"amount1Out",
														"balance0",
														"balance1",
														"remainingFee0",
														"remainingFee1"
													],
													"nodeType": "FunctionCall",
													"src": "9407:217:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokensData_$1348_memory",
														"typeString": "struct TenkStablePair.TokensData memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9376:248:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1373,
															"name": "tokensData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1360,
															"src": "9637:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokensData_$1348_memory_ptr",
																"typeString": "struct TenkStablePair.TokensData memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 1374,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1354,
															"src": "9649:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1375,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1356,
															"src": "9653:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1377,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9667:1:1",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1376,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9659:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 1378,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9659:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_TokensData_$1348_memory_ptr",
																"typeString": "struct TenkStablePair.TokensData memory"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 1372,
														"name": "_swap",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1921,
														"src": "9631:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_TokensData_$1348_memory_ptr_$_t_address_$_t_bytes_memory_ptr_$_t_address_$returns$__$",
															"typeString": "function (struct TenkStablePair.TokensData memory,address,bytes memory,address)"
														}
													},
													"id": 1379,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9631:39:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1380,
												"nodeType": "ExpressionStatement",
												"src": "9631:39:1"
											}
										]
									},
									"documentation": null,
									"id": 1382,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "swap",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1357,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1350,
												"name": "amount0Out",
												"nodeType": "VariableDeclaration",
												"scope": 1382,
												"src": "9293:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1349,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "9293:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1352,
												"name": "amount1Out",
												"nodeType": "VariableDeclaration",
												"scope": 1382,
												"src": "9310:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1351,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "9310:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1354,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1382,
												"src": "9327:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1353,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9327:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1356,
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 1382,
												"src": "9339:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1355,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9339:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9292:67:1"
									},
									"returnParameters": {
										"id": 1358,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9369:0:1"
									},
									"scope": 2502,
									"src": "9279:397:1",
									"stateMutability": "nonpayable",
									"superFunction": 2955,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1415,
										"nodeType": "Block",
										"src": "9892:305:1",
										"statements": [
											{
												"assignments": [
													1396
												],
												"declarations": [
													{
														"constant": false,
														"id": 1396,
														"name": "tokensData",
														"nodeType": "VariableDeclaration",
														"scope": 1415,
														"src": "9899:28:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokensData_$1348_memory_ptr",
															"typeString": "struct TenkStablePair.TokensData"
														},
														"typeName": {
															"contractScope": null,
															"id": 1395,
															"name": "TokensData",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 1348,
															"src": "9899:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokensData_$1348_storage_ptr",
																"typeString": "struct TenkStablePair.TokensData"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1407,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1398,
															"name": "token0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 428,
															"src": "9958:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1399,
															"name": "token1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 430,
															"src": "9981:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1400,
															"name": "amount0Out",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1384,
															"src": "10008:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1401,
															"name": "amount1Out",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1386,
															"src": "10039:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "30",
															"id": 1402,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10068:1:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"argumentTypes": null,
															"hexValue": "30",
															"id": 1403,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10088:1:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"argumentTypes": null,
															"hexValue": "30",
															"id": 1404,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10113:1:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"argumentTypes": null,
															"hexValue": "30",
															"id": 1405,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10138:1:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 1397,
														"name": "TokensData",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1348,
														"src": "9930:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_TokensData_$1348_storage_ptr_$",
															"typeString": "type(struct TenkStablePair.TokensData storage pointer)"
														}
													},
													"id": 1406,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"names": [
														"token0",
														"token1",
														"amount0Out",
														"amount1Out",
														"balance0",
														"balance1",
														"remainingFee0",
														"remainingFee1"
													],
													"nodeType": "FunctionCall",
													"src": "9930:217:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokensData_$1348_memory",
														"typeString": "struct TenkStablePair.TokensData memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9899:248:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1409,
															"name": "tokensData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1396,
															"src": "10160:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokensData_$1348_memory_ptr",
																"typeString": "struct TenkStablePair.TokensData memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 1410,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1388,
															"src": "10172:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1411,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1390,
															"src": "10176:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														},
														{
															"argumentTypes": null,
															"id": 1412,
															"name": "referrer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1392,
															"src": "10182:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_TokensData_$1348_memory_ptr",
																"typeString": "struct TenkStablePair.TokensData memory"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1408,
														"name": "_swap",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1921,
														"src": "10154:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_TokensData_$1348_memory_ptr_$_t_address_$_t_bytes_memory_ptr_$_t_address_$returns$__$",
															"typeString": "function (struct TenkStablePair.TokensData memory,address,bytes memory,address)"
														}
													},
													"id": 1413,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10154:37:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1414,
												"nodeType": "ExpressionStatement",
												"src": "10154:37:1"
											}
										]
									},
									"documentation": null,
									"id": 1416,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "swap",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1393,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1384,
												"name": "amount0Out",
												"nodeType": "VariableDeclaration",
												"scope": 1416,
												"src": "9798:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1383,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "9798:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1386,
												"name": "amount1Out",
												"nodeType": "VariableDeclaration",
												"scope": 1416,
												"src": "9815:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1385,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "9815:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1388,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1416,
												"src": "9832:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9832:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1390,
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 1416,
												"src": "9844:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1389,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9844:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1392,
												"name": "referrer",
												"nodeType": "VariableDeclaration",
												"scope": 1416,
												"src": "9865:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1391,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9865:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9797:85:1"
									},
									"returnParameters": {
										"id": 1394,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9892:0:1"
									},
									"scope": 2502,
									"src": "9784:413:1",
									"stateMutability": "nonpayable",
									"superFunction": 2968,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1920,
										"nodeType": "Block",
										"src": "10313:3906:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1438,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1433,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1430,
																		"name": "tokensData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1418,
																		"src": "10328:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_TokensData_$1348_memory_ptr",
																			"typeString": "struct TenkStablePair.TokensData memory"
																		}
																	},
																	"id": 1431,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "amount0Out",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1337,
																	"src": "10328:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1432,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10352:1:1",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "10328:25:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1437,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1434,
																		"name": "tokensData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1418,
																		"src": "10357:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_TokensData_$1348_memory_ptr",
																			"typeString": "struct TenkStablePair.TokensData memory"
																		}
																	},
																	"id": 1435,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "amount1Out",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1339,
																	"src": "10357:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1436,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10381:1:1",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "10357:25:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "10328:54:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "31306b3a20494e53554646494349454e545f4f55545055545f414d4f554e54",
															"id": 1439,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10384:33:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cd1176dc2ee2529e432d485284b25bae64e5ec966d2a3a0fd728703c4c255c48",
																"typeString": "literal_string \"10k: INSUFFICIENT_OUTPUT_AMOUNT\""
															},
															"value": "10k: INSUFFICIENT_OUTPUT_AMOUNT"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cd1176dc2ee2529e432d485284b25bae64e5ec966d2a3a0fd728703c4c255c48",
																"typeString": "literal_string \"10k: INSUFFICIENT_OUTPUT_AMOUNT\""
															}
														],
														"id": 1429,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															3237,
															3238
														],
														"referencedDeclaration": 3238,
														"src": "10320:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1440,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10320:98:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1441,
												"nodeType": "ExpressionStatement",
												"src": "10320:98:1"
											},
											{
												"assignments": [
													1443,
													1445,
													1447,
													1449
												],
												"declarations": [
													{
														"constant": false,
														"id": 1443,
														"name": "_reserve0",
														"nodeType": "VariableDeclaration",
														"scope": 1920,
														"src": "10428:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														},
														"typeName": {
															"id": 1442,
															"name": "uint112",
															"nodeType": "ElementaryTypeName",
															"src": "10428:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1445,
														"name": "_reserve1",
														"nodeType": "VariableDeclaration",
														"scope": 1920,
														"src": "10447:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														},
														"typeName": {
															"id": 1444,
															"name": "uint112",
															"nodeType": "ElementaryTypeName",
															"src": "10447:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1447,
														"name": "_token0FeePercent",
														"nodeType": "VariableDeclaration",
														"scope": 1920,
														"src": "10466:24:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														},
														"typeName": {
															"id": 1446,
															"name": "uint16",
															"nodeType": "ElementaryTypeName",
															"src": "10466:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1449,
														"name": "_token1FeePercent",
														"nodeType": "VariableDeclaration",
														"scope": 1920,
														"src": "10492:24:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														},
														"typeName": {
															"id": 1448,
															"name": "uint16",
															"nodeType": "ElementaryTypeName",
															"src": "10492:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1452,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1450,
														"name": "getReserves",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 508,
														"src": "10520:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint112_$_t_uint112_$_t_uint16_$_t_uint16_$",
															"typeString": "function () view returns (uint112,uint112,uint16,uint16)"
														}
													},
													"id": 1451,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10520:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint112_$_t_uint112_$_t_uint16_$_t_uint16_$",
														"typeString": "tuple(uint112,uint112,uint16,uint16)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10427:106:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1462,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1457,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1454,
																		"name": "tokensData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1418,
																		"src": "10548:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_TokensData_$1348_memory_ptr",
																			"typeString": "struct TenkStablePair.TokensData memory"
																		}
																	},
																	"id": 1455,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "amount0Out",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1337,
																	"src": "10548:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 1456,
																	"name": "_reserve0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1443,
																	"src": "10572:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																},
																"src": "10548:33:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1461,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1458,
																		"name": "tokensData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1418,
																		"src": "10585:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_TokensData_$1348_memory_ptr",
																			"typeString": "struct TenkStablePair.TokensData memory"
																		}
																	},
																	"id": 1459,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "amount1Out",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1339,
																	"src": "10585:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 1460,
																	"name": "_reserve1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1445,
																	"src": "10609:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																},
																"src": "10585:33:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "10548:70:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "31306b3a20494e53554646494349454e545f4c4951554944495459",
															"id": 1463,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10620:29:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_87ea475e55e2b99fd6af9b946b15608b7d282d76e12e656805a531412ba04a36",
																"typeString": "literal_string \"10k: INSUFFICIENT_LIQUIDITY\""
															},
															"value": "10k: INSUFFICIENT_LIQUIDITY"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_87ea475e55e2b99fd6af9b946b15608b7d282d76e12e656805a531412ba04a36",
																"typeString": "literal_string \"10k: INSUFFICIENT_LIQUIDITY\""
															}
														],
														"id": 1453,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															3237,
															3238
														],
														"referencedDeclaration": 3238,
														"src": "10540:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1464,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10540:110:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1465,
												"nodeType": "ExpressionStatement",
												"src": "10540:110:1"
											},
											{
												"id": 1551,
												"nodeType": "Block",
												"src": "10661:665:1",
												"statements": [
													{
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 1475,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1470,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 1467,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1420,
																			"src": "10678:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 1468,
																				"name": "tokensData",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1418,
																				"src": "10684:10:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_TokensData_$1348_memory_ptr",
																					"typeString": "struct TenkStablePair.TokensData memory"
																				}
																			},
																			"id": 1469,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "token0",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1333,
																			"src": "10684:17:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "10678:23:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1474,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 1471,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1420,
																			"src": "10705:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 1472,
																				"name": "tokensData",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1418,
																				"src": "10711:10:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_TokensData_$1348_memory_ptr",
																					"typeString": "struct TenkStablePair.TokensData memory"
																				}
																			},
																			"id": 1473,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "token1",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1335,
																			"src": "10711:17:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "10705:23:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "10678:50:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"argumentTypes": null,
																	"hexValue": "31306b3a20494e56414c49445f544f",
																	"id": 1476,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10730:17:1",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_668008af6a4e68b815aaac124878a87de86f671bdbd4904adef941df1ff324dc",
																		"typeString": "literal_string \"10k: INVALID_TO\""
																	},
																	"value": "10k: INVALID_TO"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_668008af6a4e68b815aaac124878a87de86f671bdbd4904adef941df1ff324dc",
																		"typeString": "literal_string \"10k: INVALID_TO\""
																	}
																],
																"id": 1466,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	3237,
																	3238
																],
																"referencedDeclaration": 3238,
																"src": "10670:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1477,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10670:78:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1478,
														"nodeType": "ExpressionStatement",
														"src": "10670:78:1"
													},
													{
														"condition": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1482,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1479,
																	"name": "tokensData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1418,
																	"src": "10802:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TokensData_$1348_memory_ptr",
																		"typeString": "struct TenkStablePair.TokensData memory"
																	}
																},
																"id": 1480,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "amount0Out",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1337,
																"src": "10802:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1481,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10826:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10802:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": null,
														"id": 1491,
														"nodeType": "IfStatement",
														"src": "10798:90:1",
														"trueBody": {
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1484,
																			"name": "tokensData",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1418,
																			"src": "10843:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_TokensData_$1348_memory_ptr",
																				"typeString": "struct TenkStablePair.TokensData memory"
																			}
																		},
																		"id": 1485,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "token0",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1333,
																		"src": "10843:17:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 1486,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1420,
																		"src": "10862:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1487,
																			"name": "tokensData",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1418,
																			"src": "10866:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_TokensData_$1348_memory_ptr",
																				"typeString": "struct TenkStablePair.TokensData memory"
																			}
																		},
																		"id": 1488,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "amount0Out",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1337,
																		"src": "10866:21:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1483,
																	"name": "_safeTransfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 550,
																	"src": "10829:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1489,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10829:59:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1490,
															"nodeType": "ExpressionStatement",
															"src": "10829:59:1"
														}
													},
													{
														"condition": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1495,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1492,
																	"name": "tokensData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1418,
																	"src": "10942:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TokensData_$1348_memory_ptr",
																		"typeString": "struct TenkStablePair.TokensData memory"
																	}
																},
																"id": 1493,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "amount1Out",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1339,
																"src": "10942:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1494,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10966:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10942:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": null,
														"id": 1504,
														"nodeType": "IfStatement",
														"src": "10938:90:1",
														"trueBody": {
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1497,
																			"name": "tokensData",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1418,
																			"src": "10983:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_TokensData_$1348_memory_ptr",
																				"typeString": "struct TenkStablePair.TokensData memory"
																			}
																		},
																		"id": 1498,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "token1",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1335,
																		"src": "10983:17:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 1499,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1420,
																		"src": "11002:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1500,
																			"name": "tokensData",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1418,
																			"src": "11006:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_TokensData_$1348_memory_ptr",
																				"typeString": "struct TenkStablePair.TokensData memory"
																			}
																		},
																		"id": 1501,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "amount1Out",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1339,
																		"src": "11006:21:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1496,
																	"name": "_safeTransfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 550,
																	"src": "10969:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1502,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10969:59:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1503,
															"nodeType": "ExpressionStatement",
															"src": "10969:59:1"
														}
													},
													{
														"condition": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1508,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1505,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1422,
																	"src": "11041:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 1506,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "11041:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1507,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11055:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11041:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": null,
														"id": 1522,
														"nodeType": "IfStatement",
														"src": "11037:119:1",
														"trueBody": {
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1513,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3234,
																			"src": "11093:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1514,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "11093:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1515,
																			"name": "tokensData",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1418,
																			"src": "11105:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_TokensData_$1348_memory_ptr",
																				"typeString": "struct TenkStablePair.TokensData memory"
																			}
																		},
																		"id": 1516,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "amount0Out",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1337,
																		"src": "11105:21:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1517,
																			"name": "tokensData",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1418,
																			"src": "11128:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_TokensData_$1348_memory_ptr",
																				"typeString": "struct TenkStablePair.TokensData memory"
																			}
																		},
																		"id": 1518,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "amount1Out",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1339,
																		"src": "11128:21:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 1519,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1422,
																		"src": "11151:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 1510,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1420,
																				"src": "11075:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1509,
																			"name": "I10kStableCallee",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2634,
																			"src": "11058:16:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_I10kStableCallee_$2634_$",
																				"typeString": "type(contract I10kStableCallee)"
																			}
																		},
																		"id": 1511,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11058:20:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_I10kStableCallee_$2634",
																			"typeString": "contract I10kStableCallee"
																		}
																	},
																	"id": 1512,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "uniswapV2Call",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2633,
																	"src": "11058:34:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (address,uint256,uint256,bytes memory) external"
																	}
																},
																"id": 1520,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11058:98:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1521,
															"nodeType": "ExpressionStatement",
															"src": "11058:98:1"
														}
													},
													{
														"expression": {
															"argumentTypes": null,
															"id": 1535,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1523,
																	"name": "tokensData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1418,
																	"src": "11165:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TokensData_$1348_memory_ptr",
																		"typeString": "struct TenkStablePair.TokensData memory"
																	}
																},
																"id": 1525,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberName": "balance0",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1341,
																"src": "11165:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 1532,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3264,
																				"src": "11231:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_TenkStablePair_$2502",
																					"typeString": "contract TenkStablePair"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_TenkStablePair_$2502",
																					"typeString": "contract TenkStablePair"
																				}
																			],
																			"id": 1531,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "11223:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": "address"
																		},
																		"id": 1533,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11223:13:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"id": 1527,
																					"name": "tokensData",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1418,
																					"src": "11194:10:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_TokensData_$1348_memory_ptr",
																						"typeString": "struct TenkStablePair.TokensData memory"
																					}
																				},
																				"id": 1528,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "token0",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1333,
																				"src": "11194:17:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1526,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3068,
																			"src": "11187:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$3068_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 1529,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11187:25:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$3068",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1530,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3029,
																	"src": "11187:35:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 1534,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11187:50:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "11165:72:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1536,
														"nodeType": "ExpressionStatement",
														"src": "11165:72:1"
													},
													{
														"expression": {
															"argumentTypes": null,
															"id": 1549,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1537,
																	"name": "tokensData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1418,
																	"src": "11246:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TokensData_$1348_memory_ptr",
																		"typeString": "struct TenkStablePair.TokensData memory"
																	}
																},
																"id": 1539,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberName": "balance1",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1343,
																"src": "11246:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 1546,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3264,
																				"src": "11312:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_TenkStablePair_$2502",
																					"typeString": "contract TenkStablePair"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_TenkStablePair_$2502",
																					"typeString": "contract TenkStablePair"
																				}
																			],
																			"id": 1545,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "11304:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": "address"
																		},
																		"id": 1547,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11304:13:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"id": 1541,
																					"name": "tokensData",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1418,
																					"src": "11275:10:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_TokensData_$1348_memory_ptr",
																						"typeString": "struct TenkStablePair.TokensData memory"
																					}
																				},
																				"id": 1542,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "token1",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1335,
																				"src": "11275:17:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1540,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3068,
																			"src": "11268:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$3068_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 1543,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11268:25:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$3068",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1544,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3029,
																	"src": "11268:35:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 1548,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11268:50:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "11246:72:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1550,
														"nodeType": "ExpressionStatement",
														"src": "11246:72:1"
													}
												]
											},
											{
												"assignments": [
													1553
												],
												"declarations": [
													{
														"constant": false,
														"id": 1553,
														"name": "amount0In",
														"nodeType": "VariableDeclaration",
														"scope": 1920,
														"src": "11334:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1552,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "11334:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1571,
												"initialValue": {
													"argumentTypes": null,
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1560,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1554,
																"name": "tokensData",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1418,
																"src": "11351:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TokensData_$1348_memory_ptr",
																	"typeString": "struct TenkStablePair.TokensData memory"
																}
															},
															"id": 1555,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "balance0",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1341,
															"src": "11351:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1559,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1556,
																"name": "_reserve0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1443,
																"src": "11373:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint112",
																	"typeString": "uint112"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1557,
																	"name": "tokensData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1418,
																	"src": "11385:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TokensData_$1348_memory_ptr",
																		"typeString": "struct TenkStablePair.TokensData memory"
																	}
																},
																"id": 1558,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "amount0Out",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1337,
																"src": "11385:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "11373:33:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "11351:55:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1569,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11469:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"id": 1570,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "11351:119:1",
													"trueExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1568,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1561,
																"name": "tokensData",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1418,
																"src": "11409:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TokensData_$1348_memory_ptr",
																	"typeString": "struct TenkStablePair.TokensData memory"
																}
															},
															"id": 1562,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "balance0",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1341,
															"src": "11409:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"argumentTypes": null,
															"components": [
																{
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1566,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 1563,
																		"name": "_reserve0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1443,
																		"src": "11432:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint112",
																			"typeString": "uint112"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1564,
																			"name": "tokensData",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1418,
																			"src": "11444:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_TokensData_$1348_memory_ptr",
																				"typeString": "struct TenkStablePair.TokensData memory"
																			}
																		},
																		"id": 1565,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "amount0Out",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1337,
																		"src": "11444:21:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "11432:33:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1567,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "11431:35:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "11409:57:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11334:136:1"
											},
											{
												"assignments": [
													1573
												],
												"declarations": [
													{
														"constant": false,
														"id": 1573,
														"name": "amount1In",
														"nodeType": "VariableDeclaration",
														"scope": 1920,
														"src": "11477:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1572,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "11477:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1591,
												"initialValue": {
													"argumentTypes": null,
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1580,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1574,
																"name": "tokensData",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1418,
																"src": "11494:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TokensData_$1348_memory_ptr",
																	"typeString": "struct TenkStablePair.TokensData memory"
																}
															},
															"id": 1575,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "balance1",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1343,
															"src": "11494:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1579,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1576,
																"name": "_reserve1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1445,
																"src": "11516:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint112",
																	"typeString": "uint112"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1577,
																	"name": "tokensData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1418,
																	"src": "11528:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TokensData_$1348_memory_ptr",
																		"typeString": "struct TenkStablePair.TokensData memory"
																	}
																},
																"id": 1578,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "amount1Out",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1339,
																"src": "11528:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "11516:33:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "11494:55:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1589,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11612:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"id": 1590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "11494:119:1",
													"trueExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1588,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1581,
																"name": "tokensData",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1418,
																"src": "11552:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TokensData_$1348_memory_ptr",
																	"typeString": "struct TenkStablePair.TokensData memory"
																}
															},
															"id": 1582,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "balance1",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1343,
															"src": "11552:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"argumentTypes": null,
															"components": [
																{
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1586,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 1583,
																		"name": "_reserve1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1445,
																		"src": "11575:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint112",
																			"typeString": "uint112"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1584,
																			"name": "tokensData",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1418,
																			"src": "11587:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_TokensData_$1348_memory_ptr",
																				"typeString": "struct TenkStablePair.TokensData memory"
																			}
																		},
																		"id": 1585,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "amount1Out",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1339,
																		"src": "11587:21:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "11575:33:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1587,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "11574:35:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "11552:57:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11477:136:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1599,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1595,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1593,
																	"name": "amount0In",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1553,
																	"src": "11628:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1594,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11640:1:1",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "11628:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1598,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1596,
																	"name": "amount1In",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1573,
																	"src": "11645:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1597,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11657:1:1",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "11645:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "11628:30:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "31306b3a20494e53554646494349454e545f494e5055545f414d4f554e54",
															"id": 1600,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11660:32:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4f24426d8819a7bbd2619508cf7968668eaaee42a1f869fa6b93565f50194873",
																"typeString": "literal_string \"10k: INSUFFICIENT_INPUT_AMOUNT\""
															},
															"value": "10k: INSUFFICIENT_INPUT_AMOUNT"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4f24426d8819a7bbd2619508cf7968668eaaee42a1f869fa6b93565f50194873",
																"typeString": "literal_string \"10k: INSUFFICIENT_INPUT_AMOUNT\""
															}
														],
														"id": 1592,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															3237,
															3238
														],
														"referencedDeclaration": 3238,
														"src": "11620:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1601,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11620:73:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1602,
												"nodeType": "ExpressionStatement",
												"src": "11620:73:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1612,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1603,
															"name": "tokensData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1418,
															"src": "11702:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokensData_$1348_memory_ptr",
																"typeString": "struct TenkStablePair.TokensData memory"
															}
														},
														"id": 1605,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "remainingFee0",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1345,
														"src": "11702:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1611,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1608,
																	"name": "_token0FeePercent",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1447,
																	"src": "11743:17:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 1606,
																	"name": "amount0In",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1553,
																	"src": "11729:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1607,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 3218,
																"src": "11729:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1609,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11729:32:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"argumentTypes": null,
															"id": 1610,
															"name": "FEE_DENOMINATOR",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 435,
															"src": "11764:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "11729:50:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11702:77:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1613,
												"nodeType": "ExpressionStatement",
												"src": "11702:77:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1623,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1614,
															"name": "tokensData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1418,
															"src": "11786:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokensData_$1348_memory_ptr",
																"typeString": "struct TenkStablePair.TokensData memory"
															}
														},
														"id": 1616,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "remainingFee1",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1347,
														"src": "11786:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1622,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1619,
																	"name": "_token1FeePercent",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1449,
																	"src": "11827:17:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 1617,
																	"name": "amount1In",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1573,
																	"src": "11813:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1618,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 3218,
																"src": "11813:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1620,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11813:32:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"argumentTypes": null,
															"id": 1621,
															"name": "FEE_DENOMINATOR",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 435,
															"src": "11848:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "11813:50:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11786:77:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1624,
												"nodeType": "ExpressionStatement",
												"src": "11786:77:1"
											},
											{
												"id": 1864,
												"nodeType": "Block",
												"src": "11872:1839:1",
												"statements": [
													{
														"assignments": [
															1626
														],
														"declarations": [
															{
																"constant": false,
																"id": 1626,
																"name": "fee",
																"nodeType": "VariableDeclaration",
																"scope": 1864,
																"src": "11924:8:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1625,
																	"name": "uint",
																	"nodeType": "ElementaryTypeName",
																	"src": "11924:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"value": null,
																"visibility": "internal"
															}
														],
														"id": 1628,
														"initialValue": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 1627,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11935:1:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11924:12:1"
													},
													{
														"assignments": [
															1630
														],
														"declarations": [
															{
																"constant": false,
																"id": 1630,
																"name": "referrerInputFeeShare",
																"nodeType": "VariableDeclaration",
																"scope": 1864,
																"src": "11947:26:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1629,
																	"name": "uint",
																	"nodeType": "ElementaryTypeName",
																	"src": "11947:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"value": null,
																"visibility": "internal"
															}
														],
														"id": 1644,
														"initialValue": {
															"argumentTypes": null,
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1635,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1631,
																	"name": "referrer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1424,
																	"src": "11976:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 1633,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11996:1:1",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1632,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "11988:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": "address"
																	},
																	"id": 1634,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "11988:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"src": "11976:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1642,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12058:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"id": 1643,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "11976:83:1",
															"trueExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1640,
																		"name": "referrer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1424,
																		"src": "12046:8:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 1637,
																				"name": "factory",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 426,
																				"src": "12019:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1636,
																			"name": "I10kStableFactory",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2721,
																			"src": "12001:17:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_I10kStableFactory_$2721_$",
																				"typeString": "type(contract I10kStableFactory)"
																			}
																		},
																		"id": 1638,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12001:26:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_I10kStableFactory_$2721",
																			"typeString": "contract I10kStableFactory"
																		}
																	},
																	"id": 1639,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "referrersFeeShare",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2678,
																	"src": "12001:44:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 1641,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12001:54:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11947:112:1"
													},
													{
														"condition": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1647,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1645,
																"name": "referrerInputFeeShare",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1630,
																"src": "12072:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1646,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12096:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12072:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": null,
														"id": 1723,
														"nodeType": "IfStatement",
														"src": "12068:595:1",
														"trueBody": {
															"id": 1722,
															"nodeType": "Block",
															"src": "12099:564:1",
															"statements": [
																{
																	"condition": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1650,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 1648,
																			"name": "amount0In",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1553,
																			"src": "12114:9:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 1649,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12126:1:1",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "12114:13:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseBody": null,
																	"id": 1684,
																	"nodeType": "IfStatement",
																	"src": "12110:267:1",
																	"trueBody": {
																		"id": 1683,
																		"nodeType": "Block",
																		"src": "12129:248:1",
																		"statements": [
																			{
																				"expression": {
																					"argumentTypes": null,
																					"id": 1664,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"argumentTypes": null,
																						"id": 1651,
																						"name": "fee",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1626,
																						"src": "12142:3:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"argumentTypes": null,
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1663,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"argumentTypes": null,
																							"arguments": [
																								{
																									"argumentTypes": null,
																									"id": 1657,
																									"name": "_token0FeePercent",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1447,
																									"src": "12189:17:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint16",
																										"typeString": "uint16"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_uint16",
																										"typeString": "uint16"
																									}
																								],
																								"expression": {
																									"argumentTypes": null,
																									"arguments": [
																										{
																											"argumentTypes": null,
																											"id": 1654,
																											"name": "referrerInputFeeShare",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 1630,
																											"src": "12162:21:1",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										}
																									],
																									"expression": {
																										"argumentTypes": [
																											{
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										],
																										"expression": {
																											"argumentTypes": null,
																											"id": 1652,
																											"name": "amount0In",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 1553,
																											"src": "12148:9:1",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"id": 1653,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberName": "mul",
																										"nodeType": "MemberAccess",
																										"referencedDeclaration": 3218,
																										"src": "12148:13:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																											"typeString": "function (uint256,uint256) pure returns (uint256)"
																										}
																									},
																									"id": 1655,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"kind": "functionCall",
																									"lValueRequested": false,
																									"names": [],
																									"nodeType": "FunctionCall",
																									"src": "12148:36:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"id": 1656,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberName": "mul",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 3218,
																								"src": "12148:40:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																									"typeString": "function (uint256,uint256) pure returns (uint256)"
																								}
																							},
																							"id": 1658,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "functionCall",
																							"lValueRequested": false,
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "12148:59:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "/",
																						"rightExpression": {
																							"argumentTypes": null,
																							"components": [
																								{
																									"argumentTypes": null,
																									"commonType": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									},
																									"id": 1661,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"leftExpression": {
																										"argumentTypes": null,
																										"id": 1659,
																										"name": "FEE_DENOMINATOR",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 435,
																										"src": "12211:15:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"nodeType": "BinaryOperation",
																									"operator": "**",
																									"rightExpression": {
																										"argumentTypes": null,
																										"hexValue": "32",
																										"id": 1660,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "number",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "12230:1:1",
																										"subdenomination": null,
																										"typeDescriptions": {
																											"typeIdentifier": "t_rational_2_by_1",
																											"typeString": "int_const 2"
																										},
																										"value": "2"
																									},
																									"src": "12211:20:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								}
																							],
																							"id": 1662,
																							"isConstant": false,
																							"isInlineArray": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "TupleExpression",
																							"src": "12210:22:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "12148:84:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12142:90:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1665,
																				"nodeType": "ExpressionStatement",
																				"src": "12142:90:1"
																			},
																			{
																				"expression": {
																					"argumentTypes": null,
																					"id": 1674,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"argumentTypes": null,
																						"expression": {
																							"argumentTypes": null,
																							"id": 1666,
																							"name": "tokensData",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1418,
																							"src": "12245:10:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_TokensData_$1348_memory_ptr",
																								"typeString": "struct TenkStablePair.TokensData memory"
																							}
																						},
																						"id": 1668,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": true,
																						"memberName": "remainingFee0",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1345,
																						"src": "12245:24:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"argumentTypes": null,
																						"arguments": [
																							{
																								"argumentTypes": null,
																								"id": 1672,
																								"name": "fee",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1626,
																								"src": "12301:3:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"expression": {
																								"argumentTypes": null,
																								"expression": {
																									"argumentTypes": null,
																									"id": 1669,
																									"name": "tokensData",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1418,
																									"src": "12272:10:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_TokensData_$1348_memory_ptr",
																										"typeString": "struct TenkStablePair.TokensData memory"
																									}
																								},
																								"id": 1670,
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberName": "remainingFee0",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 1345,
																								"src": "12272:24:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 1671,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "sub",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 3190,
																							"src": "12272:28:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																								"typeString": "function (uint256,uint256) pure returns (uint256)"
																							}
																						},
																						"id": 1673,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "12272:33:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12245:60:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1675,
																				"nodeType": "ExpressionStatement",
																				"src": "12245:60:1"
																			},
																			{
																				"expression": {
																					"argumentTypes": null,
																					"arguments": [
																						{
																							"argumentTypes": null,
																							"expression": {
																								"argumentTypes": null,
																								"id": 1677,
																								"name": "tokensData",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1418,
																								"src": "12332:10:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_TokensData_$1348_memory_ptr",
																									"typeString": "struct TenkStablePair.TokensData memory"
																								}
																							},
																							"id": 1678,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "token0",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1333,
																							"src": "12332:17:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						{
																							"argumentTypes": null,
																							"id": 1679,
																							"name": "referrer",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1424,
																							"src": "12351:8:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						{
																							"argumentTypes": null,
																							"id": 1680,
																							"name": "fee",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1626,
																							"src": "12361:3:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"id": 1676,
																						"name": "_safeTransfer",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 550,
																						"src": "12318:13:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																							"typeString": "function (address,address,uint256)"
																						}
																					},
																					"id": 1681,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "12318:47:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1682,
																				"nodeType": "ExpressionStatement",
																				"src": "12318:47:1"
																			}
																		]
																	}
																},
																{
																	"condition": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1687,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 1685,
																			"name": "amount1In",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1573,
																			"src": "12391:9:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 1686,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12403:1:1",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "12391:13:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseBody": null,
																	"id": 1721,
																	"nodeType": "IfStatement",
																	"src": "12387:267:1",
																	"trueBody": {
																		"id": 1720,
																		"nodeType": "Block",
																		"src": "12406:248:1",
																		"statements": [
																			{
																				"expression": {
																					"argumentTypes": null,
																					"id": 1701,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"argumentTypes": null,
																						"id": 1688,
																						"name": "fee",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1626,
																						"src": "12419:3:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"argumentTypes": null,
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1700,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"argumentTypes": null,
																							"arguments": [
																								{
																									"argumentTypes": null,
																									"id": 1694,
																									"name": "_token1FeePercent",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1449,
																									"src": "12466:17:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint16",
																										"typeString": "uint16"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_uint16",
																										"typeString": "uint16"
																									}
																								],
																								"expression": {
																									"argumentTypes": null,
																									"arguments": [
																										{
																											"argumentTypes": null,
																											"id": 1691,
																											"name": "referrerInputFeeShare",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 1630,
																											"src": "12439:21:1",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										}
																									],
																									"expression": {
																										"argumentTypes": [
																											{
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										],
																										"expression": {
																											"argumentTypes": null,
																											"id": 1689,
																											"name": "amount1In",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 1573,
																											"src": "12425:9:1",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"id": 1690,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberName": "mul",
																										"nodeType": "MemberAccess",
																										"referencedDeclaration": 3218,
																										"src": "12425:13:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																											"typeString": "function (uint256,uint256) pure returns (uint256)"
																										}
																									},
																									"id": 1692,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"kind": "functionCall",
																									"lValueRequested": false,
																									"names": [],
																									"nodeType": "FunctionCall",
																									"src": "12425:36:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"id": 1693,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberName": "mul",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 3218,
																								"src": "12425:40:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																									"typeString": "function (uint256,uint256) pure returns (uint256)"
																								}
																							},
																							"id": 1695,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "functionCall",
																							"lValueRequested": false,
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "12425:59:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "/",
																						"rightExpression": {
																							"argumentTypes": null,
																							"components": [
																								{
																									"argumentTypes": null,
																									"commonType": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									},
																									"id": 1698,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"leftExpression": {
																										"argumentTypes": null,
																										"id": 1696,
																										"name": "FEE_DENOMINATOR",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 435,
																										"src": "12488:15:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"nodeType": "BinaryOperation",
																									"operator": "**",
																									"rightExpression": {
																										"argumentTypes": null,
																										"hexValue": "32",
																										"id": 1697,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "number",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "12507:1:1",
																										"subdenomination": null,
																										"typeDescriptions": {
																											"typeIdentifier": "t_rational_2_by_1",
																											"typeString": "int_const 2"
																										},
																										"value": "2"
																									},
																									"src": "12488:20:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								}
																							],
																							"id": 1699,
																							"isConstant": false,
																							"isInlineArray": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "TupleExpression",
																							"src": "12487:22:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "12425:84:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12419:90:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1702,
																				"nodeType": "ExpressionStatement",
																				"src": "12419:90:1"
																			},
																			{
																				"expression": {
																					"argumentTypes": null,
																					"id": 1711,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"argumentTypes": null,
																						"expression": {
																							"argumentTypes": null,
																							"id": 1703,
																							"name": "tokensData",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1418,
																							"src": "12522:10:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_TokensData_$1348_memory_ptr",
																								"typeString": "struct TenkStablePair.TokensData memory"
																							}
																						},
																						"id": 1705,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": true,
																						"memberName": "remainingFee1",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1347,
																						"src": "12522:24:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"argumentTypes": null,
																						"arguments": [
																							{
																								"argumentTypes": null,
																								"id": 1709,
																								"name": "fee",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1626,
																								"src": "12578:3:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"expression": {
																								"argumentTypes": null,
																								"expression": {
																									"argumentTypes": null,
																									"id": 1706,
																									"name": "tokensData",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1418,
																									"src": "12549:10:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_TokensData_$1348_memory_ptr",
																										"typeString": "struct TenkStablePair.TokensData memory"
																									}
																								},
																								"id": 1707,
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberName": "remainingFee1",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 1347,
																								"src": "12549:24:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 1708,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "sub",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 3190,
																							"src": "12549:28:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																								"typeString": "function (uint256,uint256) pure returns (uint256)"
																							}
																						},
																						"id": 1710,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "12549:33:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12522:60:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1712,
																				"nodeType": "ExpressionStatement",
																				"src": "12522:60:1"
																			},
																			{
																				"expression": {
																					"argumentTypes": null,
																					"arguments": [
																						{
																							"argumentTypes": null,
																							"expression": {
																								"argumentTypes": null,
																								"id": 1714,
																								"name": "tokensData",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1418,
																								"src": "12609:10:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_TokensData_$1348_memory_ptr",
																									"typeString": "struct TenkStablePair.TokensData memory"
																								}
																							},
																							"id": 1715,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "token1",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1335,
																							"src": "12609:17:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						{
																							"argumentTypes": null,
																							"id": 1716,
																							"name": "referrer",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1424,
																							"src": "12628:8:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						{
																							"argumentTypes": null,
																							"id": 1717,
																							"name": "fee",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1626,
																							"src": "12638:3:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"id": 1713,
																						"name": "_safeTransfer",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 550,
																						"src": "12595:13:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																							"typeString": "function (address,address,uint256)"
																						}
																					},
																					"id": 1718,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "12595:47:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1719,
																				"nodeType": "ExpressionStatement",
																				"src": "12595:47:1"
																			}
																		]
																	}
																}
															]
														}
													},
													{
														"condition": {
															"argumentTypes": null,
															"id": 1724,
															"name": "stableSwap",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 456,
															"src": "12676:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": null,
														"id": 1827,
														"nodeType": "IfStatement",
														"src": "12673:797:1",
														"trueBody": {
															"id": 1826,
															"nodeType": "Block",
															"src": "12687:783:1",
															"statements": [
																{
																	"assignments": [
																		1726,
																		1728
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 1726,
																			"name": "ownerFeeShare",
																			"nodeType": "VariableDeclaration",
																			"scope": 1826,
																			"src": "12699:18:1",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"typeName": {
																				"id": 1725,
																				"name": "uint",
																				"nodeType": "ElementaryTypeName",
																				"src": "12699:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"value": null,
																			"visibility": "internal"
																		},
																		{
																			"constant": false,
																			"id": 1728,
																			"name": "feeTo",
																			"nodeType": "VariableDeclaration",
																			"scope": 1826,
																			"src": "12719:13:1",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			"typeName": {
																				"id": 1727,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "12719:7:1",
																				"stateMutability": "nonpayable",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"value": null,
																			"visibility": "internal"
																		}
																	],
																	"id": 1734,
																	"initialValue": {
																		"argumentTypes": null,
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"id": 1730,
																						"name": "factory",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 426,
																						"src": "12754:7:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"id": 1729,
																					"name": "I10kStableFactory",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2721,
																					"src": "12736:17:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_I10kStableFactory_$2721_$",
																						"typeString": "type(contract I10kStableFactory)"
																					}
																				},
																				"id": 1731,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "12736:26:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_I10kStableFactory_$2721",
																					"typeString": "contract I10kStableFactory"
																				}
																			},
																			"id": 1732,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "feeInfo",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2720,
																			"src": "12736:34:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$_t_address_$",
																				"typeString": "function () view external returns (uint256,address)"
																			}
																		},
																		"id": 1733,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12736:36:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$_t_uint256_$_t_address_$",
																			"typeString": "tuple(uint256,address)"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "12698:74:1"
																},
																{
																	"condition": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1739,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 1735,
																			"name": "feeTo",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1728,
																			"src": "12786:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"hexValue": "30",
																					"id": 1737,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "12803:1:1",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 1736,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "12795:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": "address"
																			},
																			"id": 1738,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "12795:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"src": "12786:19:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseBody": null,
																	"id": 1825,
																	"nodeType": "IfStatement",
																	"src": "12783:678:1",
																	"trueBody": {
																		"id": 1824,
																		"nodeType": "Block",
																		"src": "12807:654:1",
																		"statements": [
																			{
																				"expression": {
																					"argumentTypes": null,
																					"id": 1748,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"argumentTypes": null,
																						"id": 1740,
																						"name": "ownerFeeShare",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1726,
																						"src": "12820:13:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"argumentTypes": null,
																						"arguments": [
																							{
																								"argumentTypes": null,
																								"id": 1746,
																								"name": "ownerFeeShare",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1726,
																								"src": "12883:13:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"expression": {
																								"argumentTypes": null,
																								"arguments": [
																									{
																										"argumentTypes": null,
																										"id": 1743,
																										"name": "referrerInputFeeShare",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1630,
																										"src": "12856:21:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									],
																									"expression": {
																										"argumentTypes": null,
																										"id": 1741,
																										"name": "FEE_DENOMINATOR",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 435,
																										"src": "12836:15:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"id": 1742,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberName": "sub",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 3190,
																									"src": "12836:19:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																										"typeString": "function (uint256,uint256) pure returns (uint256)"
																									}
																								},
																								"id": 1744,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "12836:42:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 1745,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "mul",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 3218,
																							"src": "12836:46:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																								"typeString": "function (uint256,uint256) pure returns (uint256)"
																							}
																						},
																						"id": 1747,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "12836:61:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12820:77:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1749,
																				"nodeType": "ExpressionStatement",
																				"src": "12820:77:1"
																			},
																			{
																				"condition": {
																					"argumentTypes": null,
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1752,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"argumentTypes": null,
																						"id": 1750,
																						"name": "amount0In",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1553,
																						"src": "12914:9:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": ">",
																					"rightExpression": {
																						"argumentTypes": null,
																						"hexValue": "30",
																						"id": 1751,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12926:1:1",
																						"subdenomination": null,
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "12914:13:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": null,
																				"id": 1786,
																				"nodeType": "IfStatement",
																				"src": "12910:264:1",
																				"trueBody": {
																					"id": 1785,
																					"nodeType": "Block",
																					"src": "12929:245:1",
																					"statements": [
																						{
																							"expression": {
																								"argumentTypes": null,
																								"id": 1766,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftHandSide": {
																									"argumentTypes": null,
																									"id": 1753,
																									"name": "fee",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1626,
																									"src": "12944:3:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "Assignment",
																								"operator": "=",
																								"rightHandSide": {
																									"argumentTypes": null,
																									"commonType": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									},
																									"id": 1765,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftExpression": {
																										"argumentTypes": null,
																										"arguments": [
																											{
																												"argumentTypes": null,
																												"id": 1759,
																												"name": "_token0FeePercent",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 1447,
																												"src": "12983:17:1",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint16",
																													"typeString": "uint16"
																												}
																											}
																										],
																										"expression": {
																											"argumentTypes": [
																												{
																													"typeIdentifier": "t_uint16",
																													"typeString": "uint16"
																												}
																											],
																											"expression": {
																												"argumentTypes": null,
																												"arguments": [
																													{
																														"argumentTypes": null,
																														"id": 1756,
																														"name": "ownerFeeShare",
																														"nodeType": "Identifier",
																														"overloadedDeclarations": [],
																														"referencedDeclaration": 1726,
																														"src": "12964:13:1",
																														"typeDescriptions": {
																															"typeIdentifier": "t_uint256",
																															"typeString": "uint256"
																														}
																													}
																												],
																												"expression": {
																													"argumentTypes": [
																														{
																															"typeIdentifier": "t_uint256",
																															"typeString": "uint256"
																														}
																													],
																													"expression": {
																														"argumentTypes": null,
																														"id": 1754,
																														"name": "amount0In",
																														"nodeType": "Identifier",
																														"overloadedDeclarations": [],
																														"referencedDeclaration": 1553,
																														"src": "12950:9:1",
																														"typeDescriptions": {
																															"typeIdentifier": "t_uint256",
																															"typeString": "uint256"
																														}
																													},
																													"id": 1755,
																													"isConstant": false,
																													"isLValue": false,
																													"isPure": false,
																													"lValueRequested": false,
																													"memberName": "mul",
																													"nodeType": "MemberAccess",
																													"referencedDeclaration": 3218,
																													"src": "12950:13:1",
																													"typeDescriptions": {
																														"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																														"typeString": "function (uint256,uint256) pure returns (uint256)"
																													}
																												},
																												"id": 1757,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": false,
																												"kind": "functionCall",
																												"lValueRequested": false,
																												"names": [],
																												"nodeType": "FunctionCall",
																												"src": "12950:28:1",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											},
																											"id": 1758,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": false,
																											"lValueRequested": false,
																											"memberName": "mul",
																											"nodeType": "MemberAccess",
																											"referencedDeclaration": 3218,
																											"src": "12950:32:1",
																											"typeDescriptions": {
																												"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																												"typeString": "function (uint256,uint256) pure returns (uint256)"
																											}
																										},
																										"id": 1760,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"kind": "functionCall",
																										"lValueRequested": false,
																										"names": [],
																										"nodeType": "FunctionCall",
																										"src": "12950:51:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"nodeType": "BinaryOperation",
																									"operator": "/",
																									"rightExpression": {
																										"argumentTypes": null,
																										"components": [
																											{
																												"argumentTypes": null,
																												"commonType": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												},
																												"id": 1763,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": true,
																												"lValueRequested": false,
																												"leftExpression": {
																													"argumentTypes": null,
																													"id": 1761,
																													"name": "FEE_DENOMINATOR",
																													"nodeType": "Identifier",
																													"overloadedDeclarations": [],
																													"referencedDeclaration": 435,
																													"src": "13005:15:1",
																													"typeDescriptions": {
																														"typeIdentifier": "t_uint256",
																														"typeString": "uint256"
																													}
																												},
																												"nodeType": "BinaryOperation",
																												"operator": "**",
																												"rightExpression": {
																													"argumentTypes": null,
																													"hexValue": "33",
																													"id": 1762,
																													"isConstant": false,
																													"isLValue": false,
																													"isPure": true,
																													"kind": "number",
																													"lValueRequested": false,
																													"nodeType": "Literal",
																													"src": "13024:1:1",
																													"subdenomination": null,
																													"typeDescriptions": {
																														"typeIdentifier": "t_rational_3_by_1",
																														"typeString": "int_const 3"
																													},
																													"value": "3"
																												},
																												"src": "13005:20:1",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											}
																										],
																										"id": 1764,
																										"isConstant": false,
																										"isInlineArray": false,
																										"isLValue": false,
																										"isPure": true,
																										"lValueRequested": false,
																										"nodeType": "TupleExpression",
																										"src": "13004:22:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"src": "12950:76:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "12944:82:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 1767,
																							"nodeType": "ExpressionStatement",
																							"src": "12944:82:1"
																						},
																						{
																							"expression": {
																								"argumentTypes": null,
																								"id": 1776,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftHandSide": {
																									"argumentTypes": null,
																									"expression": {
																										"argumentTypes": null,
																										"id": 1768,
																										"name": "tokensData",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1418,
																										"src": "13041:10:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_struct$_TokensData_$1348_memory_ptr",
																											"typeString": "struct TenkStablePair.TokensData memory"
																										}
																									},
																									"id": 1770,
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": true,
																									"memberName": "remainingFee0",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 1345,
																									"src": "13041:24:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "Assignment",
																								"operator": "=",
																								"rightHandSide": {
																									"argumentTypes": null,
																									"arguments": [
																										{
																											"argumentTypes": null,
																											"id": 1774,
																											"name": "fee",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 1626,
																											"src": "13097:3:1",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										}
																									],
																									"expression": {
																										"argumentTypes": [
																											{
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										],
																										"expression": {
																											"argumentTypes": null,
																											"expression": {
																												"argumentTypes": null,
																												"id": 1771,
																												"name": "tokensData",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 1418,
																												"src": "13068:10:1",
																												"typeDescriptions": {
																													"typeIdentifier": "t_struct$_TokensData_$1348_memory_ptr",
																													"typeString": "struct TenkStablePair.TokensData memory"
																												}
																											},
																											"id": 1772,
																											"isConstant": false,
																											"isLValue": true,
																											"isPure": false,
																											"lValueRequested": false,
																											"memberName": "remainingFee0",
																											"nodeType": "MemberAccess",
																											"referencedDeclaration": 1345,
																											"src": "13068:24:1",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"id": 1773,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberName": "sub",
																										"nodeType": "MemberAccess",
																										"referencedDeclaration": 3190,
																										"src": "13068:28:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																											"typeString": "function (uint256,uint256) pure returns (uint256)"
																										}
																									},
																									"id": 1775,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"kind": "functionCall",
																									"lValueRequested": false,
																									"names": [],
																									"nodeType": "FunctionCall",
																									"src": "13068:33:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "13041:60:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 1777,
																							"nodeType": "ExpressionStatement",
																							"src": "13041:60:1"
																						},
																						{
																							"expression": {
																								"argumentTypes": null,
																								"arguments": [
																									{
																										"argumentTypes": null,
																										"expression": {
																											"argumentTypes": null,
																											"id": 1779,
																											"name": "tokensData",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 1418,
																											"src": "13130:10:1",
																											"typeDescriptions": {
																												"typeIdentifier": "t_struct$_TokensData_$1348_memory_ptr",
																												"typeString": "struct TenkStablePair.TokensData memory"
																											}
																										},
																										"id": 1780,
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberName": "token0",
																										"nodeType": "MemberAccess",
																										"referencedDeclaration": 1333,
																										"src": "13130:17:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									},
																									{
																										"argumentTypes": null,
																										"id": 1781,
																										"name": "feeTo",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1728,
																										"src": "13149:5:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									},
																									{
																										"argumentTypes": null,
																										"id": 1782,
																										"name": "fee",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1626,
																										"src": "13156:3:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										},
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										},
																										{
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									],
																									"id": 1778,
																									"name": "_safeTransfer",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 550,
																									"src": "13116:13:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																										"typeString": "function (address,address,uint256)"
																									}
																								},
																								"id": 1783,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "13116:44:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1784,
																							"nodeType": "ExpressionStatement",
																							"src": "13116:44:1"
																						}
																					]
																				}
																			},
																			{
																				"condition": {
																					"argumentTypes": null,
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1789,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"argumentTypes": null,
																						"id": 1787,
																						"name": "amount1In",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1573,
																						"src": "13190:9:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": ">",
																					"rightExpression": {
																						"argumentTypes": null,
																						"hexValue": "30",
																						"id": 1788,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "13202:1:1",
																						"subdenomination": null,
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "13190:13:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": null,
																				"id": 1823,
																				"nodeType": "IfStatement",
																				"src": "13186:264:1",
																				"trueBody": {
																					"id": 1822,
																					"nodeType": "Block",
																					"src": "13205:245:1",
																					"statements": [
																						{
																							"expression": {
																								"argumentTypes": null,
																								"id": 1803,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftHandSide": {
																									"argumentTypes": null,
																									"id": 1790,
																									"name": "fee",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1626,
																									"src": "13220:3:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "Assignment",
																								"operator": "=",
																								"rightHandSide": {
																									"argumentTypes": null,
																									"commonType": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									},
																									"id": 1802,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftExpression": {
																										"argumentTypes": null,
																										"arguments": [
																											{
																												"argumentTypes": null,
																												"id": 1796,
																												"name": "_token1FeePercent",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 1449,
																												"src": "13259:17:1",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint16",
																													"typeString": "uint16"
																												}
																											}
																										],
																										"expression": {
																											"argumentTypes": [
																												{
																													"typeIdentifier": "t_uint16",
																													"typeString": "uint16"
																												}
																											],
																											"expression": {
																												"argumentTypes": null,
																												"arguments": [
																													{
																														"argumentTypes": null,
																														"id": 1793,
																														"name": "ownerFeeShare",
																														"nodeType": "Identifier",
																														"overloadedDeclarations": [],
																														"referencedDeclaration": 1726,
																														"src": "13240:13:1",
																														"typeDescriptions": {
																															"typeIdentifier": "t_uint256",
																															"typeString": "uint256"
																														}
																													}
																												],
																												"expression": {
																													"argumentTypes": [
																														{
																															"typeIdentifier": "t_uint256",
																															"typeString": "uint256"
																														}
																													],
																													"expression": {
																														"argumentTypes": null,
																														"id": 1791,
																														"name": "amount1In",
																														"nodeType": "Identifier",
																														"overloadedDeclarations": [],
																														"referencedDeclaration": 1573,
																														"src": "13226:9:1",
																														"typeDescriptions": {
																															"typeIdentifier": "t_uint256",
																															"typeString": "uint256"
																														}
																													},
																													"id": 1792,
																													"isConstant": false,
																													"isLValue": false,
																													"isPure": false,
																													"lValueRequested": false,
																													"memberName": "mul",
																													"nodeType": "MemberAccess",
																													"referencedDeclaration": 3218,
																													"src": "13226:13:1",
																													"typeDescriptions": {
																														"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																														"typeString": "function (uint256,uint256) pure returns (uint256)"
																													}
																												},
																												"id": 1794,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": false,
																												"kind": "functionCall",
																												"lValueRequested": false,
																												"names": [],
																												"nodeType": "FunctionCall",
																												"src": "13226:28:1",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											},
																											"id": 1795,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": false,
																											"lValueRequested": false,
																											"memberName": "mul",
																											"nodeType": "MemberAccess",
																											"referencedDeclaration": 3218,
																											"src": "13226:32:1",
																											"typeDescriptions": {
																												"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																												"typeString": "function (uint256,uint256) pure returns (uint256)"
																											}
																										},
																										"id": 1797,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"kind": "functionCall",
																										"lValueRequested": false,
																										"names": [],
																										"nodeType": "FunctionCall",
																										"src": "13226:51:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"nodeType": "BinaryOperation",
																									"operator": "/",
																									"rightExpression": {
																										"argumentTypes": null,
																										"components": [
																											{
																												"argumentTypes": null,
																												"commonType": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												},
																												"id": 1800,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": true,
																												"lValueRequested": false,
																												"leftExpression": {
																													"argumentTypes": null,
																													"id": 1798,
																													"name": "FEE_DENOMINATOR",
																													"nodeType": "Identifier",
																													"overloadedDeclarations": [],
																													"referencedDeclaration": 435,
																													"src": "13281:15:1",
																													"typeDescriptions": {
																														"typeIdentifier": "t_uint256",
																														"typeString": "uint256"
																													}
																												},
																												"nodeType": "BinaryOperation",
																												"operator": "**",
																												"rightExpression": {
																													"argumentTypes": null,
																													"hexValue": "33",
																													"id": 1799,
																													"isConstant": false,
																													"isLValue": false,
																													"isPure": true,
																													"kind": "number",
																													"lValueRequested": false,
																													"nodeType": "Literal",
																													"src": "13300:1:1",
																													"subdenomination": null,
																													"typeDescriptions": {
																														"typeIdentifier": "t_rational_3_by_1",
																														"typeString": "int_const 3"
																													},
																													"value": "3"
																												},
																												"src": "13281:20:1",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											}
																										],
																										"id": 1801,
																										"isConstant": false,
																										"isInlineArray": false,
																										"isLValue": false,
																										"isPure": true,
																										"lValueRequested": false,
																										"nodeType": "TupleExpression",
																										"src": "13280:22:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"src": "13226:76:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "13220:82:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 1804,
																							"nodeType": "ExpressionStatement",
																							"src": "13220:82:1"
																						},
																						{
																							"expression": {
																								"argumentTypes": null,
																								"id": 1813,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftHandSide": {
																									"argumentTypes": null,
																									"expression": {
																										"argumentTypes": null,
																										"id": 1805,
																										"name": "tokensData",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1418,
																										"src": "13317:10:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_struct$_TokensData_$1348_memory_ptr",
																											"typeString": "struct TenkStablePair.TokensData memory"
																										}
																									},
																									"id": 1807,
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": true,
																									"memberName": "remainingFee1",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 1347,
																									"src": "13317:24:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "Assignment",
																								"operator": "=",
																								"rightHandSide": {
																									"argumentTypes": null,
																									"arguments": [
																										{
																											"argumentTypes": null,
																											"id": 1811,
																											"name": "fee",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 1626,
																											"src": "13373:3:1",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										}
																									],
																									"expression": {
																										"argumentTypes": [
																											{
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										],
																										"expression": {
																											"argumentTypes": null,
																											"expression": {
																												"argumentTypes": null,
																												"id": 1808,
																												"name": "tokensData",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 1418,
																												"src": "13344:10:1",
																												"typeDescriptions": {
																													"typeIdentifier": "t_struct$_TokensData_$1348_memory_ptr",
																													"typeString": "struct TenkStablePair.TokensData memory"
																												}
																											},
																											"id": 1809,
																											"isConstant": false,
																											"isLValue": true,
																											"isPure": false,
																											"lValueRequested": false,
																											"memberName": "remainingFee1",
																											"nodeType": "MemberAccess",
																											"referencedDeclaration": 1347,
																											"src": "13344:24:1",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"id": 1810,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberName": "sub",
																										"nodeType": "MemberAccess",
																										"referencedDeclaration": 3190,
																										"src": "13344:28:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																											"typeString": "function (uint256,uint256) pure returns (uint256)"
																										}
																									},
																									"id": 1812,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"kind": "functionCall",
																									"lValueRequested": false,
																									"names": [],
																									"nodeType": "FunctionCall",
																									"src": "13344:33:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "13317:60:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 1814,
																							"nodeType": "ExpressionStatement",
																							"src": "13317:60:1"
																						},
																						{
																							"expression": {
																								"argumentTypes": null,
																								"arguments": [
																									{
																										"argumentTypes": null,
																										"expression": {
																											"argumentTypes": null,
																											"id": 1816,
																											"name": "tokensData",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 1418,
																											"src": "13406:10:1",
																											"typeDescriptions": {
																												"typeIdentifier": "t_struct$_TokensData_$1348_memory_ptr",
																												"typeString": "struct TenkStablePair.TokensData memory"
																											}
																										},
																										"id": 1817,
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberName": "token1",
																										"nodeType": "MemberAccess",
																										"referencedDeclaration": 1335,
																										"src": "13406:17:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									},
																									{
																										"argumentTypes": null,
																										"id": 1818,
																										"name": "feeTo",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1728,
																										"src": "13425:5:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									},
																									{
																										"argumentTypes": null,
																										"id": 1819,
																										"name": "fee",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1626,
																										"src": "13432:3:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										},
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										},
																										{
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									],
																									"id": 1815,
																									"name": "_safeTransfer",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 550,
																									"src": "13392:13:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																										"typeString": "function (address,address,uint256)"
																									}
																								},
																								"id": 1820,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "13392:44:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1821,
																							"nodeType": "ExpressionStatement",
																							"src": "13392:44:1"
																						}
																					]
																				}
																			}
																		]
																	}
																}
															]
														}
													},
													{
														"condition": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1830,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1828,
																"name": "amount0In",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1553,
																"src": "13516:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1829,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13528:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "13516:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": null,
														"id": 1845,
														"nodeType": "IfStatement",
														"src": "13512:91:1",
														"trueBody": {
															"expression": {
																"argumentTypes": null,
																"id": 1843,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1831,
																		"name": "tokensData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1418,
																		"src": "13531:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_TokensData_$1348_memory_ptr",
																			"typeString": "struct TenkStablePair.TokensData memory"
																		}
																	},
																	"id": 1833,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "balance0",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1341,
																	"src": "13531:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 1840,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3264,
																					"src": "13597:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_TenkStablePair_$2502",
																						"typeString": "contract TenkStablePair"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_TenkStablePair_$2502",
																						"typeString": "contract TenkStablePair"
																					}
																				],
																				"id": 1839,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "13589:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": "address"
																			},
																			"id": 1841,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "13589:13:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"expression": {
																						"argumentTypes": null,
																						"id": 1835,
																						"name": "tokensData",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1418,
																						"src": "13560:10:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_TokensData_$1348_memory_ptr",
																							"typeString": "struct TenkStablePair.TokensData memory"
																						}
																					},
																					"id": 1836,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "token0",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1333,
																					"src": "13560:17:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1834,
																				"name": "IERC20",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3068,
																				"src": "13553:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_IERC20_$3068_$",
																					"typeString": "type(contract IERC20)"
																				}
																			},
																			"id": 1837,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "13553:25:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$3068",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 1838,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "balanceOf",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3029,
																		"src": "13553:35:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																			"typeString": "function (address) view external returns (uint256)"
																		}
																	},
																	"id": 1842,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "13553:50:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "13531:72:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1844,
															"nodeType": "ExpressionStatement",
															"src": "13531:72:1"
														}
													},
													{
														"condition": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1848,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1846,
																"name": "amount1In",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1573,
																"src": "13616:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1847,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13628:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "13616:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": null,
														"id": 1863,
														"nodeType": "IfStatement",
														"src": "13612:91:1",
														"trueBody": {
															"expression": {
																"argumentTypes": null,
																"id": 1861,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1849,
																		"name": "tokensData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1418,
																		"src": "13631:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_TokensData_$1348_memory_ptr",
																			"typeString": "struct TenkStablePair.TokensData memory"
																		}
																	},
																	"id": 1851,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "balance1",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1343,
																	"src": "13631:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 1858,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3264,
																					"src": "13697:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_TenkStablePair_$2502",
																						"typeString": "contract TenkStablePair"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_TenkStablePair_$2502",
																						"typeString": "contract TenkStablePair"
																					}
																				],
																				"id": 1857,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "13689:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": "address"
																			},
																			"id": 1859,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "13689:13:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"expression": {
																						"argumentTypes": null,
																						"id": 1853,
																						"name": "tokensData",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1418,
																						"src": "13660:10:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_TokensData_$1348_memory_ptr",
																							"typeString": "struct TenkStablePair.TokensData memory"
																						}
																					},
																					"id": 1854,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "token1",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1335,
																					"src": "13660:17:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1852,
																				"name": "IERC20",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3068,
																				"src": "13653:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_IERC20_$3068_$",
																					"typeString": "type(contract IERC20)"
																				}
																			},
																			"id": 1855,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "13653:25:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$3068",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 1856,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "balanceOf",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3029,
																		"src": "13653:35:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																			"typeString": "function (address) view external returns (uint256)"
																		}
																	},
																	"id": 1860,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "13653:50:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "13631:72:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1862,
															"nodeType": "ExpressionStatement",
															"src": "13631:72:1"
														}
													}
												]
											},
											{
												"id": 1900,
												"nodeType": "Block",
												"src": "13717:341:1",
												"statements": [
													{
														"assignments": [
															1866
														],
														"declarations": [
															{
																"constant": false,
																"id": 1866,
																"name": "balance0Adjusted",
																"nodeType": "VariableDeclaration",
																"scope": 1900,
																"src": "13789:21:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1865,
																	"name": "uint",
																	"nodeType": "ElementaryTypeName",
																	"src": "13789:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"value": null,
																"visibility": "internal"
															}
														],
														"id": 1873,
														"initialValue": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1870,
																		"name": "tokensData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1418,
																		"src": "13837:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_TokensData_$1348_memory_ptr",
																			"typeString": "struct TenkStablePair.TokensData memory"
																		}
																	},
																	"id": 1871,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "remainingFee0",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1345,
																	"src": "13837:24:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1867,
																		"name": "tokensData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1418,
																		"src": "13813:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_TokensData_$1348_memory_ptr",
																			"typeString": "struct TenkStablePair.TokensData memory"
																		}
																	},
																	"id": 1868,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balance0",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1341,
																	"src": "13813:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1869,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 3190,
																"src": "13813:23:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1872,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13813:49:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "13789:73:1"
													},
													{
														"assignments": [
															1875
														],
														"declarations": [
															{
																"constant": false,
																"id": 1875,
																"name": "balance1Adjusted",
																"nodeType": "VariableDeclaration",
																"scope": 1900,
																"src": "13871:21:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1874,
																	"name": "uint",
																	"nodeType": "ElementaryTypeName",
																	"src": "13871:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"value": null,
																"visibility": "internal"
															}
														],
														"id": 1882,
														"initialValue": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1879,
																		"name": "tokensData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1418,
																		"src": "13919:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_TokensData_$1348_memory_ptr",
																			"typeString": "struct TenkStablePair.TokensData memory"
																		}
																	},
																	"id": 1880,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "remainingFee1",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1347,
																	"src": "13919:24:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1876,
																		"name": "tokensData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1418,
																		"src": "13895:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_TokensData_$1348_memory_ptr",
																			"typeString": "struct TenkStablePair.TokensData memory"
																		}
																	},
																	"id": 1877,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balance1",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1343,
																	"src": "13895:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1878,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 3190,
																"src": "13895:23:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1881,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13895:49:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "13871:73:1"
													},
													{
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1896,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 1885,
																				"name": "balance0Adjusted",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1866,
																				"src": "13964:16:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"argumentTypes": null,
																				"id": 1886,
																				"name": "balance1Adjusted",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1875,
																				"src": "13982:16:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1884,
																			"name": "_k",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1992,
																			"src": "13961:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256,uint256) view returns (uint256)"
																			}
																		},
																		"id": 1887,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "13961:38:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"id": 1890,
																						"name": "_reserve0",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1443,
																						"src": "14011:9:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint112",
																							"typeString": "uint112"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint112",
																							"typeString": "uint112"
																						}
																					],
																					"id": 1889,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "14006:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": "uint"
																				},
																				"id": 1891,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "14006:15:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"id": 1893,
																						"name": "_reserve1",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1445,
																						"src": "14028:9:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint112",
																							"typeString": "uint112"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint112",
																							"typeString": "uint112"
																						}
																					],
																					"id": 1892,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "14023:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": "uint"
																				},
																				"id": 1894,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "14023:15:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1888,
																			"name": "_k",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1992,
																			"src": "14003:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256,uint256) view returns (uint256)"
																			}
																		},
																		"id": 1895,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "14003:36:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "13961:78:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"argumentTypes": null,
																	"hexValue": "31306b3a204b",
																	"id": 1897,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14041:8:1",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_faf345bc4550d753ee8405d109262e53226f80476a7adfdae091005383ed8f96",
																		"typeString": "literal_string \"10k: K\""
																	},
																	"value": "10k: K"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_faf345bc4550d753ee8405d109262e53226f80476a7adfdae091005383ed8f96",
																		"typeString": "literal_string \"10k: K\""
																	}
																],
																"id": 1883,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	3237,
																	3238
																],
																"referencedDeclaration": 3238,
																"src": "13953:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1898,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13953:97:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1899,
														"nodeType": "ExpressionStatement",
														"src": "13953:97:1"
													}
												]
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1902,
																"name": "tokensData",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1418,
																"src": "14072:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TokensData_$1348_memory_ptr",
																	"typeString": "struct TenkStablePair.TokensData memory"
																}
															},
															"id": 1903,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "balance0",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1341,
															"src": "14072:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1904,
																"name": "tokensData",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1418,
																"src": "14093:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TokensData_$1348_memory_ptr",
																	"typeString": "struct TenkStablePair.TokensData memory"
																}
															},
															"id": 1905,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "balance1",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1343,
															"src": "14093:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1901,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 889,
														"src": "14064:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 1906,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14064:49:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1907,
												"nodeType": "ExpressionStatement",
												"src": "14064:49:1"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1909,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3234,
																"src": "14130:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1910,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "14130:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1911,
															"name": "amount0In",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1553,
															"src": "14142:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1912,
															"name": "amount1In",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1573,
															"src": "14153:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1913,
																"name": "tokensData",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1418,
																"src": "14164:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TokensData_$1348_memory_ptr",
																	"typeString": "struct TenkStablePair.TokensData memory"
																}
															},
															"id": 1914,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "amount0Out",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1337,
															"src": "14164:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1915,
																"name": "tokensData",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1418,
																"src": "14187:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TokensData_$1348_memory_ptr",
																	"typeString": "struct TenkStablePair.TokensData memory"
																}
															},
															"id": 1916,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "amount1Out",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1339,
															"src": "14187:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1917,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1420,
															"src": "14210:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1908,
														"name": "Swap",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															602
														],
														"referencedDeclaration": 602,
														"src": "14125:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (address,uint256,uint256,uint256,uint256,address)"
														}
													},
													"id": 1918,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14125:88:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1919,
												"nodeType": "EmitStatement",
												"src": "14120:93:1"
											}
										]
									},
									"documentation": null,
									"id": 1921,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1427,
											"modifierName": {
												"argumentTypes": null,
												"id": 1426,
												"name": "lock",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 480,
												"src": "10308:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "10308:4:1"
										}
									],
									"name": "_swap",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1425,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1418,
												"name": "tokensData",
												"nodeType": "VariableDeclaration",
												"scope": 1921,
												"src": "10220:28:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TokensData_$1348_memory_ptr",
													"typeString": "struct TenkStablePair.TokensData"
												},
												"typeName": {
													"contractScope": null,
													"id": 1417,
													"name": "TokensData",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1348,
													"src": "10220:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokensData_$1348_storage_ptr",
														"typeString": "struct TenkStablePair.TokensData"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1420,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1921,
												"src": "10250:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1419,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10250:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1422,
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 1921,
												"src": "10262:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1421,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "10262:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1424,
												"name": "referrer",
												"nodeType": "VariableDeclaration",
												"scope": 1921,
												"src": "10281:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1423,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10281:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10219:79:1"
									},
									"returnParameters": {
										"id": 1428,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10313:0:1"
									},
									"scope": 2502,
									"src": "10205:4014:1",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1991,
										"nodeType": "Block",
										"src": "14296:341:1",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"id": 1930,
													"name": "stableSwap",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 456,
													"src": "14307:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1985,
												"nodeType": "IfStatement",
												"src": "14303:293:1",
												"trueBody": {
													"id": 1984,
													"nodeType": "Block",
													"src": "14319:277:1",
													"statements": [
														{
															"assignments": [
																1932
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1932,
																	"name": "_x",
																	"nodeType": "VariableDeclaration",
																	"scope": 1984,
																	"src": "14328:7:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1931,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "14328:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 1939,
															"initialValue": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1938,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"hexValue": "31653138",
																			"id": 1935,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14351:4:1",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1000000000000000000_by_1",
																				"typeString": "int_const 1000000000000000000"
																			},
																			"value": "1e18"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_1000000000000000000_by_1",
																				"typeString": "int_const 1000000000000000000"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"id": 1933,
																			"name": "balance0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1923,
																			"src": "14338:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1934,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3218,
																		"src": "14338:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1936,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "14338:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 1937,
																	"name": "precisionMultiplier0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 450,
																	"src": "14359:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "14338:41:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "14328:51:1"
														},
														{
															"assignments": [
																1941
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1941,
																	"name": "_y",
																	"nodeType": "VariableDeclaration",
																	"scope": 1984,
																	"src": "14388:7:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1940,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "14388:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 1948,
															"initialValue": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1947,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"hexValue": "31653138",
																			"id": 1944,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14411:4:1",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1000000000000000000_by_1",
																				"typeString": "int_const 1000000000000000000"
																			},
																			"value": "1e18"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_1000000000000000000_by_1",
																				"typeString": "int_const 1000000000000000000"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"id": 1942,
																			"name": "balance1",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1925,
																			"src": "14398:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1943,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3218,
																		"src": "14398:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1945,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "14398:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 1946,
																	"name": "precisionMultiplier1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 452,
																	"src": "14419:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "14398:41:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "14388:51:1"
														},
														{
															"assignments": [
																1950
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1950,
																	"name": "_a",
																	"nodeType": "VariableDeclaration",
																	"scope": 1984,
																	"src": "14448:7:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1949,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "14448:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 1958,
															"initialValue": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1957,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"components": [
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 1953,
																					"name": "_y",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1941,
																					"src": "14466:2:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 1951,
																					"name": "_x",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1932,
																					"src": "14459:2:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1952,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "mul",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 3218,
																				"src": "14459:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1954,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "14459:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1955,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "14458:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "31653138",
																	"id": 1956,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14473:4:1",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	},
																	"value": "1e18"
																},
																"src": "14458:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "14448:29:1"
														},
														{
															"assignments": [
																1960
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1960,
																	"name": "_b",
																	"nodeType": "VariableDeclaration",
																	"scope": 1984,
																	"src": "14486:7:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1959,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "14486:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 1976,
															"initialValue": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1974,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 1971,
																					"name": "_y",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1941,
																					"src": "14527:2:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 1969,
																					"name": "_y",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1941,
																					"src": "14520:2:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1970,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "mul",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 3218,
																				"src": "14520:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1972,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "14520:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "31653138",
																			"id": 1973,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14533:4:1",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1000000000000000000_by_1",
																				"typeString": "int_const 1000000000000000000"
																			},
																			"value": "1e18"
																		},
																		"src": "14520:17:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"components": [
																			{
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1966,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"arguments": [
																						{
																							"argumentTypes": null,
																							"id": 1963,
																							"name": "_x",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1932,
																							"src": "14504:2:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"expression": {
																							"argumentTypes": null,
																							"id": 1961,
																							"name": "_x",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1932,
																							"src": "14497:2:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 1962,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "mul",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 3218,
																						"src": "14497:6:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 1964,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "14497:10:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"argumentTypes": null,
																					"hexValue": "31653138",
																					"id": 1965,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "14510:4:1",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1000000000000000000_by_1",
																						"typeString": "int_const 1000000000000000000"
																					},
																					"value": "1e18"
																				},
																				"src": "14497:17:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1967,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "14496:19:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1968,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "add",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3168,
																	"src": "14496:23:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1975,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14496:42:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "14486:52:1"
														},
														{
															"expression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1982,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1979,
																			"name": "_b",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1960,
																			"src": "14562:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"id": 1977,
																			"name": "_a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1950,
																			"src": "14555:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1978,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3218,
																		"src": "14555:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1980,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "14555:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "31653138",
																	"id": 1981,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14568:4:1",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	},
																	"value": "1e18"
																},
																"src": "14555:17:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1929,
															"id": 1983,
															"nodeType": "Return",
															"src": "14547:25:1"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1988,
															"name": "balance1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1925,
															"src": "14622:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 1986,
															"name": "balance0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1923,
															"src": "14609:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1987,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "mul",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3218,
														"src": "14609:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1989,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14609:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1929,
												"id": 1990,
												"nodeType": "Return",
												"src": "14602:29:1"
											}
										]
									},
									"documentation": null,
									"id": 1992,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_k",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1926,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1923,
												"name": "balance0",
												"nodeType": "VariableDeclaration",
												"scope": 1992,
												"src": "14237:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1922,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "14237:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1925,
												"name": "balance1",
												"nodeType": "VariableDeclaration",
												"scope": 1992,
												"src": "14252:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1924,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "14252:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14236:30:1"
									},
									"returnParameters": {
										"id": 1929,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1928,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1992,
												"src": "14290:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1927,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "14290:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14289:6:1"
									},
									"scope": 2502,
									"src": "14225:412:1",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2098,
										"nodeType": "Block",
										"src": "14714:479:1",
										"statements": [
											{
												"body": {
													"id": 2094,
													"nodeType": "Block",
													"src": "14752:421:1",
													"statements": [
														{
															"assignments": [
																2014
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2014,
																	"name": "y_prev",
																	"nodeType": "VariableDeclaration",
																	"scope": 2094,
																	"src": "14761:11:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2013,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "14761:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 2016,
															"initialValue": {
																"argumentTypes": null,
																"id": 2015,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1998,
																"src": "14775:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "14761:15:1"
														},
														{
															"assignments": [
																2018
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2018,
																	"name": "k",
																	"nodeType": "VariableDeclaration",
																	"scope": 2094,
																	"src": "14785:6:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2017,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "14785:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 2023,
															"initialValue": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 2020,
																		"name": "x0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1994,
																		"src": "14797:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 2021,
																		"name": "y",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1998,
																		"src": "14801:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2019,
																	"name": "_f",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2139,
																	"src": "14794:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 2022,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14794:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "14785:18:1"
														},
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2026,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 2024,
																	"name": "k",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2018,
																	"src": "14816:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 2025,
																	"name": "xy",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1996,
																	"src": "14820:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "14816:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 2068,
																"nodeType": "Block",
																"src": "14909:79:1",
																"statements": [
																	{
																		"assignments": [
																			2049
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 2049,
																				"name": "dy",
																				"nodeType": "VariableDeclaration",
																				"scope": 2068,
																				"src": "14920:7:1",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 2048,
																					"name": "uint",
																					"nodeType": "ElementaryTypeName",
																					"src": "14920:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 2061,
																		"initialValue": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2060,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2055,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"components": [
																						{
																							"argumentTypes": null,
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 2052,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"argumentTypes": null,
																								"id": 2050,
																								"name": "k",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2018,
																								"src": "14931:1:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "-",
																							"rightExpression": {
																								"argumentTypes": null,
																								"id": 2051,
																								"name": "xy",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1996,
																								"src": "14935:2:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "14931:6:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 2053,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "14930:8:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"argumentTypes": null,
																					"hexValue": "31653138",
																					"id": 2054,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "14941:4:1",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1000000000000000000_by_1",
																						"typeString": "int_const 1000000000000000000"
																					},
																					"value": "1e18"
																				},
																				"src": "14930:15:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"id": 2057,
																						"name": "x0",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1994,
																						"src": "14951:2:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					{
																						"argumentTypes": null,
																						"id": 2058,
																						"name": "y",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1998,
																						"src": "14955:1:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"id": 2056,
																					"name": "_d",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2173,
																					"src": "14948:2:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 2059,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "14948:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "14930:27:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "14920:37:1"
																	},
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 2066,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"id": 2062,
																				"name": "y",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1998,
																				"src": "14968:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2065,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"id": 2063,
																					"name": "y",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1998,
																					"src": "14972:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"argumentTypes": null,
																					"id": 2064,
																					"name": "dy",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2049,
																					"src": "14976:2:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "14972:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "14968:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2067,
																		"nodeType": "ExpressionStatement",
																		"src": "14968:10:1"
																	}
																]
															},
															"id": 2069,
															"nodeType": "IfStatement",
															"src": "14812:176:1",
															"trueBody": {
																"id": 2047,
																"nodeType": "Block",
																"src": "14824:79:1",
																"statements": [
																	{
																		"assignments": [
																			2028
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 2028,
																				"name": "dy",
																				"nodeType": "VariableDeclaration",
																				"scope": 2047,
																				"src": "14835:7:1",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 2027,
																					"name": "uint",
																					"nodeType": "ElementaryTypeName",
																					"src": "14835:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 2040,
																		"initialValue": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2039,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2034,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"components": [
																						{
																							"argumentTypes": null,
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 2031,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"argumentTypes": null,
																								"id": 2029,
																								"name": "xy",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1996,
																								"src": "14846:2:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "-",
																							"rightExpression": {
																								"argumentTypes": null,
																								"id": 2030,
																								"name": "k",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2018,
																								"src": "14851:1:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "14846:6:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 2032,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "14845:8:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"argumentTypes": null,
																					"hexValue": "31653138",
																					"id": 2033,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "14856:4:1",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1000000000000000000_by_1",
																						"typeString": "int_const 1000000000000000000"
																					},
																					"value": "1e18"
																				},
																				"src": "14845:15:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"id": 2036,
																						"name": "x0",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1994,
																						"src": "14866:2:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					{
																						"argumentTypes": null,
																						"id": 2037,
																						"name": "y",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1998,
																						"src": "14870:1:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"id": 2035,
																					"name": "_d",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2173,
																					"src": "14863:2:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 2038,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "14863:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "14845:27:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "14835:37:1"
																	},
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 2045,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"id": 2041,
																				"name": "y",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1998,
																				"src": "14883:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2044,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"id": 2042,
																					"name": "y",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1998,
																					"src": "14887:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "+",
																				"rightExpression": {
																					"argumentTypes": null,
																					"id": 2043,
																					"name": "dy",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2028,
																					"src": "14891:2:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "14887:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "14883:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2046,
																		"nodeType": "ExpressionStatement",
																		"src": "14883:10:1"
																	}
																]
															}
														},
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2072,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 2070,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1998,
																	"src": "15000:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 2071,
																	"name": "y_prev",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2014,
																	"src": "15004:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "15000:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 2092,
																"nodeType": "Block",
																"src": "15092:74:1",
																"statements": [
																	{
																		"condition": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2087,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2085,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"id": 2083,
																					"name": "y_prev",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2014,
																					"src": "15107:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"argumentTypes": null,
																					"id": 2084,
																					"name": "y",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1998,
																					"src": "15116:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "15107:10:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<=",
																			"rightExpression": {
																				"argumentTypes": null,
																				"hexValue": "31",
																				"id": 2086,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "15121:1:1",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "15107:15:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseBody": null,
																		"id": 2091,
																		"nodeType": "IfStatement",
																		"src": "15103:54:1",
																		"trueBody": {
																			"id": 2090,
																			"nodeType": "Block",
																			"src": "15124:33:1",
																			"statements": [
																				{
																					"expression": {
																						"argumentTypes": null,
																						"id": 2088,
																						"name": "y",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1998,
																						"src": "15144:1:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"functionReturnParameters": 2002,
																					"id": 2089,
																					"nodeType": "Return",
																					"src": "15137:8:1"
																				}
																			]
																		}
																	}
																]
															},
															"id": 2093,
															"nodeType": "IfStatement",
															"src": "14996:170:1",
															"trueBody": {
																"id": 2082,
																"nodeType": "Block",
																"src": "15012:74:1",
																"statements": [
																	{
																		"condition": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2077,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2075,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"id": 2073,
																					"name": "y",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1998,
																					"src": "15027:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"argumentTypes": null,
																					"id": 2074,
																					"name": "y_prev",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2014,
																					"src": "15031:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "15027:10:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<=",
																			"rightExpression": {
																				"argumentTypes": null,
																				"hexValue": "31",
																				"id": 2076,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "15041:1:1",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "15027:15:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseBody": null,
																		"id": 2081,
																		"nodeType": "IfStatement",
																		"src": "15023:54:1",
																		"trueBody": {
																			"id": 2080,
																			"nodeType": "Block",
																			"src": "15044:33:1",
																			"statements": [
																				{
																					"expression": {
																						"argumentTypes": null,
																						"id": 2078,
																						"name": "y",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1998,
																						"src": "15064:1:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"functionReturnParameters": 2002,
																					"id": 2079,
																					"nodeType": "Return",
																					"src": "15057:8:1"
																				}
																			]
																		}
																	}
																]
															}
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2009,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 2007,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2004,
														"src": "14738:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "323535",
														"id": 2008,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "14742:3:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_255_by_1",
															"typeString": "int_const 255"
														},
														"value": "255"
													},
													"src": "14738:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2095,
												"initializationExpression": {
													"assignments": [
														2004
													],
													"declarations": [
														{
															"constant": false,
															"id": 2004,
															"name": "i",
															"nodeType": "VariableDeclaration",
															"scope": 2095,
															"src": "14726:6:1",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2003,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "14726:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"value": null,
															"visibility": "internal"
														}
													],
													"id": 2006,
													"initialValue": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 2005,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "14735:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "14726:10:1"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 2011,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "14747:3:1",
														"subExpression": {
															"argumentTypes": null,
															"id": 2010,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2004,
															"src": "14747:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2012,
													"nodeType": "ExpressionStatement",
													"src": "14747:3:1"
												},
												"nodeType": "ForStatement",
												"src": "14721:452:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 2096,
													"name": "y",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1998,
													"src": "15186:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2002,
												"id": 2097,
												"nodeType": "Return",
												"src": "15179:8:1"
											}
										]
									},
									"documentation": null,
									"id": 2099,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_get_y",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1999,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1994,
												"name": "x0",
												"nodeType": "VariableDeclaration",
												"scope": 2099,
												"src": "14659:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1993,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "14659:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1996,
												"name": "xy",
												"nodeType": "VariableDeclaration",
												"scope": 2099,
												"src": "14668:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1995,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "14668:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1998,
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 2099,
												"src": "14677:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1997,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "14677:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14658:26:1"
									},
									"returnParameters": {
										"id": 2002,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2001,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2099,
												"src": "14708:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2000,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "14708:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14707:6:1"
									},
									"scope": 2502,
									"src": "14643:550:1",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2138,
										"nodeType": "Block",
										"src": "15257:99:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2136,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2121,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2119,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 2108,
																"name": "x0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2101,
																"src": "15271:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2117,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2115,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2113,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2111,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"argumentTypes": null,
																						"id": 2109,
																						"name": "y",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2103,
																						"src": "15277:1:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"argumentTypes": null,
																						"id": 2110,
																						"name": "y",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2103,
																						"src": "15281:1:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "15277:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"argumentTypes": null,
																					"hexValue": "31653138",
																					"id": 2112,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "15285:4:1",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1000000000000000000_by_1",
																						"typeString": "int_const 1000000000000000000"
																					},
																					"value": "1e18"
																				},
																				"src": "15277:12:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 2114,
																				"name": "y",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2103,
																				"src": "15292:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "15277:16:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "31653138",
																			"id": 2116,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "15296:4:1",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1000000000000000000_by_1",
																				"typeString": "int_const 1000000000000000000"
																			},
																			"value": "1e18"
																		},
																		"src": "15277:23:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2118,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "15276:25:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "15271:30:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "31653138",
															"id": 2120,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15304:4:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															},
															"value": "1e18"
														},
														"src": "15271:37:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2135,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2133,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2130,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2128,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2126,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2124,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"argumentTypes": null,
																						"id": 2122,
																						"name": "x0",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2101,
																						"src": "15312:2:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"argumentTypes": null,
																						"id": 2123,
																						"name": "x0",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2101,
																						"src": "15317:2:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "15312:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"argumentTypes": null,
																					"hexValue": "31653138",
																					"id": 2125,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "15322:4:1",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1000000000000000000_by_1",
																						"typeString": "int_const 1000000000000000000"
																					},
																					"value": "1e18"
																				},
																				"src": "15312:14:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 2127,
																				"name": "x0",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2101,
																				"src": "15329:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "15312:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "31653138",
																			"id": 2129,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "15334:4:1",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1000000000000000000_by_1",
																				"typeString": "int_const 1000000000000000000"
																			},
																			"value": "1e18"
																		},
																		"src": "15312:26:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2131,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "15311:28:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"argumentTypes": null,
																"id": 2132,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2103,
																"src": "15342:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "15311:32:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "31653138",
															"id": 2134,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15346:4:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															},
															"value": "1e18"
														},
														"src": "15311:39:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "15271:79:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2107,
												"id": 2137,
												"nodeType": "Return",
												"src": "15264:86:1"
											}
										]
									},
									"documentation": null,
									"id": 2139,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_f",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2104,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2101,
												"name": "x0",
												"nodeType": "VariableDeclaration",
												"scope": 2139,
												"src": "15211:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2100,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "15211:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2103,
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 2139,
												"src": "15220:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2102,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "15220:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15210:17:1"
									},
									"returnParameters": {
										"id": 2107,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2106,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2139,
												"src": "15251:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2105,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "15251:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15250:6:1"
									},
									"scope": 2502,
									"src": "15199:157:1",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2172,
										"nodeType": "Block",
										"src": "15420:81:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2170,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2159,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2157,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2150,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"hexValue": "33",
																	"id": 2148,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "15434:1:1",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_3_by_1",
																		"typeString": "int_const 3"
																	},
																	"value": "3"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 2149,
																	"name": "x0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2141,
																	"src": "15438:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "15434:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2155,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2153,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 2151,
																				"name": "y",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2143,
																				"src": "15444:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 2152,
																				"name": "y",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2143,
																				"src": "15448:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "15444:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "31653138",
																			"id": 2154,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "15452:4:1",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1000000000000000000_by_1",
																				"typeString": "int_const 1000000000000000000"
																			},
																			"value": "1e18"
																		},
																		"src": "15444:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2156,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "15443:14:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "15434:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "31653138",
															"id": 2158,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15460:4:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															},
															"value": "1e18"
														},
														"src": "15434:30:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2168,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2166,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2164,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2162,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 2160,
																				"name": "x0",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2141,
																				"src": "15468:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 2161,
																				"name": "x0",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2141,
																				"src": "15473:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "15468:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "31653138",
																			"id": 2163,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "15478:4:1",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1000000000000000000_by_1",
																				"typeString": "int_const 1000000000000000000"
																			},
																			"value": "1e18"
																		},
																		"src": "15468:14:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"argumentTypes": null,
																		"id": 2165,
																		"name": "x0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2141,
																		"src": "15485:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "15468:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "31653138",
																	"id": 2167,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "15490:4:1",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	},
																	"value": "1e18"
																},
																"src": "15468:26:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2169,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "15467:28:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "15434:61:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2147,
												"id": 2171,
												"nodeType": "Return",
												"src": "15427:68:1"
											}
										]
									},
									"documentation": null,
									"id": 2173,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_d",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2141,
												"name": "x0",
												"nodeType": "VariableDeclaration",
												"scope": 2173,
												"src": "15374:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2140,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "15374:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2143,
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 2173,
												"src": "15383:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2142,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "15383:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15373:17:1"
									},
									"returnParameters": {
										"id": 2147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2146,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2173,
												"src": "15414:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2145,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "15414:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15413:6:1"
									},
									"scope": 2502,
									"src": "15362:139:1",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2203,
										"nodeType": "Block",
										"src": "15590:178:1",
										"statements": [
											{
												"assignments": [
													2183
												],
												"declarations": [
													{
														"constant": false,
														"id": 2183,
														"name": "feePercent",
														"nodeType": "VariableDeclaration",
														"scope": 2203,
														"src": "15597:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														},
														"typeName": {
															"id": 2182,
															"name": "uint16",
															"nodeType": "ElementaryTypeName",
															"src": "15597:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 2190,
												"initialValue": {
													"argumentTypes": null,
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 2186,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 2184,
															"name": "tokenIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2177,
															"src": "15617:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"argumentTypes": null,
															"id": 2185,
															"name": "token0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 428,
															"src": "15628:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "15617:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"argumentTypes": null,
														"id": 2188,
														"name": "token1FeePercent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 448,
														"src": "15656:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"id": 2189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "15617:55:1",
													"trueExpression": {
														"argumentTypes": null,
														"id": 2187,
														"name": "token0FeePercent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 445,
														"src": "15637:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15597:75:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2192,
															"name": "amountIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2175,
															"src": "15700:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 2193,
															"name": "tokenIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2177,
															"src": "15710:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 2195,
																	"name": "reserve0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 440,
																	"src": "15724:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																],
																"id": 2194,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "15719:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": "uint"
															},
															"id": 2196,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15719:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 2198,
																	"name": "reserve1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 442,
																	"src": "15740:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																],
																"id": 2197,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "15735:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": "uint"
															},
															"id": 2199,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15735:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 2200,
															"name": "feePercent",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2183,
															"src": "15751:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														],
														"id": 2191,
														"name": "_getAmountOut",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2355,
														"src": "15686:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,address,uint256,uint256,uint256) view returns (uint256)"
														}
													},
													"id": 2201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15686:76:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2181,
												"id": 2202,
												"nodeType": "Return",
												"src": "15679:83:1"
											}
										]
									},
									"documentation": null,
									"id": 2204,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountOut",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2175,
												"name": "amountIn",
												"nodeType": "VariableDeclaration",
												"scope": 2204,
												"src": "15529:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2174,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "15529:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2177,
												"name": "tokenIn",
												"nodeType": "VariableDeclaration",
												"scope": 2204,
												"src": "15544:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2176,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15544:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15528:32:1"
									},
									"returnParameters": {
										"id": 2181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2180,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2204,
												"src": "15584:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2179,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "15584:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15583:6:1"
									},
									"scope": 2502,
									"src": "15507:261:1",
									"stateMutability": "view",
									"superFunction": 2916,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2354,
										"nodeType": "Block",
										"src": "15907:980:1",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"id": 2219,
													"name": "stableSwap",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 456,
													"src": "15918:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2352,
													"nodeType": "Block",
													"src": "16612:270:1",
													"statements": [
														{
															"assignments": [
																2313,
																2315
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2313,
																	"name": "reserveA",
																	"nodeType": "VariableDeclaration",
																	"scope": 2352,
																	"src": "16622:13:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2312,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "16622:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																},
																{
																	"constant": false,
																	"id": 2315,
																	"name": "reserveB",
																	"nodeType": "VariableDeclaration",
																	"scope": 2352,
																	"src": "16637:13:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2314,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "16637:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 2326,
															"initialValue": {
																"argumentTypes": null,
																"condition": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 2318,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 2316,
																		"name": "tokenIn",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2208,
																		"src": "16654:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"argumentTypes": null,
																		"id": 2317,
																		"name": "token0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 428,
																		"src": "16665:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "16654:17:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseExpression": {
																	"argumentTypes": null,
																	"components": [
																		{
																			"argumentTypes": null,
																			"id": 2322,
																			"name": "_reserve1",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2212,
																			"src": "16700:9:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"argumentTypes": null,
																			"id": 2323,
																			"name": "_reserve0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2210,
																			"src": "16711:9:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2324,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "16699:22:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
																		"typeString": "tuple(uint256,uint256)"
																	}
																},
																"id": 2325,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "Conditional",
																"src": "16654:67:1",
																"trueExpression": {
																	"argumentTypes": null,
																	"components": [
																		{
																			"argumentTypes": null,
																			"id": 2319,
																			"name": "_reserve0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2210,
																			"src": "16675:9:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"argumentTypes": null,
																			"id": 2320,
																			"name": "_reserve1",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2212,
																			"src": "16686:9:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2321,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "16674:22:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
																		"typeString": "tuple(uint256,uint256)"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
																	"typeString": "tuple(uint256,uint256)"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "16621:100:1"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 2335,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 2327,
																	"name": "amountIn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2206,
																	"src": "16730:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 2332,
																					"name": "feePercent",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2214,
																					"src": "16774:10:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 2330,
																					"name": "FEE_DENOMINATOR",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 435,
																					"src": "16754:15:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 2331,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sub",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 3190,
																				"src": "16754:19:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 2333,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "16754:31:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"id": 2328,
																			"name": "amountIn",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2206,
																			"src": "16741:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2329,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3218,
																		"src": "16741:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2334,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "16741:45:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "16730:56:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2336,
															"nodeType": "ExpressionStatement",
															"src": "16730:56:1"
														},
														{
															"expression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2350,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"components": [
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 2339,
																					"name": "reserveB",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2315,
																					"src": "16816:8:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 2337,
																					"name": "amountIn",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2206,
																					"src": "16803:8:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 2338,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "mul",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 3218,
																				"src": "16803:12:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 2340,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "16803:22:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2341,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "16802:24:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"components": [
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 2347,
																					"name": "amountIn",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2206,
																					"src": "16864:8:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"arguments": [
																						{
																							"argumentTypes": null,
																							"id": 2344,
																							"name": "FEE_DENOMINATOR",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 435,
																							"src": "16843:15:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"expression": {
																							"argumentTypes": null,
																							"id": 2342,
																							"name": "reserveA",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2313,
																							"src": "16830:8:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 2343,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "mul",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 3218,
																						"src": "16830:12:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 2345,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "16830:29:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 2346,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "add",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 3168,
																				"src": "16830:33:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 2348,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "16830:43:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2349,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "16829:45:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "16802:72:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 2218,
															"id": 2351,
															"nodeType": "Return",
															"src": "16795:79:1"
														}
													]
												},
												"id": 2353,
												"nodeType": "IfStatement",
												"src": "15914:968:1",
												"trueBody": {
													"id": 2311,
													"nodeType": "Block",
													"src": "15930:676:1",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 2230,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 2220,
																	"name": "amountIn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2206,
																	"src": "15939:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2228,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"id": 2225,
																						"name": "feePercent",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2214,
																						"src": "15976:10:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"argumentTypes": null,
																						"id": 2223,
																						"name": "amountIn",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2206,
																						"src": "15963:8:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 2224,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "mul",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 3218,
																					"src": "15963:12:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 2226,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "15963:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 2227,
																				"name": "FEE_DENOMINATOR",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 435,
																				"src": "15990:15:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "15963:42:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"id": 2221,
																			"name": "amountIn",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2206,
																			"src": "15950:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2222,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3190,
																		"src": "15950:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2229,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "15950:56:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "15939:67:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2231,
															"nodeType": "ExpressionStatement",
															"src": "15939:67:1"
														},
														{
															"assignments": [
																2233
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2233,
																	"name": "xy",
																	"nodeType": "VariableDeclaration",
																	"scope": 2311,
																	"src": "16050:7:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2232,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "16050:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 2238,
															"initialValue": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 2235,
																		"name": "_reserve0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2210,
																		"src": "16063:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 2236,
																		"name": "_reserve1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2212,
																		"src": "16074:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2234,
																	"name": "_k",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1992,
																	"src": "16060:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint256) view returns (uint256)"
																	}
																},
																"id": 2237,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16060:24:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "16050:34:1"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 2245,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 2239,
																	"name": "_reserve0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2210,
																	"src": "16093:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2244,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2242,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 2240,
																			"name": "_reserve0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2210,
																			"src": "16105:9:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "31653138",
																			"id": 2241,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "16117:4:1",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1000000000000000000_by_1",
																				"typeString": "int_const 1000000000000000000"
																			},
																			"value": "1e18"
																		},
																		"src": "16105:16:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"argumentTypes": null,
																		"id": 2243,
																		"name": "precisionMultiplier0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 450,
																		"src": "16124:20:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "16105:39:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "16093:51:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2246,
															"nodeType": "ExpressionStatement",
															"src": "16093:51:1"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 2253,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 2247,
																	"name": "_reserve1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2212,
																	"src": "16153:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2252,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2250,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 2248,
																			"name": "_reserve1",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2212,
																			"src": "16165:9:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "31653138",
																			"id": 2249,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "16177:4:1",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1000000000000000000_by_1",
																				"typeString": "int_const 1000000000000000000"
																			},
																			"value": "1e18"
																		},
																		"src": "16165:16:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"argumentTypes": null,
																		"id": 2251,
																		"name": "precisionMultiplier1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 452,
																		"src": "16184:20:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "16165:39:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "16153:51:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2254,
															"nodeType": "ExpressionStatement",
															"src": "16153:51:1"
														},
														{
															"assignments": [
																2256,
																2258
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2256,
																	"name": "reserveA",
																	"nodeType": "VariableDeclaration",
																	"scope": 2311,
																	"src": "16216:13:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2255,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "16216:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																},
																{
																	"constant": false,
																	"id": 2258,
																	"name": "reserveB",
																	"nodeType": "VariableDeclaration",
																	"scope": 2311,
																	"src": "16231:13:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2257,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "16231:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 2269,
															"initialValue": {
																"argumentTypes": null,
																"condition": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 2261,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 2259,
																		"name": "tokenIn",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2208,
																		"src": "16248:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"argumentTypes": null,
																		"id": 2260,
																		"name": "token0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 428,
																		"src": "16259:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "16248:17:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseExpression": {
																	"argumentTypes": null,
																	"components": [
																		{
																			"argumentTypes": null,
																			"id": 2265,
																			"name": "_reserve1",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2212,
																			"src": "16294:9:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"argumentTypes": null,
																			"id": 2266,
																			"name": "_reserve0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2210,
																			"src": "16305:9:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2267,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "16293:22:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
																		"typeString": "tuple(uint256,uint256)"
																	}
																},
																"id": 2268,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "Conditional",
																"src": "16248:67:1",
																"trueExpression": {
																	"argumentTypes": null,
																	"components": [
																		{
																			"argumentTypes": null,
																			"id": 2262,
																			"name": "_reserve0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2210,
																			"src": "16269:9:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"argumentTypes": null,
																			"id": 2263,
																			"name": "_reserve1",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2212,
																			"src": "16280:9:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2264,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "16268:22:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
																		"typeString": "tuple(uint256,uint256)"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
																	"typeString": "tuple(uint256,uint256)"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "16215:100:1"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 2285,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 2270,
																	"name": "amountIn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2206,
																	"src": "16324:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"condition": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 2273,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 2271,
																			"name": "tokenIn",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2208,
																			"src": "16335:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"argumentTypes": null,
																			"id": 2272,
																			"name": "token0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 428,
																			"src": "16346:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "16335:17:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2283,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2281,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 2279,
																				"name": "amountIn",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2206,
																				"src": "16396:8:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"argumentTypes": null,
																				"hexValue": "31653138",
																				"id": 2280,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "16407:4:1",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1000000000000000000_by_1",
																					"typeString": "int_const 1000000000000000000"
																				},
																				"value": "1e18"
																			},
																			"src": "16396:15:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"argumentTypes": null,
																			"id": 2282,
																			"name": "precisionMultiplier1",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 452,
																			"src": "16414:20:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "16396:38:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2284,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "16335:99:1",
																	"trueExpression": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2278,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2276,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 2274,
																				"name": "amountIn",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2206,
																				"src": "16355:8:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"argumentTypes": null,
																				"hexValue": "31653138",
																				"id": 2275,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "16366:4:1",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1000000000000000000_by_1",
																					"typeString": "int_const 1000000000000000000"
																				},
																				"value": "1e18"
																			},
																			"src": "16355:15:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"argumentTypes": null,
																			"id": 2277,
																			"name": "precisionMultiplier0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 450,
																			"src": "16373:20:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "16355:38:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "16324:110:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2286,
															"nodeType": "ExpressionStatement",
															"src": "16324:110:1"
														},
														{
															"assignments": [
																2288
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2288,
																	"name": "y",
																	"nodeType": "VariableDeclaration",
																	"scope": 2311,
																	"src": "16443:6:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2287,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "16443:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 2298,
															"initialValue": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2297,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 2289,
																	"name": "reserveB",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2258,
																	"src": "16452:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2293,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 2291,
																				"name": "amountIn",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2206,
																				"src": "16470:8:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 2292,
																				"name": "reserveA",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2256,
																				"src": "16481:8:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "16470:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"argumentTypes": null,
																			"id": 2294,
																			"name": "xy",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2233,
																			"src": "16491:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"argumentTypes": null,
																			"id": 2295,
																			"name": "reserveB",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2258,
																			"src": "16495:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2290,
																		"name": "_get_y",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2099,
																		"src": "16463:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2296,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "16463:41:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "16452:52:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "16443:61:1"
														},
														{
															"expression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2309,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2307,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 2299,
																		"name": "y",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2288,
																		"src": "16520:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"argumentTypes": null,
																		"components": [
																			{
																				"argumentTypes": null,
																				"condition": {
																					"argumentTypes": null,
																					"commonType": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					"id": 2302,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"argumentTypes": null,
																						"id": 2300,
																						"name": "tokenIn",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2208,
																						"src": "16525:7:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"argumentTypes": null,
																						"id": 2301,
																						"name": "token0",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 428,
																						"src": "16536:6:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"src": "16525:17:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseExpression": {
																					"argumentTypes": null,
																					"id": 2304,
																					"name": "precisionMultiplier0",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 450,
																					"src": "16568:20:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 2305,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "Conditional",
																				"src": "16525:63:1",
																				"trueExpression": {
																					"argumentTypes": null,
																					"id": 2303,
																					"name": "precisionMultiplier1",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 452,
																					"src": "16545:20:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 2306,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "16524:65:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "16520:69:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "31653138",
																	"id": 2308,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "16592:4:1",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	},
																	"value": "1e18"
																},
																"src": "16520:76:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 2218,
															"id": 2310,
															"nodeType": "Return",
															"src": "16513:83:1"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 2355,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getAmountOut",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2206,
												"name": "amountIn",
												"nodeType": "VariableDeclaration",
												"scope": 2355,
												"src": "15797:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2205,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "15797:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2208,
												"name": "tokenIn",
												"nodeType": "VariableDeclaration",
												"scope": 2355,
												"src": "15812:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2207,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15812:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2210,
												"name": "_reserve0",
												"nodeType": "VariableDeclaration",
												"scope": 2355,
												"src": "15829:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2209,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "15829:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2212,
												"name": "_reserve1",
												"nodeType": "VariableDeclaration",
												"scope": 2355,
												"src": "15845:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2211,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "15845:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2214,
												"name": "feePercent",
												"nodeType": "VariableDeclaration",
												"scope": 2355,
												"src": "15861:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2213,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "15861:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15796:81:1"
									},
									"returnParameters": {
										"id": 2218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2217,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2355,
												"src": "15901:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2216,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "15901:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15900:6:1"
									},
									"scope": 2502,
									"src": "15774:1113:1",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2405,
										"nodeType": "Block",
										"src": "16972:304:1",
										"statements": [
											{
												"assignments": [
													2363
												],
												"declarations": [
													{
														"constant": false,
														"id": 2363,
														"name": "_token0",
														"nodeType": "VariableDeclaration",
														"scope": 2405,
														"src": "16979:15:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2362,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "16979:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 2365,
												"initialValue": {
													"argumentTypes": null,
													"id": 2364,
													"name": "token0",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 428,
													"src": "16997:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16979:24:1"
											},
											{
												"assignments": [
													2367
												],
												"declarations": [
													{
														"constant": false,
														"id": 2367,
														"name": "_token1",
														"nodeType": "VariableDeclaration",
														"scope": 2405,
														"src": "17030:15:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2366,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "17030:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 2369,
												"initialValue": {
													"argumentTypes": null,
													"id": 2368,
													"name": "token1",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 430,
													"src": "17048:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17030:24:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2371,
															"name": "_token0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2363,
															"src": "17095:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 2372,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2357,
															"src": "17104:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 2382,
																	"name": "reserve0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 440,
																	"src": "17153:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 2378,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3264,
																					"src": "17142:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_TenkStablePair_$2502",
																						"typeString": "contract TenkStablePair"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_TenkStablePair_$2502",
																						"typeString": "contract TenkStablePair"
																					}
																				],
																				"id": 2377,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "17134:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": "address"
																			},
																			"id": 2379,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "17134:13:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 2374,
																					"name": "_token0",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2363,
																					"src": "17115:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 2373,
																				"name": "IERC20",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3068,
																				"src": "17108:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_IERC20_$3068_$",
																					"typeString": "type(contract IERC20)"
																				}
																			},
																			"id": 2375,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "17108:15:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$3068",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 2376,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "balanceOf",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3029,
																		"src": "17108:25:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																			"typeString": "function (address) view external returns (uint256)"
																		}
																	},
																	"id": 2380,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "17108:40:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2381,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 3190,
																"src": "17108:44:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2383,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17108:54:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2370,
														"name": "_safeTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 550,
														"src": "17081:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2384,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17081:82:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2385,
												"nodeType": "ExpressionStatement",
												"src": "17081:82:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2387,
															"name": "_token1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2367,
															"src": "17184:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 2388,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2357,
															"src": "17193:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 2398,
																	"name": "reserve1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 442,
																	"src": "17242:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 2394,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3264,
																					"src": "17231:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_TenkStablePair_$2502",
																						"typeString": "contract TenkStablePair"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_TenkStablePair_$2502",
																						"typeString": "contract TenkStablePair"
																					}
																				],
																				"id": 2393,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "17223:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": "address"
																			},
																			"id": 2395,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "17223:13:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 2390,
																					"name": "_token1",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2367,
																					"src": "17204:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 2389,
																				"name": "IERC20",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3068,
																				"src": "17197:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_IERC20_$3068_$",
																					"typeString": "type(contract IERC20)"
																				}
																			},
																			"id": 2391,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "17197:15:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$3068",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 2392,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "balanceOf",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3029,
																		"src": "17197:25:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																			"typeString": "function (address) view external returns (uint256)"
																		}
																	},
																	"id": 2396,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "17197:40:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2397,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 3190,
																"src": "17197:44:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2399,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17197:54:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2386,
														"name": "_safeTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 550,
														"src": "17170:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2400,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17170:82:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2401,
												"nodeType": "ExpressionStatement",
												"src": "17170:82:1"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2402,
														"name": "Skim",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 610,
														"src": "17264:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 2403,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17264:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2404,
												"nodeType": "EmitStatement",
												"src": "17259:11:1"
											}
										]
									},
									"documentation": null,
									"id": 2406,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 2360,
											"modifierName": {
												"argumentTypes": null,
												"id": 2359,
												"name": "lock",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 480,
												"src": "16967:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "16967:4:1"
										}
									],
									"name": "skim",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2358,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2357,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 2406,
												"src": "16946:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2356,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16946:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "16945:12:1"
									},
									"returnParameters": {
										"id": 2361,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16972:0:1"
									},
									"scope": 2502,
									"src": "16932:344:1",
									"stateMutability": "nonpayable",
									"superFunction": 2973,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2449,
										"nodeType": "Block",
										"src": "17351:280:1",
										"statements": [
											{
												"assignments": [
													2412
												],
												"declarations": [
													{
														"constant": false,
														"id": 2412,
														"name": "token0Balance",
														"nodeType": "VariableDeclaration",
														"scope": 2449,
														"src": "17358:18:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2411,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "17358:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 2421,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 2418,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3264,
																	"src": "17412:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_TenkStablePair_$2502",
																		"typeString": "contract TenkStablePair"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_TenkStablePair_$2502",
																		"typeString": "contract TenkStablePair"
																	}
																],
																"id": 2417,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "17404:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 2419,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17404:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 2414,
																	"name": "token0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 428,
																	"src": "17386:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2413,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3068,
																"src": "17379:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$3068_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 2415,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17379:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$3068",
																"typeString": "contract IERC20"
															}
														},
														"id": 2416,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3029,
														"src": "17379:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 2420,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17379:39:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17358:60:1"
											},
											{
												"assignments": [
													2423
												],
												"declarations": [
													{
														"constant": false,
														"id": 2423,
														"name": "token1Balance",
														"nodeType": "VariableDeclaration",
														"scope": 2449,
														"src": "17425:18:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2422,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "17425:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 2432,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 2429,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3264,
																	"src": "17479:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_TenkStablePair_$2502",
																		"typeString": "contract TenkStablePair"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_TenkStablePair_$2502",
																		"typeString": "contract TenkStablePair"
																	}
																],
																"id": 2428,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "17471:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 2430,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17471:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 2425,
																	"name": "token1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 430,
																	"src": "17453:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2424,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3068,
																"src": "17446:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$3068_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 2426,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17446:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$3068",
																"typeString": "contract IERC20"
															}
														},
														"id": 2427,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3029,
														"src": "17446:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 2431,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17446:39:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17425:60:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2440,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2436,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 2434,
																	"name": "token0Balance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2412,
																	"src": "17500:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 2435,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "17517:1:1",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "17500:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2439,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 2437,
																	"name": "token1Balance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2423,
																	"src": "17522:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 2438,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "17539:1:1",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "17522:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "17500:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "31306b3a206c697175696469747920726174696f206e6f7420696e697469616c697a6564",
															"id": 2441,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17542:38:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a8f5b5742ea4f6d77e3ddeade1d79a13f37f3b0b50626b04c2c56458d8d3d5c7",
																"typeString": "literal_string \"10k: liquidity ratio not initialized\""
															},
															"value": "10k: liquidity ratio not initialized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a8f5b5742ea4f6d77e3ddeade1d79a13f37f3b0b50626b04c2c56458d8d3d5c7",
																"typeString": "literal_string \"10k: liquidity ratio not initialized\""
															}
														],
														"id": 2433,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															3237,
															3238
														],
														"referencedDeclaration": 3238,
														"src": "17492:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2442,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17492:89:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2443,
												"nodeType": "ExpressionStatement",
												"src": "17492:89:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2445,
															"name": "token0Balance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2412,
															"src": "17596:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 2446,
															"name": "token1Balance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2423,
															"src": "17611:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2444,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 889,
														"src": "17588:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 2447,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17588:37:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2448,
												"nodeType": "ExpressionStatement",
												"src": "17588:37:1"
											}
										]
									},
									"documentation": null,
									"id": 2450,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 2409,
											"modifierName": {
												"argumentTypes": null,
												"id": 2408,
												"name": "lock",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 480,
												"src": "17346:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "17346:4:1"
										}
									],
									"name": "sync",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2407,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17334:2:1"
									},
									"returnParameters": {
										"id": 2410,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17351:0:1"
									},
									"scope": 2502,
									"src": "17321:310:1",
									"stateMutability": "nonpayable",
									"superFunction": 2976,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2500,
										"nodeType": "Block",
										"src": "17818:280:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2467,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 2460,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3234,
																	"src": "17833:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2461,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "17833:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 2463,
																				"name": "factory",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 426,
																				"src": "17865:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 2462,
																			"name": "I10kStableFactory",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2721,
																			"src": "17847:17:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_I10kStableFactory_$2721_$",
																				"typeString": "type(contract I10kStableFactory)"
																			}
																		},
																		"id": 2464,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "17847:26:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_I10kStableFactory_$2721",
																			"typeString": "contract I10kStableFactory"
																		}
																	},
																	"id": 2465,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "owner",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2651,
																	"src": "17847:32:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																		"typeString": "function () view external returns (address)"
																	}
																},
																"id": 2466,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17847:34:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "17833:48:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "31306b3a206f6e6c7920666163746f72792773206f776e6572",
															"id": 2468,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17883:27:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0ba1c9402ddfdf8870dbda1742f5daaa5fef8b1fd9a14a68800d6b959e8e587c",
																"typeString": "literal_string \"10k: only factory's owner\""
															},
															"value": "10k: only factory's owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0ba1c9402ddfdf8870dbda1742f5daaa5fef8b1fd9a14a68800d6b959e8e587c",
																"typeString": "literal_string \"10k: only factory's owner\""
															}
														],
														"id": 2459,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															3237,
															3238
														],
														"referencedDeclaration": 3238,
														"src": "17825:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17825:86:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2470,
												"nodeType": "ExpressionStatement",
												"src": "17825:86:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2478,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 2474,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 2472,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2452,
																	"src": "17926:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 2473,
																	"name": "token0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 428,
																	"src": "17935:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "17926:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 2477,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 2475,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2452,
																	"src": "17945:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 2476,
																	"name": "token1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 430,
																	"src": "17954:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "17945:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "17926:34:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "31306b3a20696e76616c696420746f6b656e",
															"id": 2479,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17962:20:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_256af592552f66e66c085fcba24265299244d9fd9c5688024d0583a8b3a02f24",
																"typeString": "literal_string \"10k: invalid token\""
															},
															"value": "10k: invalid token"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_256af592552f66e66c085fcba24265299244d9fd9c5688024d0583a8b3a02f24",
																"typeString": "literal_string \"10k: invalid token\""
															}
														],
														"id": 2471,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															3237,
															3238
														],
														"referencedDeclaration": 3238,
														"src": "17918:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2480,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17918:65:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2481,
												"nodeType": "ExpressionStatement",
												"src": "17918:65:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2483,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2452,
															"src": "18004:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 2484,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2454,
															"src": "18011:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 2490,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3264,
																			"src": "18047:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_TenkStablePair_$2502",
																				"typeString": "contract TenkStablePair"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_TenkStablePair_$2502",
																				"typeString": "contract TenkStablePair"
																			}
																		],
																		"id": 2489,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "18039:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": "address"
																	},
																	"id": 2491,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "18039:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 2486,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2452,
																			"src": "18022:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 2485,
																		"name": "IERC20",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3068,
																		"src": "18015:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IERC20_$3068_$",
																			"typeString": "type(contract IERC20)"
																		}
																	},
																	"id": 2487,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "18015:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$3068",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 2488,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balanceOf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 3029,
																"src": "18015:23:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view external returns (uint256)"
																}
															},
															"id": 2492,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18015:38:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2482,
														"name": "_safeTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 550,
														"src": "17990:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2493,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17990:64:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2494,
												"nodeType": "ExpressionStatement",
												"src": "17990:64:1"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2496,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2452,
															"src": "18082:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 2497,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2454,
															"src": "18089:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2495,
														"name": "DrainWrongToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 556,
														"src": "18066:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 2498,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18066:26:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2499,
												"nodeType": "EmitStatement",
												"src": "18061:31:1"
											}
										]
									},
									"documentation": "@dev Allow to recover token sent here by mistake\n\n  * Can only be called by factory's owner",
									"id": 2501,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 2457,
											"modifierName": {
												"argumentTypes": null,
												"id": 2456,
												"name": "lock",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 480,
												"src": "17813:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "17813:4:1"
										}
									],
									"name": "drainWrongToken",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2452,
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 2501,
												"src": "17777:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2451,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17777:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2454,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 2501,
												"src": "17792:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2453,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17792:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "17776:27:1"
									},
									"returnParameters": {
										"id": 2458,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17818:0:1"
									},
									"scope": 2502,
									"src": "17752:346:1",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								}
							],
							"scope": 2503,
							"src": "263:17838:1"
						}
					],
					"src": "0:18103:1"
				},
				"id": 1
			},
			"interfaces/I10kERC20.sol": {
				"ast": {
					"absolutePath": "interfaces/I10kERC20.sol",
					"exportedSymbols": {
						"I10kERC20": [
							2620
						]
					},
					"id": 2621,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2504,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:2"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 2620,
							"linearizedBaseContracts": [
								2620
							],
							"name": "I10kERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": null,
									"id": 2512,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2511,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2506,
												"indexed": true,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 2512,
												"src": "70:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2505,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "70:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2508,
												"indexed": true,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 2512,
												"src": "93:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2507,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "93:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2510,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 2512,
												"src": "118:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2509,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "118:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "69:60:2"
									},
									"src": "55:75:2"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 2520,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2519,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2514,
												"indexed": true,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 2520,
												"src": "151:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2513,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "151:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2516,
												"indexed": true,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 2520,
												"src": "173:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2515,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "173:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2518,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 2520,
												"src": "193:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2517,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "193:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "150:54:2"
									},
									"src": "136:69:2"
								},
								{
									"body": null,
									"documentation": null,
									"id": 2525,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2521,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "226:2:2"
									},
									"returnParameters": {
										"id": 2524,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2523,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2525,
												"src": "252:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2522,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "252:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "251:15:2"
									},
									"scope": 2620,
									"src": "213:54:2",
									"stateMutability": "pure",
									"superFunction": 2744,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 2530,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2526,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "288:2:2"
									},
									"returnParameters": {
										"id": 2529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2528,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2530,
												"src": "314:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2527,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "314:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "313:15:2"
									},
									"scope": 2620,
									"src": "273:56:2",
									"stateMutability": "pure",
									"superFunction": 2749,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 2535,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2531,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "352:2:2"
									},
									"returnParameters": {
										"id": 2534,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2533,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2535,
												"src": "378:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2532,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "378:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "377:7:2"
									},
									"scope": 2620,
									"src": "335:50:2",
									"stateMutability": "pure",
									"superFunction": 2754,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 2540,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2536,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "411:2:2"
									},
									"returnParameters": {
										"id": 2539,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2538,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2540,
												"src": "437:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2537,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "437:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "436:6:2"
									},
									"scope": 2620,
									"src": "391:52:2",
									"stateMutability": "view",
									"superFunction": 2759,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 2547,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2543,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2542,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 2547,
												"src": "468:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2541,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "468:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "467:15:2"
									},
									"returnParameters": {
										"id": 2546,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2545,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2547,
												"src": "506:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2544,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "506:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "505:6:2"
									},
									"scope": 2620,
									"src": "449:63:2",
									"stateMutability": "view",
									"superFunction": 2766,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 2556,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2549,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 2556,
												"src": "537:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2548,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "537:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2551,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 2556,
												"src": "552:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2550,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "552:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "536:32:2"
									},
									"returnParameters": {
										"id": 2555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2554,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2556,
												"src": "592:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2553,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "592:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "591:6:2"
									},
									"scope": 2620,
									"src": "518:80:2",
									"stateMutability": "view",
									"superFunction": 2775,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 2565,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2561,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2558,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 2565,
												"src": "623:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2557,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "623:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2560,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 2565,
												"src": "640:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2559,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "640:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "622:29:2"
									},
									"returnParameters": {
										"id": 2564,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2563,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2565,
												"src": "670:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2562,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "670:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "669:6:2"
									},
									"scope": 2620,
									"src": "606:70:2",
									"stateMutability": "nonpayable",
									"superFunction": 2784,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 2574,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2570,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2567,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 2574,
												"src": "700:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2566,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "700:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2569,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 2574,
												"src": "712:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2568,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "712:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "699:24:2"
									},
									"returnParameters": {
										"id": 2573,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2572,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2574,
												"src": "742:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2571,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "742:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "741:6:2"
									},
									"scope": 2620,
									"src": "682:66:2",
									"stateMutability": "nonpayable",
									"superFunction": 2793,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 2585,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2581,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2576,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 2585,
												"src": "776:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2575,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "776:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2578,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 2585,
												"src": "790:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2577,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "790:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2580,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 2585,
												"src": "802:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2579,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "802:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "775:38:2"
									},
									"returnParameters": {
										"id": 2584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2583,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2585,
												"src": "832:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2582,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "832:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "831:6:2"
									},
									"scope": 2620,
									"src": "754:84:2",
									"stateMutability": "nonpayable",
									"superFunction": 2804,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 2590,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2586,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "871:2:2"
									},
									"returnParameters": {
										"id": 2589,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2588,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2590,
												"src": "897:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2587,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "897:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "896:9:2"
									},
									"scope": 2620,
									"src": "846:60:2",
									"stateMutability": "view",
									"superFunction": 2809,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 2595,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "PERMIT_TYPEHASH",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2591,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "936:2:2"
									},
									"returnParameters": {
										"id": 2594,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2593,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2595,
												"src": "962:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2592,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "962:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "961:9:2"
									},
									"scope": 2620,
									"src": "912:59:2",
									"stateMutability": "pure",
									"superFunction": 2814,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 2602,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2598,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2597,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 2602,
												"src": "993:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2596,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "993:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "992:15:2"
									},
									"returnParameters": {
										"id": 2601,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2600,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2602,
												"src": "1031:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2599,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1031:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1030:6:2"
									},
									"scope": 2620,
									"src": "977:60:2",
									"stateMutability": "view",
									"superFunction": 2821,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 2619,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2617,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2604,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 2619,
												"src": "1061:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2603,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1061:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2606,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 2619,
												"src": "1076:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2605,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1076:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2608,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 2619,
												"src": "1093:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2607,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1093:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2610,
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 2619,
												"src": "1105:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2609,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1105:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2612,
												"name": "v",
												"nodeType": "VariableDeclaration",
												"scope": 2619,
												"src": "1120:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2611,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1120:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2614,
												"name": "r",
												"nodeType": "VariableDeclaration",
												"scope": 2619,
												"src": "1129:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2613,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1129:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2616,
												"name": "s",
												"nodeType": "VariableDeclaration",
												"scope": 2619,
												"src": "1140:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2615,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1140:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1060:90:2"
									},
									"returnParameters": {
										"id": 2618,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1159:0:2"
									},
									"scope": 2620,
									"src": "1045:115:2",
									"stateMutability": "nonpayable",
									"superFunction": 2838,
									"visibility": "external"
								}
							],
							"scope": 2621,
							"src": "28:1135:2"
						}
					],
					"src": "0:1163:2"
				},
				"id": 2
			},
			"interfaces/I10kStableCallee.sol": {
				"ast": {
					"absolutePath": "interfaces/I10kStableCallee.sol",
					"exportedSymbols": {
						"I10kStableCallee": [
							2634
						]
					},
					"id": 2635,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2622,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:3"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 2634,
							"linearizedBaseContracts": [
								2634
							],
							"name": "I10kStableCallee",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": null,
									"id": 2633,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "uniswapV2Call",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2631,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2624,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 2633,
												"src": "85:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2623,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "85:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2626,
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 2633,
												"src": "101:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2625,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "101:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2628,
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 2633,
												"src": "115:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2627,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "115:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2630,
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 2633,
												"src": "129:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2629,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "129:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "84:65:3"
									},
									"returnParameters": {
										"id": 2632,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "158:0:3"
									},
									"scope": 2634,
									"src": "62:97:3",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								}
							],
							"scope": 2635,
							"src": "28:134:3"
						}
					],
					"src": "0:162:3"
				},
				"id": 3
			},
			"interfaces/I10kStableFactory.sol": {
				"ast": {
					"absolutePath": "interfaces/I10kStableFactory.sol",
					"exportedSymbols": {
						"I10kStableFactory": [
							2721
						]
					},
					"id": 2722,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2636,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:4"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 2721,
							"linearizedBaseContracts": [
								2721
							],
							"name": "I10kStableFactory",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": null,
									"id": 2646,
									"name": "PairCreated",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2638,
												"indexed": true,
												"name": "token0",
												"nodeType": "VariableDeclaration",
												"scope": 2646,
												"src": "81:22:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2637,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "81:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2640,
												"indexed": true,
												"name": "token1",
												"nodeType": "VariableDeclaration",
												"scope": 2646,
												"src": "105:22:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2639,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "105:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2642,
												"indexed": false,
												"name": "pair",
												"nodeType": "VariableDeclaration",
												"scope": 2646,
												"src": "129:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2641,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "129:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2644,
												"indexed": false,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2646,
												"src": "143:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2643,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "143:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "80:71:4"
									},
									"src": "63:89:4"
								},
								{
									"body": null,
									"documentation": null,
									"id": 2651,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2647,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "174:2:4"
									},
									"returnParameters": {
										"id": 2650,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2649,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2651,
												"src": "200:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2648,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "200:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "199:9:4"
									},
									"scope": 2721,
									"src": "160:49:4",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 2656,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "feePercentOwner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2652,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "239:2:4"
									},
									"returnParameters": {
										"id": 2655,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2654,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2656,
												"src": "265:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2653,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "265:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "264:9:4"
									},
									"scope": 2721,
									"src": "215:59:4",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 2661,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setStableOwner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2657,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "303:2:4"
									},
									"returnParameters": {
										"id": 2660,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2659,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2661,
												"src": "329:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2658,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "329:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "328:9:4"
									},
									"scope": 2721,
									"src": "280:58:4",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 2666,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "feeTo",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2662,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "358:2:4"
									},
									"returnParameters": {
										"id": 2665,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2664,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2666,
												"src": "384:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2663,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "384:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "383:9:4"
									},
									"scope": 2721,
									"src": "344:49:4",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 2671,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerFeeShare",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2667,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "423:2:4"
									},
									"returnParameters": {
										"id": 2670,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2669,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2671,
												"src": "449:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2668,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "449:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "448:9:4"
									},
									"scope": 2721,
									"src": "401:57:4",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 2678,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "referrersFeeShare",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2674,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2673,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2678,
												"src": "491:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2672,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "491:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "490:9:4"
									},
									"returnParameters": {
										"id": 2677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2676,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2678,
												"src": "523:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2675,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "523:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "522:9:4"
									},
									"scope": 2721,
									"src": "464:68:4",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 2687,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getPair",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2683,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2680,
												"name": "tokenA",
												"nodeType": "VariableDeclaration",
												"scope": 2687,
												"src": "557:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2679,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "557:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2682,
												"name": "tokenB",
												"nodeType": "VariableDeclaration",
												"scope": 2687,
												"src": "573:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2681,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "573:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "556:32:4"
									},
									"returnParameters": {
										"id": 2686,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2685,
												"name": "pair",
												"nodeType": "VariableDeclaration",
												"scope": 2687,
												"src": "612:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2684,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "611:14:4"
									},
									"scope": 2721,
									"src": "540:86:4",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 2694,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allPairs",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2690,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2689,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2694,
												"src": "650:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2688,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "650:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "649:9:4"
									},
									"returnParameters": {
										"id": 2693,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2692,
												"name": "pair",
												"nodeType": "VariableDeclaration",
												"scope": 2694,
												"src": "682:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2691,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "681:14:4"
									},
									"scope": 2721,
									"src": "632:64:4",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 2699,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allPairsLength",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2695,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "725:2:4"
									},
									"returnParameters": {
										"id": 2698,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2697,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2699,
												"src": "751:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2696,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "751:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "750:9:4"
									},
									"scope": 2721,
									"src": "702:58:4",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 2708,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "createPair",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2704,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2701,
												"name": "tokenA",
												"nodeType": "VariableDeclaration",
												"scope": 2708,
												"src": "788:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2700,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "788:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2703,
												"name": "tokenB",
												"nodeType": "VariableDeclaration",
												"scope": 2708,
												"src": "804:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2702,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "804:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "787:32:4"
									},
									"returnParameters": {
										"id": 2707,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2706,
												"name": "pair",
												"nodeType": "VariableDeclaration",
												"scope": 2708,
												"src": "838:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2705,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "838:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "837:14:4"
									},
									"scope": 2721,
									"src": "768:84:4",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 2713,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setFeeTo",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2711,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2710,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2713,
												"src": "878:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2709,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "878:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "877:9:4"
									},
									"returnParameters": {
										"id": 2712,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "895:0:4"
									},
									"scope": 2721,
									"src": "860:36:4",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 2720,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "feeInfo",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2714,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "918:2:4"
									},
									"returnParameters": {
										"id": 2719,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2716,
												"name": "_ownerFeeShare",
												"nodeType": "VariableDeclaration",
												"scope": 2720,
												"src": "944:19:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2715,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "944:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2718,
												"name": "_feeTo",
												"nodeType": "VariableDeclaration",
												"scope": 2720,
												"src": "965:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2717,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "965:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "943:37:4"
									},
									"scope": 2721,
									"src": "902:79:4",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								}
							],
							"scope": 2722,
							"src": "28:956:4"
						}
					],
					"src": "0:984:4"
				},
				"id": 4
			},
			"interfaces/I10kStablePair.sol": {
				"ast": {
					"absolutePath": "interfaces/I10kStablePair.sol",
					"exportedSymbols": {
						"I10kStablePair": [
							2984
						]
					},
					"id": 2985,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2723,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:5"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 2984,
							"linearizedBaseContracts": [
								2984
							],
							"name": "I10kStablePair",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": null,
									"id": 2731,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2730,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2725,
												"indexed": true,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 2731,
												"src": "75:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2724,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "75:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2727,
												"indexed": true,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 2731,
												"src": "98:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2726,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "98:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2729,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 2731,
												"src": "123:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2728,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "123:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "74:60:5"
									},
									"src": "60:75:5"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 2739,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2738,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2733,
												"indexed": true,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 2739,
												"src": "156:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2732,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "156:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2735,
												"indexed": true,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 2739,
												"src": "178:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2734,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "178:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2737,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 2739,
												"src": "198:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2736,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "198:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "155:54:5"
									},
									"src": "141:69:5"
								},
								{
									"body": null,
									"documentation": null,
									"id": 2744,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2740,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "231:2:5"
									},
									"returnParameters": {
										"id": 2743,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2742,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2744,
												"src": "257:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2741,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "257:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "256:15:5"
									},
									"scope": 2984,
									"src": "218:54:5",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 2749,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2745,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "293:2:5"
									},
									"returnParameters": {
										"id": 2748,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2747,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2749,
												"src": "319:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2746,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "319:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "318:15:5"
									},
									"scope": 2984,
									"src": "278:56:5",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 2754,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2750,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "357:2:5"
									},
									"returnParameters": {
										"id": 2753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2752,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2754,
												"src": "383:5:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2751,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "383:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "382:7:5"
									},
									"scope": 2984,
									"src": "340:50:5",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 2759,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2755,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "416:2:5"
									},
									"returnParameters": {
										"id": 2758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2757,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2759,
												"src": "442:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2756,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "442:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "441:6:5"
									},
									"scope": 2984,
									"src": "396:52:5",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 2766,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2762,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2761,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 2766,
												"src": "473:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2760,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "473:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "472:15:5"
									},
									"returnParameters": {
										"id": 2765,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2764,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2766,
												"src": "511:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2763,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "511:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "510:6:5"
									},
									"scope": 2984,
									"src": "454:63:5",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 2775,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2768,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 2775,
												"src": "542:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2767,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "542:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2770,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 2775,
												"src": "557:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2769,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "557:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "541:32:5"
									},
									"returnParameters": {
										"id": 2774,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2773,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2775,
												"src": "597:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2772,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "597:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "596:6:5"
									},
									"scope": 2984,
									"src": "523:80:5",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 2784,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2777,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 2784,
												"src": "628:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2776,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "628:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2779,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 2784,
												"src": "645:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2778,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "645:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "627:29:5"
									},
									"returnParameters": {
										"id": 2783,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2782,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2784,
												"src": "675:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2781,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "675:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "674:6:5"
									},
									"scope": 2984,
									"src": "611:70:5",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 2793,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2789,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2786,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 2793,
												"src": "705:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2785,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "705:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2788,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 2793,
												"src": "717:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2787,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "717:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "704:24:5"
									},
									"returnParameters": {
										"id": 2792,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2791,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2793,
												"src": "747:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2790,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "747:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "746:6:5"
									},
									"scope": 2984,
									"src": "687:66:5",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 2804,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2800,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2795,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 2804,
												"src": "781:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2794,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "781:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2797,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 2804,
												"src": "795:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2796,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "795:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2799,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 2804,
												"src": "807:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2798,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "807:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "780:38:5"
									},
									"returnParameters": {
										"id": 2803,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2802,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2804,
												"src": "837:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2801,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "837:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "836:6:5"
									},
									"scope": 2984,
									"src": "759:84:5",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 2809,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2805,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "876:2:5"
									},
									"returnParameters": {
										"id": 2808,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2807,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2809,
												"src": "902:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2806,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "902:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "901:9:5"
									},
									"scope": 2984,
									"src": "851:60:5",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 2814,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "PERMIT_TYPEHASH",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2810,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "941:2:5"
									},
									"returnParameters": {
										"id": 2813,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2812,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2814,
												"src": "967:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2811,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "967:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "966:9:5"
									},
									"scope": 2984,
									"src": "917:59:5",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 2821,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2817,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2816,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 2821,
												"src": "998:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2815,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "998:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "997:15:5"
									},
									"returnParameters": {
										"id": 2820,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2819,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2821,
												"src": "1036:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2818,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1036:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1035:6:5"
									},
									"scope": 2984,
									"src": "982:60:5",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 2838,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2836,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2823,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 2838,
												"src": "1066:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2822,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1066:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2825,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 2838,
												"src": "1081:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2824,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1081:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2827,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 2838,
												"src": "1098:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2826,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1098:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2829,
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 2838,
												"src": "1110:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2828,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1110:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2831,
												"name": "v",
												"nodeType": "VariableDeclaration",
												"scope": 2838,
												"src": "1125:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2830,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1125:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2833,
												"name": "r",
												"nodeType": "VariableDeclaration",
												"scope": 2838,
												"src": "1134:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2832,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1134:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2835,
												"name": "s",
												"nodeType": "VariableDeclaration",
												"scope": 2838,
												"src": "1145:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2834,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1145:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1065:90:5"
									},
									"returnParameters": {
										"id": 2837,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1164:0:5"
									},
									"scope": 2984,
									"src": "1050:115:5",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 2846,
									"name": "Mint",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2845,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2840,
												"indexed": true,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 2846,
												"src": "1184:22:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2839,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1184:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2842,
												"indexed": false,
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 2846,
												"src": "1208:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2841,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1208:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2844,
												"indexed": false,
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 2846,
												"src": "1222:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2843,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1222:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1183:52:5"
									},
									"src": "1173:63:5"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 2856,
									"name": "Burn",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2855,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2848,
												"indexed": true,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 2856,
												"src": "1253:22:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2847,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1253:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2850,
												"indexed": false,
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 2856,
												"src": "1277:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2849,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1277:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2852,
												"indexed": false,
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 2856,
												"src": "1291:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2851,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1291:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2854,
												"indexed": true,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 2856,
												"src": "1305:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2853,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1305:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1252:72:5"
									},
									"src": "1242:83:5"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 2870,
									"name": "Swap",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2869,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2858,
												"indexed": true,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 2870,
												"src": "1352:22:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2857,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1352:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2860,
												"indexed": false,
												"name": "amount0In",
												"nodeType": "VariableDeclaration",
												"scope": 2870,
												"src": "1385:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2859,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1385:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2862,
												"indexed": false,
												"name": "amount1In",
												"nodeType": "VariableDeclaration",
												"scope": 2870,
												"src": "1410:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2861,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1410:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2864,
												"indexed": false,
												"name": "amount0Out",
												"nodeType": "VariableDeclaration",
												"scope": 2870,
												"src": "1435:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2863,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1435:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2866,
												"indexed": false,
												"name": "amount1Out",
												"nodeType": "VariableDeclaration",
												"scope": 2870,
												"src": "1461:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2865,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1461:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2868,
												"indexed": true,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 2870,
												"src": "1487:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2867,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1487:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1341:171:5"
									},
									"src": "1331:182:5"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 2876,
									"name": "Sync",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2872,
												"indexed": false,
												"name": "reserve0",
												"nodeType": "VariableDeclaration",
												"scope": 2876,
												"src": "1530:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 2871,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "1530:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2874,
												"indexed": false,
												"name": "reserve1",
												"nodeType": "VariableDeclaration",
												"scope": 2876,
												"src": "1548:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 2873,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "1548:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1529:36:5"
									},
									"src": "1519:47:5"
								},
								{
									"body": null,
									"documentation": null,
									"id": 2881,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "MINIMUM_LIQUIDITY",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2877,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1600:2:5"
									},
									"returnParameters": {
										"id": 2880,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2879,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2881,
												"src": "1626:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2878,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1626:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1625:6:5"
									},
									"scope": 2984,
									"src": "1574:58:5",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 2886,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "factory",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2882,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1654:2:5"
									},
									"returnParameters": {
										"id": 2885,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2884,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2886,
												"src": "1680:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2883,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1680:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1679:9:5"
									},
									"scope": 2984,
									"src": "1638:51:5",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 2891,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2887,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1710:2:5"
									},
									"returnParameters": {
										"id": 2890,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2889,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2891,
												"src": "1736:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2888,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1736:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1735:9:5"
									},
									"scope": 2984,
									"src": "1695:50:5",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 2896,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2892,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1766:2:5"
									},
									"returnParameters": {
										"id": 2895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2894,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2896,
												"src": "1792:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2893,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1792:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1791:9:5"
									},
									"scope": 2984,
									"src": "1751:50:5",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 2907,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getReserves",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2897,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1827:2:5"
									},
									"returnParameters": {
										"id": 2906,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2899,
												"name": "reserve0",
												"nodeType": "VariableDeclaration",
												"scope": 2907,
												"src": "1853:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 2898,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "1853:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2901,
												"name": "reserve1",
												"nodeType": "VariableDeclaration",
												"scope": 2907,
												"src": "1871:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 2900,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "1871:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2903,
												"name": "token0feePercent",
												"nodeType": "VariableDeclaration",
												"scope": 2907,
												"src": "1889:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 2902,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "1889:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2905,
												"name": "token1FeePercent",
												"nodeType": "VariableDeclaration",
												"scope": 2907,
												"src": "1914:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 2904,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "1914:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1852:86:5"
									},
									"scope": 2984,
									"src": "1807:132:5",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 2916,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountOut",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2912,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2909,
												"name": "amountIn",
												"nodeType": "VariableDeclaration",
												"scope": 2916,
												"src": "1967:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2908,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1967:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2911,
												"name": "tokenIn",
												"nodeType": "VariableDeclaration",
												"scope": 2916,
												"src": "1982:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2910,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1982:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1966:32:5"
									},
									"returnParameters": {
										"id": 2915,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2914,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2916,
												"src": "2022:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2913,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2022:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2021:6:5"
									},
									"scope": 2984,
									"src": "1945:83:5",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 2921,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "kLast",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2917,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2048:2:5"
									},
									"returnParameters": {
										"id": 2920,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2919,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2921,
												"src": "2074:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2918,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2074:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2073:6:5"
									},
									"scope": 2984,
									"src": "2034:46:5",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 2928,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setFeePercent",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2926,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2923,
												"name": "token0FeePercent",
												"nodeType": "VariableDeclaration",
												"scope": 2928,
												"src": "2111:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 2922,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "2111:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2925,
												"name": "token1FeePercent",
												"nodeType": "VariableDeclaration",
												"scope": 2928,
												"src": "2136:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 2924,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "2136:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2110:50:5"
									},
									"returnParameters": {
										"id": 2927,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2169:0:5"
									},
									"scope": 2984,
									"src": "2088:82:5",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 2935,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2931,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2930,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 2935,
												"src": "2190:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2929,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2190:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2189:12:5"
									},
									"returnParameters": {
										"id": 2934,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2933,
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 2935,
												"src": "2220:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2932,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2220:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2219:16:5"
									},
									"scope": 2984,
									"src": "2176:60:5",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 2944,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2938,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2937,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 2944,
												"src": "2256:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2936,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2256:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2255:12:5"
									},
									"returnParameters": {
										"id": 2943,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2940,
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 2944,
												"src": "2286:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2939,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2286:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2942,
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 2944,
												"src": "2300:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2941,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2300:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2285:28:5"
									},
									"scope": 2984,
									"src": "2242:72:5",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 2955,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swap",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2953,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2946,
												"name": "amount0Out",
												"nodeType": "VariableDeclaration",
												"scope": 2955,
												"src": "2334:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2945,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2334:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2948,
												"name": "amount1Out",
												"nodeType": "VariableDeclaration",
												"scope": 2955,
												"src": "2351:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2947,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2351:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2950,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 2955,
												"src": "2368:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2949,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2368:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2952,
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 2955,
												"src": "2380:19:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2951,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2380:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2333:67:5"
									},
									"returnParameters": {
										"id": 2954,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2409:0:5"
									},
									"scope": 2984,
									"src": "2320:90:5",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 2968,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swap",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2966,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2957,
												"name": "amount0Out",
												"nodeType": "VariableDeclaration",
												"scope": 2968,
												"src": "2430:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2956,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2430:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2959,
												"name": "amount1Out",
												"nodeType": "VariableDeclaration",
												"scope": 2968,
												"src": "2447:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2958,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2447:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2961,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 2968,
												"src": "2464:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2960,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2464:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2963,
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 2968,
												"src": "2476:19:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2962,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2476:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2965,
												"name": "referrer",
												"nodeType": "VariableDeclaration",
												"scope": 2968,
												"src": "2497:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2964,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2497:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2429:85:5"
									},
									"returnParameters": {
										"id": 2967,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2523:0:5"
									},
									"scope": 2984,
									"src": "2416:108:5",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 2973,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "skim",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2971,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2970,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 2973,
												"src": "2544:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2969,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2544:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2543:12:5"
									},
									"returnParameters": {
										"id": 2972,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2564:0:5"
									},
									"scope": 2984,
									"src": "2530:35:5",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 2976,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "sync",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2974,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2584:2:5"
									},
									"returnParameters": {
										"id": 2975,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2595:0:5"
									},
									"scope": 2984,
									"src": "2571:25:5",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 2983,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "initialize",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2981,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2978,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2983,
												"src": "2624:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2977,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2624:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2980,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2983,
												"src": "2633:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2979,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2633:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2623:18:5"
									},
									"returnParameters": {
										"id": 2982,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2650:0:5"
									},
									"scope": 2984,
									"src": "2604:47:5",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								}
							],
							"scope": 2985,
							"src": "28:2626:5"
						}
					],
					"src": "0:2654:5"
				},
				"id": 5
			},
			"interfaces/IERC20.sol": {
				"ast": {
					"absolutePath": "interfaces/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							3068
						]
					},
					"id": 3069,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2986,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:6"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 3068,
							"linearizedBaseContracts": [
								3068
							],
							"name": "IERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": null,
									"id": 2994,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2993,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2988,
												"indexed": true,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 2994,
												"src": "67:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2987,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "67:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2990,
												"indexed": true,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 2994,
												"src": "90:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2989,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "90:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2992,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 2994,
												"src": "115:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2991,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "115:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "66:60:6"
									},
									"src": "52:75:6"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 3002,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3001,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2996,
												"indexed": true,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 3002,
												"src": "148:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2995,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "148:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2998,
												"indexed": true,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 3002,
												"src": "170:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2997,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "170:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3000,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 3002,
												"src": "190:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2999,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "190:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "147:54:6"
									},
									"src": "133:69:6"
								},
								{
									"body": null,
									"documentation": null,
									"id": 3007,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3003,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "223:2:6"
									},
									"returnParameters": {
										"id": 3006,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3005,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 3007,
												"src": "249:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3004,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "249:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "248:15:6"
									},
									"scope": 3068,
									"src": "210:54:6",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 3012,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3008,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "285:2:6"
									},
									"returnParameters": {
										"id": 3011,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3010,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 3012,
												"src": "311:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3009,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "311:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "310:15:6"
									},
									"scope": 3068,
									"src": "270:56:6",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 3017,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3013,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "349:2:6"
									},
									"returnParameters": {
										"id": 3016,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3015,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 3017,
												"src": "375:5:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 3014,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "375:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "374:7:6"
									},
									"scope": 3068,
									"src": "332:50:6",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 3022,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3018,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "408:2:6"
									},
									"returnParameters": {
										"id": 3021,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3020,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 3022,
												"src": "434:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3019,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "434:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "433:6:6"
									},
									"scope": 3068,
									"src": "388:52:6",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 3029,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3025,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3024,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 3029,
												"src": "465:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3023,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "465:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "464:15:6"
									},
									"returnParameters": {
										"id": 3028,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3027,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 3029,
												"src": "503:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3026,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "503:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "502:6:6"
									},
									"scope": 3068,
									"src": "446:63:6",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 3038,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3034,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3031,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 3038,
												"src": "534:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3030,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "534:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3033,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 3038,
												"src": "549:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3032,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "549:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "533:32:6"
									},
									"returnParameters": {
										"id": 3037,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3036,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 3038,
												"src": "589:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3035,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "589:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "588:6:6"
									},
									"scope": 3068,
									"src": "515:80:6",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 3047,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3043,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3040,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 3047,
												"src": "620:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3039,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "620:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3042,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 3047,
												"src": "637:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3041,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "637:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "619:29:6"
									},
									"returnParameters": {
										"id": 3046,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3045,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 3047,
												"src": "667:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3044,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "667:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "666:6:6"
									},
									"scope": 3068,
									"src": "603:70:6",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 3056,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3052,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3049,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 3056,
												"src": "697:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3048,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "697:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3051,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 3056,
												"src": "709:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3050,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "709:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "696:24:6"
									},
									"returnParameters": {
										"id": 3055,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3054,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 3056,
												"src": "739:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3053,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "739:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "738:6:6"
									},
									"scope": 3068,
									"src": "679:66:6",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 3067,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3063,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3058,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 3067,
												"src": "773:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3057,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "773:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3060,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 3067,
												"src": "787:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3059,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "787:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3062,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 3067,
												"src": "799:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3061,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "799:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "772:38:6"
									},
									"returnParameters": {
										"id": 3066,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3065,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 3067,
												"src": "829:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3064,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "829:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "828:6:6"
									},
									"scope": 3068,
									"src": "751:84:6",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								}
							],
							"scope": 3069,
							"src": "28:810:6"
						}
					],
					"src": "0:838:6"
				},
				"id": 6
			},
			"libraries/Math.sol": {
				"ast": {
					"absolutePath": "libraries/Math.sol",
					"exportedSymbols": {
						"Math": [
							3144
						]
					},
					"id": 3145,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3070,
							"literals": [
								"solidity",
								"=",
								"0.5",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:7"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": null,
							"fullyImplemented": true,
							"id": 3144,
							"linearizedBaseContracts": [
								3144
							],
							"name": "Math",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 3088,
										"nodeType": "Block",
										"src": "163:36:7",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 3086,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 3079,
														"name": "z",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3077,
														"src": "174:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"condition": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3082,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 3080,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3072,
																"src": "178:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"argumentTypes": null,
																"id": 3081,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3074,
																"src": "182:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "178:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseExpression": {
															"argumentTypes": null,
															"id": 3084,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3074,
															"src": "190:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3085,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "Conditional",
														"src": "178:13:7",
														"trueExpression": {
															"argumentTypes": null,
															"id": 3083,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3072,
															"src": "186:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "174:17:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3087,
												"nodeType": "ExpressionStatement",
												"src": "174:17:7"
											}
										]
									},
									"documentation": null,
									"id": 3089,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3075,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3072,
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 3089,
												"src": "116:6:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3071,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "116:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3074,
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 3089,
												"src": "124:6:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3073,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "124:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "115:16:7"
									},
									"returnParameters": {
										"id": 3078,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3077,
												"name": "z",
												"nodeType": "VariableDeclaration",
												"scope": 3089,
												"src": "155:6:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3076,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "155:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "154:8:7"
									},
									"scope": 3144,
									"src": "103:96:7",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3142,
										"nodeType": "Block",
										"src": "370:250:7",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3098,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 3096,
														"name": "y",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3091,
														"src": "385:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "33",
														"id": 3097,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "389:1:7",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3_by_1",
															"typeString": "int_const 3"
														},
														"value": "3"
													},
													"src": "385:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 3134,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 3132,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3091,
															"src": "573:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 3133,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "578:1:7",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "573:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": null,
													"id": 3140,
													"nodeType": "IfStatement",
													"src": "569:44:7",
													"trueBody": {
														"id": 3139,
														"nodeType": "Block",
														"src": "581:32:7",
														"statements": [
															{
																"expression": {
																	"argumentTypes": null,
																	"id": 3137,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"argumentTypes": null,
																		"id": 3135,
																		"name": "z",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3094,
																		"src": "596:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"argumentTypes": null,
																		"hexValue": "31",
																		"id": 3136,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "600:1:7",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "596:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 3138,
																"nodeType": "ExpressionStatement",
																"src": "596:5:7"
															}
														]
													}
												},
												"id": 3141,
												"nodeType": "IfStatement",
												"src": "381:232:7",
												"trueBody": {
													"id": 3131,
													"nodeType": "Block",
													"src": "392:171:7",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 3101,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 3099,
																	"name": "z",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3094,
																	"src": "407:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"id": 3100,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3091,
																	"src": "411:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "407:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3102,
															"nodeType": "ExpressionStatement",
															"src": "407:5:7"
														},
														{
															"assignments": [
																3104
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 3104,
																	"name": "x",
																	"nodeType": "VariableDeclaration",
																	"scope": 3131,
																	"src": "427:6:7",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 3103,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "427:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 3110,
															"initialValue": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3109,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 3107,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 3105,
																		"name": "y",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3091,
																		"src": "436:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "32",
																		"id": 3106,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "440:1:7",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"src": "436:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "31",
																	"id": 3108,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "444:1:7",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "436:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "427:18:7"
														},
														{
															"body": {
																"id": 3129,
																"nodeType": "Block",
																"src": "474:78:7",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 3116,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"id": 3114,
																				"name": "z",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3094,
																				"src": "493:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"id": 3115,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3104,
																				"src": "497:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "493:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 3117,
																		"nodeType": "ExpressionStatement",
																		"src": "493:5:7"
																	},
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 3127,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"id": 3118,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3104,
																				"src": "517:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3126,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"components": [
																						{
																							"argumentTypes": null,
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 3123,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"argumentTypes": null,
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 3121,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"argumentTypes": null,
																									"id": 3119,
																									"name": "y",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 3091,
																									"src": "522:1:7",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "/",
																								"rightExpression": {
																									"argumentTypes": null,
																									"id": 3120,
																									"name": "x",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 3104,
																									"src": "526:1:7",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "522:5:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "+",
																							"rightExpression": {
																								"argumentTypes": null,
																								"id": 3122,
																								"name": "x",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 3104,
																								"src": "530:1:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "522:9:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 3124,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "521:11:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"argumentTypes": null,
																					"hexValue": "32",
																					"id": 3125,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "535:1:7",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_2_by_1",
																						"typeString": "int_const 2"
																					},
																					"value": "2"
																				},
																				"src": "521:15:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "517:19:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 3128,
																		"nodeType": "ExpressionStatement",
																		"src": "517:19:7"
																	}
																]
															},
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3113,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 3111,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3104,
																	"src": "467:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 3112,
																	"name": "z",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3094,
																	"src": "471:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "467:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 3130,
															"nodeType": "WhileStatement",
															"src": "460:92:7"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 3143,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3092,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3091,
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 3143,
												"src": "331:6:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3090,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "331:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "330:8:7"
									},
									"returnParameters": {
										"id": 3095,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3094,
												"name": "z",
												"nodeType": "VariableDeclaration",
												"scope": 3143,
												"src": "362:6:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3093,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "362:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "361:8:7"
									},
									"scope": 3144,
									"src": "317:303:7",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 3145,
							"src": "83:540:7"
						}
					],
					"src": "0:623:7"
				},
				"id": 7
			},
			"libraries/SafeMath.sol": {
				"ast": {
					"absolutePath": "libraries/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							3219
						]
					},
					"id": 3220,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3146,
							"literals": [
								"solidity",
								"=",
								"0.5",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:8"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": null,
							"fullyImplemented": true,
							"id": 3219,
							"linearizedBaseContracts": [
								3219
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 3167,
										"nodeType": "Block",
										"src": "220:68:8",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3163,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"id": 3160,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"argumentTypes": null,
																			"id": 3156,
																			"name": "z",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3153,
																			"src": "240:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3159,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 3157,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3148,
																				"src": "244:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 3158,
																				"name": "y",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3150,
																				"src": "248:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "244:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "240:9:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 3161,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "239:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 3162,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3148,
																"src": "254:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "239:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "64732d6d6174682d6164642d6f766572666c6f77",
															"id": 3164,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "257:22:8",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3903056b84ed2aba2be78662dc6c5c99b160cebe9af9bd9493d0fc28ff16f6db",
																"typeString": "literal_string \"ds-math-add-overflow\""
															},
															"value": "ds-math-add-overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3903056b84ed2aba2be78662dc6c5c99b160cebe9af9bd9493d0fc28ff16f6db",
																"typeString": "literal_string \"ds-math-add-overflow\""
															}
														],
														"id": 3155,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															3237,
															3238
														],
														"referencedDeclaration": 3238,
														"src": "231:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3165,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "231:49:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3166,
												"nodeType": "ExpressionStatement",
												"src": "231:49:8"
											}
										]
									},
									"documentation": null,
									"id": 3168,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3148,
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 3168,
												"src": "173:6:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3147,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "173:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3150,
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 3168,
												"src": "181:6:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3149,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "181:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "172:16:8"
									},
									"returnParameters": {
										"id": 3154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3153,
												"name": "z",
												"nodeType": "VariableDeclaration",
												"scope": 3168,
												"src": "212:6:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3152,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "212:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "211:8:8"
									},
									"scope": 3219,
									"src": "160:128:8",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3189,
										"nodeType": "Block",
										"src": "356:69:8",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3185,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"id": 3182,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"argumentTypes": null,
																			"id": 3178,
																			"name": "z",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3175,
																			"src": "376:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3181,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 3179,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3170,
																				"src": "380:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 3180,
																				"name": "y",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3172,
																				"src": "384:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "380:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "376:9:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 3183,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "375:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 3184,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3170,
																"src": "390:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "375:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "64732d6d6174682d7375622d756e646572666c6f77",
															"id": 3186,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "393:23:8",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_03b20b9f6e6e7905f077509fd420fb44afc685f254bcefe49147296e1ba25590",
																"typeString": "literal_string \"ds-math-sub-underflow\""
															},
															"value": "ds-math-sub-underflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_03b20b9f6e6e7905f077509fd420fb44afc685f254bcefe49147296e1ba25590",
																"typeString": "literal_string \"ds-math-sub-underflow\""
															}
														],
														"id": 3177,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															3237,
															3238
														],
														"referencedDeclaration": 3238,
														"src": "367:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "367:50:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3188,
												"nodeType": "ExpressionStatement",
												"src": "367:50:8"
											}
										]
									},
									"documentation": null,
									"id": 3190,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3170,
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 3190,
												"src": "309:6:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3169,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "309:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3172,
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 3190,
												"src": "317:6:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3171,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "317:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "308:16:8"
									},
									"returnParameters": {
										"id": 3176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3175,
												"name": "z",
												"nodeType": "VariableDeclaration",
												"scope": 3190,
												"src": "348:6:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3174,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "348:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "347:8:8"
									},
									"scope": 3219,
									"src": "296:129:8",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3217,
										"nodeType": "Block",
										"src": "493:82:8",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 3213,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3202,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 3200,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3194,
																	"src": "512:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 3201,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "517:1:8",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "512:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3212,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 3210,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"components": [
																			{
																				"argumentTypes": null,
																				"id": 3207,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"argumentTypes": null,
																					"id": 3203,
																					"name": "z",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3197,
																					"src": "523:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"argumentTypes": null,
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 3206,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"argumentTypes": null,
																						"id": 3204,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3192,
																						"src": "527:1:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"argumentTypes": null,
																						"id": 3205,
																						"name": "y",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3194,
																						"src": "531:1:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "527:5:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "523:9:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 3208,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "522:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"argumentTypes": null,
																		"id": 3209,
																		"name": "y",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3194,
																		"src": "536:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "522:15:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 3211,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3192,
																	"src": "541:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "522:20:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "512:30:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "64732d6d6174682d6d756c2d6f766572666c6f77",
															"id": 3214,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "544:22:8",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_25a0ef6406c6af6852555433653ce478274cd9f03a5dec44d001868a76b3bfdd",
																"typeString": "literal_string \"ds-math-mul-overflow\""
															},
															"value": "ds-math-mul-overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_25a0ef6406c6af6852555433653ce478274cd9f03a5dec44d001868a76b3bfdd",
																"typeString": "literal_string \"ds-math-mul-overflow\""
															}
														],
														"id": 3199,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															3237,
															3238
														],
														"referencedDeclaration": 3238,
														"src": "504:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3215,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "504:63:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3216,
												"nodeType": "ExpressionStatement",
												"src": "504:63:8"
											}
										]
									},
									"documentation": null,
									"id": 3218,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3192,
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 3218,
												"src": "446:6:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3191,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "446:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3194,
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 3218,
												"src": "454:6:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3193,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "454:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "445:16:8"
									},
									"returnParameters": {
										"id": 3198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3197,
												"name": "z",
												"nodeType": "VariableDeclaration",
												"scope": 3218,
												"src": "485:6:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3196,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "485:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "484:8:8"
									},
									"scope": 3219,
									"src": "433:142:8",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 3220,
							"src": "136:442:8"
						}
					],
					"src": "0:578:8"
				},
				"id": 8
			}
		}
	}
}